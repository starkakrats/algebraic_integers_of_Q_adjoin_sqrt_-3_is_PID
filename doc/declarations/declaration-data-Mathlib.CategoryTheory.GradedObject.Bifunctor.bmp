{"name":"Mathlib.CategoryTheory.GradedObject.Bifunctor","instances":[],"imports":["Init","Mathlib.CategoryTheory.GradedObject"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Bifunctor.lean#L91-L101","name":"CategoryTheory.GradedObject.mapBifunctorMap","line":91,"kind":"def","docLink":"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctorMap","doc":"Given a bifunctor `F : C₁ ⥤ C₂ ⥤ C₃` and a map `p : I × J → K`, this is the\nfunctor `GradedObject I C₁ ⥤ GradedObject J C₂ ⥤ GradedObject K C₃` sending\n`X : GradedObject I C₁` and `Y : GradedObject J C₂` to the `K`-graded object sending\n`k` to the coproduct of `(F.obj (X i)).obj (Y j)` for `p ⟨i, j⟩ = k`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctorMap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">mapBifunctorMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_7, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_8, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_9, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">C₃</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">J</span></span> → <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I</span> <span class=\"fn\">C₁</span></span>) (<span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">J</span> <span class=\"fn\">C₂</span></span>),\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctor\">CategoryTheory.GradedObject.mapBifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I</span> <span class=\"fn\">J</span></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.obj <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">p</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I</span> <span class=\"fn\">C₁</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">J</span> <span class=\"fn\">C₂</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">K</span> <span class=\"fn\">C₃</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Bifunctor.lean#L90-L90","name":"CategoryTheory.GradedObject.mapBifunctorMap_obj_map","line":90,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctorMap_obj_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctorMap_obj_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">mapBifunctorMap_obj_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_7, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_8, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_9, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">C₃</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">J</span></span> → <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I</span> <span class=\"fn\">C₁</span></span>) (<span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">J</span> <span class=\"fn\">C₂</span></span>),\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctor\">CategoryTheory.GradedObject.mapBifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I</span> <span class=\"fn\">J</span></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.obj <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">p</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I</span> <span class=\"fn\">C₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X_1 </span>Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">J</span> <span class=\"fn\">C₂</span></span>} (<span class=\"fn\">ψ</span> : <span class=\"fn\"><span class=\"fn\">X_1</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">i</span> : <span class=\"fn\">K</span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctorMap\">CategoryTheory.GradedObject.mapBifunctorMap</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.map <span class=\"fn\">ψ</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctorMapMap\">CategoryTheory.GradedObject.mapBifunctorMapMap</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">ψ</span> <span class=\"fn\">i</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Bifunctor.lean#L90-L90","name":"CategoryTheory.GradedObject.mapBifunctorMap_obj_obj","line":90,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctorMap_obj_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctorMap_obj_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">mapBifunctorMap_obj_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_7, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_8, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_9, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">C₃</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">J</span></span> → <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I</span> <span class=\"fn\">C₁</span></span>) (<span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">J</span> <span class=\"fn\">C₂</span></span>),\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctor\">CategoryTheory.GradedObject.mapBifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I</span> <span class=\"fn\">J</span></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.obj <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">p</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I</span> <span class=\"fn\">C₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">J</span> <span class=\"fn\">C₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctorMap\">CategoryTheory.GradedObject.mapBifunctorMap</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.obj <span class=\"fn\">Y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctorMapObj\">CategoryTheory.GradedObject.mapBifunctorMapObj</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Bifunctor.lean#L90-L90","name":"CategoryTheory.GradedObject.mapBifunctorMap_map_app","line":90,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctorMap_map_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctorMap_map_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">mapBifunctorMap_map_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_7, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_8, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_9, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">C₃</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">J</span></span> → <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I</span> <span class=\"fn\">C₁</span></span>) (<span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">J</span> <span class=\"fn\">C₂</span></span>),\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctor\">CategoryTheory.GradedObject.mapBifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I</span> <span class=\"fn\">J</span></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.obj <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">p</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I</span> <span class=\"fn\">C₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I</span> <span class=\"fn\">C₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">J</span> <span class=\"fn\">C₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctorMap\">CategoryTheory.GradedObject.mapBifunctorMap</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span></span>)</span>.map <span class=\"fn\">φ</span></span>)</span>.app <span class=\"fn\">Y</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctorMapMap\">CategoryTheory.GradedObject.mapBifunctorMapMap</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">φ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Bifunctor.lean#L74-L82","name":"CategoryTheory.GradedObject.ι_mapBifunctorMapMap","line":74,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.ι_mapBifunctorMapMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.ι_mapBifunctorMapMap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">ι_mapBifunctorMapMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_7, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_8, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_9, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">C₃</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">J</span></span> → <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I</span> <span class=\"fn\">C₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I</span> <span class=\"fn\">C₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">J</span> <span class=\"fn\">C₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">J</span> <span class=\"fn\">C₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Y₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctor\">CategoryTheory.GradedObject.mapBifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I</span> <span class=\"fn\">J</span></span>)</span>.obj <span class=\"fn\">X₁</span></span>)</span>.obj <span class=\"fn\">Y₁</span></span>)</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctor\">CategoryTheory.GradedObject.mapBifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I</span> <span class=\"fn\">J</span></span>)</span>.obj <span class=\"fn\">X₂</span></span>)</span>.obj <span class=\"fn\">Y₂</span></span>)</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\">i</span>, <span class=\"fn\">j</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.ιMapBifunctorMapObj\">CategoryTheory.GradedObject.ιMapBifunctorMapObj</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">X₁</span> <span class=\"fn\">Y₁</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span> <span class=\"fn\">h</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctorMapMap\">CategoryTheory.GradedObject.mapBifunctorMapMap</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">k</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.map <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span>)</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Y₁</span> <span class=\"fn\">j</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X₂</span> <span class=\"fn\">i</span></span>)</span></span>)</span>.map <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">j</span></span>)</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.ιMapBifunctorMapObj\">CategoryTheory.GradedObject.ιMapBifunctorMapObj</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">X₂</span> <span class=\"fn\">Y₂</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span> <span class=\"fn\">h</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Bifunctor.lean#L73-L73","name":"CategoryTheory.GradedObject.ι_mapBifunctorMapMap_assoc","line":73,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.ι_mapBifunctorMapMap_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.ι_mapBifunctorMapMap_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">ι_mapBifunctorMapMap_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_7, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_8, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_9, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">C₃</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">J</span></span> → <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I</span> <span class=\"fn\">C₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I</span> <span class=\"fn\">C₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">J</span> <span class=\"fn\">C₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">J</span> <span class=\"fn\">C₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Y₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctor\">CategoryTheory.GradedObject.mapBifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I</span> <span class=\"fn\">J</span></span>)</span>.obj <span class=\"fn\">X₁</span></span>)</span>.obj <span class=\"fn\">Y₁</span></span>)</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctor\">CategoryTheory.GradedObject.mapBifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I</span> <span class=\"fn\">J</span></span>)</span>.obj <span class=\"fn\">X₂</span></span>)</span>.obj <span class=\"fn\">Y₂</span></span>)</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\">i</span>, <span class=\"fn\">j</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\">C₃</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctorMapObj\">CategoryTheory.GradedObject.mapBifunctorMapObj</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">X₂</span> <span class=\"fn\">Y₂</span> <span class=\"fn\">k</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.ιMapBifunctorMapObj\">CategoryTheory.GradedObject.ιMapBifunctorMapObj</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">X₁</span> <span class=\"fn\">Y₁</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span> <span class=\"fn\">h✝</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctorMapMap\">CategoryTheory.GradedObject.mapBifunctorMapMap</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.map <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span>)</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Y₁</span> <span class=\"fn\">j</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X₂</span> <span class=\"fn\">i</span></span>)</span></span>)</span>.map <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">j</span></span>)</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.ιMapBifunctorMapObj\">CategoryTheory.GradedObject.ιMapBifunctorMapObj</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">X₂</span> <span class=\"fn\">Y₂</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span> <span class=\"fn\">h✝</span></span>)</span> <span class=\"fn\">h</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Bifunctor.lean#L65-L71","name":"CategoryTheory.GradedObject.mapBifunctorMapMap","line":65,"kind":"def","docLink":"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctorMapMap","doc":"The maps `mapBifunctorMapObj F p X₁ Y₁ ⟶ mapBifunctorMapObj F p X₂ Y₂` which express\nthe functoriality of `mapBifunctorMapObj`, see `mapBifunctorMap`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctorMapMap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">mapBifunctorMapMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_7, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_8, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_9, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">C₃</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">J</span></span> → <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I</span> <span class=\"fn\">C₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I</span> <span class=\"fn\">C₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">J</span> <span class=\"fn\">C₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">J</span> <span class=\"fn\">C₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Y₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctor\">CategoryTheory.GradedObject.mapBifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I</span> <span class=\"fn\">J</span></span>)</span>.obj <span class=\"fn\">X₁</span></span>)</span>.obj <span class=\"fn\">Y₁</span></span>)</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctor\">CategoryTheory.GradedObject.mapBifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I</span> <span class=\"fn\">J</span></span>)</span>.obj <span class=\"fn\">X₂</span></span>)</span>.obj <span class=\"fn\">Y₂</span></span>)</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctorMapObj\">CategoryTheory.GradedObject.mapBifunctorMapObj</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">X₁</span> <span class=\"fn\">Y₁</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctorMapObj\">CategoryTheory.GradedObject.mapBifunctorMapObj</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">X₂</span> <span class=\"fn\">Y₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Bifunctor.lean#L56-L61","name":"CategoryTheory.GradedObject.ιMapBifunctorMapObj","line":56,"kind":"def","docLink":"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.ιMapBifunctorMapObj","doc":"The inclusion of `(F.obj (X i)).obj (Y j)` in `mapBifunctorMapObj F p X Y k`\nwhen `i + j = k`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.ιMapBifunctorMapObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">ιMapBifunctorMapObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_7, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_8, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_9, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">C₃</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">J</span></span> → <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I</span> <span class=\"fn\">C₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">J</span> <span class=\"fn\">C₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctor\">CategoryTheory.GradedObject.mapBifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I</span> <span class=\"fn\">J</span></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.obj <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\">i</span>, <span class=\"fn\">j</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span></span>)</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">j</span></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctorMapObj\">CategoryTheory.GradedObject.mapBifunctorMapObj</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">X</span> <span class=\"fn\">Y</span> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Bifunctor.lean#L50-L52","name":"CategoryTheory.GradedObject.mapBifunctorMapObj","line":50,"kind":"def","docLink":"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctorMapObj","doc":"Given a bifunctor `F : C₁ ⥤ C₂ ⥤ C₃`, graded objects `X : GradedObject I C₁` and\n `Y : GradedObject J C₂` and a map `p : I × J → K`, this is the `K`-graded object sending\n`k` to the coproduct of `(F.obj (X i)).obj (Y j)` for `p ⟨i, j⟩ = k`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctorMapObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">mapBifunctorMapObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_7, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_8, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_9, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">C₃</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">J</span></span> → <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I</span> <span class=\"fn\">C₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">J</span> <span class=\"fn\">C₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctor\">CategoryTheory.GradedObject.mapBifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I</span> <span class=\"fn\">J</span></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.obj <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">K</span> <span class=\"fn\">C₃</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Bifunctor.lean#L34-L40","name":"CategoryTheory.GradedObject.mapBifunctor","line":34,"kind":"def","docLink":"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctor","doc":"Given a bifunctor `F : C₁ ⥤ C₂ ⥤ C₃` and types `I` and `J`, this is the obvious\nfunctor `GradedObject I C₁ ⥤ GradedObject J C₂ ⥤ GradedObject (I × J) C₃`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">mapBifunctor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_6, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_7, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_8, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">C₃</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> u_5)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I</span> <span class=\"fn\">C₁</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">J</span> <span class=\"fn\">C₂</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">J</span></span>)</span> <span class=\"fn\">C₃</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Bifunctor.lean#L33-L33","name":"CategoryTheory.GradedObject.mapBifunctor_obj_map","line":33,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctor_obj_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctor_obj_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">mapBifunctor_obj_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_6, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_7, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_8, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">C₃</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> u_5)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I</span> <span class=\"fn\">C₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X_1 </span>Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">J</span> <span class=\"fn\">C₂</span></span>} (<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\">X_1</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">ij</span> : <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">J</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctor\">CategoryTheory.GradedObject.mapBifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I</span> <span class=\"fn\">J</span></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.map <span class=\"fn\">φ</span> <span class=\"fn\">ij</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\"><span class=\"fn\">ij</span>.1</span></span>)</span></span>)</span>.map <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\"><span class=\"fn\">ij</span>.2</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Bifunctor.lean#L33-L33","name":"CategoryTheory.GradedObject.mapBifunctor_map_app","line":33,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctor_map_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctor_map_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">mapBifunctor_map_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_6, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_7, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_8, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">C₃</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> u_5)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I</span> <span class=\"fn\">C₁</span></span>} (<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">Y_1</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">J</span> <span class=\"fn\">C₂</span></span>) (<span class=\"fn\">ij</span> : <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">J</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctor\">CategoryTheory.GradedObject.mapBifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I</span> <span class=\"fn\">J</span></span>)</span>.map <span class=\"fn\">φ</span></span>)</span>.app <span class=\"fn\">Y_1</span> <span class=\"fn\">ij</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.map <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\"><span class=\"fn\">ij</span>.1</span></span>)</span></span>)</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Y_1</span> <span class=\"fn\"><span class=\"fn\">ij</span>.2</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Bifunctor.lean#L33-L33","name":"CategoryTheory.GradedObject.mapBifunctor_obj_obj","line":33,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctor_obj_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctor_obj_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">mapBifunctor_obj_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_6, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_7, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_8, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">C₃</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> u_5)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I</span> <span class=\"fn\">C₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">J</span> <span class=\"fn\">C₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ij : <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctor\">CategoryTheory.GradedObject.mapBifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I</span> <span class=\"fn\">J</span></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.obj <span class=\"fn\">Y</span> <span class=\"fn\">ij</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\"><span class=\"fn\">ij</span>.1</span></span>)</span></span>)</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\"><span class=\"fn\">ij</span>.2</span></span>)</span></span></span></div></div>"}]}