{"name":"Mathlib.Data.Matroid.IndepAxioms","instances":[{"typeNames":["IndepMatroid.matroid"],"name":"IndepMatroid.ofFinitary_finitary","className":"Matroid.Finitary"},{"typeNames":["IndepMatroid.matroid"],"name":"IndepMatroid.instFiniteRkMatroidOfBdd","className":"Matroid.FiniteRk"},{"typeNames":["IndepMatroid.matroid"],"name":"IndepMatroid.ofBddAugment_finiteRk","className":"Matroid.FiniteRk"},{"typeNames":["IndepMatroid.matroid"],"name":"IndepMatroid.ofFinite_finite","className":"Matroid.Finite"},{"typeNames":["Matroid.ofExistsFiniteBase"],"name":"Matroid.ofExistsFiniteBase_finiteRk","className":"Matroid.FiniteRk"},{"typeNames":["Matroid.ofBaseOfFinite"],"name":"Matroid.ofBaseOfFinite_finite","className":"Matroid.Finite"}],"imports":["Init","Mathlib.Data.Matroid.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L507-L510","name":"Matroid.ofBaseOfFinite_finite","line":507,"kind":"instance","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#Matroid.ofBaseOfFinite_finite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#Matroid.ofBaseOfFinite_finite\"><span class=\"name\">Matroid</span>.<span class=\"name\">ofBaseOfFinite_finite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hE : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Finite.html#Set.Finite\">Set.Finite</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Base : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exists_base : <span class=\"fn\">∃ (B : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">Base</span> <span class=\"fn\">B</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(base_exchange : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.ExchangeProperty\">Matroid.ExchangeProperty</a> <span class=\"fn\">Base</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subset_ground : <span class=\"fn\">∀ (<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Base</span> <span class=\"fn\">B</span></span> → <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">E</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Finite\">Matroid.Finite</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#Matroid.ofBaseOfFinite\">Matroid.ofBaseOfFinite</a> <span class=\"fn\">hE</span> <span class=\"fn\">Base</span> <span class=\"fn\">exists_base</span> <span class=\"fn\">base_exchange</span> <span class=\"fn\">subset_ground</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L503-L505","name":"Matroid.ofBaseOfFinite_base","line":503,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#Matroid.ofBaseOfFinite_base","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#Matroid.ofBaseOfFinite_base\"><span class=\"name\">Matroid</span>.<span class=\"name\">ofBaseOfFinite_base</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hE : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Finite.html#Set.Finite\">Set.Finite</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Base : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exists_base : <span class=\"fn\">∃ (B : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">Base</span> <span class=\"fn\">B</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(base_exchange : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.ExchangeProperty\">Matroid.ExchangeProperty</a> <span class=\"fn\">Base</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subset_ground : <span class=\"fn\">∀ (<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Base</span> <span class=\"fn\">B</span></span> → <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">E</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#Matroid.ofBaseOfFinite\">Matroid.ofBaseOfFinite</a> <span class=\"fn\">hE</span> <span class=\"fn\">Base</span> <span class=\"fn\">exists_base</span> <span class=\"fn\">base_exchange</span> <span class=\"fn\">subset_ground</span></span>)</span>.Base</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Base</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L499-L501","name":"Matroid.ofBaseOfFinite_E","line":499,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#Matroid.ofBaseOfFinite_E","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#Matroid.ofBaseOfFinite_E\"><span class=\"name\">Matroid</span>.<span class=\"name\">ofBaseOfFinite_E</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hE : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Finite.html#Set.Finite\">Set.Finite</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Base : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exists_base : <span class=\"fn\">∃ (B : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">Base</span> <span class=\"fn\">B</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(base_exchange : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.ExchangeProperty\">Matroid.ExchangeProperty</a> <span class=\"fn\">Base</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subset_ground : <span class=\"fn\">∀ (<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Base</span> <span class=\"fn\">B</span></span> → <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">E</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#Matroid.ofBaseOfFinite\">Matroid.ofBaseOfFinite</a> <span class=\"fn\">hE</span> <span class=\"fn\">Base</span> <span class=\"fn\">exists_base</span> <span class=\"fn\">base_exchange</span> <span class=\"fn\">subset_ground</span></span>)</span>.E</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L489-L497","name":"Matroid.ofBaseOfFinite","line":489,"kind":"def","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#Matroid.ofBaseOfFinite","doc":"If `E` is finite, then any nonempty collection of its subsets\nwith the exchange property is the collection of bases of a matroid on `E`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#Matroid.ofBaseOfFinite\"><span class=\"name\">Matroid</span>.<span class=\"name\">ofBaseOfFinite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hE : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Finite.html#Set.Finite\">Set.Finite</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Base : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exists_base : <span class=\"fn\">∃ (B : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">Base</span> <span class=\"fn\">B</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(base_exchange : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.ExchangeProperty\">Matroid.ExchangeProperty</a> <span class=\"fn\">Base</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subset_ground : <span class=\"fn\">∀ (<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Base</span> <span class=\"fn\">B</span></span> → <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">E</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L481-L485","name":"Matroid.ofExistsFiniteBase_finiteRk","line":481,"kind":"instance","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#Matroid.ofExistsFiniteBase_finiteRk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#Matroid.ofExistsFiniteBase_finiteRk\"><span class=\"name\">Matroid</span>.<span class=\"name\">ofExistsFiniteBase_finiteRk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Base : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exists_finite_base : <span class=\"fn\">∃ (B : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Base</span> <span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Finite.html#Set.Finite\">Set.Finite</a> <span class=\"fn\">B</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(base_exchange : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.ExchangeProperty\">Matroid.ExchangeProperty</a> <span class=\"fn\">Base</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subset_ground : <span class=\"fn\">∀ (<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Base</span> <span class=\"fn\">B</span></span> → <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">E</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.FiniteRk\">Matroid.FiniteRk</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#Matroid.ofExistsFiniteBase\">Matroid.ofExistsFiniteBase</a> <span class=\"fn\">E</span> <span class=\"fn\">Base</span> <span class=\"fn\">exists_finite_base</span> <span class=\"fn\">base_exchange</span> <span class=\"fn\">subset_ground</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L477-L479","name":"Matroid.ofExistsFiniteBase_base","line":477,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#Matroid.ofExistsFiniteBase_base","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#Matroid.ofExistsFiniteBase_base\"><span class=\"name\">Matroid</span>.<span class=\"name\">ofExistsFiniteBase_base</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Base : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exists_finite_base : <span class=\"fn\">∃ (B : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Base</span> <span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Finite.html#Set.Finite\">Set.Finite</a> <span class=\"fn\">B</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(base_exchange : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.ExchangeProperty\">Matroid.ExchangeProperty</a> <span class=\"fn\">Base</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subset_ground : <span class=\"fn\">∀ (<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Base</span> <span class=\"fn\">B</span></span> → <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">E</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#Matroid.ofExistsFiniteBase\">Matroid.ofExistsFiniteBase</a> <span class=\"fn\">E</span> <span class=\"fn\">Base</span> <span class=\"fn\">exists_finite_base</span> <span class=\"fn\">base_exchange</span> <span class=\"fn\">subset_ground</span></span>)</span>.Base</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Base</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L461-L475","name":"Matroid.ofExistsFiniteBase","line":461,"kind":"def","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#Matroid.ofExistsFiniteBase","doc":"A collection of bases with the exchange property and at least one finite member is a matroid "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#Matroid.ofExistsFiniteBase\"><span class=\"name\">Matroid</span>.<span class=\"name\">ofExistsFiniteBase</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Base : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exists_finite_base : <span class=\"fn\">∃ (B : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Base</span> <span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Finite.html#Set.Finite\">Set.Finite</a> <span class=\"fn\">B</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(base_exchange : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.ExchangeProperty\">Matroid.ExchangeProperty</a> <span class=\"fn\">Base</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subset_ground : <span class=\"fn\">∀ (<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Base</span> <span class=\"fn\">B</span></span> → <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">E</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L461-L461","name":"Matroid.ofExistsFiniteBase_E","line":461,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#Matroid.ofExistsFiniteBase_E","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#Matroid.ofExistsFiniteBase_E\"><span class=\"name\">Matroid</span>.<span class=\"name\">ofExistsFiniteBase_E</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Base : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exists_finite_base : <span class=\"fn\">∃ (B : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Base</span> <span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Finite.html#Set.Finite\">Set.Finite</a> <span class=\"fn\">B</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(base_exchange : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.ExchangeProperty\">Matroid.ExchangeProperty</a> <span class=\"fn\">Base</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subset_ground : <span class=\"fn\">∀ (<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Base</span> <span class=\"fn\">B</span></span> → <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">E</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#Matroid.ofExistsFiniteBase\">Matroid.ofExistsFiniteBase</a> <span class=\"fn\">E</span> <span class=\"fn\">Base</span> <span class=\"fn\">exists_finite_base</span> <span class=\"fn\">base_exchange</span> <span class=\"fn\">subset_ground</span></span>)</span>.E</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L443-L452","name":"IndepMatroid.ofExistsMatroid","line":443,"kind":"def","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofExistsMatroid","doc":"Construct an `IndepMatroid` from an independence predicate that agrees with that of some\nmatroid `M`. Computable even when `M` is not known constructively. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofExistsMatroid\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">ofExistsMatroid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Indep : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hM : <span class=\"fn\">∃ (M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">M</span>.E</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Indep <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid\">IndepMatroid</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L443-L443","name":"IndepMatroid.ofExistsMatroid_E","line":443,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofExistsMatroid_E","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofExistsMatroid_E\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">ofExistsMatroid_E</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Indep : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hM : <span class=\"fn\">∃ (M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">M</span>.E</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Indep <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofExistsMatroid\">IndepMatroid.ofExistsMatroid</a> <span class=\"fn\">E</span> <span class=\"fn\">Indep</span> <span class=\"fn\">hM</span></span>)</span>.E</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L435-L439","name":"IndepMatroid.ofFinset_indep'","line":435,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofFinset_indep'","doc":"This can't be `@[simp]`, because it would cause the more useful\n`Matroid.ofIndepFinset_apply` not to be in simp normal form. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofFinset_indep'\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">ofFinset_indep'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Indep : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_empty : <span class=\"fn\"><span class=\"fn\">Indep</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_subset : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_aug : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.card</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">J</span>.card</span></span> → <span class=\"fn\">∃ e ∈ <span class=\"fn\">J</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span> ∉ <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Classes/SetNotation.html#Insert.insert\">insert</a> <span class=\"fn\">e</span> <span class=\"fn\">I</span></span>)</span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subset_ground : <span class=\"fn\">∀ ⦃<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">I</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">E</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofFinset\">IndepMatroid.ofFinset</a> <span class=\"fn\">E</span> <span class=\"fn\">Indep</span> <span class=\"fn\">indep_empty</span> <span class=\"fn\">indep_subset</span> <span class=\"fn\">indep_aug</span> <span class=\"fn\">subset_ground</span></span>)</span>.Indep <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ (<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">J</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L427-L431","name":"IndepMatroid.ofFinset_indep","line":427,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofFinset_indep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofFinset_indep\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">ofFinset_indep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Indep : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_empty : <span class=\"fn\"><span class=\"fn\">Indep</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_subset : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_aug : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.card</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">J</span>.card</span></span> → <span class=\"fn\">∃ e ∈ <span class=\"fn\">J</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span> ∉ <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Classes/SetNotation.html#Insert.insert\">insert</a> <span class=\"fn\">e</span> <span class=\"fn\">I</span></span>)</span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subset_ground : <span class=\"fn\">∀ ⦃<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">I</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">E</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofFinset\">IndepMatroid.ofFinset</a> <span class=\"fn\">E</span> <span class=\"fn\">Indep</span> <span class=\"fn\">indep_empty</span> <span class=\"fn\">indep_subset</span> <span class=\"fn\">indep_aug</span> <span class=\"fn\">subset_ground</span></span>)</span>.Indep <span class=\"fn\">↑<span class=\"fn\">I</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L423-L425","name":"IndepMatroid.ofFinset_E","line":423,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofFinset_E","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofFinset_E\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">ofFinset_E</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Indep : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_empty : <span class=\"fn\"><span class=\"fn\">Indep</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_subset : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_aug : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.card</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">J</span>.card</span></span> → <span class=\"fn\">∃ e ∈ <span class=\"fn\">J</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span> ∉ <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Classes/SetNotation.html#Insert.insert\">insert</a> <span class=\"fn\">e</span> <span class=\"fn\">I</span></span>)</span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subset_ground : <span class=\"fn\">∀ ⦃<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">I</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">E</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofFinset\">IndepMatroid.ofFinset</a> <span class=\"fn\">E</span> <span class=\"fn\">Indep</span> <span class=\"fn\">indep_empty</span> <span class=\"fn\">indep_subset</span> <span class=\"fn\">indep_aug</span> <span class=\"fn\">subset_ground</span></span>)</span>.E</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L403-L421","name":"IndepMatroid.ofFinset","line":403,"kind":"def","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofFinset","doc":"An independence predicate on `Finset α` that obeys the finite matroid axioms determines a\nfinitary matroid on `α`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofFinset\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">ofFinset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Indep : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_empty : <span class=\"fn\"><span class=\"fn\">Indep</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_subset : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_aug : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.card</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">J</span>.card</span></span> → <span class=\"fn\">∃ e ∈ <span class=\"fn\">J</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span> ∉ <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Classes/SetNotation.html#Insert.insert\">insert</a> <span class=\"fn\">e</span> <span class=\"fn\">I</span></span>)</span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subset_ground : <span class=\"fn\">∀ ⦃<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">I</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">E</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid\">IndepMatroid</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L396-L399","name":"IndepMatroid.ofFinite_finite","line":396,"kind":"instance","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofFinite_finite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofFinite_finite\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">ofFinite_finite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hE : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Finite.html#Set.Finite\">Set.Finite</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Indep : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_empty : <span class=\"fn\"><span class=\"fn\">Indep</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_subset : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_aug : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Card.html#Set.ncard\">Set.ncard</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Card.html#Set.ncard\">Set.ncard</a> <span class=\"fn\">J</span></span></span> → <span class=\"fn\">∃ e ∈ <span class=\"fn\">J</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span> ∉ <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Classes/SetNotation.html#Insert.insert\">insert</a> <span class=\"fn\">e</span> <span class=\"fn\">I</span></span>)</span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subset_ground : <span class=\"fn\">∀ ⦃<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">E</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Finite\">Matroid.Finite</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.matroid\">IndepMatroid.matroid</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofFinite\">IndepMatroid.ofFinite</a> <span class=\"fn\">hE</span> <span class=\"fn\">Indep</span> <span class=\"fn\">indep_empty</span> <span class=\"fn\">indep_subset</span> <span class=\"fn\">indep_aug</span> <span class=\"fn\">subset_ground</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L392-L394","name":"IndepMatroid.ofFinite_indep","line":392,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofFinite_indep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofFinite_indep\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">ofFinite_indep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hE : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Finite.html#Set.Finite\">Set.Finite</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Indep : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_empty : <span class=\"fn\"><span class=\"fn\">Indep</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_subset : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_aug : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Card.html#Set.ncard\">Set.ncard</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Card.html#Set.ncard\">Set.ncard</a> <span class=\"fn\">J</span></span></span> → <span class=\"fn\">∃ e ∈ <span class=\"fn\">J</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span> ∉ <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Classes/SetNotation.html#Insert.insert\">insert</a> <span class=\"fn\">e</span> <span class=\"fn\">I</span></span>)</span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subset_ground : <span class=\"fn\">∀ ⦃<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">E</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofFinite\">IndepMatroid.ofFinite</a> <span class=\"fn\">hE</span> <span class=\"fn\">Indep</span> <span class=\"fn\">indep_empty</span> <span class=\"fn\">indep_subset</span> <span class=\"fn\">indep_aug</span> <span class=\"fn\">subset_ground</span></span>)</span>.Indep</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Indep</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L388-L390","name":"IndepMatroid.ofFinite_E","line":388,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofFinite_E","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofFinite_E\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">ofFinite_E</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hE : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Finite.html#Set.Finite\">Set.Finite</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Indep : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_empty : <span class=\"fn\"><span class=\"fn\">Indep</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_subset : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_aug : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Card.html#Set.ncard\">Set.ncard</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Card.html#Set.ncard\">Set.ncard</a> <span class=\"fn\">J</span></span></span> → <span class=\"fn\">∃ e ∈ <span class=\"fn\">J</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span> ∉ <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Classes/SetNotation.html#Insert.insert\">insert</a> <span class=\"fn\">e</span> <span class=\"fn\">I</span></span>)</span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subset_ground : <span class=\"fn\">∀ ⦃<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">E</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofFinite\">IndepMatroid.ofFinite</a> <span class=\"fn\">hE</span> <span class=\"fn\">Indep</span> <span class=\"fn\">indep_empty</span> <span class=\"fn\">indep_subset</span> <span class=\"fn\">indep_aug</span> <span class=\"fn\">subset_ground</span></span>)</span>.E</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L371-L386","name":"IndepMatroid.ofFinite","line":371,"kind":"def","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofFinite","doc":"If `E` is finite, then any collection of subsets of `E` satisfying\nthe usual independence axioms determines a matroid "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofFinite\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">ofFinite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hE : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Finite.html#Set.Finite\">Set.Finite</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Indep : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_empty : <span class=\"fn\"><span class=\"fn\">Indep</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_subset : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_aug : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Card.html#Set.ncard\">Set.ncard</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Card.html#Set.ncard\">Set.ncard</a> <span class=\"fn\">J</span></span></span> → <span class=\"fn\">∃ e ∈ <span class=\"fn\">J</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span> ∉ <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Classes/SetNotation.html#Insert.insert\">insert</a> <span class=\"fn\">e</span> <span class=\"fn\">I</span></span>)</span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subset_ground : <span class=\"fn\">∀ ⦃<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">E</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid\">IndepMatroid</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L363-L367","name":"IndepMatroid.ofBddAugment_finiteRk","line":363,"kind":"instance","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofBddAugment_finiteRk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofBddAugment_finiteRk\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">ofBddAugment_finiteRk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Indep : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_empty : <span class=\"fn\"><span class=\"fn\">Indep</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_subset : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_aug : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Card.html#Set.encard\">Set.encard</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Card.html#Set.encard\">Set.encard</a> <span class=\"fn\">J</span></span></span> → <span class=\"fn\">∃ e ∈ <span class=\"fn\">J</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span> ∉ <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Classes/SetNotation.html#Insert.insert\">insert</a> <span class=\"fn\">e</span> <span class=\"fn\">I</span></span>)</span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_bdd : <span class=\"fn\">∃ (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Card.html#Set.encard\">Set.encard</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subset_ground : <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">E</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.FiniteRk\">Matroid.FiniteRk</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.matroid\">IndepMatroid.matroid</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofBddAugment\">IndepMatroid.ofBddAugment</a> <span class=\"fn\">E</span> <span class=\"fn\">Indep</span> <span class=\"fn\">indep_empty</span> <span class=\"fn\">indep_subset</span> <span class=\"fn\">indep_aug</span> <span class=\"fn\">indep_bdd</span> <span class=\"fn\">subset_ground</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L359-L361","name":"IndepMatroid.ofBddAugment_indep","line":359,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofBddAugment_indep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofBddAugment_indep\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">ofBddAugment_indep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Indep : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_empty : <span class=\"fn\"><span class=\"fn\">Indep</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_subset : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_aug : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Card.html#Set.encard\">Set.encard</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Card.html#Set.encard\">Set.encard</a> <span class=\"fn\">J</span></span></span> → <span class=\"fn\">∃ e ∈ <span class=\"fn\">J</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span> ∉ <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Classes/SetNotation.html#Insert.insert\">insert</a> <span class=\"fn\">e</span> <span class=\"fn\">I</span></span>)</span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_bdd : <span class=\"fn\">∃ (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Card.html#Set.encard\">Set.encard</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subset_ground : <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">E</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofBddAugment\">IndepMatroid.ofBddAugment</a> <span class=\"fn\">E</span> <span class=\"fn\">Indep</span> <span class=\"fn\">indep_empty</span> <span class=\"fn\">indep_subset</span> <span class=\"fn\">indep_aug</span> <span class=\"fn\">indep_bdd</span> <span class=\"fn\">subset_ground</span></span>)</span>.Indep</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Indep</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L355-L357","name":"IndepMatroid.ofBddAugment_E","line":355,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofBddAugment_E","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofBddAugment_E\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">ofBddAugment_E</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Indep : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_empty : <span class=\"fn\"><span class=\"fn\">Indep</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_subset : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_aug : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Card.html#Set.encard\">Set.encard</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Card.html#Set.encard\">Set.encard</a> <span class=\"fn\">J</span></span></span> → <span class=\"fn\">∃ e ∈ <span class=\"fn\">J</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span> ∉ <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Classes/SetNotation.html#Insert.insert\">insert</a> <span class=\"fn\">e</span> <span class=\"fn\">I</span></span>)</span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_bdd : <span class=\"fn\">∃ (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Card.html#Set.encard\">Set.encard</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subset_ground : <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">E</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofBddAugment\">IndepMatroid.ofBddAugment</a> <span class=\"fn\">E</span> <span class=\"fn\">Indep</span> <span class=\"fn\">indep_empty</span> <span class=\"fn\">indep_subset</span> <span class=\"fn\">indep_aug</span> <span class=\"fn\">indep_bdd</span> <span class=\"fn\">subset_ground</span></span>)</span>.E</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L328-L353","name":"IndepMatroid.ofBddAugment","line":328,"kind":"def","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofBddAugment","doc":"If there is an absolute upper bound on the size of an independent set, then matroids\ncan be defined using an 'augmentation' axiom similar to the standard definition of\nfinite matroids for independent sets. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofBddAugment\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">ofBddAugment</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Indep : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_empty : <span class=\"fn\"><span class=\"fn\">Indep</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_subset : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_aug : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Card.html#Set.encard\">Set.encard</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Card.html#Set.encard\">Set.encard</a> <span class=\"fn\">J</span></span></span> → <span class=\"fn\">∃ e ∈ <span class=\"fn\">J</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span> ∉ <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Classes/SetNotation.html#Insert.insert\">insert</a> <span class=\"fn\">e</span> <span class=\"fn\">I</span></span>)</span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_bdd : <span class=\"fn\">∃ (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Card.html#Set.encard\">Set.encard</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subset_ground : <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">E</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid\">IndepMatroid</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L317-L323","name":"IndepMatroid.instFiniteRkMatroidOfBdd","line":317,"kind":"instance","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.instFiniteRkMatroidOfBdd","doc":"`IndepMatroid.ofBdd` constructs a `FiniteRk` matroid. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.instFiniteRkMatroidOfBdd\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">instFiniteRkMatroidOfBdd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Indep : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_empty : <span class=\"fn\"><span class=\"fn\">Indep</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_subset : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_aug : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>B : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄,\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> →\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> ∉ <span class=\"fn\"><a href=\"./Mathlib/Order/Minimal.html#maximals\">maximals</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> | <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span>}</span></span></span> →\n      <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Minimal.html#maximals\">maximals</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> | <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span>}</span></span></span> → <span class=\"fn\">∃ x ∈ <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">I</span></span>, <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Classes/SetNotation.html#Insert.insert\">insert</a> <span class=\"fn\">x</span> <span class=\"fn\">I</span></span>)</span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subset_ground : <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">E</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_bdd : <span class=\"fn\">∃ (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Card.html#Set.encard\">Set.encard</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.FiniteRk\">Matroid.FiniteRk</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.matroid\">IndepMatroid.matroid</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofBdd\">IndepMatroid.ofBdd</a> <span class=\"fn\">E</span> <span class=\"fn\">Indep</span> <span class=\"fn\">indep_empty</span> <span class=\"fn\">indep_subset</span> <span class=\"fn\">indep_aug</span> <span class=\"fn\">subset_ground</span> <span class=\"fn\">h_bdd</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L312-L314","name":"IndepMatroid.ofBdd_indep","line":312,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofBdd_indep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofBdd_indep\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">ofBdd_indep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Indep : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_empty : <span class=\"fn\"><span class=\"fn\">Indep</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_subset : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_aug : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>B : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄,\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> →\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> ∉ <span class=\"fn\"><a href=\"./Mathlib/Order/Minimal.html#maximals\">maximals</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> | <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span>}</span></span></span> →\n      <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Minimal.html#maximals\">maximals</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> | <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span>}</span></span></span> → <span class=\"fn\">∃ x ∈ <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">I</span></span>, <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Classes/SetNotation.html#Insert.insert\">insert</a> <span class=\"fn\">x</span> <span class=\"fn\">I</span></span>)</span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subset_ground : <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">E</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_bdd : <span class=\"fn\">∃ (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Card.html#Set.encard\">Set.encard</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofBdd\">IndepMatroid.ofBdd</a> <span class=\"fn\">E</span> <span class=\"fn\">Indep</span> <span class=\"fn\">indep_empty</span> <span class=\"fn\">indep_subset</span> <span class=\"fn\">indep_aug</span> <span class=\"fn\">subset_ground</span> <span class=\"fn\">h_bdd</span></span>)</span>.Indep</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Indep</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L297-L310","name":"IndepMatroid.ofBdd","line":297,"kind":"def","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofBdd","doc":"If there is an absolute upper bound on the size of an independent set, then the maximality axiom\nisn't needed to define a matroid by independent sets. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofBdd\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">ofBdd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Indep : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_empty : <span class=\"fn\"><span class=\"fn\">Indep</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_subset : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_aug : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>B : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄,\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> →\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> ∉ <span class=\"fn\"><a href=\"./Mathlib/Order/Minimal.html#maximals\">maximals</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> | <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span>}</span></span></span> →\n      <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Minimal.html#maximals\">maximals</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> | <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span>}</span></span></span> → <span class=\"fn\">∃ x ∈ <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">I</span></span>, <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Classes/SetNotation.html#Insert.insert\">insert</a> <span class=\"fn\">x</span> <span class=\"fn\">I</span></span>)</span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subset_ground : <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">E</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_bdd : <span class=\"fn\">∃ (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Card.html#Set.encard\">Set.encard</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid\">IndepMatroid</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L297-L297","name":"IndepMatroid.ofBdd_E","line":297,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofBdd_E","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofBdd_E\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">ofBdd_E</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Indep : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_empty : <span class=\"fn\"><span class=\"fn\">Indep</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_subset : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_aug : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>B : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄,\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> →\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> ∉ <span class=\"fn\"><a href=\"./Mathlib/Order/Minimal.html#maximals\">maximals</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> | <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span>}</span></span></span> →\n      <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Minimal.html#maximals\">maximals</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> | <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span>}</span></span></span> → <span class=\"fn\">∃ x ∈ <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">I</span></span>, <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Classes/SetNotation.html#Insert.insert\">insert</a> <span class=\"fn\">x</span> <span class=\"fn\">I</span></span>)</span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subset_ground : <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">E</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_bdd : <span class=\"fn\">∃ (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Card.html#Set.encard\">Set.encard</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofBdd\">IndepMatroid.ofBdd</a> <span class=\"fn\">E</span> <span class=\"fn\">Indep</span> <span class=\"fn\">indep_empty</span> <span class=\"fn\">indep_subset</span> <span class=\"fn\">indep_aug</span> <span class=\"fn\">subset_ground</span> <span class=\"fn\">indep_bdd</span></span>)</span>.E</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L277-L293","name":"Matroid.existsMaximalSubsetProperty_of_bdd","line":277,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#Matroid.existsMaximalSubsetProperty_of_bdd","doc":"If there is an absolute upper bound on the size of a set satisfying `P`, then the\nmaximal subset property always holds. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#Matroid.existsMaximalSubsetProperty_of_bdd\"><span class=\"name\">Matroid</span>.<span class=\"name\">existsMaximalSubsetProperty_of_bdd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hP : <span class=\"fn\">∃ (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">∀ (<span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">Y</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Card.html#Set.encard\">Set.encard</a> <span class=\"fn\">Y</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.ExistsMaximalSubsetProperty\">Matroid.ExistsMaximalSubsetProperty</a> <span class=\"fn\">P</span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L269-L273","name":"IndepMatroid.ofFinitary_finitary","line":269,"kind":"instance","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofFinitary_finitary","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofFinitary_finitary\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">ofFinitary_finitary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Indep : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_empty : <span class=\"fn\"><span class=\"fn\">Indep</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_subset : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_aug : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄,\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Finite.html#Set.Finite\">Set.Finite</a> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Finite.html#Set.Finite\">Set.Finite</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Card.html#Set.ncard\">Set.ncard</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Card.html#Set.ncard\">Set.ncard</a> <span class=\"fn\">J</span></span></span> → <span class=\"fn\">∃ e ∈ <span class=\"fn\">J</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span> ∉ <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Classes/SetNotation.html#Insert.insert\">insert</a> <span class=\"fn\">e</span> <span class=\"fn\">I</span></span>)</span></span></span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_compact : <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">J</span> ⊆ <span class=\"fn\">I</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Finite.html#Set.Finite\">Set.Finite</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subset_ground : <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">E</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Finitary\">Matroid.Finitary</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.matroid\">IndepMatroid.matroid</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofFinitary\">IndepMatroid.ofFinitary</a> <span class=\"fn\">E</span> <span class=\"fn\">Indep</span> <span class=\"fn\">indep_empty</span> <span class=\"fn\">indep_subset</span> <span class=\"fn\">indep_aug</span> <span class=\"fn\">indep_compact</span> <span class=\"fn\">subset_ground</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L265-L267","name":"IndepMatroid.ofFinitary_indep","line":265,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofFinitary_indep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofFinitary_indep\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">ofFinitary_indep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Indep : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_empty : <span class=\"fn\"><span class=\"fn\">Indep</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_subset : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_aug : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄,\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Finite.html#Set.Finite\">Set.Finite</a> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Finite.html#Set.Finite\">Set.Finite</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Card.html#Set.ncard\">Set.ncard</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Card.html#Set.ncard\">Set.ncard</a> <span class=\"fn\">J</span></span></span> → <span class=\"fn\">∃ e ∈ <span class=\"fn\">J</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span> ∉ <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Classes/SetNotation.html#Insert.insert\">insert</a> <span class=\"fn\">e</span> <span class=\"fn\">I</span></span>)</span></span></span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_compact : <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">J</span> ⊆ <span class=\"fn\">I</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Finite.html#Set.Finite\">Set.Finite</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subset_ground : <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">E</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofFinitary\">IndepMatroid.ofFinitary</a> <span class=\"fn\">E</span> <span class=\"fn\">Indep</span> <span class=\"fn\">indep_empty</span> <span class=\"fn\">indep_subset</span> <span class=\"fn\">indep_aug</span> <span class=\"fn\">indep_compact</span> <span class=\"fn\">subset_ground</span></span>)</span>.Indep</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Indep</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L161-L263","name":"IndepMatroid.ofFinitary","line":161,"kind":"def","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofFinitary","doc":"An independence predicate satisfying the finite matroid axioms determines a matroid,\nprovided independence is determined by its behaviour on finite sets.\nThis fundamentally needs choice, since it can be used to prove that every vector space\nhas a basis. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofFinitary\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">ofFinitary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Indep : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_empty : <span class=\"fn\"><span class=\"fn\">Indep</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_subset : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_aug : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄,\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Finite.html#Set.Finite\">Set.Finite</a> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Finite.html#Set.Finite\">Set.Finite</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Card.html#Set.ncard\">Set.ncard</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Card.html#Set.ncard\">Set.ncard</a> <span class=\"fn\">J</span></span></span> → <span class=\"fn\">∃ e ∈ <span class=\"fn\">J</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span> ∉ <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Classes/SetNotation.html#Insert.insert\">insert</a> <span class=\"fn\">e</span> <span class=\"fn\">I</span></span>)</span></span></span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_compact : <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">J</span> ⊆ <span class=\"fn\">I</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Finite.html#Set.Finite\">Set.Finite</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subset_ground : <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">E</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid\">IndepMatroid</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L161-L161","name":"IndepMatroid.ofFinitary_E","line":161,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofFinitary_E","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofFinitary_E\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">ofFinitary_E</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Indep : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_empty : <span class=\"fn\"><span class=\"fn\">Indep</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_subset : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_aug : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄,\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Finite.html#Set.Finite\">Set.Finite</a> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Finite.html#Set.Finite\">Set.Finite</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Card.html#Set.ncard\">Set.ncard</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Card.html#Set.ncard\">Set.ncard</a> <span class=\"fn\">J</span></span></span> → <span class=\"fn\">∃ e ∈ <span class=\"fn\">J</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span> ∉ <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Classes/SetNotation.html#Insert.insert\">insert</a> <span class=\"fn\">e</span> <span class=\"fn\">I</span></span>)</span></span></span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_compact : <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">J</span> ⊆ <span class=\"fn\">I</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Finite.html#Set.Finite\">Set.Finite</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subset_ground : <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">E</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.ofFinitary\">IndepMatroid.ofFinitary</a> <span class=\"fn\">E</span> <span class=\"fn\">Indep</span> <span class=\"fn\">indep_empty</span> <span class=\"fn\">indep_subset</span> <span class=\"fn\">indep_aug</span> <span class=\"fn\">indep_compact</span> <span class=\"fn\">subset_ground</span></span>)</span>.E</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L148-L155","name":"IndepMatroid.matroid_indep_iff","line":148,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.matroid_indep_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.matroid_indep_iff\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">matroid_indep_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid\">IndepMatroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.matroid\">IndepMatroid.matroid</a> <span class=\"fn\">M</span></span>)</span>.Indep <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">M</span>.Indep <span class=\"fn\">I</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L110-L146","name":"IndepMatroid.matroid","line":110,"kind":"def","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.matroid","doc":"An `M : IndepMatroid α` gives a `Matroid α` whose bases are the maximal `M`-independent sets. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.matroid\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">matroid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid\">IndepMatroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L110-L110","name":"IndepMatroid.matroid_Base","line":110,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.matroid_Base","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.matroid_Base\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">matroid_Base</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid\">IndepMatroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.matroid\">IndepMatroid.matroid</a> <span class=\"fn\">M</span></span>)</span>.Base <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Minimal.html#maximals\">maximals</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> | <span class=\"fn\"><span class=\"fn\">M</span>.Indep <span class=\"fn\">I</span></span>}</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L110-L110","name":"IndepMatroid.matroid_E","line":110,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.matroid_E","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.matroid_E\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">matroid_E</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid\">IndepMatroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.matroid\">IndepMatroid.matroid</a> <span class=\"fn\">M</span></span>)</span>.E</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">M</span>.E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L103-L103","name":"IndepMatroid.subset_ground","line":103,"kind":"def","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.subset_ground","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.subset_ground\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">subset_ground</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid\">IndepMatroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.Indep <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">self</span>.E</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L102-L102","name":"IndepMatroid.indep_maximal","line":102,"kind":"def","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.indep_maximal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.indep_maximal\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">indep_maximal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid\">IndepMatroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">self</span>.E</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.ExistsMaximalSubsetProperty\">Matroid.ExistsMaximalSubsetProperty</a> <span class=\"fn\"><span class=\"fn\">self</span>.Indep</span> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L100-L100","name":"IndepMatroid.indep_aug","line":100,"kind":"def","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.indep_aug","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.indep_aug\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">indep_aug</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid\">IndepMatroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃B : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.Indep <span class=\"fn\">I</span></span> →\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> ∉ <span class=\"fn\"><a href=\"./Mathlib/Order/Minimal.html#maximals\">maximals</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> | <span class=\"fn\"><span class=\"fn\">self</span>.Indep <span class=\"fn\">I</span></span>}</span></span></span> →\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Minimal.html#maximals\">maximals</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> | <span class=\"fn\"><span class=\"fn\">self</span>.Indep <span class=\"fn\">I</span></span>}</span></span></span> → <span class=\"fn\">∃ x ∈ <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">I</span></span>, <span class=\"fn\"><span class=\"fn\">self</span>.Indep <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Classes/SetNotation.html#Insert.insert\">insert</a> <span class=\"fn\">x</span> <span class=\"fn\">I</span></span>)</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L99-L99","name":"IndepMatroid.indep_subset","line":99,"kind":"def","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.indep_subset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.indep_subset\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">indep_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid\">IndepMatroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.Indep <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\">self</span>.Indep <span class=\"fn\">I</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L98-L98","name":"IndepMatroid.indep_empty","line":98,"kind":"def","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.indep_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.indep_empty\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">indep_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid\">IndepMatroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">self</span>.Indep <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L97-L97","name":"IndepMatroid.Indep","line":97,"kind":"def","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.Indep","doc":"The independence predicate "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.Indep\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">Indep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid\">IndepMatroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L95-L95","name":"IndepMatroid.E","line":95,"kind":"def","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.E","doc":"The ground set "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.E\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">E</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid\">IndepMatroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L93-L93","name":"IndepMatroid.mk","line":93,"kind":"ctor","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid.mk\"><span class=\"name\">IndepMatroid</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Indep : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_empty : <span class=\"fn\"><span class=\"fn\">Indep</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_subset : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_aug : <span class=\"fn\">∀ ⦃<span class=\"fn\">I </span>B : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄,\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> →\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> ∉ <span class=\"fn\"><a href=\"./Mathlib/Order/Minimal.html#maximals\">maximals</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> | <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span>}</span></span></span> →\n      <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Minimal.html#maximals\">maximals</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> | <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span>}</span></span></span> → <span class=\"fn\">∃ x ∈ <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">I</span></span>, <span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Classes/SetNotation.html#Insert.insert\">insert</a> <span class=\"fn\">x</span> <span class=\"fn\">I</span></span>)</span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indep_maximal : <span class=\"fn\">∀ <span class=\"fn\">X</span> ⊆ <span class=\"fn\">E</span>, <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.ExistsMaximalSubsetProperty\">Matroid.ExistsMaximalSubsetProperty</a> <span class=\"fn\">Indep</span> <span class=\"fn\">X</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subset_ground : <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Indep</span> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">E</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid\">IndepMatroid</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/IndepAxioms.lean#L93-L103","name":"IndepMatroid","line":93,"kind":"structure","docLink":"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid","doc":"A matroid as defined by the independence axioms. This is the same thing as a `Matroid`,\nand so does not need its own API; it exists to make it easier to construct a matroid from its\nindependent sets. The constructed `IndepMatroid` can then be converted into a matroid\nwith `IndepMatroid.matroid`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid\"><span class=\"name\">IndepMatroid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_2</div></div>"}]}