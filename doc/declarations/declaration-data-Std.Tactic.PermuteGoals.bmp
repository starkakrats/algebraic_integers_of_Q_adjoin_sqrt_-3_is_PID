{"name":"Std.Tactic.PermuteGoals","instances":[],"imports":["Init","Std.Data.List.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/0d0ac1c43e1ec1965e0806af9e7a32999ea31096/Std/Tactic/PermuteGoals.lean#L56-L70","name":"Std.Tactic.«tacticOn_goal-_=>_»","line":56,"kind":"def","docLink":"./Std/Tactic/PermuteGoals.html#Std.Tactic.«tacticOn_goal-_=>_»","doc":"`on_goal n => tacSeq` creates a block scope for the `n`-th goal and tries the sequence\nof tactics `tacSeq` on it.\n\n`on_goal -n => tacSeq` does the same, but the `n`-th goal is chosen by counting from the\nbottom.\n\nThe goal is not required to be solved and any resulting subgoals are inserted back into the\nlist of goals, replacing the chosen goal.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/PermuteGoals.html#Std.Tactic.«tacticOn_goal-_=>_»\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">«tacticOn_goal-_=>_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/0d0ac1c43e1ec1965e0806af9e7a32999ea31096/Std/Tactic/PermuteGoals.lean#L54-L54","name":"Std.Tactic.tacticSwap","line":54,"kind":"def","docLink":"./Std/Tactic/PermuteGoals.html#Std.Tactic.tacticSwap","doc":"`swap` is a shortcut for `pick_goal 2`, which interchanges the 1st and 2nd goals. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/PermuteGoals.html#Std.Tactic.tacticSwap\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">tacticSwap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/0d0ac1c43e1ec1965e0806af9e7a32999ea31096/Std/Tactic/PermuteGoals.lean#L42-L51","name":"Std.Tactic.«tacticPick_goal-_»","line":42,"kind":"def","docLink":"./Std/Tactic/PermuteGoals.html#Std.Tactic.«tacticPick_goal-_»","doc":"`pick_goal n` will move the `n`-th goal to the front.\n\n`pick_goal -n` will move the `n`-th goal (counting from the bottom) to the front.\n\nSee also `Tactic.rotate_goals`, which moves goals from the front to the back and vice-versa.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/PermuteGoals.html#Std.Tactic.«tacticPick_goal-_»\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">«tacticPick_goal-_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/0d0ac1c43e1ec1965e0806af9e7a32999ea31096/Std/Tactic/PermuteGoals.lean#L32-L40","name":"Std.Tactic.splitGoalsAndGetNth","line":32,"kind":"def","docLink":"./Std/Tactic/PermuteGoals.html#Std.Tactic.splitGoalsAndGetNth","doc":"If the current goals are `g₁ ⋯ gᵢ ⋯ gₙ`, `splitGoalsAndGetNth i` returns\n`(gᵢ, [g₁, ⋯, gᵢ₋₁], [gᵢ₊₁, ⋯, gₙ])`.\n\nIf `reverse` is passed as `true`, the `i`-th goal is picked by counting backwards.\nFor instance, `splitGoalsAndGetNth 1 true` puts the last goal in the first component\nof the returned term.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/PermuteGoals.html#Std.Tactic.splitGoalsAndGetNth\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">splitGoalsAndGetNth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(nth : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(reverse : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM\">Lean.Elab.Tactic.TacticM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span></span></span>)</span></span></div></div>"}]}