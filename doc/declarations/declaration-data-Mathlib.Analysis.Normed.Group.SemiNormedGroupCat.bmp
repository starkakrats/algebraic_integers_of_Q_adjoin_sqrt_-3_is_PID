{"name":"Mathlib.Analysis.Normed.Group.SemiNormedGroupCat","instances":[{"typeNames":["NormedAddGroupHom"],"name":"SemiNormedGroupCat.bundledHom","className":"CategoryTheory.BundledHom"},{"typeNames":["SemiNormedGroupCat"],"name":"SemiNormedGroupCat.instConcreteCategorySemiNormedGroupCatInstSemiNormedGroupCatLargeCategory","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["SemiNormedGroupCat","_builtin_typeu"],"name":"SemiNormedGroupCat.instCoeSortSemiNormedGroupCatType","className":"CoeSort"},{"typeNames":["CategoryTheory.Bundled.α"],"name":"SemiNormedGroupCat.instSeminormedAddCommGroupα","className":"SeminormedAddCommGroup"},{"typeNames":["Quiver.Hom","CategoryTheory.Bundled.α","CategoryTheory.Bundled.α"],"name":"SemiNormedGroupCat.toAddMonoidHomClass","className":"AddMonoidHomClass"},{"typeNames":["SemiNormedGroupCat"],"name":"SemiNormedGroupCat.instInhabitedSemiNormedGroupCat","className":"Inhabited"},{"typeNames":["CategoryTheory.Bundled.α"],"name":"SemiNormedGroupCat.ofUnique","className":"Unique"},{"typeNames":["Quiver.Hom"],"name":"SemiNormedGroupCat.instZeroHomSemiNormedGroupCatToQuiverToCategoryStructInstSemiNormedGroupCatLargeCategory","className":"Zero"},{"typeNames":["SemiNormedGroupCat"],"name":"SemiNormedGroupCat.instHasZeroMorphismsSemiNormedGroupCatInstSemiNormedGroupCatLargeCategory","className":"CategoryTheory.Limits.HasZeroMorphisms"},{"typeNames":["SemiNormedGroupCat"],"name":"SemiNormedGroupCat.hasZeroObject","className":"CategoryTheory.Limits.HasZeroObject"},{"typeNames":["SemiNormedGroupCat₁","_builtin_typeu"],"name":"SemiNormedGroupCat₁.instCoeSortSemiNormedGroupCat₁Type","className":"CoeSort"},{"typeNames":["SemiNormedGroupCat₁"],"name":"SemiNormedGroupCat₁.instLargeCategorySemiNormedGroupCat₁","className":"CategoryTheory.Category"},{"typeNames":["Quiver.Hom","CategoryTheory.Bundled.α","CategoryTheory.Bundled.α"],"name":"SemiNormedGroupCat₁.instFunLike","className":"DFunLike"},{"typeNames":["SemiNormedGroupCat₁"],"name":"SemiNormedGroupCat₁.instConcreteCategorySemiNormedGroupCat₁InstLargeCategorySemiNormedGroupCat₁","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["Quiver.Hom","CategoryTheory.Bundled.α","CategoryTheory.Bundled.α"],"name":"SemiNormedGroupCat₁.toAddMonoidHomClass","className":"AddMonoidHomClass"},{"typeNames":["CategoryTheory.Bundled.α"],"name":"SemiNormedGroupCat₁.instSeminormedAddCommGroupα","className":"SeminormedAddCommGroup"},{"typeNames":["SemiNormedGroupCat₁","SemiNormedGroupCat"],"name":"SemiNormedGroupCat₁.instHasForget₂SemiNormedGroupCat₁SemiNormedGroupCatInstLargeCategorySemiNormedGroupCat₁InstConcreteCategorySemiNormedGroupCat₁InstLargeCategorySemiNormedGroupCat₁InstSemiNormedGroupCatLargeCategoryInstConcreteCategorySemiNormedGroupCatInstSemiNormedGroupCatLargeCategory","className":"CategoryTheory.HasForget₂"},{"typeNames":["SemiNormedGroupCat₁"],"name":"SemiNormedGroupCat₁.instInhabitedSemiNormedGroupCat₁","className":"Inhabited"},{"typeNames":["CategoryTheory.Bundled.α"],"name":"SemiNormedGroupCat₁.ofUnique","className":"Unique"},{"typeNames":["Quiver.Hom"],"name":"SemiNormedGroupCat₁.instZeroHomSemiNormedGroupCat₁ToQuiverToCategoryStructInstLargeCategorySemiNormedGroupCat₁","className":"Zero"},{"typeNames":["SemiNormedGroupCat₁"],"name":"SemiNormedGroupCat₁.instHasZeroMorphismsSemiNormedGroupCat₁InstLargeCategorySemiNormedGroupCat₁","className":"CategoryTheory.Limits.HasZeroMorphisms"},{"typeNames":["SemiNormedGroupCat₁"],"name":"SemiNormedGroupCat₁.hasZeroObject","className":"CategoryTheory.Limits.HasZeroObject"}],"imports":["Init","Mathlib.Analysis.Normed.Group.Hom","Mathlib.CategoryTheory.Limits.Shapes.ZeroMorphisms","Mathlib.CategoryTheory.ConcreteCategory.BundledHom","Mathlib.CategoryTheory.Elementwise"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L256-L264","name":"SemiNormedGroupCat₁.iso_isometry","line":256,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.iso_isometry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.iso_isometry\"><span class=\"name\">SemiNormedGroupCat₁</span>.<span class=\"name\">iso_isometry</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁\">SemiNormedGroupCat₁</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁\">SemiNormedGroupCat₁</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Isometry.html#Isometry\">Isometry</a> <span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">i</span>.hom</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L252-L253","name":"SemiNormedGroupCat₁.hasZeroObject","line":252,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.hasZeroObject","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.hasZeroObject\"><span class=\"name\">SemiNormedGroupCat₁</span>.<span class=\"name\">hasZeroObject</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroObjects.html#CategoryTheory.Limits.HasZeroObject\">CategoryTheory.Limits.HasZeroObject</a> <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁\">SemiNormedGroupCat₁</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L246-L249","name":"SemiNormedGroupCat₁.isZero_of_subsingleton","line":246,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.isZero_of_subsingleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.isZero_of_subsingleton\"><span class=\"name\">SemiNormedGroupCat₁</span>.<span class=\"name\">isZero_of_subsingleton</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁\">SemiNormedGroupCat₁</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">↑<span class=\"fn\">V</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroObjects.html#CategoryTheory.Limits.IsZero\">CategoryTheory.Limits.IsZero</a> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L244-L244","name":"SemiNormedGroupCat₁.instHasZeroMorphismsSemiNormedGroupCat₁InstLargeCategorySemiNormedGroupCat₁","line":244,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.instHasZeroMorphismsSemiNormedGroupCat₁InstLargeCategorySemiNormedGroupCat₁","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.instHasZeroMorphismsSemiNormedGroupCat₁InstLargeCategorySemiNormedGroupCat₁\"><span class=\"name\">SemiNormedGroupCat₁</span>.<span class=\"name\">instHasZeroMorphismsSemiNormedGroupCat₁InstLargeCategorySemiNormedGroupCat₁</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroMorphisms.html#CategoryTheory.Limits.HasZeroMorphisms\">CategoryTheory.Limits.HasZeroMorphisms</a> <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁\">SemiNormedGroupCat₁</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L240-L241","name":"SemiNormedGroupCat₁.zero_apply","line":240,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.zero_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.zero_apply\"><span class=\"name\">SemiNormedGroupCat₁</span>.<span class=\"name\">zero_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁\">SemiNormedGroupCat₁</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁\">SemiNormedGroupCat₁</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L236-L237","name":"SemiNormedGroupCat₁.instZeroHomSemiNormedGroupCat₁ToQuiverToCategoryStructInstLargeCategorySemiNormedGroupCat₁","line":236,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.instZeroHomSemiNormedGroupCat₁ToQuiverToCategoryStructInstLargeCategorySemiNormedGroupCat₁","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.instZeroHomSemiNormedGroupCat₁ToQuiverToCategoryStructInstLargeCategorySemiNormedGroupCat₁\"><span class=\"name\">SemiNormedGroupCat₁</span>.<span class=\"name\">instZeroHomSemiNormedGroupCat₁ToQuiverToCategoryStructInstLargeCategorySemiNormedGroupCat₁</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁\">SemiNormedGroupCat₁</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁\">SemiNormedGroupCat₁</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L230-L232","name":"SemiNormedGroupCat₁.ofUnique","line":230,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.ofUnique","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.ofUnique\"><span class=\"name\">SemiNormedGroupCat₁</span>.<span class=\"name\">ofUnique</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[i : <span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.of\">SemiNormedGroupCat₁.of</a> <span class=\"fn\">V</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L227-L228","name":"SemiNormedGroupCat₁.instInhabitedSemiNormedGroupCat₁","line":227,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.instInhabitedSemiNormedGroupCat₁","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.instInhabitedSemiNormedGroupCat₁\"><span class=\"name\">SemiNormedGroupCat₁</span>.<span class=\"name\">instInhabitedSemiNormedGroupCat₁</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁\">SemiNormedGroupCat₁</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L219-L221","name":"SemiNormedGroupCat₁.coe_comp","line":219,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.coe_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.coe_comp\"><span class=\"name\">SemiNormedGroupCat₁</span>.<span class=\"name\">coe_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁\">SemiNormedGroupCat₁</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁\">SemiNormedGroupCat₁</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁\">SemiNormedGroupCat₁</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L213-L214","name":"SemiNormedGroupCat₁.coe_id","line":213,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.coe_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.coe_id\"><span class=\"name\">SemiNormedGroupCat₁</span>.<span class=\"name\">coe_id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁\">SemiNormedGroupCat₁</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">V</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">id</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L207-L208","name":"SemiNormedGroupCat₁.coe_of","line":207,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.coe_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.coe_of\"><span class=\"name\">SemiNormedGroupCat₁</span>.<span class=\"name\">coe_of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.of\">SemiNormedGroupCat₁.of</a> <span class=\"fn\">V</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L201-L204","name":"SemiNormedGroupCat₁.instHasForget₂SemiNormedGroupCat₁SemiNormedGroupCatInstLargeCategorySemiNormedGroupCat₁InstConcreteCategorySemiNormedGroupCat₁InstLargeCategorySemiNormedGroupCat₁InstSemiNormedGroupCatLargeCategoryInstConcreteCategorySemiNormedGroupCatInstSemiNormedGroupCatLargeCategory","line":201,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.instHasForget₂SemiNormedGroupCat₁SemiNormedGroupCatInstLargeCategorySemiNormedGroupCat₁InstConcreteCategorySemiNormedGroupCat₁InstLargeCategorySemiNormedGroupCat₁InstSemiNormedGroupCatLargeCategoryInstConcreteCategorySemiNormedGroupCatInstSemiNormedGroupCatLargeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.instHasForget₂SemiNormedGroupCat₁SemiNormedGroupCatInstLargeCategorySemiNormedGroupCat₁InstConcreteCategorySemiNormedGroupCat₁InstLargeCategorySemiNormedGroupCat₁InstSemiNormedGroupCatLargeCategoryInstConcreteCategorySemiNormedGroupCatInstSemiNormedGroupCatLargeCategory\"><span class=\"name\">SemiNormedGroupCat₁</span>.<span class=\"name\">instHasForget₂SemiNormedGroupCat₁SemiNormedGroupCatInstLargeCategorySemiNormedGroupCat₁InstConcreteCategorySemiNormedGroupCat₁InstLargeCategorySemiNormedGroupCat₁InstSemiNormedGroupCatLargeCategoryInstConcreteCategorySemiNormedGroupCatInstSemiNormedGroupCatLargeCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁\">SemiNormedGroupCat₁</a> <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\">SemiNormedGroupCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L193-L198","name":"SemiNormedGroupCat₁.mkIso","line":193,"kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.mkIso","doc":"Promote an isomorphism in `SemiNormedGroupCat` to an isomorphism in `SemiNormedGroupCat₁`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.mkIso\"><span class=\"name\">SemiNormedGroupCat₁</span>.<span class=\"name\">mkIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\">SemiNormedGroupCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\">SemiNormedGroupCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc\">NormedAddGroupHom.NormNoninc</a> <span class=\"fn\"><span class=\"fn\">f</span>.hom</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i' : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc\">NormedAddGroupHom.NormNoninc</a> <span class=\"fn\"><span class=\"fn\">f</span>.inv</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.of\">SemiNormedGroupCat₁.of</a> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.of\">SemiNormedGroupCat₁.of</a> <span class=\"fn\">↑<span class=\"fn\">N</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L192-L192","name":"SemiNormedGroupCat₁.mkIso_inv","line":192,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.mkIso_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.mkIso_inv\"><span class=\"name\">SemiNormedGroupCat₁</span>.<span class=\"name\">mkIso_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\">SemiNormedGroupCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\">SemiNormedGroupCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc\">NormedAddGroupHom.NormNoninc</a> <span class=\"fn\"><span class=\"fn\">f</span>.hom</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i' : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc\">NormedAddGroupHom.NormNoninc</a> <span class=\"fn\"><span class=\"fn\">f</span>.inv</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.mkIso\">SemiNormedGroupCat₁.mkIso</a> <span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">i'</span></span>)</span>.inv</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.mkHom\">SemiNormedGroupCat₁.mkHom</a> <span class=\"fn\"><span class=\"fn\">f</span>.inv</span> <span class=\"fn\">i'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L192-L192","name":"SemiNormedGroupCat₁.mkIso_hom","line":192,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.mkIso_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.mkIso_hom\"><span class=\"name\">SemiNormedGroupCat₁</span>.<span class=\"name\">mkIso_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\">SemiNormedGroupCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\">SemiNormedGroupCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc\">NormedAddGroupHom.NormNoninc</a> <span class=\"fn\"><span class=\"fn\">f</span>.hom</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i' : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc\">NormedAddGroupHom.NormNoninc</a> <span class=\"fn\"><span class=\"fn\">f</span>.inv</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.mkIso\">SemiNormedGroupCat₁.mkIso</a> <span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">i'</span></span>)</span>.hom</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.mkHom\">SemiNormedGroupCat₁.mkHom</a> <span class=\"fn\"><span class=\"fn\">f</span>.hom</span> <span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L186-L188","name":"SemiNormedGroupCat₁.mkHom_apply","line":186,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.mkHom_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.mkHom_apply\"><span class=\"name\">SemiNormedGroupCat₁</span>.<span class=\"name\">mkHom_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\">SemiNormedGroupCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\">SemiNormedGroupCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc\">NormedAddGroupHom.NormNoninc</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.of\">SemiNormedGroupCat₁.of</a> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.mkHom\">SemiNormedGroupCat₁.mkHom</a> <span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L180-L182","name":"SemiNormedGroupCat₁.mkHom","line":180,"kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.mkHom","doc":"Promote a morphism in `SemiNormedGroupCat` to a morphism in `SemiNormedGroupCat₁`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.mkHom\"><span class=\"name\">SemiNormedGroupCat₁</span>.<span class=\"name\">mkHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\">SemiNormedGroupCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\">SemiNormedGroupCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc\">NormedAddGroupHom.NormNoninc</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.of\">SemiNormedGroupCat₁.of</a> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.of\">SemiNormedGroupCat₁.of</a> <span class=\"fn\">↑<span class=\"fn\">N</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L176-L177","name":"SemiNormedGroupCat₁.instSeminormedAddCommGroupα","line":176,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.instSeminormedAddCommGroupα","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.instSeminormedAddCommGroupα\"><span class=\"name\">SemiNormedGroupCat₁</span>.<span class=\"name\">instSeminormedAddCommGroupα</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁\">SemiNormedGroupCat₁</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L172-L173","name":"SemiNormedGroupCat₁.of","line":172,"kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.of","doc":"Construct a bundled `SemiNormedGroupCat₁` from the underlying type and typeclass. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.of\"><span class=\"name\">SemiNormedGroupCat₁</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁\">SemiNormedGroupCat₁</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L167-L169","name":"SemiNormedGroupCat₁.toAddMonoidHomClass","line":167,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.toAddMonoidHomClass","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.toAddMonoidHomClass\"><span class=\"name\">SemiNormedGroupCat₁</span>.<span class=\"name\">toAddMonoidHomClass</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁\">SemiNormedGroupCat₁</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁\">SemiNormedGroupCat₁</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHomClass\">AddMonoidHomClass</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">W</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">V</span></span> <span class=\"fn\">↑<span class=\"fn\">W</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L160-L164","name":"SemiNormedGroupCat₁.instConcreteCategorySemiNormedGroupCat₁InstLargeCategorySemiNormedGroupCat₁","line":160,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.instConcreteCategorySemiNormedGroupCat₁InstLargeCategorySemiNormedGroupCat₁","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.instConcreteCategorySemiNormedGroupCat₁InstLargeCategorySemiNormedGroupCat₁\"><span class=\"name\">SemiNormedGroupCat₁</span>.<span class=\"name\">instConcreteCategorySemiNormedGroupCat₁InstLargeCategorySemiNormedGroupCat₁</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁\">SemiNormedGroupCat₁</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L155-L157","name":"SemiNormedGroupCat₁.hom_ext","line":155,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.hom_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.hom_ext\"><span class=\"name\">SemiNormedGroupCat₁</span>.<span class=\"name\">hom_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁\">SemiNormedGroupCat₁</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁\">SemiNormedGroupCat₁</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L150-L152","name":"SemiNormedGroupCat₁.instFunLike","line":150,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.instFunLike","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.instFunLike\"><span class=\"name\">SemiNormedGroupCat₁</span>.<span class=\"name\">instFunLike</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁\">SemiNormedGroupCat₁</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁\">SemiNormedGroupCat₁</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">X</span></span> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L144-L147","name":"SemiNormedGroupCat₁.instLargeCategorySemiNormedGroupCat₁","line":144,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.instLargeCategorySemiNormedGroupCat₁","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.instLargeCategorySemiNormedGroupCat₁\"><span class=\"name\">SemiNormedGroupCat₁</span>.<span class=\"name\">instLargeCategorySemiNormedGroupCat₁</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁\">SemiNormedGroupCat₁</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L141-L142","name":"SemiNormedGroupCat₁.instCoeSortSemiNormedGroupCat₁Type","line":141,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.instCoeSortSemiNormedGroupCat₁Type","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁.instCoeSortSemiNormedGroupCat₁Type\"><span class=\"name\">SemiNormedGroupCat₁</span>.<span class=\"name\">instCoeSortSemiNormedGroupCat₁Type</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁\">SemiNormedGroupCat₁</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u_1)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L135-L136","name":"SemiNormedGroupCat₁","line":135,"kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁","doc":"`SemiNormedGroupCat₁` is a type synonym for `SemiNormedGroupCat`,\nwhich we shall equip with the category structure consisting only of the norm non-increasing maps.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat₁\"><span class=\"name\">SemiNormedGroupCat₁</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u + 1)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L119-L127","name":"SemiNormedGroupCat.iso_isometry_of_normNoninc","line":119,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.iso_isometry_of_normNoninc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.iso_isometry_of_normNoninc\"><span class=\"name\">SemiNormedGroupCat</span>.<span class=\"name\">iso_isometry_of_normNoninc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\">SemiNormedGroupCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\">SemiNormedGroupCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h1 : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc\">NormedAddGroupHom.NormNoninc</a> <span class=\"fn\"><span class=\"fn\">i</span>.hom</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h2 : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc\">NormedAddGroupHom.NormNoninc</a> <span class=\"fn\"><span class=\"fn\">i</span>.inv</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Isometry.html#Isometry\">Isometry</a> <span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">i</span>.hom</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L115-L116","name":"SemiNormedGroupCat.hasZeroObject","line":115,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.hasZeroObject","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.hasZeroObject\"><span class=\"name\">SemiNormedGroupCat</span>.<span class=\"name\">hasZeroObject</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroObjects.html#CategoryTheory.Limits.HasZeroObject\">CategoryTheory.Limits.HasZeroObject</a> <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\">SemiNormedGroupCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L109-L112","name":"SemiNormedGroupCat.isZero_of_subsingleton","line":109,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.isZero_of_subsingleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.isZero_of_subsingleton\"><span class=\"name\">SemiNormedGroupCat</span>.<span class=\"name\">isZero_of_subsingleton</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\">SemiNormedGroupCat</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">↑<span class=\"fn\">V</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroObjects.html#CategoryTheory.Limits.IsZero\">CategoryTheory.Limits.IsZero</a> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L107-L107","name":"SemiNormedGroupCat.instHasZeroMorphismsSemiNormedGroupCatInstSemiNormedGroupCatLargeCategory","line":107,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.instHasZeroMorphismsSemiNormedGroupCatInstSemiNormedGroupCatLargeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.instHasZeroMorphismsSemiNormedGroupCatInstSemiNormedGroupCatLargeCategory\"><span class=\"name\">SemiNormedGroupCat</span>.<span class=\"name\">instHasZeroMorphismsSemiNormedGroupCatInstSemiNormedGroupCatLargeCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroMorphisms.html#CategoryTheory.Limits.HasZeroMorphisms\">CategoryTheory.Limits.HasZeroMorphisms</a> <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\">SemiNormedGroupCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L103-L104","name":"SemiNormedGroupCat.zero_apply","line":103,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.zero_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.zero_apply\"><span class=\"name\">SemiNormedGroupCat</span>.<span class=\"name\">zero_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\">SemiNormedGroupCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\">SemiNormedGroupCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L99-L100","name":"SemiNormedGroupCat.instZeroHomSemiNormedGroupCatToQuiverToCategoryStructInstSemiNormedGroupCatLargeCategory","line":99,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.instZeroHomSemiNormedGroupCatToQuiverToCategoryStructInstSemiNormedGroupCatLargeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.instZeroHomSemiNormedGroupCatToQuiverToCategoryStructInstSemiNormedGroupCatLargeCategory\"><span class=\"name\">SemiNormedGroupCat</span>.<span class=\"name\">instZeroHomSemiNormedGroupCatToQuiverToCategoryStructInstSemiNormedGroupCatLargeCategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\">SemiNormedGroupCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\">SemiNormedGroupCat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">N</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L94-L96","name":"SemiNormedGroupCat.ofUnique","line":94,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.ofUnique","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.ofUnique\"><span class=\"name\">SemiNormedGroupCat</span>.<span class=\"name\">ofUnique</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[i : <span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.of\">SemiNormedGroupCat.of</a> <span class=\"fn\">V</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L91-L92","name":"SemiNormedGroupCat.instInhabitedSemiNormedGroupCat","line":91,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.instInhabitedSemiNormedGroupCat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.instInhabitedSemiNormedGroupCat\"><span class=\"name\">SemiNormedGroupCat</span>.<span class=\"name\">instInhabitedSemiNormedGroupCat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\">SemiNormedGroupCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L86-L88","name":"SemiNormedGroupCat.coe_comp","line":86,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.coe_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.coe_comp\"><span class=\"name\">SemiNormedGroupCat</span>.<span class=\"name\">coe_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\">SemiNormedGroupCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\">SemiNormedGroupCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\">SemiNormedGroupCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L80-L81","name":"SemiNormedGroupCat.coe_id","line":80,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.coe_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.coe_id\"><span class=\"name\">SemiNormedGroupCat</span>.<span class=\"name\">coe_id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\">SemiNormedGroupCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">V</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">id</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L74-L75","name":"SemiNormedGroupCat.coe_of","line":74,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.coe_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.coe_of\"><span class=\"name\">SemiNormedGroupCat</span>.<span class=\"name\">coe_of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.of\">SemiNormedGroupCat.of</a> <span class=\"fn\">V</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L70-L71","name":"SemiNormedGroupCat.ext","line":70,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.ext\"><span class=\"name\">SemiNormedGroupCat</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\">SemiNormedGroupCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\">SemiNormedGroupCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f₁ : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f₂ : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">M</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f₁</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f₂</span> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L62-L66","name":"SemiNormedGroupCat.toAddMonoidHomClass","line":62,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.toAddMonoidHomClass","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.toAddMonoidHomClass\"><span class=\"name\">SemiNormedGroupCat</span>.<span class=\"name\">toAddMonoidHomClass</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\">SemiNormedGroupCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\">SemiNormedGroupCat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHomClass\">AddMonoidHomClass</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">W</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">V</span></span> <span class=\"fn\">↑<span class=\"fn\">W</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L58-L59","name":"SemiNormedGroupCat.instSeminormedAddCommGroupα","line":58,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.instSeminormedAddCommGroupα","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.instSeminormedAddCommGroupα\"><span class=\"name\">SemiNormedGroupCat</span>.<span class=\"name\">instSeminormedAddCommGroupα</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\">SemiNormedGroupCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L54-L55","name":"SemiNormedGroupCat.of","line":54,"kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.of","doc":"Construct a bundled `SemiNormedGroupCat` from the underlying type and typeclass. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.of\"><span class=\"name\">SemiNormedGroupCat</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\">SemiNormedGroupCat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L50-L51","name":"SemiNormedGroupCat.instCoeSortSemiNormedGroupCatType","line":50,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.instCoeSortSemiNormedGroupCatType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.instCoeSortSemiNormedGroupCatType\"><span class=\"name\">SemiNormedGroupCat</span>.<span class=\"name\">instCoeSortSemiNormedGroupCatType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\">SemiNormedGroupCat</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u_1)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L46-L48","name":"SemiNormedGroupCat.instConcreteCategorySemiNormedGroupCatInstSemiNormedGroupCatLargeCategory","line":46,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.instConcreteCategorySemiNormedGroupCatInstSemiNormedGroupCatLargeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.instConcreteCategorySemiNormedGroupCatInstSemiNormedGroupCatLargeCategory\"><span class=\"name\">SemiNormedGroupCat</span>.<span class=\"name\">instConcreteCategorySemiNormedGroupCatInstSemiNormedGroupCatLargeCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\">SemiNormedGroupCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L35-L38","name":"SemiNormedGroupCat.bundledHom","line":35,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.bundledHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat.bundledHom\"><span class=\"name\">SemiNormedGroupCat</span>.<span class=\"name\">bundledHom</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom\">CategoryTheory.BundledHom</a> <a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.lean#L29-L30","name":"SemiNormedGroupCat","line":29,"kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat","doc":"The category of seminormed abelian groups and bounded group homomorphisms. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/SemiNormedGroupCat.html#SemiNormedGroupCat\"><span class=\"name\">SemiNormedGroupCat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u + 1)</div></div>"}]}