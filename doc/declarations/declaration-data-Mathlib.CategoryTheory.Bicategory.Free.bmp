{"name":"Mathlib.CategoryTheory.Bicategory.Free","instances":[{"typeNames":["CategoryTheory.FreeBicategory"],"name":"CategoryTheory.instForAllInhabitedFreeBicategory","className":"Inhabited"},{"typeNames":["CategoryTheory.FreeBicategory.Hom"],"name":"CategoryTheory.FreeBicategory.instInhabitedHom","className":"Inhabited"},{"typeNames":["CategoryTheory.FreeBicategory"],"name":"CategoryTheory.FreeBicategory.quiver","className":"Quiver"},{"typeNames":["CategoryTheory.FreeBicategory"],"name":"CategoryTheory.FreeBicategory.categoryStruct","className":"CategoryTheory.CategoryStruct"},{"typeNames":["Quiver.Hom"],"name":"CategoryTheory.FreeBicategory.homCategory","className":"CategoryTheory.Category"},{"typeNames":["CategoryTheory.FreeBicategory"],"name":"CategoryTheory.FreeBicategory.bicategory","className":"CategoryTheory.Bicategory"}],"imports":["Init","Mathlib.CategoryTheory.Bicategory.Functor"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L372-L394","name":"CategoryTheory.FreeBicategory.lift","line":372,"kind":"def","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift","doc":"A prefunctor from a quiver `B` to a bicategory `C` can be lifted to a pseudofunctor from\n`free_bicategory B` to `C`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory\">CategoryTheory.Bicategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Prefunctor\">⥤q</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Functor.html#CategoryTheory.Pseudofunctor\">CategoryTheory.Pseudofunctor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>)</span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L371-L371","name":"CategoryTheory.FreeBicategory.lift_toPrelaxFunctor_toPrefunctor_obj","line":371,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift_toPrelaxFunctor_toPrefunctor_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift_toPrelaxFunctor_toPrefunctor_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">lift_toPrelaxFunctor_toPrefunctor_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory\">CategoryTheory.Bicategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Prefunctor\">⥤q</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">B</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift\">CategoryTheory.FreeBicategory.lift</a> <span class=\"fn\">F</span></span>)</span>.toPrelaxFunctor</span></span>)</span>.obj <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L371-L371","name":"CategoryTheory.FreeBicategory.lift_mapId","line":371,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift_mapId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift_mapId\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">lift_mapId</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory\">CategoryTheory.Bicategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Prefunctor\">⥤q</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Functor.html#CategoryTheory.Pseudofunctor.mapId\">CategoryTheory.Pseudofunctor.mapId</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift\">CategoryTheory.FreeBicategory.lift</a> <span class=\"fn\">F</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.refl\">CategoryTheory.Iso.refl</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">{\n            <span class=\"fn\">toPrefunctor</span> :=\n              <span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><span class=\"fn\">F</span>.obj</span>,\n                <span class=\"fn\">map</span> := <span class=\"fn\">fun {<span class=\"fn\">X </span>Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>} =&gt; <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom\">CategoryTheory.FreeBicategory.liftHom</a> <span class=\"fn\">F</span></span></span> }</span>,\n            <span class=\"fn\">map₂</span> := <span class=\"fn\">fun {<span class=\"fn\">a </span>b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>} {<span class=\"fn\">f </span>g : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>} =&gt;\n              <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.lift\">Quot.lift</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom₂\">CategoryTheory.FreeBicategory.liftHom₂</a> <span class=\"fn\">F</span></span>)</span>\n                <span class=\"fn\">(_ :\n                  <span class=\"fn\">∀ (<span class=\"fn\">η </span>θ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>),\n                    <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a> <span class=\"fn\">η</span> <span class=\"fn\">θ</span></span> →\n                      <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom₂\">CategoryTheory.FreeBicategory.liftHom₂</a> <span class=\"fn\">F</span> <span class=\"fn\">η</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom₂\">CategoryTheory.FreeBicategory.liftHom₂</a> <span class=\"fn\">F</span> <span class=\"fn\">θ</span></span></span></span></span>)</span></span></span> }</span></span>)</span>.map\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">a</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L371-L371","name":"CategoryTheory.FreeBicategory.lift_mapComp","line":371,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift_mapComp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift_mapComp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">lift_mapComp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory\">CategoryTheory.Bicategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Prefunctor\">⥤q</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">a </span>b c : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>) (<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Functor.html#CategoryTheory.Pseudofunctor.mapComp\">CategoryTheory.Pseudofunctor.mapComp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift\">CategoryTheory.FreeBicategory.lift</a> <span class=\"fn\">F</span></span>)</span> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.refl\">CategoryTheory.Iso.refl</a>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">{\n              <span class=\"fn\">toPrefunctor</span> :=\n                <span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><span class=\"fn\">F</span>.obj</span>,\n                  <span class=\"fn\">map</span> := <span class=\"fn\">fun {<span class=\"fn\">X </span>Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>} =&gt; <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom\">CategoryTheory.FreeBicategory.liftHom</a> <span class=\"fn\">F</span></span></span> }</span>,\n              <span class=\"fn\">map₂</span> := <span class=\"fn\">fun {<span class=\"fn\">a </span>b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>} {<span class=\"fn\">f </span>g : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>} =&gt;\n                <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.lift\">Quot.lift</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom₂\">CategoryTheory.FreeBicategory.liftHom₂</a> <span class=\"fn\">F</span></span>)</span>\n                  <span class=\"fn\">(_ :\n                    <span class=\"fn\">∀ (<span class=\"fn\">η </span>θ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>),\n                      <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a> <span class=\"fn\">η</span> <span class=\"fn\">θ</span></span> →\n                        <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom₂\">CategoryTheory.FreeBicategory.liftHom₂</a> <span class=\"fn\">F</span> <span class=\"fn\">η</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom₂\">CategoryTheory.FreeBicategory.liftHom₂</a> <span class=\"fn\">F</span> <span class=\"fn\">θ</span></span></span></span></span>)</span></span></span> }</span></span>)</span>.map\n        <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L371-L371","name":"CategoryTheory.FreeBicategory.lift_toPrelaxFunctor_toPrefunctor_map","line":371,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift_toPrelaxFunctor_toPrefunctor_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift_toPrelaxFunctor_toPrefunctor_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">lift_toPrelaxFunctor_toPrefunctor_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory\">CategoryTheory.Bicategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Prefunctor\">⥤q</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>} (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift\">CategoryTheory.FreeBicategory.lift</a> <span class=\"fn\">F</span></span>)</span>.toPrelaxFunctor</span></span>)</span>.map <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom\">CategoryTheory.FreeBicategory.liftHom</a> <span class=\"fn\">F</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L371-L371","name":"CategoryTheory.FreeBicategory.lift_toPrelaxFunctor_map₂","line":371,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift_toPrelaxFunctor_map₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift_toPrelaxFunctor_map₂\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">lift_toPrelaxFunctor_map₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory\">CategoryTheory.Bicategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Prefunctor\">⥤q</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">a </span>b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>} {<span class=\"fn\">f </span>g : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>} (<span class=\"fn\">a_1</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot\">Quot</a> <span class=\"fn\">CategoryTheory.FreeBicategory.Rel</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Functor.html#CategoryTheory.PrelaxFunctor.map₂\">CategoryTheory.PrelaxFunctor.map₂</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift\">CategoryTheory.FreeBicategory.lift</a> <span class=\"fn\">F</span></span>)</span>.toPrelaxFunctor</span> <span class=\"fn\">a_1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.lift\">Quot.lift</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom₂\">CategoryTheory.FreeBicategory.liftHom₂</a> <span class=\"fn\">F</span></span>)</span>\n      <span class=\"fn\">(_ :\n        <span class=\"fn\">∀ (<span class=\"fn\">η </span>θ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>),\n          <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a> <span class=\"fn\">η</span> <span class=\"fn\">θ</span></span> →\n            <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom₂\">CategoryTheory.FreeBicategory.liftHom₂</a> <span class=\"fn\">F</span> <span class=\"fn\">η</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom₂\">CategoryTheory.FreeBicategory.liftHom₂</a> <span class=\"fn\">F</span> <span class=\"fn\">θ</span></span></span></span></span>)</span>\n      <span class=\"fn\">a_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L364-L365","name":"CategoryTheory.FreeBicategory.liftHom₂_congr","line":364,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom₂_congr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom₂_congr\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">liftHom₂_congr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory\">CategoryTheory.Bicategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Prefunctor\">⥤q</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{θ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a> <span class=\"fn\">η</span> <span class=\"fn\">θ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom₂\">CategoryTheory.FreeBicategory.liftHom₂</a> <span class=\"fn\">F</span> <span class=\"fn\">η</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom₂\">CategoryTheory.FreeBicategory.liftHom₂</a> <span class=\"fn\">F</span> <span class=\"fn\">θ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L349-L359","name":"CategoryTheory.FreeBicategory.liftHom₂","line":349,"kind":"def","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom₂","doc":"Auxiliary definition for `lift`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom₂\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">liftHom₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory\">CategoryTheory.Bicategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Prefunctor\">⥤q</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span> →\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom\">CategoryTheory.FreeBicategory.liftHom</a> <span class=\"fn\">F</span> <span class=\"fn\">f</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom\">CategoryTheory.FreeBicategory.liftHom</a> <span class=\"fn\">F</span> <span class=\"fn\">g</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L334-L336","name":"CategoryTheory.FreeBicategory.liftHom_comp","line":334,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom_comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">liftHom_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct\">CategoryTheory.CategoryStruct.{v₂, u₂}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Prefunctor\">⥤q</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom\">CategoryTheory.FreeBicategory.liftHom</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom\">CategoryTheory.FreeBicategory.liftHom</a> <span class=\"fn\">F</span> <span class=\"fn\">f</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom\">CategoryTheory.FreeBicategory.liftHom</a> <span class=\"fn\">F</span> <span class=\"fn\">g</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L329-L330","name":"CategoryTheory.FreeBicategory.liftHom_id","line":329,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">liftHom_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct\">CategoryTheory.CategoryStruct.{v₂, u₂}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Prefunctor\">⥤q</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom\">CategoryTheory.FreeBicategory.liftHom</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">a</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L322-L325","name":"CategoryTheory.FreeBicategory.liftHom","line":322,"kind":"def","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom","doc":"Auxiliary definition for `lift`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">liftHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct\">CategoryTheory.CategoryStruct.{v₂, u₂}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Prefunctor\">⥤q</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span> → <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">b</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L307-L309","name":"CategoryTheory.FreeBicategory.of","line":307,"kind":"def","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.of","doc":"Canonical prefunctor from `B` to `free_bicategory B`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.of\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Prefunctor\">⥤q</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L306-L306","name":"CategoryTheory.FreeBicategory.of_obj","line":306,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.of_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.of_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">of_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.FreeBicategory.of</span>.obj <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L306-L306","name":"CategoryTheory.FreeBicategory.of_map","line":306,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.of_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.of_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">of_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x </span>x_1 : <span class=\"fn\">B</span>) (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">x_1</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.FreeBicategory.of</span>.map <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.of\">CategoryTheory.FreeBicategory.Hom.of</a> <span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L301-L302","name":"CategoryTheory.FreeBicategory.mk_right_unitor_inv","line":301,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_right_unitor_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_right_unitor_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">mk_right_unitor_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">CategoryTheory.FreeBicategory.Rel</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.right_unitor_inv\">CategoryTheory.FreeBicategory.Hom₂.right_unitor_inv</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory.rightUnitor\">CategoryTheory.Bicategory.rightUnitor</a> <span class=\"fn\">f</span></span>)</span>.inv</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L296-L297","name":"CategoryTheory.FreeBicategory.mk_right_unitor_hom","line":296,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_right_unitor_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_right_unitor_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">mk_right_unitor_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">CategoryTheory.FreeBicategory.Rel</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.right_unitor\">CategoryTheory.FreeBicategory.Hom₂.right_unitor</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory.rightUnitor\">CategoryTheory.Bicategory.rightUnitor</a> <span class=\"fn\">f</span></span>)</span>.hom</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L291-L292","name":"CategoryTheory.FreeBicategory.mk_left_unitor_inv","line":291,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_left_unitor_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_left_unitor_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">mk_left_unitor_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">CategoryTheory.FreeBicategory.Rel</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.left_unitor_inv\">CategoryTheory.FreeBicategory.Hom₂.left_unitor_inv</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory.leftUnitor\">CategoryTheory.Bicategory.leftUnitor</a> <span class=\"fn\">f</span></span>)</span>.inv</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L286-L287","name":"CategoryTheory.FreeBicategory.mk_left_unitor_hom","line":286,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_left_unitor_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_left_unitor_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">mk_left_unitor_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">CategoryTheory.FreeBicategory.Rel</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.left_unitor\">CategoryTheory.FreeBicategory.Hom₂.left_unitor</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory.leftUnitor\">CategoryTheory.Bicategory.leftUnitor</a> <span class=\"fn\">f</span></span>)</span>.hom</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L281-L282","name":"CategoryTheory.FreeBicategory.mk_associator_inv","line":281,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_associator_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_associator_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">mk_associator_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">CategoryTheory.FreeBicategory.Rel</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator_inv\">CategoryTheory.FreeBicategory.Hom₂.associator_inv</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory.associator\">CategoryTheory.Bicategory.associator</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span>.inv</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L276-L277","name":"CategoryTheory.FreeBicategory.mk_associator_hom","line":276,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_associator_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_associator_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">mk_associator_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">CategoryTheory.FreeBicategory.Rel</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator\">CategoryTheory.FreeBicategory.Hom₂.associator</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory.associator\">CategoryTheory.Bicategory.associator</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span>.hom</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L271-L272","name":"CategoryTheory.FreeBicategory.mk_id","line":271,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">mk_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">CategoryTheory.FreeBicategory.Rel</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.id\">CategoryTheory.FreeBicategory.Hom₂.id</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L266-L267","name":"CategoryTheory.FreeBicategory.comp_def","line":266,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.comp_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.comp_def\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">comp_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.comp\">CategoryTheory.FreeBicategory.Hom.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L253-L255","name":"CategoryTheory.FreeBicategory.mk_whisker_right","line":253,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_whisker_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_whisker_right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">mk_whisker_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.mk\">CategoryTheory.FreeBicategory.Hom₂.mk</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">h</span> <span class=\"fn\">η</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory.whiskerRight\">CategoryTheory.Bicategory.whiskerRight</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.mk\">CategoryTheory.FreeBicategory.Hom₂.mk</a> <span class=\"fn\">η</span></span>)</span> <span class=\"fn\">h</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L247-L249","name":"CategoryTheory.FreeBicategory.mk_whisker_left","line":247,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_whisker_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_whisker_left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">mk_whisker_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.mk\">CategoryTheory.FreeBicategory.Hom₂.mk</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">f</span> <span class=\"fn\">η</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory.whiskerLeft\">CategoryTheory.Bicategory.whiskerLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.mk\">CategoryTheory.FreeBicategory.Hom₂.mk</a> <span class=\"fn\">η</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L241-L243","name":"CategoryTheory.FreeBicategory.mk_vcomp","line":241,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_vcomp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_vcomp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">mk_vcomp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(θ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.mk\">CategoryTheory.FreeBicategory.Hom₂.mk</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a> <span class=\"fn\">η</span> <span class=\"fn\">θ</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.mk\">CategoryTheory.FreeBicategory.Hom₂.mk</a> <span class=\"fn\">η</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.mk\">CategoryTheory.FreeBicategory.Hom₂.mk</a> <span class=\"fn\">θ</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L237-L238","name":"CategoryTheory.FreeBicategory.Hom₂.mk","line":237,"kind":"def","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Hom₂</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L186-L232","name":"CategoryTheory.FreeBicategory.bicategory","line":186,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.bicategory","doc":"Bicategory structure on the free bicategory. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.bicategory\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">bicategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory\">CategoryTheory.Bicategory</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L170-L182","name":"CategoryTheory.FreeBicategory.homCategory","line":170,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.homCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.homCategory\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">homCategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{max u v, max u v}</a>               <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L162-L162","name":"CategoryTheory.FreeBicategory.Rel.triangle","line":162,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.triangle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.triangle\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">triangle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator\">CategoryTheory.FreeBicategory.Hom₂.associator</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.id\">CategoryTheory.FreeBicategory.Hom.id</a> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">g</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.left_unitor\">CategoryTheory.FreeBicategory.Hom₂.left_unitor</a> <span class=\"fn\">g</span></span>)</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.right_unitor\">CategoryTheory.FreeBicategory.Hom₂.right_unitor</a> <span class=\"fn\">f</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L159-L161","name":"CategoryTheory.FreeBicategory.Rel.pentagon","line":159,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.pentagon","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.pentagon\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">pentagon</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{e : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">d</span> <span class=\"fn\">e</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">i</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator\">CategoryTheory.FreeBicategory.Hom₂.associator</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator\">CategoryTheory.FreeBicategory.Hom₂.associator</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.comp\">CategoryTheory.FreeBicategory.Hom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">i</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator\">CategoryTheory.FreeBicategory.Hom₂.associator</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span> <span class=\"fn\">i</span></span>)</span></span>)</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator\">CategoryTheory.FreeBicategory.Hom₂.associator</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.comp\">CategoryTheory.FreeBicategory.Hom.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">h</span> <span class=\"fn\">i</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator\">CategoryTheory.FreeBicategory.Hom₂.associator</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.comp\">CategoryTheory.FreeBicategory.Hom.comp</a> <span class=\"fn\">h</span> <span class=\"fn\">i</span></span>)</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L158-L158","name":"CategoryTheory.FreeBicategory.Rel.right_unitor_inv_hom","line":158,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.right_unitor_inv_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.right_unitor_inv_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">right_unitor_inv_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.right_unitor_inv\">CategoryTheory.FreeBicategory.Hom₂.right_unitor_inv</a> <span class=\"fn\">f</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.right_unitor\">CategoryTheory.FreeBicategory.Hom₂.right_unitor</a> <span class=\"fn\">f</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.id\">CategoryTheory.FreeBicategory.Hom₂.id</a> <span class=\"fn\">f</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L157-L157","name":"CategoryTheory.FreeBicategory.Rel.right_unitor_hom_inv","line":157,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.right_unitor_hom_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.right_unitor_hom_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">right_unitor_hom_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.right_unitor\">CategoryTheory.FreeBicategory.Hom₂.right_unitor</a> <span class=\"fn\">f</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.right_unitor_inv\">CategoryTheory.FreeBicategory.Hom₂.right_unitor_inv</a> <span class=\"fn\">f</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.id\">CategoryTheory.FreeBicategory.Hom₂.id</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.comp\">CategoryTheory.FreeBicategory.Hom.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.id\">CategoryTheory.FreeBicategory.Hom.id</a> <span class=\"fn\">b</span></span>)</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L156-L156","name":"CategoryTheory.FreeBicategory.Rel.left_unitor_inv_hom","line":156,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.left_unitor_inv_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.left_unitor_inv_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">left_unitor_inv_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.left_unitor_inv\">CategoryTheory.FreeBicategory.Hom₂.left_unitor_inv</a> <span class=\"fn\">f</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.left_unitor\">CategoryTheory.FreeBicategory.Hom₂.left_unitor</a> <span class=\"fn\">f</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.id\">CategoryTheory.FreeBicategory.Hom₂.id</a> <span class=\"fn\">f</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L155-L155","name":"CategoryTheory.FreeBicategory.Rel.left_unitor_hom_inv","line":155,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.left_unitor_hom_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.left_unitor_hom_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">left_unitor_hom_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.left_unitor\">CategoryTheory.FreeBicategory.Hom₂.left_unitor</a> <span class=\"fn\">f</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.left_unitor_inv\">CategoryTheory.FreeBicategory.Hom₂.left_unitor_inv</a> <span class=\"fn\">f</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.id\">CategoryTheory.FreeBicategory.Hom₂.id</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.comp\">CategoryTheory.FreeBicategory.Hom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.id\">CategoryTheory.FreeBicategory.Hom.id</a> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">f</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L153-L154","name":"CategoryTheory.FreeBicategory.Rel.associator_inv_hom","line":153,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.associator_inv_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.associator_inv_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">associator_inv_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator_inv\">CategoryTheory.FreeBicategory.Hom₂.associator_inv</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator\">CategoryTheory.FreeBicategory.Hom₂.associator</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.id\">CategoryTheory.FreeBicategory.Hom₂.id</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.comp\">CategoryTheory.FreeBicategory.Hom.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.comp\">CategoryTheory.FreeBicategory.Hom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L151-L152","name":"CategoryTheory.FreeBicategory.Rel.associator_hom_inv","line":151,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.associator_hom_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.associator_hom_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">associator_hom_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator\">CategoryTheory.FreeBicategory.Hom₂.associator</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator_inv\">CategoryTheory.FreeBicategory.Hom₂.associator_inv</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.id\">CategoryTheory.FreeBicategory.Hom₂.id</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.comp\">CategoryTheory.FreeBicategory.Hom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.comp\">CategoryTheory.FreeBicategory.Hom.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">h</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L149-L150","name":"CategoryTheory.FreeBicategory.Rel.whisker_exchange","line":149,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.whisker_exchange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.whisker_exchange\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">whisker_exchange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(θ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">h</span> <span class=\"fn\">i</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">f</span> <span class=\"fn\">θ</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">i</span> <span class=\"fn\">η</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">h</span> <span class=\"fn\">η</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">g</span> <span class=\"fn\">θ</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L147-L148","name":"CategoryTheory.FreeBicategory.Rel.whisker_assoc","line":147,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.whisker_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.whisker_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">whisker_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g' : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">g</span> <span class=\"fn\">g'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">h</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">f</span> <span class=\"fn\">η</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator\">CategoryTheory.FreeBicategory.Hom₂.associator</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">h</span> <span class=\"fn\">η</span></span>)</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator_inv\">CategoryTheory.FreeBicategory.Hom₂.associator_inv</a> <span class=\"fn\">f</span> <span class=\"fn\">g'</span> <span class=\"fn\">h</span></span>)</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L145-L146","name":"CategoryTheory.FreeBicategory.Rel.whisker_right_comp","line":145,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.whisker_right_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.whisker_right_comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">whisker_right_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f' : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">f'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.comp\">CategoryTheory.FreeBicategory.Hom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">η</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator_inv\">CategoryTheory.FreeBicategory.Hom₂.associator_inv</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">h</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">g</span> <span class=\"fn\">η</span></span>)</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator\">CategoryTheory.FreeBicategory.Hom₂.associator</a> <span class=\"fn\">f'</span> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L144-L144","name":"CategoryTheory.FreeBicategory.Rel.whisker_right_id","line":144,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.whisker_right_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.whisker_right_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">whisker_right_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.id\">CategoryTheory.FreeBicategory.Hom.id</a> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">η</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.right_unitor\">CategoryTheory.FreeBicategory.Hom₂.right_unitor</a> <span class=\"fn\">f</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a> <span class=\"fn\">η</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.right_unitor_inv\">CategoryTheory.FreeBicategory.Hom₂.right_unitor_inv</a> <span class=\"fn\">g</span></span>)</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L142-L143","name":"CategoryTheory.FreeBicategory.Rel.comp_whisker_right","line":142,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.comp_whisker_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.comp_whisker_right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">comp_whisker_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(θ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">i</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a> <span class=\"fn\">η</span> <span class=\"fn\">θ</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">i</span> <span class=\"fn\">η</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">i</span> <span class=\"fn\">θ</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L141-L141","name":"CategoryTheory.FreeBicategory.Rel.id_whisker_right","line":141,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.id_whisker_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.id_whisker_right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">id_whisker_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.id\">CategoryTheory.FreeBicategory.Hom₂.id</a> <span class=\"fn\">f</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.id\">CategoryTheory.FreeBicategory.Hom₂.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.comp\">CategoryTheory.FreeBicategory.Hom.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L139-L140","name":"CategoryTheory.FreeBicategory.Rel.whisker_right","line":139,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.whisker_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.whisker_right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">whisker_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(η' : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a> <span class=\"fn\">η</span> <span class=\"fn\">η'</span></span> →\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">h</span> <span class=\"fn\">η</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">h</span> <span class=\"fn\">η'</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L137-L138","name":"CategoryTheory.FreeBicategory.Rel.comp_whisker_left","line":137,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.comp_whisker_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.comp_whisker_left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">comp_whisker_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h' : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">h</span> <span class=\"fn\">h'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.comp\">CategoryTheory.FreeBicategory.Hom.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">η</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator\">CategoryTheory.FreeBicategory.Hom₂.associator</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">g</span> <span class=\"fn\">η</span></span>)</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator_inv\">CategoryTheory.FreeBicategory.Hom₂.associator_inv</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">h'</span></span>)</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L136-L136","name":"CategoryTheory.FreeBicategory.Rel.id_whisker_left","line":136,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.id_whisker_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.id_whisker_left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">id_whisker_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.id\">CategoryTheory.FreeBicategory.Hom.id</a> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">η</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.left_unitor\">CategoryTheory.FreeBicategory.Hom₂.left_unitor</a> <span class=\"fn\">f</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a> <span class=\"fn\">η</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.left_unitor_inv\">CategoryTheory.FreeBicategory.Hom₂.left_unitor_inv</a> <span class=\"fn\">g</span></span>)</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L134-L135","name":"CategoryTheory.FreeBicategory.Rel.whisker_left_comp","line":134,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.whisker_left_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.whisker_left_comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">whisker_left_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(θ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">h</span> <span class=\"fn\">i</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a> <span class=\"fn\">η</span> <span class=\"fn\">θ</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">f</span> <span class=\"fn\">η</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">f</span> <span class=\"fn\">θ</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L133-L133","name":"CategoryTheory.FreeBicategory.Rel.whisker_left_id","line":133,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.whisker_left_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.whisker_left_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">whisker_left_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.id\">CategoryTheory.FreeBicategory.Hom₂.id</a> <span class=\"fn\">g</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.id\">CategoryTheory.FreeBicategory.Hom₂.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.comp\">CategoryTheory.FreeBicategory.Hom.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L131-L132","name":"CategoryTheory.FreeBicategory.Rel.whisker_left","line":131,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.whisker_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.whisker_left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">whisker_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(η' : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a> <span class=\"fn\">η</span> <span class=\"fn\">η'</span></span> →\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">f</span> <span class=\"fn\">η</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">f</span> <span class=\"fn\">η'</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L129-L130","name":"CategoryTheory.FreeBicategory.Rel.assoc","line":129,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(θ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ι : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">h</span> <span class=\"fn\">i</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a> <span class=\"fn\">η</span> <span class=\"fn\">θ</span></span>)</span> <span class=\"fn\">ι</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a> <span class=\"fn\">η</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a> <span class=\"fn\">θ</span> <span class=\"fn\">ι</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L128-L128","name":"CategoryTheory.FreeBicategory.Rel.comp_id","line":128,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.comp_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.comp_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">comp_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a> <span class=\"fn\">η</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.id\">CategoryTheory.FreeBicategory.Hom₂.id</a> <span class=\"fn\">g</span></span>)</span></span>)</span>\n  <span class=\"fn\">η</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L127-L127","name":"CategoryTheory.FreeBicategory.Rel.id_comp","line":127,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.id_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.id_comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">id_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.id\">CategoryTheory.FreeBicategory.Hom₂.id</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">η</span></span>)</span>\n  <span class=\"fn\">η</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L125-L126","name":"CategoryTheory.FreeBicategory.Rel.vcomp_left","line":125,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.vcomp_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.vcomp_left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">vcomp_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(η₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(θ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a> <span class=\"fn\">η₁</span> <span class=\"fn\">η₂</span></span> →\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a> <span class=\"fn\">η₁</span> <span class=\"fn\">θ</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a> <span class=\"fn\">η₂</span> <span class=\"fn\">θ</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L123-L124","name":"CategoryTheory.FreeBicategory.Rel.vcomp_right","line":123,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.vcomp_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.vcomp_right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">vcomp_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(θ₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(θ₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a> <span class=\"fn\">θ₁</span> <span class=\"fn\">θ₂</span></span> →\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a> <span class=\"fn\">η</span> <span class=\"fn\">θ₁</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\">CategoryTheory.FreeBicategory.Hom₂.vcomp</a> <span class=\"fn\">η</span> <span class=\"fn\">θ₂</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L122-L162","name":"CategoryTheory.FreeBicategory.Rel","line":122,"kind":"inductive","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel","doc":"Relations between 2-morphisms in the free bicategory. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L82-L82","name":"CategoryTheory.FreeBicategory.Hom₂.left_unitor_inv","line":82,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.left_unitor_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.left_unitor_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Hom₂</span>.<span class=\"name\">left_unitor_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">f</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L81-L81","name":"CategoryTheory.FreeBicategory.Hom₂.left_unitor","line":81,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.left_unitor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.left_unitor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Hom₂</span>.<span class=\"name\">left_unitor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L80-L80","name":"CategoryTheory.FreeBicategory.Hom₂.right_unitor_inv","line":80,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.right_unitor_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.right_unitor_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Hom₂</span>.<span class=\"name\">right_unitor_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">b</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L79-L79","name":"CategoryTheory.FreeBicategory.Hom₂.right_unitor","line":79,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.right_unitor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.right_unitor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Hom₂</span>.<span class=\"name\">right_unitor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">b</span></span>)</span></span>)</span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L77-L78","name":"CategoryTheory.FreeBicategory.Hom₂.associator_inv","line":77,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Hom₂</span>.<span class=\"name\">associator_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">h</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L75-L76","name":"CategoryTheory.FreeBicategory.Hom₂.associator","line":75,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Hom₂</span>.<span class=\"name\">associator</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">h</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L74-L74","name":"CategoryTheory.FreeBicategory.Hom₂.whisker_right","line":74,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Hom₂</span>.<span class=\"name\">whisker_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.comp\">CategoryTheory.FreeBicategory.Hom.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">h</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.comp\">CategoryTheory.FreeBicategory.Hom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L72-L73","name":"CategoryTheory.FreeBicategory.Hom₂.whisker_left","line":72,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Hom₂</span>.<span class=\"name\">whisker_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">h</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L71-L71","name":"CategoryTheory.FreeBicategory.Hom₂.vcomp","line":71,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Hom₂</span>.<span class=\"name\">vcomp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(θ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L70-L70","name":"CategoryTheory.FreeBicategory.Hom₂.id","line":70,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Hom₂</span>.<span class=\"name\">id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L69-L82","name":"CategoryTheory.FreeBicategory.Hom₂","line":69,"kind":"inductive","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂","doc":"Representatives of 2-morphisms in the free bicategory. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Hom₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span> → <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span> → <a href=\"./foundational_types.html\">Type</a> (max u v)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L62-L64","name":"CategoryTheory.FreeBicategory.categoryStruct","line":62,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.categoryStruct","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.categoryStruct\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">categoryStruct</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct\">CategoryTheory.CategoryStruct.{max u v, u}</a>         <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L59-L60","name":"CategoryTheory.FreeBicategory.quiver","line":59,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.quiver","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.quiver\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">quiver</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L56-L57","name":"CategoryTheory.FreeBicategory.instInhabitedHom","line":56,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.instInhabitedHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.instInhabitedHom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">instInhabitedHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">B</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L53-L53","name":"CategoryTheory.FreeBicategory.Hom.comp","line":53,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Hom</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L52-L52","name":"CategoryTheory.FreeBicategory.Hom.id","line":52,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Hom</span>.<span class=\"name\">id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L51-L51","name":"CategoryTheory.FreeBicategory.Hom.of","line":51,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.of\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Hom</span>.<span class=\"name\">of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L50-L53","name":"CategoryTheory.FreeBicategory.Hom","line":50,"kind":"inductive","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom","doc":"1-morphisms in the free bicategory. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">B</span> → <span class=\"fn\">B</span> → <a href=\"./foundational_types.html\">Type</a> (max u v)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L39-L41","name":"CategoryTheory.instForAllInhabitedFreeBicategory","line":39,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.instForAllInhabitedFreeBicategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.instForAllInhabitedFreeBicategory\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instForAllInhabitedFreeBicategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Bicategory/Free.lean#L35-L36","name":"CategoryTheory.FreeBicategory","line":35,"kind":"def","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory","doc":"Free bicategory over a quiver. Its objects are the same as those in the underlying quiver. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"}]}