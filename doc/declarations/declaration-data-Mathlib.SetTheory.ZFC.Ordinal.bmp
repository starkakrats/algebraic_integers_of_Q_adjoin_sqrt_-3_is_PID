{"name":"Mathlib.SetTheory.ZFC.Ordinal","instances":[],"imports":["Init","Mathlib.SetTheory.ZFC.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/ZFC/Ordinal.lean#L106-L106","name":"ZFSet.IsTransitive.subset_powerset","line":106,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive.subset_powerset","doc":"**Alias** of the forward direction of `ZFSet.isTransitive_iff_subset_powerset`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive.subset_powerset\"><span class=\"name\">ZFSet</span>.<span class=\"name\">IsTransitive</span>.<span class=\"name\">subset_powerset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive\">ZFSet.IsTransitive</a> <span class=\"fn\">x</span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.powerset\">ZFSet.powerset</a> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/ZFC/Ordinal.lean#L102-L103","name":"ZFSet.isTransitive_iff_subset_powerset","line":102,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.isTransitive_iff_subset_powerset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.isTransitive_iff_subset_powerset\"><span class=\"name\">ZFSet</span>.<span class=\"name\">isTransitive_iff_subset_powerset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive\">ZFSet.IsTransitive</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.powerset\">ZFSet.powerset</a> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/ZFC/Ordinal.lean#L99-L99","name":"ZFSet.IsTransitive.sUnion_subset","line":99,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive.sUnion_subset","doc":"**Alias** of the forward direction of `ZFSet.isTransitive_iff_sUnion_subset`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive.sUnion_subset\"><span class=\"name\">ZFSet</span>.<span class=\"name\">IsTransitive</span>.<span class=\"name\">sUnion_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive\">ZFSet.IsTransitive</a> <span class=\"fn\">x</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.sUnion\">⋃₀</a> <span class=\"fn\">x</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/ZFC/Ordinal.lean#L93-L96","name":"ZFSet.isTransitive_iff_sUnion_subset","line":93,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.isTransitive_iff_sUnion_subset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.isTransitive_iff_sUnion_subset\"><span class=\"name\">ZFSet</span>.<span class=\"name\">isTransitive_iff_sUnion_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive\">ZFSet.IsTransitive</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.sUnion\">⋃₀</a> <span class=\"fn\">x</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/ZFC/Ordinal.lean#L87-L90","name":"ZFSet.IsTransitive.powerset","line":87,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive.powerset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive.powerset\"><span class=\"name\">ZFSet</span>.<span class=\"name\">IsTransitive</span>.<span class=\"name\">powerset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive\">ZFSet.IsTransitive</a> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive\">ZFSet.IsTransitive</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.powerset\">ZFSet.powerset</a> <span class=\"fn\">x</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/ZFC/Ordinal.lean#L77-L84","name":"ZFSet.IsTransitive.union","line":77,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive.union","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive.union\"><span class=\"name\">ZFSet</span>.<span class=\"name\">IsTransitive</span>.<span class=\"name\">union</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive\">ZFSet.IsTransitive</a> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive\">ZFSet.IsTransitive</a> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive\">ZFSet.IsTransitive</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Std/Classes/SetNotation.html#Union.union\">∪</a> <span class=\"fn\">y</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/ZFC/Ordinal.lean#L71-L74","name":"ZFSet.IsTransitive.sUnion'","line":71,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive.sUnion'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive.sUnion'\"><span class=\"name\">ZFSet</span>.<span class=\"name\">IsTransitive</span>.<span class=\"name\">sUnion'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ <span class=\"fn\">y</span> ∈ <span class=\"fn\">x</span>, <span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive\">ZFSet.IsTransitive</a> <span class=\"fn\">y</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive\">ZFSet.IsTransitive</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.sUnion\">⋃₀</a> <span class=\"fn\">x</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/ZFC/Ordinal.lean#L65-L68","name":"ZFSet.IsTransitive.sUnion","line":65,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive.sUnion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive.sUnion\"><span class=\"name\">ZFSet</span>.<span class=\"name\">IsTransitive</span>.<span class=\"name\">sUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive\">ZFSet.IsTransitive</a> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive\">ZFSet.IsTransitive</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.sUnion\">⋃₀</a> <span class=\"fn\">x</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/ZFC/Ordinal.lean#L59-L62","name":"ZFSet.IsTransitive.inter","line":59,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive.inter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive.inter\"><span class=\"name\">ZFSet</span>.<span class=\"name\">IsTransitive</span>.<span class=\"name\">inter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive\">ZFSet.IsTransitive</a> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive\">ZFSet.IsTransitive</a> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive\">ZFSet.IsTransitive</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">y</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/ZFC/Ordinal.lean#L56-L56","name":"ZFSet.IsTransitive.mem_trans","line":56,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive.mem_trans","doc":"**Alias** of the forward direction of `ZFSet.isTransitive_iff_mem_trans`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive.mem_trans\"><span class=\"name\">ZFSet</span>.<span class=\"name\">IsTransitive</span>.<span class=\"name\">mem_trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive\">ZFSet.IsTransitive</a> <span class=\"fn\">z</span></span> → <span class=\"fn\">∀ {<span class=\"fn\">x </span>y : <a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet</a>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">z</span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">z</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/ZFC/Ordinal.lean#L52-L53","name":"ZFSet.isTransitive_iff_mem_trans","line":52,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.isTransitive_iff_mem_trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.isTransitive_iff_mem_trans\"><span class=\"name\">ZFSet</span>.<span class=\"name\">isTransitive_iff_mem_trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive\">ZFSet.IsTransitive</a> <span class=\"fn\">z</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ {<span class=\"fn\">x </span>y : <a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet</a>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">z</span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">z</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/ZFC/Ordinal.lean#L48-L49","name":"ZFSet.IsTransitive.subset_of_mem","line":48,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive.subset_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive.subset_of_mem\"><span class=\"name\">ZFSet</span>.<span class=\"name\">IsTransitive</span>.<span class=\"name\">subset_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive\">ZFSet.IsTransitive</a> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">x</span></span> → <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/ZFC/Ordinal.lean#L45-L45","name":"ZFSet.empty_isTransitive","line":45,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.empty_isTransitive","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.empty_isTransitive\"><span class=\"name\">ZFSet</span>.<span class=\"name\">empty_isTransitive</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive\">ZFSet.IsTransitive</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/ZFC/Ordinal.lean#L40-L41","name":"ZFSet.IsTransitive","line":40,"kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive","doc":"A transitive set is one where every element is a subset. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Ordinal.html#ZFSet.IsTransitive\"><span class=\"name\">ZFSet</span>.<span class=\"name\">IsTransitive</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}