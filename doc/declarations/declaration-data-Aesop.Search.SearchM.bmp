{"name":"Aesop.Search.SearchM","instances":[{"typeNames":["Aesop.NormSimpContext"],"name":"Aesop.instInhabitedNormSimpContext","className":"Inhabited"},{"typeNames":["Aesop.SearchM.Context"],"name":"Aesop.SearchM.instNonemptyContext","className":"Nonempty"},{"typeNames":["Aesop.SearchM.State"],"name":"Aesop.SearchM.instInhabitedState","className":"Inhabited"},{"typeNames":["Aesop.SearchM"],"name":"Aesop.SearchM.instMonadSearchM","className":"Monad"},{"typeNames":["Aesop.SearchM"],"name":"Aesop.SearchM.instMonadRefSearchM","className":"Lean.MonadRef"},{"typeNames":["Aesop.SearchM"],"name":"Aesop.SearchM.instInhabitedSearchM","className":"Inhabited"},{"typeNames":["Aesop.SearchM.State","Aesop.SearchM"],"name":"Aesop.SearchM.instMonadStateStateSearchM","className":"MonadState"},{"typeNames":["Aesop.SearchM.Context","Aesop.SearchM"],"name":"Aesop.SearchM.instMonadReaderContextSearchM","className":"MonadReader"},{"typeNames":["Aesop.TreeM","Aesop.SearchM"],"name":"Aesop.SearchM.instMonadLiftTreeMSearchM","className":"MonadLift"}],"imports":["Init","Aesop.Options","Aesop.Search.Expansion.Simp","Aesop.Search.Queue.Class","Aesop.Profiling","Aesop.RuleSet"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L133-L134","name":"Aesop.wasMaxRuleApplicationDepthReached","line":133,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.wasMaxRuleApplicationDepthReached","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.wasMaxRuleApplicationDepthReached\"><span class=\"name\">Aesop</span>.<span class=\"name\">wasMaxRuleApplicationDepthReached</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L130-L131","name":"Aesop.setMaxRuleApplicationDepthReached","line":130,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.setMaxRuleApplicationDepthReached","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.setMaxRuleApplicationDepthReached\"><span class=\"name\">Aesop</span>.<span class=\"name\">setMaxRuleApplicationDepthReached</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L125-L128","name":"Aesop.enqueueGoals","line":125,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.enqueueGoals","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.enqueueGoals\"><span class=\"name\">Aesop</span>.<span class=\"name\">enqueueGoals</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(gs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Tree/Data.html#Aesop.GoalRef\">Aesop.GoalRef</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L119-L123","name":"Aesop.popGoal?","line":119,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.popGoal?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.popGoal?\"><span class=\"name\">Aesop</span>.<span class=\"name\">popGoal?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/Tree/Data.html#Aesop.GoalRef\">Aesop.GoalRef</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L116-L117","name":"Aesop.incrementIteration","line":116,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.incrementIteration","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.incrementIteration\"><span class=\"name\">Aesop</span>.<span class=\"name\">incrementIteration</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L113-L114","name":"Aesop.getIteration","line":113,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.getIteration","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.getIteration\"><span class=\"name\">Aesop</span>.<span class=\"name\">getIteration</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Aesop/Tree/Data.html#Aesop.Iteration\">Aesop.Iteration</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L110-L111","name":"Aesop.modifyTree","line":110,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.modifyTree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.modifyTree\"><span class=\"name\">Aesop</span>.<span class=\"name\">modifyTree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Aesop/Tree/TreeM.html#Aesop.Tree\">Aesop.Tree</a> → <a href=\"./Aesop/Tree/TreeM.html#Aesop.Tree\">Aesop.Tree</a></span>)</span> → <span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L107-L108","name":"Aesop.setTree","line":107,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.setTree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.setTree\"><span class=\"name\">Aesop</span>.<span class=\"name\">setTree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Tree/TreeM.html#Aesop.Tree\">Aesop.Tree</a> → <span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L104-L105","name":"Aesop.getTree","line":104,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.getTree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.getTree\"><span class=\"name\">Aesop</span>.<span class=\"name\">getTree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Aesop/Tree/TreeM.html#Aesop.Tree\">Aesop.Tree</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L79-L100","name":"Aesop.SearchM.run","line":79,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.run","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.run\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ruleSet : <a href=\"./Aesop/RuleSet.html#Aesop.RuleSet\">Aesop.RuleSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(options : <a href=\"./Aesop/Options/Internal.html#Aesop.Options'\">Aesop.Options'</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(simpConfig : <a href=\"./Init/MetaTypes.html#Lean.Meta.Simp.Config\">Lean.Meta.Simp.Config</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(simpConfigStx? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Lean.Term</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(profile : <a href=\"./Aesop/Profiling.html#Aesop.Profile\">Aesop.Profile</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State\">Aesop.SearchM.State</a> <span class=\"fn\">Q</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Aesop/Tree/TreeM.html#Aesop.Tree\">Aesop.Tree</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Profiling.html#Aesop.Profile\">Aesop.Profile</a></span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L72-L77","name":"Aesop.SearchM.run'","line":72,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.run'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.run'\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">run'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(profile : <a href=\"./Aesop/Profiling.html#Aesop.Profile\">Aesop.Profile</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context\">Aesop.SearchM.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(σ : <span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State\">Aesop.SearchM.State</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <a href=\"./Aesop/Tree/TreeM.html#Aesop.Tree\">Aesop.Tree</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State\">Aesop.SearchM.State</a> <span class=\"fn\">Q</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Aesop/Tree/TreeM.html#Aesop.Tree\">Aesop.Tree</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Profiling.html#Aesop.Profile\">Aesop.Profile</a></span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L67-L70","name":"Aesop.SearchM.instMonadLiftTreeMSearchM","line":67,"kind":"instance","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.instMonadLiftTreeMSearchM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.instMonadLiftTreeMSearchM\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">instMonadLiftTreeMSearchM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <a href=\"./Aesop/Tree/TreeM.html#Aesop.TreeM\">Aesop.TreeM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L64-L65","name":"Aesop.SearchM.instMonadReaderContextSearchM","line":64,"kind":"instance","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.instMonadReaderContextSearchM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.instMonadReaderContextSearchM\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">instMonadReaderContextSearchM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadReader\">MonadReader</a> <a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context\">Aesop.SearchM.Context</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L61-L62","name":"Aesop.SearchM.instMonadStateStateSearchM","line":61,"kind":"instance","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.instMonadStateStateSearchM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.instMonadStateStateSearchM\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">instMonadStateStateSearchM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadState\">MonadState</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State\">Aesop.SearchM.State</a> <span class=\"fn\">Q</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L58-L59","name":"Aesop.SearchM.instInhabitedSearchM","line":58,"kind":"instance","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.instInhabitedSearchM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.instInhabitedSearchM\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">instInhabitedSearchM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L55-L56","name":"Aesop.SearchM.instMonadRefSearchM","line":55,"kind":"instance","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.instMonadRefSearchM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.instMonadRefSearchM\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">instMonadRefSearchM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.MonadRef\">Lean.MonadRef</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L52-L53","name":"Aesop.SearchM.instMonadSearchM","line":52,"kind":"instance","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.instMonadSearchM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.instMonadSearchM\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">instMonadSearchM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L43-L44","name":"Aesop.SearchM","line":43,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Q : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L40-L41","name":"Aesop.SearchBaseM","line":40,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchBaseM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchBaseM\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchBaseM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Q : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L36-L36","name":"Aesop.SearchM.instInhabitedState","line":36,"kind":"instance","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.instInhabitedState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.instInhabitedState\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">instInhabitedState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./foundational_types.html\">Type</a>} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">a</span></span>] → <span class=\"fn\">{<span class=\"fn\">a_1</span> : <span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">a</span></span>} → <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State\">Aesop.SearchM.State</a> <span class=\"fn\">a</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L35-L35","name":"Aesop.SearchM.State.maxRuleApplicationDepthReached","line":35,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.State.maxRuleApplicationDepthReached","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State.maxRuleApplicationDepthReached\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">State</span>.<span class=\"name\">maxRuleApplicationDepthReached</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State\">Aesop.SearchM.State</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L34-L34","name":"Aesop.SearchM.State.queue","line":34,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.State.queue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State.queue\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">State</span>.<span class=\"name\">queue</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State\">Aesop.SearchM.State</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L33-L33","name":"Aesop.SearchM.State.iteration","line":33,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.State.iteration","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State.iteration\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">State</span>.<span class=\"name\">iteration</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State\">Aesop.SearchM.State</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Tree/Data.html#Aesop.Iteration\">Aesop.Iteration</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L32-L32","name":"Aesop.SearchM.State.mk","line":32,"kind":"ctor","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(iteration : <a href=\"./Aesop/Tree/Data.html#Aesop.Iteration\">Aesop.Iteration</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(queue : <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(maxRuleApplicationDepthReached : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State\">Aesop.SearchM.State</a> <span class=\"fn\">Q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L32-L36","name":"Aesop.SearchM.State","line":32,"kind":"structure","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.State","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Q : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L30-L30","name":"Aesop.SearchM.instNonemptyContext","line":30,"kind":"instance","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.instNonemptyContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.instNonemptyContext\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">instNonemptyContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context\">Aesop.SearchM.Context</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L29-L29","name":"Aesop.SearchM.Context.options","line":29,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.Context.options","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context.options\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">Context</span>.<span class=\"name\">options</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context\">Aesop.SearchM.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Options/Internal.html#Aesop.Options'\">Aesop.Options'</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L28-L28","name":"Aesop.SearchM.Context.normSimpContext","line":28,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.Context.normSimpContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context.normSimpContext\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">Context</span>.<span class=\"name\">normSimpContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context\">Aesop.SearchM.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext\">Aesop.NormSimpContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L27-L27","name":"Aesop.SearchM.Context.ruleSet","line":27,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.Context.ruleSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context.ruleSet\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">Context</span>.<span class=\"name\">ruleSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context\">Aesop.SearchM.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleSet.html#Aesop.RuleSet\">Aesop.RuleSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L26-L26","name":"Aesop.SearchM.Context.mk","line":26,"kind":"ctor","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.Context.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ruleSet : <a href=\"./Aesop/RuleSet.html#Aesop.RuleSet\">Aesop.RuleSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(normSimpContext : <a href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext\">Aesop.NormSimpContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(options : <a href=\"./Aesop/Options/Internal.html#Aesop.Options'\">Aesop.Options'</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context\">Aesop.SearchM.Context</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L26-L30","name":"Aesop.SearchM.Context","line":26,"kind":"structure","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.Context","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L22-L22","name":"Aesop.instInhabitedNormSimpContext","line":22,"kind":"instance","docLink":"./Aesop/Search/SearchM.html#Aesop.instInhabitedNormSimpContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.instInhabitedNormSimpContext\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedNormSimpContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext\">Aesop.NormSimpContext</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L21-L21","name":"Aesop.NormSimpContext.configStx?","line":21,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.NormSimpContext.configStx?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext.configStx?\"><span class=\"name\">Aesop</span>.<span class=\"name\">NormSimpContext</span>.<span class=\"name\">configStx?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext\">Aesop.NormSimpContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Lean.Term</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L20-L20","name":"Aesop.NormSimpContext.useHyps","line":20,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.NormSimpContext.useHyps","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext.useHyps\"><span class=\"name\">Aesop</span>.<span class=\"name\">NormSimpContext</span>.<span class=\"name\">useHyps</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext\">Aesop.NormSimpContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L19-L19","name":"Aesop.NormSimpContext.enabled","line":19,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.NormSimpContext.enabled","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext.enabled\"><span class=\"name\">Aesop</span>.<span class=\"name\">NormSimpContext</span>.<span class=\"name\">enabled</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext\">Aesop.NormSimpContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L18-L18","name":"Aesop.NormSimpContext.mk","line":18,"kind":"ctor","docLink":"./Aesop/Search/SearchM.html#Aesop.NormSimpContext.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">NormSimpContext</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toContext : <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Context\">Lean.Meta.Simp.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(enabled : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(useHyps : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(configStx? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Lean.Term</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext\">Aesop.NormSimpContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/SearchM.lean#L18-L22","name":"Aesop.NormSimpContext","line":18,"kind":"structure","docLink":"./Aesop/Search/SearchM.html#Aesop.NormSimpContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext\"><span class=\"name\">Aesop</span>.<span class=\"name\">NormSimpContext</span></a></span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Context\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Simp</span>.<span class=\"name\">Context</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}