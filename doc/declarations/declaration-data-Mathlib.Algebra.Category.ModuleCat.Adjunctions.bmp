{"name":"Mathlib.Algebra.Category.ModuleCat.Adjunctions","instances":[{"typeNames":["CategoryTheory.forget"],"name":"ModuleCat.instIsRightAdjointTypeTypesModuleCatModuleCategoryForgetModuleConcreteCategory","className":"CategoryTheory.IsRightAdjoint"},{"typeNames":["Prefunctor.obj"],"name":"ModuleCat.Free.instLaxMonoidalTypeTypesTypesMonoidalModuleCatToRingModuleCategoryMonoidalCategoryObjToQuiverToCategoryStructToPrefunctorFreeInstFunctorialObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctor","className":"CategoryTheory.LaxMonoidal"},{"typeNames":["CategoryTheory.LaxMonoidal.ε"],"name":"ModuleCat.Free.instIsIsoModuleCatToRingModuleCategoryTensorUnitToMonoidalCategoryStructMonoidalCategoryObjTypeToQuiverToCategoryStructTypesToPrefunctorFreeTypesMonoidalεInstFunctorialObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorInstLaxMonoidalTypeTypesTypesMonoidalModuleCatToRingModuleCategoryMonoidalCategoryObjToQuiverToCategoryStructToPrefunctorFreeInstFunctorialObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctor","className":"CategoryTheory.IsIso"},{"typeNames":["CategoryTheory.Free"],"name":"CategoryTheory.categoryFree","className":"CategoryTheory.Category"},{"typeNames":["CategoryTheory.Free"],"name":"CategoryTheory.Free.instPreadditiveFreeCategoryFree","className":"CategoryTheory.Preadditive"},{"typeNames":["CategoryTheory.Free"],"name":"CategoryTheory.Free.instLinearToSemiringToCommSemiringFreeCategoryFreeInstPreadditiveFreeCategoryFree","className":"CategoryTheory.Linear"},{"typeNames":["CategoryTheory.Free.lift"],"name":"CategoryTheory.Free.lift_additive","className":"CategoryTheory.Functor.Additive"},{"typeNames":["CategoryTheory.Free.lift"],"name":"CategoryTheory.Free.lift_linear","className":"CategoryTheory.Functor.Linear"}],"imports":["Init","Mathlib.Algebra.Category.ModuleCat.Monoidal.Basic","Mathlib.CategoryTheory.Monoidal.Functorial","Mathlib.CategoryTheory.Monoidal.Types.Basic","Mathlib.LinearAlgebra.DirectSum.Finsupp","Mathlib.CategoryTheory.Linear.LinearFunctor"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L423-L425","name":"CategoryTheory.Free.liftUnique","line":423,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.liftUnique","doc":"`Free.lift` is unique amongst `R`-linear functors `Free R C ⥤ D`\nwhich compose with `embedding ℤ C` to give the original functor.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.liftUnique\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Free</span>.<span class=\"name\">liftUnique</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/Basic.html#CategoryTheory.Linear\">CategoryTheory.Linear</a> <span class=\"fn\">R</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free\">CategoryTheory.Free</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>)</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/AdditiveFunctor.html#CategoryTheory.Functor.Additive\">CategoryTheory.Functor.Additive</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/LinearFunctor.html#CategoryTheory.Functor.Linear\">CategoryTheory.Functor.Linear</a> <span class=\"fn\">R</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.embedding\">CategoryTheory.Free.embedding</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>)</span> <span class=\"fn\">L</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">L</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.lift\">CategoryTheory.Free.lift</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L402-L417","name":"CategoryTheory.Free.ext","line":402,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.ext","doc":"Two `R`-linear functors out of the `R`-linear completion are isomorphic iff their\ncompositions with the embedding functor are isomorphic.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.ext\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Free</span>.<span class=\"name\">ext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/Basic.html#CategoryTheory.Linear\">CategoryTheory.Linear</a> <span class=\"fn\">R</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free\">CategoryTheory.Free</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>)</span> <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free\">CategoryTheory.Free</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>)</span> <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/AdditiveFunctor.html#CategoryTheory.Functor.Additive\">CategoryTheory.Functor.Additive</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/LinearFunctor.html#CategoryTheory.Functor.Linear\">CategoryTheory.Functor.Linear</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/AdditiveFunctor.html#CategoryTheory.Functor.Additive\">CategoryTheory.Functor.Additive</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/LinearFunctor.html#CategoryTheory.Functor.Linear\">CategoryTheory.Functor.Linear</a> <span class=\"fn\">R</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.embedding\">CategoryTheory.Free.embedding</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>)</span> <span class=\"fn\">F</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.embedding\">CategoryTheory.Free.embedding</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>)</span> <span class=\"fn\">G</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L394-L395","name":"CategoryTheory.Free.embeddingLiftIso","line":394,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.embeddingLiftIso","doc":"The embedding into the `R`-linear completion, followed by the lift,\nis isomorphic to the original functor.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.embeddingLiftIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Free</span>.<span class=\"name\">embeddingLiftIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/Basic.html#CategoryTheory.Linear\">CategoryTheory.Linear</a> <span class=\"fn\">R</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.embedding\">CategoryTheory.Free.embedding</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.lift\">CategoryTheory.Free.lift</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L385-L388","name":"CategoryTheory.Free.lift_linear","line":385,"kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.lift_linear","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.lift_linear\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Free</span>.<span class=\"name\">lift_linear</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/Basic.html#CategoryTheory.Linear\">CategoryTheory.Linear</a> <span class=\"fn\">R</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/LinearFunctor.html#CategoryTheory.Functor.Linear\">CategoryTheory.Functor.Linear</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.lift\">CategoryTheory.Free.lift</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L379-L382","name":"CategoryTheory.Free.lift_additive","line":379,"kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.lift_additive","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.lift_additive\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Free</span>.<span class=\"name\">lift_additive</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/Basic.html#CategoryTheory.Linear\">CategoryTheory.Linear</a> <span class=\"fn\">R</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/AdditiveFunctor.html#CategoryTheory.Functor.Additive\">CategoryTheory.Functor.Additive</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.lift\">CategoryTheory.Free.lift</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L375-L376","name":"CategoryTheory.Free.lift_map_single","line":375,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.lift_map_single","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.lift_map_single\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Free</span>.<span class=\"name\">lift_map_single</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/Basic.html#CategoryTheory.Linear\">CategoryTheory.Linear</a> <span class=\"fn\">R</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.lift\">CategoryTheory.Free.lift</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span></span>)</span>.map <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp.single\">Finsupp.single</a> <span class=\"fn\">f</span> <span class=\"fn\">r</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">F</span>.map <span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L338-L372","name":"CategoryTheory.Free.lift","line":338,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.lift","doc":"A functor to an `R`-linear category lifts to a functor from its `R`-linear completion.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.lift\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Free</span>.<span class=\"name\">lift</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/Basic.html#CategoryTheory.Linear\">CategoryTheory.Linear</a> <span class=\"fn\">R</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free\">CategoryTheory.Free</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>)</span> <span class=\"fn\">D</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L337-L337","name":"CategoryTheory.Free.lift_obj","line":337,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.lift_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.lift_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Free</span>.<span class=\"name\">lift_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/Basic.html#CategoryTheory.Linear\">CategoryTheory.Linear</a> <span class=\"fn\">R</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free\">CategoryTheory.Free</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.lift\">CategoryTheory.Free.lift</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span></span>)</span>.obj <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L337-L337","name":"CategoryTheory.Free.lift_map","line":337,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.lift_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.lift_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Free</span>.<span class=\"name\">lift_map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/Basic.html#CategoryTheory.Linear\">CategoryTheory.Linear</a> <span class=\"fn\">R</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free\">CategoryTheory.Free</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free\">CategoryTheory.Free</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.lift\">CategoryTheory.Free.lift</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span></span>)</span>.map <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Finsupp.html#Finsupp.sum\">Finsupp.sum</a> <span class=\"fn\">f</span> <span class=\"fn\">fun (<span class=\"fn\">f'</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">r</span> : <span class=\"fn\">R</span>) =&gt; <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">F</span>.map <span class=\"fn\">f'</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L321-L328","name":"CategoryTheory.Free.embedding","line":321,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.embedding","doc":"A category embeds into its `R`-linear completion.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.embedding\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Free</span>.<span class=\"name\">embedding</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free\">CategoryTheory.Free</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L320-L320","name":"CategoryTheory.Free.embedding_map","line":320,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.embedding_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.embedding_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Free</span>.<span class=\"name\">embedding_map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.embedding\">CategoryTheory.Free.embedding</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>)</span>.map <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp.single\">Finsupp.single</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L320-L320","name":"CategoryTheory.Free.embedding_obj","line":320,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.embedding_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.embedding_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Free</span>.<span class=\"name\">embedding_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.embedding\">CategoryTheory.Free.embedding</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>)</span>.obj <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L309-L311","name":"CategoryTheory.Free.single_comp_single","line":309,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.single_comp_single","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.single_comp_single\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Free</span>.<span class=\"name\">single_comp_single</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp.single\">Finsupp.single</a> <span class=\"fn\">f</span> <span class=\"fn\">r</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp.single\">Finsupp.single</a> <span class=\"fn\">g</span> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp.single\">Finsupp.single</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">s</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L298-L307","name":"CategoryTheory.Free.instLinearToSemiringToCommSemiringFreeCategoryFreeInstPreadditiveFreeCategoryFree","line":298,"kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.instLinearToSemiringToCommSemiringFreeCategoryFreeInstPreadditiveFreeCategoryFree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.instLinearToSemiringToCommSemiringFreeCategoryFreeInstPreadditiveFreeCategoryFree\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Free</span>.<span class=\"name\">instLinearToSemiringToCommSemiringFreeCategoryFreeInstPreadditiveFreeCategoryFree</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/Basic.html#CategoryTheory.Linear\">CategoryTheory.Linear</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free\">CategoryTheory.Free</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L287-L296","name":"CategoryTheory.Free.instPreadditiveFreeCategoryFree","line":287,"kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.instPreadditiveFreeCategoryFree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.instPreadditiveFreeCategoryFree\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Free</span>.<span class=\"name\">instPreadditiveFreeCategoryFree</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free\">CategoryTheory.Free</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L267-L277","name":"CategoryTheory.categoryFree","line":267,"kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.categoryFree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.categoryFree\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">categoryFree</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{max v u_1, u}</a>           <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free\">CategoryTheory.Free</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L256-L257","name":"CategoryTheory.Free.of","line":256,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.of","doc":"Consider an object of `C` as an object of the `R`-linear completion.\n\nIt may be preferable to use `(Free.embedding R C).obj X` instead;\nthis functor can also be used to lift morphisms.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free.of\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Free</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free\">CategoryTheory.Free</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L247-L248","name":"CategoryTheory.Free","line":247,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free","doc":"`Free R C` is a type synonym for `C`, which, given `[CommRing R]` and `[Category C]`,\nwe will equip with a category structure where the morphisms are formal `R`-linear combinations\nof the morphisms in `C`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#CategoryTheory.Free\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Free</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> u</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L225-L229","name":"ModuleCat.monoidalFree","line":225,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.monoidalFree","doc":"The free functor `Type u ⥤ ModuleCat R`, as a monoidal functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.monoidalFree\"><span class=\"name\">ModuleCat</span>.<span class=\"name\">monoidalFree</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.MonoidalFunctor\">CategoryTheory.MonoidalFunctor</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L199-L216","name":"ModuleCat.Free.instIsIsoModuleCatToRingModuleCategoryTensorUnitToMonoidalCategoryStructMonoidalCategoryObjTypeToQuiverToCategoryStructTypesToPrefunctorFreeTypesMonoidalεInstFunctorialObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorInstLaxMonoidalTypeTypesTypesMonoidalModuleCatToRingModuleCategoryMonoidalCategoryObjToQuiverToCategoryStructToPrefunctorFreeInstFunctorialObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctor","line":199,"kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.instIsIsoModuleCatToRingModuleCategoryTensorUnitToMonoidalCategoryStructMonoidalCategoryObjTypeToQuiverToCategoryStructTypesToPrefunctorFreeTypesMonoidalεInstFunctorialObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorInstLaxMonoidalTypeTypesTypesMonoidalModuleCatToRingModuleCategoryMonoidalCategoryObjToQuiverToCategoryStructToPrefunctorFreeInstFunctorialObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.instIsIsoModuleCatToRingModuleCategoryTensorUnitToMonoidalCategoryStructMonoidalCategoryObjTypeToQuiverToCategoryStructTypesToPrefunctorFreeTypesMonoidalεInstFunctorialObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorInstLaxMonoidalTypeTypesTypesMonoidalModuleCatToRingModuleCategoryMonoidalCategoryObjToQuiverToCategoryStructToPrefunctorFreeInstFunctorialObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctor\"><span class=\"name\">ModuleCat</span>.<span class=\"name\">Free</span>.<span class=\"name\">instIsIsoModuleCatToRingModuleCategoryTensorUnitToMonoidalCategoryStructMonoidalCategoryObjTypeToQuiverToCategoryStructTypesToPrefunctorFreeTypesMonoidalεInstFunctorialObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorInstLaxMonoidalTypeTypesTypesMonoidalModuleCatToRingModuleCategoryMonoidalCategoryObjToQuiverToCategoryStructToPrefunctorFreeInstFunctorialObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">CategoryTheory.IsIso</a> <span class=\"fn\">CategoryTheory.LaxMonoidal.ε</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L189-L197","name":"ModuleCat.Free.instLaxMonoidalTypeTypesTypesMonoidalModuleCatToRingModuleCategoryMonoidalCategoryObjToQuiverToCategoryStructToPrefunctorFreeInstFunctorialObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctor","line":189,"kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.instLaxMonoidalTypeTypesTypesMonoidalModuleCatToRingModuleCategoryMonoidalCategoryObjToQuiverToCategoryStructToPrefunctorFreeInstFunctorialObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctor","doc":"The free R-module functor is lax monoidal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.instLaxMonoidalTypeTypesTypesMonoidalModuleCatToRingModuleCategoryMonoidalCategoryObjToQuiverToCategoryStructToPrefunctorFreeInstFunctorialObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctor\"><span class=\"name\">ModuleCat</span>.<span class=\"name\">Free</span>.<span class=\"name\">instLaxMonoidalTypeTypesTypesMonoidalModuleCatToRingModuleCategoryMonoidalCategoryObjToQuiverToCategoryStructToPrefunctorFreeInstFunctorialObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Functorial.html#CategoryTheory.LaxMonoidal\">CategoryTheory.LaxMonoidal</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.free\">ModuleCat.free</a> <span class=\"fn\">R</span></span>)</span>.toPrefunctor</span>.obj</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L188-L188","name":"ModuleCat.Free.instLaxMonoidalTypeTypesTypesMonoidalModuleCatToRingModuleCategoryMonoidalCategoryObjToQuiverToCategoryStructToPrefunctorFreeInstFunctorialObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctor_μ","line":188,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.instLaxMonoidalTypeTypesTypesMonoidalModuleCatToRingModuleCategoryMonoidalCategoryObjToQuiverToCategoryStructToPrefunctorFreeInstFunctorialObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctor_μ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.instLaxMonoidalTypeTypesTypesMonoidalModuleCatToRingModuleCategoryMonoidalCategoryObjToQuiverToCategoryStructToPrefunctorFreeInstFunctorialObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctor_μ\"><span class=\"name\">ModuleCat</span>.<span class=\"name\">Free</span>.<span class=\"name\">instLaxMonoidalTypeTypesTypesMonoidalModuleCatToRingModuleCategoryMonoidalCategoryObjToQuiverToCategoryStructToPrefunctorFreeInstFunctorialObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctor_μ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Functorial.html#CategoryTheory.LaxMonoidal.μ\">CategoryTheory.LaxMonoidal.μ</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.μ\">ModuleCat.Free.μ</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span>.hom</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L188-L188","name":"ModuleCat.Free.instLaxMonoidalTypeTypesTypesMonoidalModuleCatToRingModuleCategoryMonoidalCategoryObjToQuiverToCategoryStructToPrefunctorFreeInstFunctorialObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctor_ε","line":188,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.instLaxMonoidalTypeTypesTypesMonoidalModuleCatToRingModuleCategoryMonoidalCategoryObjToQuiverToCategoryStructToPrefunctorFreeInstFunctorialObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctor_ε","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.instLaxMonoidalTypeTypesTypesMonoidalModuleCatToRingModuleCategoryMonoidalCategoryObjToQuiverToCategoryStructToPrefunctorFreeInstFunctorialObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctor_ε\"><span class=\"name\">ModuleCat</span>.<span class=\"name\">Free</span>.<span class=\"name\">instLaxMonoidalTypeTypesTypesMonoidalModuleCatToRingModuleCategoryMonoidalCategoryObjToQuiverToCategoryStructToPrefunctorFreeInstFunctorialObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctor_ε</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.LaxMonoidal.ε</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.ε\">ModuleCat.Free.ε</a> <span class=\"fn\">R</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L155-L183","name":"ModuleCat.Free.associativity","line":155,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.associativity","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.associativity\"><span class=\"name\">ModuleCat</span>.<span class=\"name\">Free</span>.<span class=\"name\">associativity</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Z : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorHom\">CategoryTheory.MonoidalCategory.tensorHom</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.μ\">ModuleCat.Free.μ</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span>.hom</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.free\">ModuleCat.free</a> <span class=\"fn\">R</span></span>)</span>.obj <span class=\"fn\">Z</span></span>)</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.μ\">ModuleCat.Free.μ</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategory.tensorObj</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">Z</span></span>)</span>.hom</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Functorial.html#CategoryTheory.map\">CategoryTheory.map</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.free\">ModuleCat.free</a> <span class=\"fn\">R</span></span>)</span>.toPrefunctor</span>.obj</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.associator\">CategoryTheory.MonoidalCategory.associator</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span> <span class=\"fn\">Z</span></span>)</span>.hom</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.associator\">CategoryTheory.MonoidalCategory.associator</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.free\">ModuleCat.free</a> <span class=\"fn\">R</span></span>)</span>.obj <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.free\">ModuleCat.free</a> <span class=\"fn\">R</span></span>)</span>.obj <span class=\"fn\">Y</span></span>)</span>\n        <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.free\">ModuleCat.free</a> <span class=\"fn\">R</span></span>)</span>.obj <span class=\"fn\">Z</span></span>)</span></span>)</span>.hom</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorHom\">CategoryTheory.MonoidalCategory.tensorHom</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.free\">ModuleCat.free</a> <span class=\"fn\">R</span></span>)</span>.obj <span class=\"fn\">X</span></span>)</span></span>)</span>\n        <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.μ\">ModuleCat.Free.μ</a> <span class=\"fn\">R</span> <span class=\"fn\">Y</span> <span class=\"fn\">Z</span></span>)</span>.hom</span></span>)</span>\n      <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.μ\">ModuleCat.Free.μ</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategory.tensorObj</a> <span class=\"fn\">Y</span> <span class=\"fn\">Z</span></span>)</span></span>)</span>.hom</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L134-L152","name":"ModuleCat.Free.right_unitality","line":134,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.right_unitality","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.right_unitality\"><span class=\"name\">ModuleCat</span>.<span class=\"name\">Free</span>.<span class=\"name\">right_unitality</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.rightUnitor\">CategoryTheory.MonoidalCategory.rightUnitor</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.free\">ModuleCat.free</a> <span class=\"fn\">R</span></span>)</span>.obj <span class=\"fn\">X</span></span>)</span></span>)</span>.hom</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorHom\">CategoryTheory.MonoidalCategory.tensorHom</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.free\">ModuleCat.free</a> <span class=\"fn\">R</span></span>)</span>.obj <span class=\"fn\">X</span></span>)</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.ε\">ModuleCat.Free.ε</a> <span class=\"fn\">R</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.μ\">ModuleCat.Free.μ</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span> <span class=\"fn\">(<span class=\"fn\">𝟙_ <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a></span>)</span></span>)</span>.hom</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Functorial.html#CategoryTheory.map\">CategoryTheory.map</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.free\">ModuleCat.free</a> <span class=\"fn\">R</span></span>)</span>.toPrefunctor</span>.obj</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.rightUnitor\">CategoryTheory.MonoidalCategory.rightUnitor</a> <span class=\"fn\">X</span></span>)</span>.hom</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L113-L131","name":"ModuleCat.Free.left_unitality","line":113,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.left_unitality","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.left_unitality\"><span class=\"name\">ModuleCat</span>.<span class=\"name\">Free</span>.<span class=\"name\">left_unitality</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.leftUnitor\">CategoryTheory.MonoidalCategory.leftUnitor</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.free\">ModuleCat.free</a> <span class=\"fn\">R</span></span>)</span>.obj <span class=\"fn\">X</span></span>)</span></span>)</span>.hom</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorHom\">CategoryTheory.MonoidalCategory.tensorHom</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.ε\">ModuleCat.Free.ε</a> <span class=\"fn\">R</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.free\">ModuleCat.free</a> <span class=\"fn\">R</span></span>)</span>.obj <span class=\"fn\">X</span></span>)</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.μ\">ModuleCat.Free.μ</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">𝟙_ <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a></span>)</span> <span class=\"fn\">X</span></span>)</span>.hom</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Functorial.html#CategoryTheory.map\">CategoryTheory.map</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.free\">ModuleCat.free</a> <span class=\"fn\">R</span></span>)</span>.toPrefunctor</span>.obj</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.leftUnitor\">CategoryTheory.MonoidalCategory.leftUnitor</a> <span class=\"fn\">X</span></span>)</span>.hom</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L89-L110","name":"ModuleCat.Free.μ_natural","line":89,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.μ_natural","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.μ_natural\"><span class=\"name\">ModuleCat</span>.<span class=\"name\">Free</span>.<span class=\"name\">μ_natural</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X' : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y' : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">X'</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorHom\">CategoryTheory.MonoidalCategory.tensorHom</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.free\">ModuleCat.free</a> <span class=\"fn\">R</span></span>)</span>.map <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.free\">ModuleCat.free</a> <span class=\"fn\">R</span></span>)</span>.map <span class=\"fn\">g</span></span>)</span></span>)</span>\n    <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.μ\">ModuleCat.Free.μ</a> <span class=\"fn\">R</span> <span class=\"fn\">Y</span> <span class=\"fn\">Y'</span></span>)</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.μ\">ModuleCat.Free.μ</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span> <span class=\"fn\">X'</span></span>)</span>.hom</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.free\">ModuleCat.free</a> <span class=\"fn\">R</span></span>)</span>.map <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorHom\">CategoryTheory.MonoidalCategory.tensorHom</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L85-L86","name":"ModuleCat.Free.μ","line":85,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.μ","doc":"(Implementation detail) The tensorator for `Free R`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.μ\"><span class=\"name\">ModuleCat</span>.<span class=\"name\">Free</span>.<span class=\"name\">μ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(β : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategory.tensorObj</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.free\">ModuleCat.free</a> <span class=\"fn\">R</span></span>)</span>.obj <span class=\"fn\">α</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.free\">ModuleCat.free</a> <span class=\"fn\">R</span></span>)</span>.obj <span class=\"fn\">β</span></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.free\">ModuleCat.free</a> <span class=\"fn\">R</span></span>)</span>.obj <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategory.tensorObj</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L80-L81","name":"ModuleCat.Free.ε_apply","line":80,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.ε_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.ε_apply\"><span class=\"name\">ModuleCat</span>.<span class=\"name\">Free</span>.<span class=\"name\">ε_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.ε\">ModuleCat.Free.ε</a> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp.single\">Finsupp.single</a> <a href=\"./Init/Prelude.html#PUnit.unit\">PUnit.unit</a> <span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L74-L75","name":"ModuleCat.Free.ε","line":74,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.ε","doc":"(Implementation detail) The unitor for `Free R`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.Free.ε\"><span class=\"name\">ModuleCat</span>.<span class=\"name\">Free</span>.<span class=\"name\">ε</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">𝟙_ <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">R</span></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.free\">ModuleCat.free</a> <span class=\"fn\">R</span></span>)</span>.obj <span class=\"fn\">(<span class=\"fn\">𝟙_ <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L60-L61","name":"ModuleCat.instIsRightAdjointTypeTypesModuleCatModuleCategoryForgetModuleConcreteCategory","line":60,"kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.instIsRightAdjointTypeTypesModuleCatModuleCategoryForgetModuleConcreteCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.instIsRightAdjointTypeTypesModuleCatModuleCategoryForgetModuleConcreteCategory\"><span class=\"name\">ModuleCat</span>.<span class=\"name\">instIsRightAdjointTypeTypesModuleCatModuleCategoryForgetModuleConcreteCategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.IsRightAdjoint\">CategoryTheory.IsRightAdjoint</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">R</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L51-L57","name":"ModuleCat.adj","line":51,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.adj","doc":"The free-forgetful adjunction for R-modules.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.adj\"><span class=\"name\">ModuleCat</span>.<span class=\"name\">adj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.free\">ModuleCat.free</a> <span class=\"fn\">R</span></span> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">R</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L42-L46","name":"ModuleCat.free","line":42,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.free","doc":"The free functor `Type u ⥤ ModuleCat R` sending a type `X` to the\nfree `R`-module with generators `x : X`, implemented as the type `X →₀ R`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.free\"><span class=\"name\">ModuleCat</span>.<span class=\"name\">free</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L41-L41","name":"ModuleCat.free_obj","line":41,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.free_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.free_obj\"><span class=\"name\">ModuleCat</span>.<span class=\"name\">free_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.free\">ModuleCat.free</a> <span class=\"fn\">R</span></span>)</span>.obj <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.of\">ModuleCat.of</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <span class=\"fn\">R</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean#L41-L41","name":"ModuleCat.free_map","line":41,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.free_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.free_map\"><span class=\"name\">ModuleCat</span>.<span class=\"name\">free_map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Adjunctions.html#ModuleCat.free\">ModuleCat.free</a> <span class=\"fn\">R</span></span>)</span>.map <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Finsupp.html#Finsupp.lmapDomain\">Finsupp.lmapDomain</a> <span class=\"fn\">R</span> <span class=\"fn\">R</span> <span class=\"fn\">f</span></span></span></div></div>"}]}