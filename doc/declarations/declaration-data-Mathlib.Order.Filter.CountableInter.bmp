{"name":"Mathlib.Order.Filter.CountableInter","instances":[{"typeNames":["Filter.ofCountableInter"],"name":"Filter.countableInter_ofCountableInter","className":"CountableInterFilter"},{"typeNames":["Filter.ofCountableUnion"],"name":"Filter.countableInter_ofCountableUnion","className":"CountableInterFilter"},{"typeNames":["Filter.principal"],"name":"countableInterFilter_principal","className":"CountableInterFilter"},{"typeNames":["Bot.bot"],"name":"countableInterFilter_bot","className":"CountableInterFilter"},{"typeNames":["Top.top"],"name":"countableInterFilter_top","className":"CountableInterFilter"},{"typeNames":["Filter.comap"],"name":"instCountableInterFilterComap","className":"CountableInterFilter"},{"typeNames":["Filter.map"],"name":"instCountableInterFilterMap","className":"CountableInterFilter"},{"typeNames":["Inf.inf"],"name":"countableInterFilter_inf","className":"CountableInterFilter"},{"typeNames":["Sup.sup"],"name":"countableInterFilter_sup","className":"CountableInterFilter"},{"typeNames":["Filter.countableGenerate"],"name":"Filter.instCountableInterFilterCountableGenerate","className":"CountableInterFilter"}],"imports":["Init","Mathlib.Order.Filter.Basic","Mathlib.Data.Set.Countable"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L288-L292","name":"Filter.countableGenerate_isGreatest","line":288,"kind":"theorem","docLink":"./Mathlib/Order/Filter/CountableInter.html#Filter.countableGenerate_isGreatest","doc":"`countableGenerate g` is the greatest `countableInterFilter` containing `g`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#Filter.countableGenerate_isGreatest\"><span class=\"name\">Filter</span>.<span class=\"name\">countableGenerate_isGreatest</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Basic.html#IsGreatest\">IsGreatest</a> <span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">α</span></span> | <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\">CountableInterFilter</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">f</span>.sets</span></span></span>}</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#Filter.countableGenerate\">Filter.countableGenerate</a> <span class=\"fn\">g</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L273-L282","name":"Filter.le_countableGenerate_iff_of_countableInterFilter","line":273,"kind":"theorem","docLink":"./Mathlib/Order/Filter/CountableInter.html#Filter.le_countableGenerate_iff_of_countableInterFilter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#Filter.le_countableGenerate_iff_of_countableInterFilter\"><span class=\"name\">Filter</span>.<span class=\"name\">le_countableGenerate_iff_of_countableInterFilter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\">CountableInterFilter</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#Filter.countableGenerate\">Filter.countableGenerate</a> <span class=\"fn\">g</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">f</span>.sets</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L254-L270","name":"Filter.mem_countableGenerate_iff","line":254,"kind":"theorem","docLink":"./Mathlib/Order/Filter/CountableInter.html#Filter.mem_countableGenerate_iff","doc":"A set is in the `countableInterFilter` generated by `g` if and only if\nit contains a countable intersection of elements of `g`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#Filter.mem_countableGenerate_iff\"><span class=\"name\">Filter</span>.<span class=\"name\">mem_countableGenerate_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#Filter.countableGenerate\">Filter.countableGenerate</a> <span class=\"fn\">g</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ S ⊆ <span class=\"fn\">g</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Countable.html#Set.Countable\">Set.Countable</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Lattice.html#Set.sInter\">⋂₀</a> <span class=\"fn\">S</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">s</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L247-L248","name":"Filter.instCountableInterFilterCountableGenerate","line":247,"kind":"instance","docLink":"./Mathlib/Order/Filter/CountableInter.html#Filter.instCountableInterFilterCountableGenerate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#Filter.instCountableInterFilterCountableGenerate\"><span class=\"name\">Filter</span>.<span class=\"name\">instCountableInterFilterCountableGenerate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\">CountableInterFilter</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#Filter.countableGenerate\">Filter.countableGenerate</a> <span class=\"fn\">g</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L240-L242","name":"Filter.countableGenerate","line":240,"kind":"def","docLink":"./Mathlib/Order/Filter/CountableInter.html#Filter.countableGenerate","doc":"`Filter.countableGenerate g` is the greatest `countableInterFilter` containing `g`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#Filter.countableGenerate\"><span class=\"name\">Filter</span>.<span class=\"name\">countableGenerate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L235-L236","name":"Filter.CountableGenerateSets.sInter","line":235,"kind":"ctor","docLink":"./Mathlib/Order/Filter/CountableInter.html#Filter.CountableGenerateSets.sInter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#Filter.CountableGenerateSets.sInter\"><span class=\"name\">Filter</span>.<span class=\"name\">CountableGenerateSets</span>.<span class=\"name\">sInter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Countable.html#Set.Countable\">Set.Countable</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">s</span> ∈ <span class=\"fn\">S</span>, <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#Filter.CountableGenerateSets\">Filter.CountableGenerateSets</a> <span class=\"fn\">g</span> <span class=\"fn\">s</span></span></span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#Filter.CountableGenerateSets\">Filter.CountableGenerateSets</a> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Lattice.html#Set.sInter\">⋂₀</a> <span class=\"fn\">S</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L234-L234","name":"Filter.CountableGenerateSets.superset","line":234,"kind":"ctor","docLink":"./Mathlib/Order/Filter/CountableInter.html#Filter.CountableGenerateSets.superset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#Filter.CountableGenerateSets.superset\"><span class=\"name\">Filter</span>.<span class=\"name\">CountableGenerateSets</span>.<span class=\"name\">superset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#Filter.CountableGenerateSets\">Filter.CountableGenerateSets</a> <span class=\"fn\">g</span> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">t</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#Filter.CountableGenerateSets\">Filter.CountableGenerateSets</a> <span class=\"fn\">g</span> <span class=\"fn\">t</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L233-L233","name":"Filter.CountableGenerateSets.univ","line":233,"kind":"ctor","docLink":"./Mathlib/Order/Filter/CountableInter.html#Filter.CountableGenerateSets.univ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#Filter.CountableGenerateSets.univ\"><span class=\"name\">Filter</span>.<span class=\"name\">CountableGenerateSets</span>.<span class=\"name\">univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#Filter.CountableGenerateSets\">Filter.CountableGenerateSets</a> <span class=\"fn\">g</span> <span class=\"fn\">Set.univ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L232-L232","name":"Filter.CountableGenerateSets.basic","line":232,"kind":"ctor","docLink":"./Mathlib/Order/Filter/CountableInter.html#Filter.CountableGenerateSets.basic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#Filter.CountableGenerateSets.basic\"><span class=\"name\">Filter</span>.<span class=\"name\">CountableGenerateSets</span>.<span class=\"name\">basic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">g</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#Filter.CountableGenerateSets\">Filter.CountableGenerateSets</a> <span class=\"fn\">g</span> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L231-L236","name":"Filter.CountableGenerateSets","line":231,"kind":"inductive","docLink":"./Mathlib/Order/Filter/CountableInter.html#Filter.CountableGenerateSets","doc":"`Filter.CountableGenerateSets g` is the (sets of the)\ngreatest `countableInterFilter` containing `g`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#Filter.CountableGenerateSets\"><span class=\"name\">Filter</span>.<span class=\"name\">CountableGenerateSets</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L219-L222","name":"countableInterFilter_sup","line":219,"kind":"instance","docLink":"./Mathlib/Order/Filter/CountableInter.html#countableInterFilter_sup","doc":"Supremum of two `CountableInterFilter`s is a `CountableInterFilter`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#countableInterFilter_sup\"><span class=\"name\">countableInterFilter_sup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(l₁ : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(l₂ : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\">CountableInterFilter</a> <span class=\"fn\">l₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\">CountableInterFilter</a> <span class=\"fn\">l₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\">CountableInterFilter</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">l₁</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">l₂</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L207-L215","name":"countableInterFilter_inf","line":207,"kind":"instance","docLink":"./Mathlib/Order/Filter/CountableInter.html#countableInterFilter_inf","doc":"Infimum of two `CountableInterFilter`s is a `CountableInterFilter`. This is useful, e.g.,\nto automatically get an instance for `residual α ⊓ 𝓟 s`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#countableInterFilter_inf\"><span class=\"name\">countableInterFilter_inf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(l₁ : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(l₂ : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\">CountableInterFilter</a> <span class=\"fn\">l₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\">CountableInterFilter</a> <span class=\"fn\">l₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\">CountableInterFilter</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">l₁</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">l₂</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L200-L203","name":"instCountableInterFilterMap","line":200,"kind":"instance","docLink":"./Mathlib/Order/Filter/CountableInter.html#instCountableInterFilterMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#instCountableInterFilterMap\"><span class=\"name\">instCountableInterFilterMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\">CountableInterFilter</a> <span class=\"fn\">l</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\">CountableInterFilter</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.map\">Filter.map</a> <span class=\"fn\">f</span> <span class=\"fn\">l</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L192-L198","name":"instCountableInterFilterComap","line":192,"kind":"instance","docLink":"./Mathlib/Order/Filter/CountableInter.html#instCountableInterFilterComap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#instCountableInterFilterComap\"><span class=\"name\">instCountableInterFilterComap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\">CountableInterFilter</a> <span class=\"fn\">l</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\">CountableInterFilter</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.comap\">Filter.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">l</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L187-L189","name":"countableInterFilter_top","line":187,"kind":"instance","docLink":"./Mathlib/Order/Filter/CountableInter.html#countableInterFilter_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#countableInterFilter_top\"><span class=\"name\">countableInterFilter_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\">CountableInterFilter</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L182-L184","name":"countableInterFilter_bot","line":182,"kind":"instance","docLink":"./Mathlib/Order/Filter/CountableInter.html#countableInterFilter_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#countableInterFilter_bot\"><span class=\"name\">countableInterFilter_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\">CountableInterFilter</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L178-L179","name":"countableInterFilter_principal","line":178,"kind":"instance","docLink":"./Mathlib/Order/Filter/CountableInter.html#countableInterFilter_principal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#countableInterFilter_principal\"><span class=\"name\">countableInterFilter_principal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\">CountableInterFilter</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.principal\">Filter.principal</a> <span class=\"fn\">s</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L174-L176","name":"Filter.mem_ofCountableUnion","line":174,"kind":"theorem","docLink":"./Mathlib/Order/Filter/CountableInter.html#Filter.mem_ofCountableUnion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#Filter.mem_ofCountableUnion\"><span class=\"name\">Filter</span>.<span class=\"name\">mem_ofCountableUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hunion : <span class=\"fn\">∀ (<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Countable.html#Set.Countable\">Set.Countable</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">s</span> ∈ <span class=\"fn\">S</span>, <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">s</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Lattice.html#Set.sUnion\">⋃₀</a> <span class=\"fn\">S</span></span>)</span></span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hmono : <span class=\"fn\">∀ (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">t</span></span> → <span class=\"fn\">∀ <span class=\"fn\">s</span> ⊆ <span class=\"fn\">t</span>, <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">s</span></span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#Filter.ofCountableUnion\">Filter.ofCountableUnion</a> <span class=\"fn\">p</span> <span class=\"fn\">hunion</span> <span class=\"fn\">hmono</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\"><span class=\"fn\">s</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L169-L171","name":"Filter.countableInter_ofCountableUnion","line":169,"kind":"instance","docLink":"./Mathlib/Order/Filter/CountableInter.html#Filter.countableInter_ofCountableUnion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#Filter.countableInter_ofCountableUnion\"><span class=\"name\">Filter</span>.<span class=\"name\">countableInter_ofCountableUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\">∀ (<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Countable.html#Set.Countable\">Set.Countable</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">s</span> ∈ <span class=\"fn\">S</span>, <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">s</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Lattice.html#Set.sUnion\">⋃₀</a> <span class=\"fn\">S</span></span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\">∀ (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">t</span></span> → <span class=\"fn\">∀ <span class=\"fn\">s</span> ⊆ <span class=\"fn\">t</span>, <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">s</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\">CountableInterFilter</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#Filter.ofCountableUnion\">Filter.ofCountableUnion</a> <span class=\"fn\">p</span> <span class=\"fn\">h₁</span> <span class=\"fn\">h₂</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L161-L167","name":"Filter.ofCountableUnion","line":161,"kind":"def","docLink":"./Mathlib/Order/Filter/CountableInter.html#Filter.ofCountableUnion","doc":"Construct a filter with countable intersection property.\nSimilarly to `Filter.comk`, a set belongs to this filter if its complement satisfies the property.\nSimilarly to `Filter.ofCountableInter`,\nthis constructor deduces some properties from the countable intersection property\nwhich becomes the countable union property because we take complements of all sets.\n\nAnother small difference from `Filter.ofCountableInter`\nis that this definition takes `p : Set α → Prop` instead of `Set (Set α)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#Filter.ofCountableUnion\"><span class=\"name\">Filter</span>.<span class=\"name\">ofCountableUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hUnion : <span class=\"fn\">∀ (<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Countable.html#Set.Countable\">Set.Countable</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">s</span> ∈ <span class=\"fn\">S</span>, <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">s</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Lattice.html#Set.sUnion\">⋃₀</a> <span class=\"fn\">S</span></span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hmono : <span class=\"fn\">∀ (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">t</span></span> → <span class=\"fn\">∀ <span class=\"fn\">s</span> ⊆ <span class=\"fn\">t</span>, <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">s</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L147-L150","name":"Filter.mem_ofCountableInter","line":147,"kind":"theorem","docLink":"./Mathlib/Order/Filter/CountableInter.html#Filter.mem_ofCountableInter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#Filter.mem_ofCountableInter\"><span class=\"name\">Filter</span>.<span class=\"name\">mem_ofCountableInter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\">∀ (<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Countable.html#Set.Countable\">Set.Countable</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">l</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Lattice.html#Set.sInter\">⋂₀</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">l</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_mono : <span class=\"fn\">∀ (<span class=\"fn\">s </span>t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">l</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">t</span></span> → <span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">l</span></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#Filter.ofCountableInter\">Filter.ofCountableInter</a> <span class=\"fn\">l</span> <span class=\"fn\">hp</span> <span class=\"fn\">h_mono</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">l</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L139-L143","name":"Filter.countableInter_ofCountableInter","line":139,"kind":"instance","docLink":"./Mathlib/Order/Filter/CountableInter.html#Filter.countableInter_ofCountableInter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#Filter.countableInter_ofCountableInter\"><span class=\"name\">Filter</span>.<span class=\"name\">countableInter_ofCountableInter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(l : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\">∀ (<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Countable.html#Set.Countable\">Set.Countable</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">l</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Lattice.html#Set.sInter\">⋂₀</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">l</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_mono : <span class=\"fn\">∀ (<span class=\"fn\">s </span>t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">l</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">t</span></span> → <span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">l</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\">CountableInterFilter</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#Filter.ofCountableInter\">Filter.ofCountableInter</a> <span class=\"fn\">l</span> <span class=\"fn\">hp</span> <span class=\"fn\">h_mono</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L129-L136","name":"Filter.ofCountableInter","line":129,"kind":"def","docLink":"./Mathlib/Order/Filter/CountableInter.html#Filter.ofCountableInter","doc":"Construct a filter with countable intersection property. This constructor deduces\n`Filter.univ_sets` and `Filter.inter_sets` from the countable intersection property. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#Filter.ofCountableInter\"><span class=\"name\">Filter</span>.<span class=\"name\">ofCountableInter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(l : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\">∀ (<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Countable.html#Set.Countable\">Set.Countable</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">l</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Lattice.html#Set.sInter\">⋂₀</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">l</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_mono : <span class=\"fn\">∀ (<span class=\"fn\">s </span>t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">l</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">t</span></span> → <span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">l</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L120-L124","name":"EventuallyEq.countable_bInter","line":120,"kind":"theorem","docLink":"./Mathlib/Order/Filter/CountableInter.html#EventuallyEq.countable_bInter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#EventuallyEq.countable_bInter\"><span class=\"name\">EventuallyEq</span>.<span class=\"name\">countable_bInter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\">CountableInterFilter</a> <span class=\"fn\">l</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hS : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Countable.html#Set.Countable\">Set.Countable</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) (<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span></span> <a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyEq\">=ᶠ[</a><span class=\"fn\">l</span><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyEq\">]</a> <span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⋂ (i : <span class=\"fn\">ι</span>), <span class=\"fn\">⋂ (h : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span> <span class=\"fn\">h</span></span></span></span> <a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyEq\">=ᶠ[</a><span class=\"fn\">l</span><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyEq\">]</a> <span class=\"fn\">⋂ (i : <span class=\"fn\">ι</span>), <span class=\"fn\">⋂ (h : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">i</span> <span class=\"fn\">h</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L112-L117","name":"EventuallyLE.countable_bInter","line":112,"kind":"theorem","docLink":"./Mathlib/Order/Filter/CountableInter.html#EventuallyLE.countable_bInter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#EventuallyLE.countable_bInter\"><span class=\"name\">EventuallyLE</span>.<span class=\"name\">countable_bInter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\">CountableInterFilter</a> <span class=\"fn\">l</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hS : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Countable.html#Set.Countable\">Set.Countable</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) (<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span></span> <a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyLE\">≤ᶠ[</a><span class=\"fn\">l</span><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyLE\">]</a> <span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⋂ (i : <span class=\"fn\">ι</span>), <span class=\"fn\">⋂ (h : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span> <span class=\"fn\">h</span></span></span></span> <a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyLE\">≤ᶠ[</a><span class=\"fn\">l</span><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyLE\">]</a> <span class=\"fn\">⋂ (i : <span class=\"fn\">ι</span>), <span class=\"fn\">⋂ (h : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">i</span> <span class=\"fn\">h</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L106-L109","name":"EventuallyEq.countable_iInter","line":106,"kind":"theorem","docLink":"./Mathlib/Order/Filter/CountableInter.html#EventuallyEq.countable_iInter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#EventuallyEq.countable_iInter\"><span class=\"name\">EventuallyEq</span>.<span class=\"name\">countable_iInter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\">CountableInterFilter</a> <span class=\"fn\">l</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyEq\">=ᶠ[</a><span class=\"fn\">l</span><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyEq\">]</a> <span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">i</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⋂ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span> <a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyEq\">=ᶠ[</a><span class=\"fn\">l</span><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyEq\">]</a> <span class=\"fn\">⋂ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">i</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L100-L103","name":"EventuallyLE.countable_iInter","line":100,"kind":"theorem","docLink":"./Mathlib/Order/Filter/CountableInter.html#EventuallyLE.countable_iInter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#EventuallyLE.countable_iInter\"><span class=\"name\">EventuallyLE</span>.<span class=\"name\">countable_iInter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\">CountableInterFilter</a> <span class=\"fn\">l</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyLE\">≤ᶠ[</a><span class=\"fn\">l</span><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyLE\">]</a> <span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">i</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⋂ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span> <a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyLE\">≤ᶠ[</a><span class=\"fn\">l</span><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyLE\">]</a> <span class=\"fn\">⋂ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">i</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L93-L97","name":"EventuallyEq.countable_bUnion","line":93,"kind":"theorem","docLink":"./Mathlib/Order/Filter/CountableInter.html#EventuallyEq.countable_bUnion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#EventuallyEq.countable_bUnion\"><span class=\"name\">EventuallyEq</span>.<span class=\"name\">countable_bUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\">CountableInterFilter</a> <span class=\"fn\">l</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hS : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Countable.html#Set.Countable\">Set.Countable</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) (<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span></span> <a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyEq\">=ᶠ[</a><span class=\"fn\">l</span><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyEq\">]</a> <span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⋃ (i : <span class=\"fn\">ι</span>), <span class=\"fn\">⋃ (h : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span> <span class=\"fn\">h</span></span></span></span> <a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyEq\">=ᶠ[</a><span class=\"fn\">l</span><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyEq\">]</a> <span class=\"fn\">⋃ (i : <span class=\"fn\">ι</span>), <span class=\"fn\">⋃ (h : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">i</span> <span class=\"fn\">h</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L85-L90","name":"EventuallyLE.countable_bUnion","line":85,"kind":"theorem","docLink":"./Mathlib/Order/Filter/CountableInter.html#EventuallyLE.countable_bUnion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#EventuallyLE.countable_bUnion\"><span class=\"name\">EventuallyLE</span>.<span class=\"name\">countable_bUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\">CountableInterFilter</a> <span class=\"fn\">l</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hS : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Countable.html#Set.Countable\">Set.Countable</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) (<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span></span> <a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyLE\">≤ᶠ[</a><span class=\"fn\">l</span><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyLE\">]</a> <span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⋃ (i : <span class=\"fn\">ι</span>), <span class=\"fn\">⋃ (h : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span> <span class=\"fn\">h</span></span></span></span> <a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyLE\">≤ᶠ[</a><span class=\"fn\">l</span><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyLE\">]</a> <span class=\"fn\">⋃ (i : <span class=\"fn\">ι</span>), <span class=\"fn\">⋃ (h : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">i</span> <span class=\"fn\">h</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L79-L82","name":"EventuallyEq.countable_iUnion","line":79,"kind":"theorem","docLink":"./Mathlib/Order/Filter/CountableInter.html#EventuallyEq.countable_iUnion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#EventuallyEq.countable_iUnion\"><span class=\"name\">EventuallyEq</span>.<span class=\"name\">countable_iUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\">CountableInterFilter</a> <span class=\"fn\">l</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyEq\">=ᶠ[</a><span class=\"fn\">l</span><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyEq\">]</a> <span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">i</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⋃ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span> <a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyEq\">=ᶠ[</a><span class=\"fn\">l</span><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyEq\">]</a> <span class=\"fn\">⋃ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">i</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L74-L76","name":"EventuallyLE.countable_iUnion","line":74,"kind":"theorem","docLink":"./Mathlib/Order/Filter/CountableInter.html#EventuallyLE.countable_iUnion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#EventuallyLE.countable_iUnion\"><span class=\"name\">EventuallyLE</span>.<span class=\"name\">countable_iUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\">CountableInterFilter</a> <span class=\"fn\">l</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyLE\">≤ᶠ[</a><span class=\"fn\">l</span><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyLE\">]</a> <span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">i</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⋃ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span> <a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyLE\">≤ᶠ[</a><span class=\"fn\">l</span><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyLE\">]</a> <span class=\"fn\">⋃ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">i</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L67-L71","name":"eventually_countable_ball","line":67,"kind":"theorem","docLink":"./Mathlib/Order/Filter/CountableInter.html#eventually_countable_ball","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#eventually_countable_ball\"><span class=\"name\">eventually_countable_ball</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\">CountableInterFilter</a> <span class=\"fn\">l</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hS : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Countable.html#Set.Countable\">Set.Countable</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ᶠ (x : <span class=\"fn\">α</span>) in <span class=\"fn\">l</span>, <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) (<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) (<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span>), <span class=\"fn\">∀ᶠ (x : <span class=\"fn\">α</span>) in <span class=\"fn\">l</span>, <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L61-L64","name":"eventually_countable_forall","line":61,"kind":"theorem","docLink":"./Mathlib/Order/Filter/CountableInter.html#eventually_countable_forall","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#eventually_countable_forall\"><span class=\"name\">eventually_countable_forall</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\">CountableInterFilter</a> <span class=\"fn\">l</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Prop</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ᶠ (x : <span class=\"fn\">α</span>) in <span class=\"fn\">l</span>, <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">i</span></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\">∀ᶠ (x : <span class=\"fn\">α</span>) in <span class=\"fn\">l</span>, <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">i</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L54-L58","name":"countable_bInter_mem","line":54,"kind":"theorem","docLink":"./Mathlib/Order/Filter/CountableInter.html#countable_bInter_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#countable_bInter_mem\"><span class=\"name\">countable_bInter_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\">CountableInterFilter</a> <span class=\"fn\">l</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hS : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Countable.html#Set.Countable\">Set.Countable</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">⋂ (i : <span class=\"fn\">ι</span>), <span class=\"fn\">⋂ (hi : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span></span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">l</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) (<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">l</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L50-L51","name":"countable_iInter_mem","line":50,"kind":"theorem","docLink":"./Mathlib/Order/Filter/CountableInter.html#countable_iInter_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#countable_iInter_mem\"><span class=\"name\">countable_iInter_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\">CountableInterFilter</a> <span class=\"fn\">l</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">⋂ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">l</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">l</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L45-L47","name":"countable_sInter_mem","line":45,"kind":"theorem","docLink":"./Mathlib/Order/Filter/CountableInter.html#countable_sInter_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#countable_sInter_mem\"><span class=\"name\">countable_sInter_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\">CountableInterFilter</a> <span class=\"fn\">l</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hSc : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Countable.html#Set.Countable\">Set.Countable</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Lattice.html#Set.sInter\">⋂₀</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">l</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">s</span> ∈ <span class=\"fn\">S</span>, <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">l</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L40-L40","name":"CountableInterFilter.countable_sInter_mem","line":40,"kind":"def","docLink":"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter.countable_sInter_mem","doc":"For a countable collection of sets `s ∈ l`, their intersection belongs to `l` as well. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter.countable_sInter_mem\"><span class=\"name\">CountableInterFilter</span>.<span class=\"name\">countable_sInter_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\">CountableInterFilter</a> <span class=\"fn\">l</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Countable.html#Set.Countable\">Set.Countable</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">s</span> ∈ <span class=\"fn\">S</span>, <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">l</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Lattice.html#Set.sInter\">⋂₀</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">l</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L38-L38","name":"CountableInterFilter.mk","line":38,"kind":"ctor","docLink":"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter.mk\"><span class=\"name\">CountableInterFilter</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(countable_sInter_mem : <span class=\"fn\">∀ (<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Countable.html#Set.Countable\">Set.Countable</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">s</span> ∈ <span class=\"fn\">S</span>, <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">l</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Lattice.html#Set.sInter\">⋂₀</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">l</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\">CountableInterFilter</a> <span class=\"fn\">l</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Filter/CountableInter.lean#L38-L40","name":"CountableInterFilter","line":38,"kind":"class","docLink":"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter","doc":"A filter `l` has the countable intersection property if for any countable collection\nof sets `s ∈ l` their intersection belongs to `l` as well. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/CountableInter.html#CountableInterFilter\"><span class=\"name\">CountableInterFilter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}