{"name":"Mathlib.Data.Char","instances":[{"typeNames":["Char"],"name":"instLinearOrderChar","className":"LinearOrder"}],"imports":["Init","Mathlib.Data.UInt","Mathlib.Init.Order.Defs"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Char.lean#L41-L43","name":"Char.ofNat_toNat","line":41,"kind":"theorem","docLink":"./Mathlib/Data/Char.html#Char.ofNat_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Char.html#Char.ofNat_toNat\"><span class=\"name\">Char</span>.<span class=\"name\">ofNat_toNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Init/Prelude.html#Char\">Char</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Data/Char/Basic.html#Char.isValidCharNat\">Char.isValidCharNat</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Char/Basic.html#Char.toNat\">Char.toNat</a> <span class=\"fn\">c</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Char.ofNat\">Char.ofNat</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Char/Basic.html#Char.toNat\">Char.toNat</a> <span class=\"fn\">c</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Char.lean#L30-L39","name":"instLinearOrderChar","line":30,"kind":"instance","docLink":"./Mathlib/Data/Char.html#instLinearOrderChar","doc":"Provides a `LinearOrder` instance on `Char`. `Char` is the type of Unicode scalar values.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Char.html#instLinearOrderChar\"><span class=\"name\">instLinearOrderChar</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <a href=\"./Init/Prelude.html#Char\">Char</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Char.lean#L22-L25","name":"Char.utf8Size_pos","line":22,"kind":"theorem","docLink":"./Mathlib/Data/Char.html#Char.utf8Size_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Char.html#Char.utf8Size_pos\"><span class=\"name\">Char</span>.<span class=\"name\">utf8Size_pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Char.utf8Size\">Char.utf8Size</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Char.lean#L20-L20","name":"Char.toUInt8","line":20,"kind":"def","docLink":"./Mathlib/Data/Char.html#Char.toUInt8","doc":"Convert a character into a `UInt8`, by truncating (reducing modulo 256) if necessary. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Char.html#Char.toUInt8\"><span class=\"name\">Char</span>.<span class=\"name\">toUInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt8\">UInt8</a></div></div>"}]}