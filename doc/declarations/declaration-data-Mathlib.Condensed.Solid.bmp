{"name":"Mathlib.Condensed.Solid","instances":[],"imports":["Init","Mathlib.CategoryTheory.Limits.KanExtension","Mathlib.Condensed.Adjunctions","Mathlib.Condensed.Functors","Mathlib.Condensed.Limits"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Condensed/Solid.lean#L54-L54","name":"CondensedAb.IsSolid.isIso_solidification_map","line":54,"kind":"def","docLink":"./Mathlib/Condensed/Solid.html#CondensedAb.IsSolid.isIso_solidification_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Solid.html#CondensedAb.IsSolid.isIso_solidification_map\"><span class=\"name\">CondensedAb</span>.<span class=\"name\">IsSolid</span>.<span class=\"name\">isIso_solidification_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./Mathlib/Condensed/Abelian.html#CondensedAb\">CondensedAb</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Condensed/Solid.html#CondensedAb.IsSolid\">CondensedAb.IsSolid</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">CategoryTheory.IsIso</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">CategoryTheory.yoneda</span>.obj <span class=\"fn\">A</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Condensed/Solid.html#Condensed.profiniteSolidification\">Condensed.profiniteSolidification</a>.app <span class=\"fn\">X</span></span>)</span>.op</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Condensed/Solid.lean#L53-L53","name":"CondensedAb.IsSolid.mk","line":53,"kind":"ctor","docLink":"./Mathlib/Condensed/Solid.html#CondensedAb.IsSolid.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Solid.html#CondensedAb.IsSolid.mk\"><span class=\"name\">CondensedAb</span>.<span class=\"name\">IsSolid</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./Mathlib/Condensed/Abelian.html#CondensedAb\">CondensedAb</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(isIso_solidification_map : <span class=\"fn\">∀ (<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">CategoryTheory.IsIso</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">CategoryTheory.yoneda</span>.obj <span class=\"fn\">A</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Condensed/Solid.html#Condensed.profiniteSolidification\">Condensed.profiniteSolidification</a>.app <span class=\"fn\">X</span></span>)</span>.op</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Condensed/Solid.html#CondensedAb.IsSolid\">CondensedAb.IsSolid</a> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Condensed/Solid.lean#L53-L55","name":"CondensedAb.IsSolid","line":53,"kind":"class","docLink":"./Mathlib/Condensed/Solid.html#CondensedAb.IsSolid","doc":"The predicate on condensed abelian groups describing the property of being solid. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Solid.html#CondensedAb.IsSolid\"><span class=\"name\">CondensedAb</span>.<span class=\"name\">IsSolid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./Mathlib/Condensed/Abelian.html#CondensedAb\">CondensedAb</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Condensed/Solid.lean#L47-L48","name":"Condensed.profiniteSolidification","line":47,"kind":"def","docLink":"./Mathlib/Condensed/Solid.html#Condensed.profiniteSolidification","doc":"The natural transformation `ℤ[S] ⟶ ℤ[S]^\\solid`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Solid.html#Condensed.profiniteSolidification\"><span class=\"name\">Condensed</span>.<span class=\"name\">profiniteSolidification</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Condensed/Solid.html#Condensed.profiniteFree\">Condensed.profiniteFree</a> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <a href=\"./Mathlib/Condensed/Solid.html#Condensed.profiniteSolid\">Condensed.profiniteSolid</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Condensed/Solid.lean#L43-L44","name":"Condensed.profiniteSolid","line":43,"kind":"def","docLink":"./Mathlib/Condensed/Solid.html#Condensed.profiniteSolid","doc":"The functor sending a profinite space `S` to the condensed abelian group `ℤ[S]^\\solid`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Solid.html#Condensed.profiniteSolid\"><span class=\"name\">Condensed</span>.<span class=\"name\">profiniteSolid</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a> <a href=\"./Mathlib/Condensed/Abelian.html#CondensedAb\">CondensedAb</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Condensed/Solid.lean#L39-L40","name":"Condensed.profiniteFree","line":39,"kind":"def","docLink":"./Mathlib/Condensed/Solid.html#Condensed.profiniteFree","doc":"The free condensed abelian group on a profinite space. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Solid.html#Condensed.profiniteFree\"><span class=\"name\">Condensed</span>.<span class=\"name\">profiniteFree</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a> <a href=\"./Mathlib/Condensed/Abelian.html#CondensedAb\">CondensedAb</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Condensed/Solid.lean#L35-L36","name":"Condensed.finFree","line":35,"kind":"def","docLink":"./Mathlib/Condensed/Solid.html#Condensed.finFree","doc":"The free condensed abelian group on a finite set. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Solid.html#Condensed.finFree\"><span class=\"name\">Condensed</span>.<span class=\"name\">finFree</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a> <a href=\"./Mathlib/Condensed/Abelian.html#CondensedAb\">CondensedAb</a></span></div></div>"}]}