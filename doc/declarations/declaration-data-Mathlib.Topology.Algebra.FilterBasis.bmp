{"name":"Mathlib.Topology.Algebra.FilterBasis","instances":[{"typeNames":["Set","AddGroupFilterBasis"],"name":"AddGroupFilterBasis.instMembershipSetAddGroupFilterBasis","className":"Membership"},{"typeNames":["Set","GroupFilterBasis"],"name":"GroupFilterBasis.instMembershipSetGroupFilterBasis","className":"Membership"},{"typeNames":["AddGroupFilterBasis"],"name":"AddGroupFilterBasis.instInhabitedAddGroupFilterBasis","className":"Inhabited"},{"typeNames":["GroupFilterBasis"],"name":"GroupFilterBasis.instInhabitedGroupFilterBasis","className":"Inhabited"},{"typeNames":[],"name":"AddGroupFilterBasis.isTopologicalAddGroup","className":"TopologicalAddGroup"},{"typeNames":[],"name":"GroupFilterBasis.isTopologicalGroup","className":"TopologicalGroup"},{"typeNames":["Set","RingFilterBasis"],"name":"RingFilterBasis.instMembershipSetRingFilterBasis","className":"Membership"},{"typeNames":[],"name":"RingFilterBasis.isTopologicalRing","className":"TopologicalRing"},{"typeNames":["Set","ModuleFilterBasis"],"name":"ModuleFilterBasis.GroupFilterBasis.hasMem","className":"Membership"},{"typeNames":["ModuleFilterBasis"],"name":"ModuleFilterBasis.instInhabitedModuleFilterBasis","className":"Inhabited"},{"typeNames":[],"name":"ModuleFilterBasis.continuousSMul","className":"ContinuousSMul"}],"imports":["Init","Mathlib.Order.Filter.Bases","Mathlib.Topology.Algebra.Module.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L446-L461","name":"ModuleFilterBasis.ofBases","line":446,"kind":"def","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.ofBases","doc":"Build a module filter basis from compatible ring and additive group filter bases. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.ofBases\"><span class=\"name\">ModuleFilterBasis</span>.<span class=\"name\">ofBases</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(BR : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis\">RingFilterBasis</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(BM : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(smul : <span class=\"fn\">‚àÄ {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">M</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">BM</span></span> ‚Üí <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\">BR</span>, <span class=\"fn\">‚àÉ W ‚àà <span class=\"fn\">BM</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">W</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">U</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(smul_left : <span class=\"fn\">‚àÄ (<span class=\"fn\">x‚ÇÄ</span> : <span class=\"fn\">R</span>) {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">M</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">BM</span></span> ‚Üí <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\">BM</span>, <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x‚ÇÄ</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">x</span></span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">‚Åª¬π'</a> <span class=\"fn\">U</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(smul_right : <span class=\"fn\">‚àÄ (<span class=\"fn\">m‚ÇÄ</span> : <span class=\"fn\">M</span>) {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">M</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">BM</span></span> ‚Üí <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\">BR</span>, <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">R</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">m‚ÇÄ</span></span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">‚Åª¬π'</a> <span class=\"fn\">U</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis\">ModuleFilterBasis</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L435-L442","name":"ModuleFilterBasis.continuousSMul","line":435,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.continuousSMul","doc":"If a module is endowed with a topological structure coming from\na module filter basis then it's a topological module. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.continuousSMul\"><span class=\"name\">ModuleFilterBasis</span>.<span class=\"name\">continuousSMul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis\">ModuleFilterBasis</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Ring/Basic.html#TopologicalRing\">TopologicalRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/MulAction.html#ContinuousSMul\">ContinuousSMul</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L410-L430","name":"ContinuousSMul.of_basis_zero","line":410,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#ContinuousSMul.of_basis_zero","doc":"A topological add group with a basis of `ùìù 0` satisfying the axioms of `ModuleFilterBasis`\nis a topological module.\n\nThis lemma is mathematically useless because one could obtain such a result by applying\n`ModuleFilterBasis.continuousSMul` and use the fact that group topologies are characterized\nby their neighborhoods of 0 to obtain the `ContinuousSMul` on the pre-existing topology.\n\nBut it turns out it's just easier to get it as a byproduct of the proof, so this is just a free\nquality-of-life improvement. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ContinuousSMul.of_basis_zero\"><span class=\"name\">ContinuousSMul</span>.<span class=\"name\">of_basis_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Ring/Basic.html#TopologicalRing\">TopologicalRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">M</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases.html#Filter.HasBasis\">Filter.HasBasis</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#nhds\">nhds</a> <span class=\"fn\">0</span></span>)</span> <span class=\"fn\">p</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hsmul : <span class=\"fn\">‚àÄ {<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">i</span></span> ‚Üí <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#nhds\">nhds</a> <span class=\"fn\">0</span></span>, <span class=\"fn\">‚àÉ (j : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\"><span class=\"fn\">b</span> <span class=\"fn\">j</span></span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">b</span> <span class=\"fn\">i</span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hsmul_left : <span class=\"fn\">‚àÄ (<span class=\"fn\">x‚ÇÄ</span> : <span class=\"fn\">R</span>) {<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">i</span></span> ‚Üí <span class=\"fn\">‚àÉ (j : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x‚ÇÄ</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">x</span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span> <span class=\"fn\">i</span></span>)</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hsmul_right : <span class=\"fn\">‚àÄ (<span class=\"fn\">m‚ÇÄ</span> : <span class=\"fn\">M</span>) {<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">i</span></span> ‚Üí <span class=\"fn\">‚àÄ·∂† (x : <span class=\"fn\">R</span>) in <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#nhds\">nhds</a> <span class=\"fn\">0</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">m‚ÇÄ</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">b</span> <span class=\"fn\">i</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/MulAction.html#ContinuousSMul\">ContinuousSMul</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L396-L398","name":"ModuleFilterBasis.topology'","line":396,"kind":"def","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.topology'","doc":"The topology associated to a module filter basis on a module over a topological ring.\nIt has the given basis as a basis of neighborhoods of zero. This version gets the ring\ntopology by unification instead of type class inference. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.topology'\"><span class=\"name\">ModuleFilterBasis</span>.<span class=\"name\">topology'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span>} ‚Üí <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>] ‚Üí <span class=\"fn\">[<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>] ‚Üí <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis\">ModuleFilterBasis</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L389-L390","name":"ModuleFilterBasis.topology","line":389,"kind":"def","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.topology","doc":"The topology associated to a module filter basis on a module over a topological ring.\nIt has the given basis as a basis of neighborhoods of zero. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.topology\"><span class=\"name\">ModuleFilterBasis</span>.<span class=\"name\">topology</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis\">ModuleFilterBasis</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L368-L385","name":"ModuleFilterBasis.instInhabitedModuleFilterBasis","line":368,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.instInhabitedModuleFilterBasis","doc":"If `R` is discrete then the trivial additive group filter basis on any `R`-module is a\nmodule filter basis. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.instInhabitedModuleFilterBasis\"><span class=\"name\">ModuleFilterBasis</span>.<span class=\"name\">instInhabitedModuleFilterBasis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Order.html#DiscreteTopology\">DiscreteTopology</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis\">ModuleFilterBasis</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L362-L363","name":"ModuleFilterBasis.smul_right","line":362,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.smul_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.smul_right\"><span class=\"name\">ModuleFilterBasis</span>.<span class=\"name\">smul_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis\">ModuleFilterBasis</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m‚ÇÄ : <span class=\"fn\">M</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÄ·∂† (x : <span class=\"fn\">R</span>) in <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#nhds\">nhds</a> <span class=\"fn\">0</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">m‚ÇÄ</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">U</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L358-L359","name":"ModuleFilterBasis.smul_left","line":358,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.smul_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.smul_left\"><span class=\"name\">ModuleFilterBasis</span>.<span class=\"name\">smul_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis\">ModuleFilterBasis</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x‚ÇÄ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\">B</span>, <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x‚ÇÄ</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">x</span></span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">‚Åª¬π'</a> <span class=\"fn\">U</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L354-L355","name":"ModuleFilterBasis.smul","line":354,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.smul\"><span class=\"name\">ModuleFilterBasis</span>.<span class=\"name\">smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis\">ModuleFilterBasis</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#nhds\">nhds</a> <span class=\"fn\">0</span></span>, <span class=\"fn\">‚àÉ W ‚àà <span class=\"fn\">B</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">W</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">U</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L350-L351","name":"ModuleFilterBasis.GroupFilterBasis.hasMem","line":350,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.GroupFilterBasis.hasMem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.GroupFilterBasis.hasMem\"><span class=\"name\">ModuleFilterBasis</span>.<span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">hasMem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Membership\">Membership</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">M</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis\">ModuleFilterBasis</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L342-L342","name":"ModuleFilterBasis.smul_right'","line":342,"kind":"def","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.smul_right'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.smul_right'\"><span class=\"name\">ModuleFilterBasis</span>.<span class=\"name\">smul_right'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis\">ModuleFilterBasis</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m‚ÇÄ : <span class=\"fn\">M</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">self</span>.sets</span></span> ‚Üí <span class=\"fn\">‚àÄ·∂† (x : <span class=\"fn\">R</span>) in <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#nhds\">nhds</a> <span class=\"fn\">0</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">m‚ÇÄ</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">U</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L341-L341","name":"ModuleFilterBasis.smul_left'","line":341,"kind":"def","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.smul_left'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.smul_left'\"><span class=\"name\">ModuleFilterBasis</span>.<span class=\"name\">smul_left'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis\">ModuleFilterBasis</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x‚ÇÄ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">self</span>.sets</span></span> ‚Üí <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\"><span class=\"fn\">self</span>.sets</span>, <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x‚ÇÄ</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">x</span></span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">‚Åª¬π'</a> <span class=\"fn\">U</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L340-L340","name":"ModuleFilterBasis.smul'","line":340,"kind":"def","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.smul'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.smul'\"><span class=\"name\">ModuleFilterBasis</span>.<span class=\"name\">smul'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis\">ModuleFilterBasis</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">self</span>.sets</span></span> ‚Üí <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#nhds\">nhds</a> <span class=\"fn\">0</span></span>, <span class=\"fn\">‚àÉ W ‚àà <span class=\"fn\"><span class=\"fn\">self</span>.sets</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">W</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">U</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L338-L338","name":"ModuleFilterBasis.mk","line":338,"kind":"ctor","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.mk\"><span class=\"name\">ModuleFilterBasis</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(toAddGroupFilterBasis : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(smul' : <span class=\"fn\">‚àÄ {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">M</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">toAddGroupFilterBasis</span>.sets</span></span> ‚Üí <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#nhds\">nhds</a> <span class=\"fn\">0</span></span>, <span class=\"fn\">‚àÉ W ‚àà <span class=\"fn\"><span class=\"fn\">toAddGroupFilterBasis</span>.sets</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">W</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">U</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(smul_left' : <span class=\"fn\">‚àÄ (<span class=\"fn\">x‚ÇÄ</span> : <span class=\"fn\">R</span>) {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">M</span></span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">toAddGroupFilterBasis</span>.sets</span></span> ‚Üí <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\"><span class=\"fn\">toAddGroupFilterBasis</span>.sets</span>, <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x‚ÇÄ</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">x</span></span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">‚Åª¬π'</a> <span class=\"fn\">U</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(smul_right' : <span class=\"fn\">‚àÄ (<span class=\"fn\">m‚ÇÄ</span> : <span class=\"fn\">M</span>) {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">M</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">toAddGroupFilterBasis</span>.sets</span></span> ‚Üí <span class=\"fn\">‚àÄ·∂† (x : <span class=\"fn\">R</span>) in <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#nhds\">nhds</a> <span class=\"fn\">0</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">m‚ÇÄ</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">U</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis\">ModuleFilterBasis</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L338-L342","name":"ModuleFilterBasis","line":338,"kind":"structure","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis","doc":"A `ModuleFilterBasis` on a module is a `FilterBasis` satisfying some additional axioms.\nExample : if `M` is a topological module then the neighbourhoods of zero are a\n`ModuleFilterBasis`. Conversely given a `ModuleFilterBasis` one can define a topology\ncompatible with the module structure on `M`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis\"><span class=\"name\">ModuleFilterBasis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\"><span class=\"name\">AddGroupFilterBasis</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_2</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L307-L329","name":"RingFilterBasis.isTopologicalRing","line":307,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.isTopologicalRing","doc":"If a ring is endowed with a topological structure coming from\na ring filter basis then it's a topological ring. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.isTopologicalRing\"><span class=\"name\">RingFilterBasis</span>.<span class=\"name\">isTopologicalRing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis\">RingFilterBasis</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Ring/Basic.html#TopologicalRing\">TopologicalRing</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L301-L302","name":"RingFilterBasis.topology","line":301,"kind":"def","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.topology","doc":"The topology associated to a ring filter basis.\nIt has the given basis as a basis of neighborhoods of zero. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.topology\"><span class=\"name\">RingFilterBasis</span>.<span class=\"name\">topology</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis\">RingFilterBasis</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L295-L296","name":"RingFilterBasis.mul_right","line":295,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.mul_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.mul_right\"><span class=\"name\">RingFilterBasis</span>.<span class=\"name\">mul_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis\">RingFilterBasis</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x‚ÇÄ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\">B</span>, <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">R</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x‚ÇÄ</span></span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">‚Åª¬π'</a> <span class=\"fn\">U</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L291-L292","name":"RingFilterBasis.mul_left","line":291,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.mul_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.mul_left\"><span class=\"name\">RingFilterBasis</span>.<span class=\"name\">mul_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis\">RingFilterBasis</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x‚ÇÄ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\">B</span>, <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">R</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x‚ÇÄ</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">‚Åª¬π'</a> <span class=\"fn\">U</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L287-L288","name":"RingFilterBasis.mul","line":287,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.mul\"><span class=\"name\">RingFilterBasis</span>.<span class=\"name\">mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis\">RingFilterBasis</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\">B</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">V</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">U</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L284-L285","name":"RingFilterBasis.instMembershipSetRingFilterBasis","line":284,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.instMembershipSetRingFilterBasis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.instMembershipSetRingFilterBasis\"><span class=\"name\">RingFilterBasis</span>.<span class=\"name\">instMembershipSetRingFilterBasis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Membership\">Membership</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis\">RingFilterBasis</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L277-L277","name":"RingFilterBasis.mul_right'","line":277,"kind":"def","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.mul_right'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.mul_right'\"><span class=\"name\">RingFilterBasis</span>.<span class=\"name\">mul_right'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis\">RingFilterBasis</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x‚ÇÄ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">self</span>.sets</span></span> ‚Üí <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\"><span class=\"fn\">self</span>.sets</span>, <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">R</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x‚ÇÄ</span></span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">‚Åª¬π'</a> <span class=\"fn\">U</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L276-L276","name":"RingFilterBasis.mul_left'","line":276,"kind":"def","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.mul_left'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.mul_left'\"><span class=\"name\">RingFilterBasis</span>.<span class=\"name\">mul_left'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis\">RingFilterBasis</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x‚ÇÄ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">self</span>.sets</span></span> ‚Üí <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\"><span class=\"fn\">self</span>.sets</span>, <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">R</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x‚ÇÄ</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">‚Åª¬π'</a> <span class=\"fn\">U</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L275-L275","name":"RingFilterBasis.mul'","line":275,"kind":"def","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.mul'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.mul'\"><span class=\"name\">RingFilterBasis</span>.<span class=\"name\">mul'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis\">RingFilterBasis</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">self</span>.sets</span></span> ‚Üí <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\"><span class=\"fn\">self</span>.sets</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">V</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">U</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L274-L274","name":"RingFilterBasis.mk","line":274,"kind":"ctor","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.mk\"><span class=\"name\">RingFilterBasis</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[toAddGroupFilterBasis : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(mul' : <span class=\"fn\">‚àÄ {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">R</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">toAddGroupFilterBasis</span>.sets</span></span> ‚Üí <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\"><span class=\"fn\">toAddGroupFilterBasis</span>.sets</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">V</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">U</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mul_left' : <span class=\"fn\">‚àÄ (<span class=\"fn\">x‚ÇÄ</span> : <span class=\"fn\">R</span>) {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">R</span></span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">toAddGroupFilterBasis</span>.sets</span></span> ‚Üí <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\"><span class=\"fn\">toAddGroupFilterBasis</span>.sets</span>, <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">R</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x‚ÇÄ</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">‚Åª¬π'</a> <span class=\"fn\">U</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mul_right' : <span class=\"fn\">‚àÄ (<span class=\"fn\">x‚ÇÄ</span> : <span class=\"fn\">R</span>) {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">R</span></span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">toAddGroupFilterBasis</span>.sets</span></span> ‚Üí <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\"><span class=\"fn\">toAddGroupFilterBasis</span>.sets</span>, <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">R</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x‚ÇÄ</span></span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">‚Åª¬π'</a> <span class=\"fn\">U</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis\">RingFilterBasis</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L274-L277","name":"RingFilterBasis","line":274,"kind":"class","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis","doc":"A `RingFilterBasis` on a ring is a `FilterBasis` satisfying some additional axioms.\nExample : if `R` is a topological ring then the neighbourhoods of the identity are a\n`RingFilterBasis`. Conversely given a `RingFilterBasis` on a ring `R`, one can define a\ntopology on `R` which is compatible with the ring structure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis\"><span class=\"name\">RingFilterBasis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\"><span class=\"name\">AddGroupFilterBasis</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L242-L264","name":"GroupFilterBasis.isTopologicalGroup","line":242,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.isTopologicalGroup","doc":"If a group is endowed with a topological structure coming from a group filter basis then it's a\ntopological group. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.isTopologicalGroup\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">isTopologicalGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L240-L241","name":"AddGroupFilterBasis.isTopologicalAddGroup","line":240,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.isTopologicalAddGroup","doc":"If a group is endowed with a topological structure coming from a group filter basis\nthen it's a topological group."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.isTopologicalAddGroup\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">isTopologicalAddGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L230-L233","name":"GroupFilterBasis.mem_nhds_one","line":230,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.mem_nhds_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.mem_nhds_one\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">mem_nhds_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#nhds\">nhds</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L229-L229","name":"AddGroupFilterBasis.mem_nhds_zero","line":229,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.mem_nhds_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.mem_nhds_zero\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">mem_nhds_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#nhds\">nhds</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L222-L225","name":"GroupFilterBasis.nhds_one_hasBasis","line":222,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.nhds_one_hasBasis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.nhds_one_hasBasis\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">nhds_one_hasBasis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases.html#Filter.HasBasis\">Filter.HasBasis</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#nhds\">nhds</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">B</span></span></span>)</span> <span class=\"fn\">id</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L221-L221","name":"AddGroupFilterBasis.nhds_zero_hasBasis","line":221,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.nhds_zero_hasBasis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.nhds_zero_hasBasis\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">nhds_zero_hasBasis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases.html#Filter.HasBasis\">Filter.HasBasis</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#nhds\">nhds</a> <span class=\"fn\">0</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">B</span></span></span>)</span> <span class=\"fn\">id</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L214-L217","name":"GroupFilterBasis.nhds_hasBasis","line":214,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.nhds_hasBasis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.nhds_hasBasis\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">nhds_hasBasis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x‚ÇÄ : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases.html#Filter.HasBasis\">Filter.HasBasis</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#nhds\">nhds</a> <span class=\"fn\">x‚ÇÄ</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">B</span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">y</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x‚ÇÄ</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span></span>)</span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">V</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L213-L213","name":"AddGroupFilterBasis.nhds_hasBasis","line":213,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.nhds_hasBasis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.nhds_hasBasis\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">nhds_hasBasis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x‚ÇÄ : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases.html#Filter.HasBasis\">Filter.HasBasis</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#nhds\">nhds</a> <span class=\"fn\">x‚ÇÄ</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">B</span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">y</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x‚ÇÄ</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span></span>)</span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">V</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L205-L209","name":"GroupFilterBasis.nhds_one_eq","line":205,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.nhds_one_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.nhds_one_eq\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">nhds_one_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#nhds\">nhds</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases.html#FilterBasis.filter\">FilterBasis.filter</a> <span class=\"fn\">GroupFilterBasis.toFilterBasis</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L204-L204","name":"AddGroupFilterBasis.nhds_zero_eq","line":204,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.nhds_zero_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.nhds_zero_eq\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">nhds_zero_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#nhds\">nhds</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases.html#FilterBasis.filter\">FilterBasis.filter</a> <span class=\"fn\">AddGroupFilterBasis.toFilterBasis</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L180-L200","name":"GroupFilterBasis.nhds_eq","line":180,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.nhds_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.nhds_eq\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">nhds_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#nhds\">nhds</a> <span class=\"fn\">x‚ÇÄ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.N\">GroupFilterBasis.N</a> <span class=\"fn\">B</span> <span class=\"fn\">x‚ÇÄ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L179-L179","name":"AddGroupFilterBasis.nhds_eq","line":179,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.nhds_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.nhds_eq\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">nhds_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#nhds\">nhds</a> <span class=\"fn\">x‚ÇÄ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.N\">AddGroupFilterBasis.N</a> <span class=\"fn\">B</span> <span class=\"fn\">x‚ÇÄ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L174-L175","name":"GroupFilterBasis.topology","line":174,"kind":"def","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.topology","doc":"The topological space structure coming from a group filter basis. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.topology\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">topology</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L173-L173","name":"AddGroupFilterBasis.topology","line":173,"kind":"def","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.topology","doc":"The topological space structure coming from an additive group filter basis."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.topology\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">topology</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L166-L168","name":"GroupFilterBasis.hasBasis","line":166,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.hasBasis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.hasBasis\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">hasBasis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases.html#Filter.HasBasis\">Filter.HasBasis</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.N\">GroupFilterBasis.N</a> <span class=\"fn\">B</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">B</span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">y</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span></span>)</span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">V</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L165-L165","name":"AddGroupFilterBasis.hasBasis","line":165,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.hasBasis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.hasBasis\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">hasBasis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases.html#Filter.HasBasis\">Filter.HasBasis</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.N\">AddGroupFilterBasis.N</a> <span class=\"fn\">B</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">B</span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">y</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span></span>)</span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">V</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L158-L159","name":"GroupFilterBasis.N_one","line":158,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.N_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.N_one\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">N_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.N\">GroupFilterBasis.N</a> <span class=\"fn\">B</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases.html#FilterBasis.filter\">FilterBasis.filter</a> <span class=\"fn\">GroupFilterBasis.toFilterBasis</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L157-L157","name":"AddGroupFilterBasis.N_zero","line":157,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.N_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.N_zero\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">N_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.N\">AddGroupFilterBasis.N</a> <span class=\"fn\">B</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases.html#FilterBasis.filter\">FilterBasis.filter</a> <span class=\"fn\">AddGroupFilterBasis.toFilterBasis</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L150-L151","name":"GroupFilterBasis.N","line":150,"kind":"def","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.N","doc":"The neighborhood function of a `GroupFilterBasis`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.N\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">N</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">G</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">G</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L149-L149","name":"AddGroupFilterBasis.N","line":149,"kind":"def","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.N","doc":"The neighborhood function of an `AddGroupFilterBasis`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.N\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">N</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">G</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">G</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L143-L144","name":"GroupFilterBasis.subset_mul_self","line":143,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.subset_mul_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.subset_mul_self\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">subset_mul_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">U</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L142-L142","name":"AddGroupFilterBasis.subset_add_self","line":142,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.subset_add_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.subset_add_self\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">subset_add_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">U</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L123-L140","name":"GroupFilterBasis.instInhabitedGroupFilterBasis","line":123,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.instInhabitedGroupFilterBasis","doc":"The trivial group filter basis consists of `{1}` only. The associated topology\nis discrete. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.instInhabitedGroupFilterBasis\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">instInhabitedGroupFilterBasis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L121-L122","name":"AddGroupFilterBasis.instInhabitedAddGroupFilterBasis","line":121,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.instInhabitedAddGroupFilterBasis","doc":"The trivial additive group filter basis consists of `{0}` only. The associated\ntopology is discrete."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.instInhabitedAddGroupFilterBasis\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">instInhabitedAddGroupFilterBasis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L121-L122","name":"AddGroupFilterBasis.instInhabitedAddGroupFilterBasis.proof_1","line":121,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.instInhabitedAddGroupFilterBasis.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.instInhabitedAddGroupFilterBasis.proof_1\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">instInhabitedAddGroupFilterBasis</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L121-L122","name":"AddGroupFilterBasis.instInhabitedAddGroupFilterBasis.proof_4","line":121,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.instInhabitedAddGroupFilterBasis.proof_4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.instInhabitedAddGroupFilterBasis.proof_4\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">instInhabitedAddGroupFilterBasis</span>.<span class=\"name\">proof_4</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a>     <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">sets</span> := <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span>, <span class=\"fn\">nonempty</span> := <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span></span>)</span>,\n        <span class=\"fn\">inter_sets</span> := <span class=\"fn\">(_ : <span class=\"fn\">‚àÄ {<span class=\"fn\">x </span>y : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span></span> ‚Üí <span class=\"fn\">‚àÉ z ‚àà <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span>, <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">‚à©</a> <span class=\"fn\">y</span></span></span></span></span></span></span>)</span> }</span>.sets</span></span> ‚Üí\n  <span class=\"fn\">‚àÉ\n    V ‚àà\n      <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">sets</span> := <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span>, <span class=\"fn\">nonempty</span> := <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span></span>)</span>,\n          <span class=\"fn\">inter_sets</span> := <span class=\"fn\">(_ : <span class=\"fn\">‚àÄ {<span class=\"fn\">x </span>y : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span></span> ‚Üí <span class=\"fn\">‚àÉ z ‚àà <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span>, <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">‚à©</a> <span class=\"fn\">y</span></span></span></span></span></span></span>)</span> }</span>.sets</span>,\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">V</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">U</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L121-L122","name":"AddGroupFilterBasis.instInhabitedAddGroupFilterBasis.proof_5","line":121,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.instInhabitedAddGroupFilterBasis.proof_5","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.instInhabitedAddGroupFilterBasis.proof_5\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">instInhabitedAddGroupFilterBasis</span>.<span class=\"name\">proof_5</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a>     <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">sets</span> := <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span>, <span class=\"fn\">nonempty</span> := <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span></span>)</span>,\n        <span class=\"fn\">inter_sets</span> := <span class=\"fn\">(_ : <span class=\"fn\">‚àÄ {<span class=\"fn\">x </span>y : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span></span> ‚Üí <span class=\"fn\">‚àÉ z ‚àà <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span>, <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">‚à©</a> <span class=\"fn\">y</span></span></span></span></span></span></span>)</span> }</span>.sets</span></span> ‚Üí\n  <span class=\"fn\">‚àÉ\n    V ‚àà\n      <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">sets</span> := <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span>, <span class=\"fn\">nonempty</span> := <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span></span>)</span>,\n          <span class=\"fn\">inter_sets</span> := <span class=\"fn\">(_ : <span class=\"fn\">‚àÄ {<span class=\"fn\">x </span>y : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span></span> ‚Üí <span class=\"fn\">‚àÉ z ‚àà <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span>, <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">‚à©</a> <span class=\"fn\">y</span></span></span></span></span></span></span>)</span> }</span>.sets</span>,\n    <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">‚Åª¬π'</a> <span class=\"fn\">U</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L121-L122","name":"AddGroupFilterBasis.instInhabitedAddGroupFilterBasis.proof_3","line":121,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.instInhabitedAddGroupFilterBasis.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.instInhabitedAddGroupFilterBasis.proof_3\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">instInhabitedAddGroupFilterBasis</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a>     <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">sets</span> := <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span>, <span class=\"fn\">nonempty</span> := <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span></span>)</span>,\n        <span class=\"fn\">inter_sets</span> := <span class=\"fn\">(_ : <span class=\"fn\">‚àÄ {<span class=\"fn\">x </span>y : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span></span> ‚Üí <span class=\"fn\">‚àÉ z ‚àà <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span>, <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">‚à©</a> <span class=\"fn\">y</span></span></span></span></span></span></span>)</span> }</span>.sets</span></span> ‚Üí\n  <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">U</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L121-L122","name":"AddGroupFilterBasis.instInhabitedAddGroupFilterBasis.proof_6","line":121,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.instInhabitedAddGroupFilterBasis.proof_6","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.instInhabitedAddGroupFilterBasis.proof_6\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">instInhabitedAddGroupFilterBasis</span>.<span class=\"name\">proof_6</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x‚ÇÄ : <span class=\"fn\">G</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a>     <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">sets</span> := <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span>, <span class=\"fn\">nonempty</span> := <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span></span>)</span>,\n        <span class=\"fn\">inter_sets</span> := <span class=\"fn\">(_ : <span class=\"fn\">‚àÄ {<span class=\"fn\">x </span>y : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span></span> ‚Üí <span class=\"fn\">‚àÉ z ‚àà <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span>, <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">‚à©</a> <span class=\"fn\">y</span></span></span></span></span></span></span>)</span> }</span>.sets</span></span> ‚Üí\n  <span class=\"fn\">‚àÉ\n    V ‚àà\n      <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">sets</span> := <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span>, <span class=\"fn\">nonempty</span> := <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span></span>)</span>,\n          <span class=\"fn\">inter_sets</span> := <span class=\"fn\">(_ : <span class=\"fn\">‚àÄ {<span class=\"fn\">x </span>y : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span></span> ‚Üí <span class=\"fn\">‚àÉ z ‚àà <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span>, <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">‚à©</a> <span class=\"fn\">y</span></span></span></span></span></span></span>)</span> }</span>.sets</span>,\n    <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x‚ÇÄ</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x‚ÇÄ</span></span></span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">‚Åª¬π'</a> <span class=\"fn\">U</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L121-L122","name":"AddGroupFilterBasis.instInhabitedAddGroupFilterBasis.proof_2","line":121,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.instInhabitedAddGroupFilterBasis.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.instInhabitedAddGroupFilterBasis.proof_2\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">instInhabitedAddGroupFilterBasis</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span></span> ‚Üí <span class=\"fn\">‚àÉ z ‚àà <span class=\"fn\">{<span class=\"fn\">{<span class=\"fn\">0</span>}</span>}</span>, <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">‚à©</a> <span class=\"fn\">y</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L114-L115","name":"GroupFilterBasis.conj","line":114,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.conj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.conj\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">conj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x‚ÇÄ : <span class=\"fn\">G</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">B</span></span> ‚Üí <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\">B</span>, <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x‚ÇÄ</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">x‚ÇÄ</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">‚Åª¬π</a></span></span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">‚Åª¬π'</a> <span class=\"fn\">U</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L113-L113","name":"AddGroupFilterBasis.conj","line":113,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.conj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.conj\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">conj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x‚ÇÄ : <span class=\"fn\">G</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">B</span></span> ‚Üí <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\">B</span>, <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x‚ÇÄ</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x‚ÇÄ</span></span></span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">‚Åª¬π'</a> <span class=\"fn\">U</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L108-L109","name":"GroupFilterBasis.inv","line":108,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.inv\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">B</span></span> ‚Üí <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\">B</span>, <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">‚Åª¬π</a></span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">‚Åª¬π'</a> <span class=\"fn\">U</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L107-L107","name":"AddGroupFilterBasis.neg","line":107,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.neg\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">B</span></span> ‚Üí <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\">B</span>, <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">‚Åª¬π'</a> <span class=\"fn\">U</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L102-L103","name":"GroupFilterBasis.mul","line":102,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.mul\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">B</span></span> ‚Üí <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\">B</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">V</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">U</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L101-L101","name":"AddGroupFilterBasis.add","line":101,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.add\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">B</span></span> ‚Üí <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\">B</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">V</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">U</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L96-L97","name":"GroupFilterBasis.one","line":96,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.one\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">B</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">U</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L95-L95","name":"AddGroupFilterBasis.zero","line":95,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.zero\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">B</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">U</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L92-L93","name":"GroupFilterBasis.instMembershipSetGroupFilterBasis","line":92,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.instMembershipSetGroupFilterBasis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.instMembershipSetGroupFilterBasis\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">instMembershipSetGroupFilterBasis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Membership\">Membership</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L91-L91","name":"AddGroupFilterBasis.instMembershipSetAddGroupFilterBasis","line":91,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.instMembershipSetAddGroupFilterBasis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.instMembershipSetAddGroupFilterBasis\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">instMembershipSetAddGroupFilterBasis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Membership\">Membership</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L73-L83","name":"groupFilterBasisOfComm","line":73,"kind":"def","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#groupFilterBasisOfComm","doc":"`GroupFilterBasis` constructor in the commutative group case. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#groupFilterBasisOfComm\"><span class=\"name\">groupFilterBasisOfComm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(sets : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(nonempty : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">sets</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(inter_sets : <span class=\"fn\">‚àÄ (<span class=\"fn\">x </span>y : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">sets</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">sets</span></span> ‚Üí <span class=\"fn\">‚àÉ z ‚àà <span class=\"fn\">sets</span>, <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">‚à©</a> <span class=\"fn\">y</span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(one : <span class=\"fn\">‚àÄ <span class=\"fn\">U</span> ‚àà <span class=\"fn\">sets</span>, <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">U</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mul : <span class=\"fn\">‚àÄ <span class=\"fn\">U</span> ‚àà <span class=\"fn\">sets</span>, <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\">sets</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">V</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">U</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(inv : <span class=\"fn\">‚àÄ <span class=\"fn\">U</span> ‚àà <span class=\"fn\">sets</span>, <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\">sets</span>, <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">‚Åª¬π</a></span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">‚Åª¬π'</a> <span class=\"fn\">U</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L72-L72","name":"addGroupFilterBasisOfComm","line":72,"kind":"def","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#addGroupFilterBasisOfComm","doc":"`AddGroupFilterBasis` constructor in the additive commutative group case."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#addGroupFilterBasisOfComm\"><span class=\"name\">addGroupFilterBasisOfComm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(sets : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(nonempty : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">sets</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(inter_sets : <span class=\"fn\">‚àÄ (<span class=\"fn\">x </span>y : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">sets</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">sets</span></span> ‚Üí <span class=\"fn\">‚àÉ z ‚àà <span class=\"fn\">sets</span>, <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">‚à©</a> <span class=\"fn\">y</span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(one : <span class=\"fn\">‚àÄ <span class=\"fn\">U</span> ‚àà <span class=\"fn\">sets</span>, <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">U</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mul : <span class=\"fn\">‚àÄ <span class=\"fn\">U</span> ‚àà <span class=\"fn\">sets</span>, <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\">sets</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">V</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">U</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(inv : <span class=\"fn\">‚àÄ <span class=\"fn\">U</span> ‚àà <span class=\"fn\">sets</span>, <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\">sets</span>, <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">‚Åª¬π'</a> <span class=\"fn\">U</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L72-L72","name":"addGroupFilterBasisOfComm.proof_1","line":72,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#addGroupFilterBasisOfComm.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#addGroupFilterBasisOfComm.proof_1\"><span class=\"name\">addGroupFilterBasisOfComm</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(sets : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(nonempty : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">sets</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(inter_sets : <span class=\"fn\">‚àÄ (<span class=\"fn\">x </span>y : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">sets</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">sets</span></span> ‚Üí <span class=\"fn\">‚àÉ z ‚àà <span class=\"fn\">sets</span>, <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">‚à©</a> <span class=\"fn\">y</span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(U_in : <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a>   <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">sets</span> := <span class=\"fn\">sets</span>, <span class=\"fn\">nonempty</span> := <span class=\"fn\">nonempty</span>,\n      <span class=\"fn\">inter_sets</span> := <span class=\"fn\">(_ : <span class=\"fn\">‚àÄ {<span class=\"fn\">x </span>y : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">sets</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">sets</span></span> ‚Üí <span class=\"fn\">‚àÉ z ‚àà <span class=\"fn\">sets</span>, <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">‚à©</a> <span class=\"fn\">y</span></span></span></span></span></span></span>)</span> }</span>.sets</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ\n  V ‚àà\n    <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">sets</span> := <span class=\"fn\">sets</span>, <span class=\"fn\">nonempty</span> := <span class=\"fn\">nonempty</span>,\n        <span class=\"fn\">inter_sets</span> := <span class=\"fn\">(_ : <span class=\"fn\">‚àÄ {<span class=\"fn\">x </span>y : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">sets</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">sets</span></span> ‚Üí <span class=\"fn\">‚àÉ z ‚àà <span class=\"fn\">sets</span>, <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">‚à©</a> <span class=\"fn\">y</span></span></span></span></span></span></span>)</span> }</span>.sets</span>,\n  <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x_1</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span></span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">‚Åª¬π'</a> <span class=\"fn\">U</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L65-L65","name":"AddGroupFilterBasis.conj'","line":65,"kind":"def","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.conj'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.conj'\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">conj'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x‚ÇÄ : <span class=\"fn\">A</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">self</span>.sets</span></span> ‚Üí <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\"><span class=\"fn\">self</span>.sets</span>, <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">A</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x‚ÇÄ</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x‚ÇÄ</span></span></span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">‚Åª¬π'</a> <span class=\"fn\">U</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L64-L64","name":"AddGroupFilterBasis.neg'","line":64,"kind":"def","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.neg'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.neg'\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">neg'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">self</span>.sets</span></span> ‚Üí <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\"><span class=\"fn\">self</span>.sets</span>, <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">A</span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">‚Åª¬π'</a> <span class=\"fn\">U</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L63-L63","name":"AddGroupFilterBasis.add'","line":63,"kind":"def","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.add'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.add'\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">add'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">self</span>.sets</span></span> ‚Üí <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\"><span class=\"fn\">self</span>.sets</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">V</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">U</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L62-L62","name":"AddGroupFilterBasis.zero'","line":62,"kind":"def","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.zero'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.zero'\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">zero'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">self</span>.sets</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">U</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L61-L61","name":"AddGroupFilterBasis.mk","line":61,"kind":"ctor","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.mk\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(toFilterBasis : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases.html#FilterBasis\">FilterBasis</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(zero' : <span class=\"fn\">‚àÄ {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">A</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">toFilterBasis</span>.sets</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">U</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(add' : <span class=\"fn\">‚àÄ {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">A</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">toFilterBasis</span>.sets</span></span> ‚Üí <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\"><span class=\"fn\">toFilterBasis</span>.sets</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">V</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">U</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(neg' : <span class=\"fn\">‚àÄ {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">A</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">toFilterBasis</span>.sets</span></span> ‚Üí <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\"><span class=\"fn\">toFilterBasis</span>.sets</span>, <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">A</span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">‚Åª¬π'</a> <span class=\"fn\">U</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(conj' : <span class=\"fn\">‚àÄ (<span class=\"fn\">x‚ÇÄ</span> : <span class=\"fn\">A</span>) {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">A</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">toFilterBasis</span>.sets</span></span> ‚Üí <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\"><span class=\"fn\">toFilterBasis</span>.sets</span>, <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">A</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x‚ÇÄ</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x‚ÇÄ</span></span></span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">‚Åª¬π'</a> <span class=\"fn\">U</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L61-L65","name":"AddGroupFilterBasis","line":61,"kind":"class","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis","doc":"An `AddGroupFilterBasis` on an additive group is a `FilterBasis` satisfying some additional\naxioms. Example : if `G` is a topological group then the neighbourhoods of the identity are an\n`AddGroupFilterBasis`. Conversely given an `AddGroupFilterBasis` one can define a topology\ncompatible with the group structure on `G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\"><span class=\"name\">AddGroupFilterBasis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/Bases.html#FilterBasis\"><span class=\"name\">FilterBasis</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L54-L54","name":"GroupFilterBasis.conj'","line":54,"kind":"def","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.conj'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.conj'\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">conj'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x‚ÇÄ : <span class=\"fn\">G</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">self</span>.sets</span></span> ‚Üí <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\"><span class=\"fn\">self</span>.sets</span>, <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x‚ÇÄ</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">x‚ÇÄ</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">‚Åª¬π</a></span></span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">‚Åª¬π'</a> <span class=\"fn\">U</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L53-L53","name":"GroupFilterBasis.inv'","line":53,"kind":"def","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.inv'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.inv'\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">inv'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">self</span>.sets</span></span> ‚Üí <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\"><span class=\"fn\">self</span>.sets</span>, <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">‚Åª¬π</a></span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">‚Åª¬π'</a> <span class=\"fn\">U</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L52-L52","name":"GroupFilterBasis.mul'","line":52,"kind":"def","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.mul'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.mul'\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">mul'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">self</span>.sets</span></span> ‚Üí <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\"><span class=\"fn\">self</span>.sets</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">V</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">U</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L51-L51","name":"GroupFilterBasis.one'","line":51,"kind":"def","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.one'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.one'\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">one'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">self</span>.sets</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">U</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L50-L50","name":"GroupFilterBasis.mk","line":50,"kind":"ctor","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.mk\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(toFilterBasis : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases.html#FilterBasis\">FilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(one' : <span class=\"fn\">‚àÄ {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">toFilterBasis</span>.sets</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">U</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mul' : <span class=\"fn\">‚àÄ {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">toFilterBasis</span>.sets</span></span> ‚Üí <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\"><span class=\"fn\">toFilterBasis</span>.sets</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">V</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">U</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(inv' : <span class=\"fn\">‚àÄ {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">toFilterBasis</span>.sets</span></span> ‚Üí <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\"><span class=\"fn\">toFilterBasis</span>.sets</span>, <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">‚Åª¬π</a></span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">‚Åª¬π'</a> <span class=\"fn\">U</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(conj' : <span class=\"fn\">‚àÄ (<span class=\"fn\">x‚ÇÄ</span> : <span class=\"fn\">G</span>) {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">toFilterBasis</span>.sets</span></span> ‚Üí <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\"><span class=\"fn\">toFilterBasis</span>.sets</span>, <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x‚ÇÄ</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">x‚ÇÄ</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">‚Åª¬π</a></span></span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">‚Åª¬π'</a> <span class=\"fn\">U</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Algebra/FilterBasis.lean#L50-L54","name":"GroupFilterBasis","line":50,"kind":"class","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis","doc":"A `GroupFilterBasis` on a group is a `FilterBasis` satisfying some additional axioms.\nExample : if `G` is a topological group then the neighbourhoods of the identity are a\n`GroupFilterBasis`. Conversely given a `GroupFilterBasis` one can define a topology\ncompatible with the group structure on `G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\"><span class=\"name\">GroupFilterBasis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/Order/Filter/Bases.html#FilterBasis\"><span class=\"name\">FilterBasis</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"}]}