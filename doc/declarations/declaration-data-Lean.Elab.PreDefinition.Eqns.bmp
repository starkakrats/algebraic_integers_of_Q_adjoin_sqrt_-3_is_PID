{"name":"Lean.Elab.PreDefinition.Eqns","instances":[{"typeNames":["Lean.Elab.Eqns.EqnInfoCore"],"name":"Lean.Elab.Eqns.instInhabitedEqnInfoCore","className":"Inhabited"},{"typeNames":["Lean.Elab.Eqns.UnfoldEqnExtState"],"name":"Lean.Elab.Eqns.instInhabitedUnfoldEqnExtState","className":"Inhabited"}],"imports":["Init","Lean.Meta.Eqns","Lean.Util.CollectFVars","Lean.Util.ForEachExprWhere","Lean.Meta.Tactic.Split","Lean.Meta.Tactic.Apply","Lean.Meta.Tactic.Refl","Lean.Meta.Match.MatchEqs"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L387-L396","name":"Lean.Elab.Eqns.getUnfoldFor?","line":387,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.getUnfoldFor?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.getUnfoldFor?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">getUnfoldFor?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(getInfo? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Unit\">Unit</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.EqnInfoCore\">Lean.Elab.Eqns.EqnInfoCore</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L369-L385","name":"Lean.Elab.Eqns.mkUnfoldEq","line":369,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.mkUnfoldEq","doc":"Generate the \"unfold\" lemma for `declName`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.mkUnfoldEq\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">mkUnfoldEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(info : <a href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.EqnInfoCore\">Lean.Elab.Eqns.EqnInfoCore</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L348-L365","name":"Lean.Elab.Eqns.mkUnfoldProof.go","line":348,"kind":"opaque","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.mkUnfoldProof.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.mkUnfoldProof.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">mkUnfoldProof</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tryEqns : <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L335-L366","name":"Lean.Elab.Eqns.mkUnfoldProof","line":335,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.mkUnfoldProof","doc":"Auxiliary method for `mkUnfoldEq`. The structure is based on `mkEqnTypes`.\n`mvarId` is the goal to be proved. It is a goal of the form\n```\ndeclName x_1 ... x_n = body[x_1, ..., x_n]\n```\nThe proof is constructed using the automatically generated equational theorems.\nWe basically keep splitting the `match` and `if-then-else` expressions in the right hand side\nuntil one of the equational theorems is applicable.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.mkUnfoldProof\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">mkUnfoldProof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L322-L323","name":"Lean.Elab.Eqns.unfoldEqnExt","line":322,"kind":"opaque","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.unfoldEqnExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.unfoldEqnExt\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">unfoldEqnExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtension\">Lean.EnvExtension</a> <a href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.UnfoldEqnExtState\">Lean.Elab.Eqns.UnfoldEqnExtState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L319-L319","name":"Lean.Elab.Eqns.instInhabitedUnfoldEqnExtState","line":319,"kind":"instance","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.instInhabitedUnfoldEqnExtState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.instInhabitedUnfoldEqnExtState\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">instInhabitedUnfoldEqnExtState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.UnfoldEqnExtState\">Lean.Elab.Eqns.UnfoldEqnExtState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L318-L318","name":"Lean.Elab.Eqns.UnfoldEqnExtState.map","line":318,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.UnfoldEqnExtState.map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.UnfoldEqnExtState.map\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">UnfoldEqnExtState</span>.<span class=\"name\">map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.UnfoldEqnExtState\">Lean.Elab.Eqns.UnfoldEqnExtState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PHashMap\">Lean.PHashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L317-L317","name":"Lean.Elab.Eqns.UnfoldEqnExtState.mk","line":317,"kind":"ctor","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.UnfoldEqnExtState.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.UnfoldEqnExtState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">UnfoldEqnExtState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(map : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PHashMap\">Lean.PHashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.UnfoldEqnExtState\">Lean.Elab.Eqns.UnfoldEqnExtState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L317-L319","name":"Lean.Elab.Eqns.UnfoldEqnExtState","line":317,"kind":"structure","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.UnfoldEqnExtState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.UnfoldEqnExtState\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">UnfoldEqnExtState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L314-L315","name":"Lean.Elab.Eqns.tryContradiction","line":314,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.tryContradiction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.tryContradiction\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">tryContradiction</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L305-L312","name":"Lean.Elab.Eqns.whnfReducibleLHS?","line":305,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.whnfReducibleLHS?","doc":"Apply `whnfR` to lhs, return `none` if `lhs` was not modified "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.whnfReducibleLHS?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">whnfReducibleLHS?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L291-L295","name":"Lean.Elab.Eqns.deltaRHS?","line":291,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.deltaRHS?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.deltaRHS?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">deltaRHS?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L285-L289","name":"Lean.Elab.Eqns.deltaLHS","line":285,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.deltaLHS","doc":"Delta reduce the equation left-hand-side "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.deltaLHS\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">deltaLHS</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L263-L282","name":"Lean.Elab.Eqns.removeUnusedEqnHypotheses.go","line":263,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.removeUnusedEqnHypotheses.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.removeUnusedEqnHypotheses.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">removeUnusedEqnHypotheses</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declType : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declValue : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(type : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(value : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(xs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L260-L282","name":"Lean.Elab.Eqns.removeUnusedEqnHypotheses","line":260,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.removeUnusedEqnHypotheses","doc":"Some of the hypotheses added by `mkEqnTypes` may not be used by the actual proof (i.e., `value` argument).\nThis method eliminates them.\n\nAlternative solution: improve `saveEqn` and make sure it never includes unnecessary hypotheses.\nThese hypotheses are leftovers from tactics such as `splitMatch?` used in `mkEqnTypes`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.removeUnusedEqnHypotheses\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">removeUnusedEqnHypotheses</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declType : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declValue : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L232-L251","name":"Lean.Elab.Eqns.mkEqnTypes.go","line":232,"kind":"opaque","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.mkEqnTypes.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.mkEqnTypes.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">mkEqnTypes</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#ReaderT\">ReaderT</a> <a href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.Context\">Lean.Elab.Eqns.Context</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Control/StateRef.html#StateRefT'\">StateRefT'</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a></span>)</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L228-L251","name":"Lean.Elab.Eqns.mkEqnTypes","line":228,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.mkEqnTypes","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.mkEqnTypes\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">mkEqnTypes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L149-L158","name":"Lean.Elab.Eqns.simpEqnType.collect","line":149,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.simpEqnType.collect","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.simpEqnType.collect\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">simpEqnType</span>.<span class=\"name\">collect</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.FVarIdSet\">Lean.FVarIdSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L121-L158","name":"Lean.Elab.Eqns.simpEqnType","line":121,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.simpEqnType","doc":"Eliminate `namedPatterns` from equation, and trivial hypotheses.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.simpEqnType\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">simpEqnType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(eqnType : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L114-L116","name":"Lean.Elab.Eqns.tryURefl","line":114,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.tryURefl","doc":"Try to close goal using `rfl` with smart unfolding turned off. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.tryURefl\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">tryURefl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L104-L104","name":"Lean.Elab.Eqns.Context.declNames","line":104,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.Context.declNames","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.Context.declNames\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">Context</span>.<span class=\"name\">declNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.Context\">Lean.Elab.Eqns.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L103-L103","name":"Lean.Elab.Eqns.Context.mk","line":103,"kind":"ctor","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.Context.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.Context.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.Context\">Lean.Elab.Eqns.Context</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L103-L104","name":"Lean.Elab.Eqns.Context","line":103,"kind":"structure","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.Context","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.Context\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L92-L100","name":"Lean.Elab.Eqns.splitMatch?.go","line":92,"kind":"opaque","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.splitMatch?.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.splitMatch?.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">splitMatch?</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(target : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(badCases : <a href=\"./Lean/Expr.html#Lean.ExprSet\">Lean.ExprSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L90-L101","name":"Lean.Elab.Eqns.splitMatch?","line":90,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.splitMatch?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.splitMatch?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">splitMatch?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L57-L59","name":"Lean.Elab.Eqns.simpIf?","line":57,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.simpIf?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.simpIf?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">simpIf?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L53-L55","name":"Lean.Elab.Eqns.simpMatch?","line":53,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.simpMatch?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.simpMatch?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">simpMatch?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L44-L51","name":"Lean.Elab.Eqns.funext?","line":44,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.funext?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.funext?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">funext?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L38-L42","name":"Lean.Elab.Eqns.expandRHS?","line":38,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.expandRHS?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.expandRHS?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">expandRHS?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L28-L36","name":"Lean.Elab.Eqns.expand","line":28,"kind":"opaque","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.expand","doc":"Zeta reduces `let` and `let_fun` while consuming metadata.\nReturns true if progress is made.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.expand\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">expand</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(progress : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L22-L22","name":"Lean.Elab.Eqns.instInhabitedEqnInfoCore","line":22,"kind":"instance","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.instInhabitedEqnInfoCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.instInhabitedEqnInfoCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">instInhabitedEqnInfoCore</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.EqnInfoCore\">Lean.Elab.Eqns.EqnInfoCore</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L21-L21","name":"Lean.Elab.Eqns.EqnInfoCore.value","line":21,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.EqnInfoCore.value","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.EqnInfoCore.value\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">EqnInfoCore</span>.<span class=\"name\">value</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.EqnInfoCore\">Lean.Elab.Eqns.EqnInfoCore</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L20-L20","name":"Lean.Elab.Eqns.EqnInfoCore.type","line":20,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.EqnInfoCore.type","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.EqnInfoCore.type\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">EqnInfoCore</span>.<span class=\"name\">type</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.EqnInfoCore\">Lean.Elab.Eqns.EqnInfoCore</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L19-L19","name":"Lean.Elab.Eqns.EqnInfoCore.levelParams","line":19,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.EqnInfoCore.levelParams","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.EqnInfoCore.levelParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">EqnInfoCore</span>.<span class=\"name\">levelParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.EqnInfoCore\">Lean.Elab.Eqns.EqnInfoCore</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L18-L18","name":"Lean.Elab.Eqns.EqnInfoCore.declName","line":18,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.EqnInfoCore.declName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.EqnInfoCore.declName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">EqnInfoCore</span>.<span class=\"name\">declName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.EqnInfoCore\">Lean.Elab.Eqns.EqnInfoCore</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L17-L17","name":"Lean.Elab.Eqns.EqnInfoCore.mk","line":17,"kind":"ctor","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.EqnInfoCore.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.EqnInfoCore.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">EqnInfoCore</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(levelParams : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(type : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(value : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.EqnInfoCore\">Lean.Elab.Eqns.EqnInfoCore</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/PreDefinition/Eqns.lean#L17-L22","name":"Lean.Elab.Eqns.EqnInfoCore","line":17,"kind":"structure","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.EqnInfoCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.EqnInfoCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Eqns</span>.<span class=\"name\">EqnInfoCore</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}