{"name":"Mathlib.Algebra.Category.MonCat.FilteredColimits","instances":[{"typeNames":["AddMonCat.FilteredColimits.M"],"name":"AddMonCat.FilteredColimits.colimitZero","className":"Zero"},{"typeNames":["MonCat.FilteredColimits.M"],"name":"MonCat.FilteredColimits.colimitOne","className":"One"},{"typeNames":["AddMonCat.FilteredColimits.M"],"name":"AddMonCat.FilteredColimits.colimitAdd","className":"Add"},{"typeNames":["MonCat.FilteredColimits.M"],"name":"MonCat.FilteredColimits.colimitMul","className":"Mul"},{"typeNames":["AddMonCat.FilteredColimits.M"],"name":"AddMonCat.FilteredColimits.colimitAddZeroClass","className":"AddZeroClass"},{"typeNames":["MonCat.FilteredColimits.M"],"name":"MonCat.FilteredColimits.colimitMulOneClass","className":"MulOneClass"},{"typeNames":["AddMonCat.FilteredColimits.M"],"name":"AddMonCat.FilteredColimits.colimitAddMonoid","className":"AddMonoid"},{"typeNames":["MonCat.FilteredColimits.M"],"name":"MonCat.FilteredColimits.colimitMonoid","className":"Monoid"},{"typeNames":["CategoryTheory.forget"],"name":"AddMonCat.FilteredColimits.forgetPreservesFilteredColimits","className":"CategoryTheory.Limits.PreservesFilteredColimits"},{"typeNames":["CategoryTheory.forget"],"name":"MonCat.FilteredColimits.forgetPreservesFilteredColimits","className":"CategoryTheory.Limits.PreservesFilteredColimits"},{"typeNames":["CategoryTheory.Bundled.α"],"name":"AddCommMonCat.FilteredColimits.colimitAddCommMonoid","className":"AddCommMonoid"},{"typeNames":["CategoryTheory.Bundled.α"],"name":"CommMonCat.FilteredColimits.colimitCommMonoid","className":"CommMonoid"},{"typeNames":["CategoryTheory.forget₂"],"name":"AddCommMonCat.FilteredColimits.forget₂AddMonPreservesFilteredColimits","className":"CategoryTheory.Limits.PreservesFilteredColimits"},{"typeNames":["CategoryTheory.forget₂"],"name":"CommMonCat.FilteredColimits.forget₂MonPreservesFilteredColimits","className":"CategoryTheory.Limits.PreservesFilteredColimits"},{"typeNames":["CategoryTheory.forget"],"name":"AddCommMonCat.FilteredColimits.forgetPreservesFilteredColimits","className":"CategoryTheory.Limits.PreservesFilteredColimits"},{"typeNames":["CategoryTheory.forget"],"name":"CommMonCat.FilteredColimits.forgetPreservesFilteredColimits","className":"CategoryTheory.Limits.PreservesFilteredColimits"}],"imports":["Init","Mathlib.Algebra.Category.MonCat.Basic","Mathlib.CategoryTheory.Limits.Preserves.Filtered","Mathlib.CategoryTheory.ConcreteCategory.Elementwise","Mathlib.CategoryTheory.Limits.Types"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L430-L432","name":"CommMonCat.FilteredColimits.forgetPreservesFilteredColimits","line":430,"kind":"instance","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#CommMonCat.FilteredColimits.forgetPreservesFilteredColimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#CommMonCat.FilteredColimits.forgetPreservesFilteredColimits\"><span class=\"name\">CommMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">forgetPreservesFilteredColimits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Filtered.html#CategoryTheory.Limits.PreservesFilteredColimits\">CategoryTheory.Limits.PreservesFilteredColimits</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#CommMonCat\">CommMonCat</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L429-L429","name":"AddCommMonCat.FilteredColimits.forgetPreservesFilteredColimits","line":429,"kind":"instance","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddCommMonCat.FilteredColimits.forgetPreservesFilteredColimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddCommMonCat.FilteredColimits.forgetPreservesFilteredColimits\"><span class=\"name\">AddCommMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">forgetPreservesFilteredColimits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Filtered.html#CategoryTheory.Limits.PreservesFilteredColimits\">CategoryTheory.Limits.PreservesFilteredColimits</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddCommMonCat\">AddCommMonCat</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L421-L425","name":"CommMonCat.FilteredColimits.forget₂MonPreservesFilteredColimits","line":421,"kind":"instance","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#CommMonCat.FilteredColimits.forget₂MonPreservesFilteredColimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#CommMonCat.FilteredColimits.forget₂MonPreservesFilteredColimits\"><span class=\"name\">CommMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">forget₂MonPreservesFilteredColimits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Filtered.html#CategoryTheory.Limits.PreservesFilteredColimits\">CategoryTheory.Limits.PreservesFilteredColimits</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#CommMonCat\">CommMonCat</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L420-L420","name":"AddCommMonCat.FilteredColimits.forget₂AddMonPreservesFilteredColimits","line":420,"kind":"instance","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddCommMonCat.FilteredColimits.forget₂AddMonPreservesFilteredColimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddCommMonCat.FilteredColimits.forget₂AddMonPreservesFilteredColimits\"><span class=\"name\">AddCommMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">forget₂AddMonPreservesFilteredColimits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Filtered.html#CategoryTheory.Limits.PreservesFilteredColimits\">CategoryTheory.Limits.PreservesFilteredColimits</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddCommMonCat\">AddCommMonCat</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L403-L416","name":"CommMonCat.FilteredColimits.colimitCoconeIsColimit","line":403,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#CommMonCat.FilteredColimits.colimitCoconeIsColimit","doc":"The proposed colimit cocone is a colimit in `CommMonCat`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#CommMonCat.FilteredColimits.colimitCoconeIsColimit\"><span class=\"name\">CommMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitCoconeIsColimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#CommMonCat\">CommMonCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">CategoryTheory.Limits.IsColimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#CommMonCat.FilteredColimits.colimitCocone\">CommMonCat.FilteredColimits.colimitCocone</a> <span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L402-L402","name":"AddCommMonCat.FilteredColimits.colimitCoconeIsColimit","line":402,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddCommMonCat.FilteredColimits.colimitCoconeIsColimit","doc":"The proposed colimit cocone is a colimit in `AddCommMon`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddCommMonCat.FilteredColimits.colimitCoconeIsColimit\"><span class=\"name\">AddCommMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitCoconeIsColimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddCommMonCat\">AddCommMonCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">CategoryTheory.Limits.IsColimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddCommMonCat.FilteredColimits.colimitCocone\">AddCommMonCat.FilteredColimits.colimitCocone</a> <span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L402-L402","name":"AddCommMonCat.FilteredColimits.colimitCoconeIsColimit.proof_2","line":402,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddCommMonCat.FilteredColimits.colimitCoconeIsColimit.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddCommMonCat.FilteredColimits.colimitCoconeIsColimit.proof_2\"><span class=\"name\">AddCommMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitCoconeIsColimit</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddCommMonCat\">AddCommMonCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone\">CategoryTheory.Limits.Cocone</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddCommMonCat.FilteredColimits.colimitCocone\">AddCommMonCat.FilteredColimits.colimitCocone</a> <span class=\"fn\">F</span></span>)</span>.pt</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">t</span>.pt</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddCommMonCat.FilteredColimits.colimitCocone\">AddCommMonCat.FilteredColimits.colimitCocone</a> <span class=\"fn\">F</span></span>)</span>.ι</span>.app <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t</span>.ι</span>.app <span class=\"fn\">j</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone\">CategoryTheory.Limits.Cocone</a> <span class=\"fn\">F</span></span>) =&gt;\n      <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitDesc\">AddMonCat.FilteredColimits.colimitDesc</a>\n        <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddCommMonCat\">AddCommMonCat</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>)</span>\n        <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddCommMonCat\">AddCommMonCat</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span>.mapCocone <span class=\"fn\">t</span></span>)</span></span></span>)</span>\n    <span class=\"fn\">t</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L402-L402","name":"AddCommMonCat.FilteredColimits.colimitCoconeIsColimit.proof_1","line":402,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddCommMonCat.FilteredColimits.colimitCoconeIsColimit.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddCommMonCat.FilteredColimits.colimitCoconeIsColimit.proof_1\"><span class=\"name\">AddCommMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitCoconeIsColimit</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddCommMonCat\">AddCommMonCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone\">CategoryTheory.Limits.Cocone</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddCommMonCat.FilteredColimits.colimitCocone\">AddCommMonCat.FilteredColimits.colimitCocone</a> <span class=\"fn\">F</span></span>)</span>.ι</span>.app <span class=\"fn\">j</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone\">CategoryTheory.Limits.Cocone</a> <span class=\"fn\">F</span></span>) =&gt;\n        <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitDesc\">AddMonCat.FilteredColimits.colimitDesc</a>\n          <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddCommMonCat\">AddCommMonCat</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>)</span>\n          <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddCommMonCat\">AddCommMonCat</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span>.mapCocone <span class=\"fn\">t</span></span>)</span></span></span>)</span>\n      <span class=\"fn\">t</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t</span>.ι</span>.app <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L394-L397","name":"CommMonCat.FilteredColimits.colimitCocone","line":394,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#CommMonCat.FilteredColimits.colimitCocone","doc":"The cocone over the proposed colimit commutative monoid. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#CommMonCat.FilteredColimits.colimitCocone\"><span class=\"name\">CommMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitCocone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#CommMonCat\">CommMonCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone\">CategoryTheory.Limits.Cocone</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L393-L393","name":"AddCommMonCat.FilteredColimits.colimitCocone.proof_1","line":393,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddCommMonCat.FilteredColimits.colimitCocone.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddCommMonCat.FilteredColimits.colimitCocone.proof_1\"><span class=\"name\">AddCommMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitCocone</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddCommMonCat\">AddCommMonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃X : <span class=\"fn\">J</span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃Y : <span class=\"fn\">J</span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddCommMonCat\">AddCommMonCat</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>)</span>.map <span class=\"fn\">f</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitCocone\">AddMonCat.FilteredColimits.colimitCocone</a>\n            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddCommMonCat\">AddCommMonCat</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>)</span></span>)</span>.ι</span>.app\n      <span class=\"fn\">Y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitCocone\">AddMonCat.FilteredColimits.colimitCocone</a>\n            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddCommMonCat\">AddCommMonCat</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>)</span></span>)</span>.ι</span>.app\n      <span class=\"fn\">X</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Const.html#CategoryTheory.Functor.const\">CategoryTheory.Functor.const</a> <span class=\"fn\">J</span></span>)</span>.obj\n          <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitCocone\">AddMonCat.FilteredColimits.colimitCocone</a>\n              <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddCommMonCat\">AddCommMonCat</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>)</span></span>)</span>.pt</span></span>)</span>.map\n      <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L393-L393","name":"AddCommMonCat.FilteredColimits.colimitCocone","line":393,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddCommMonCat.FilteredColimits.colimitCocone","doc":"The cocone over the proposed colimit additive commutative monoid."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddCommMonCat.FilteredColimits.colimitCocone\"><span class=\"name\">AddCommMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitCocone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddCommMonCat\">AddCommMonCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone\">CategoryTheory.Limits.Cocone</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L387-L388","name":"CommMonCat.FilteredColimits.colimit","line":387,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#CommMonCat.FilteredColimits.colimit","doc":"The bundled commutative monoid giving the filtered colimit of a diagram. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#CommMonCat.FilteredColimits.colimit\"><span class=\"name\">CommMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#CommMonCat\">CommMonCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#CommMonCat\">CommMonCat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L386-L386","name":"AddCommMonCat.FilteredColimits.colimit","line":386,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddCommMonCat.FilteredColimits.colimit","doc":"The bundled additive commutative monoid giving the filtered colimit of a diagram."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddCommMonCat.FilteredColimits.colimit\"><span class=\"name\">AddCommMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddCommMonCat\">AddCommMonCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddCommMonCat\">AddCommMonCat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L369-L381","name":"CommMonCat.FilteredColimits.colimitCommMonoid","line":369,"kind":"instance","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#CommMonCat.FilteredColimits.colimitCommMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#CommMonCat.FilteredColimits.colimitCommMonoid\"><span class=\"name\">CommMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitCommMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#CommMonCat\">CommMonCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#CommMonCat.FilteredColimits.M\">CommMonCat.FilteredColimits.M</a> <span class=\"fn\">F</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L368-L368","name":"AddCommMonCat.FilteredColimits.colimitAddCommMonoid","line":368,"kind":"instance","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddCommMonCat.FilteredColimits.colimitAddCommMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddCommMonCat.FilteredColimits.colimitAddCommMonoid\"><span class=\"name\">AddCommMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitAddCommMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddCommMonCat\">AddCommMonCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddCommMonCat.FilteredColimits.M\">AddCommMonCat.FilteredColimits.M</a> <span class=\"fn\">F</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L368-L368","name":"AddCommMonCat.FilteredColimits.colimitAddCommMonoid.proof_1","line":368,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddCommMonCat.FilteredColimits.colimitAddCommMonoid.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddCommMonCat.FilteredColimits.colimitAddCommMonoid.proof_1\"><span class=\"name\">AddCommMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitAddCommMonoid</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddCommMonCat\">AddCommMonCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddCommMonCat.FilteredColimits.M\">AddCommMonCat.FilteredColimits.M</a> <span class=\"fn\">F</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddCommMonCat.FilteredColimits.M\">AddCommMonCat.FilteredColimits.M</a> <span class=\"fn\">F</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L363-L364","name":"CommMonCat.FilteredColimits.M","line":363,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#CommMonCat.FilteredColimits.M","doc":"The colimit of `F ⋙ forget₂ CommMonCat MonCat` in the category `MonCat`.\nIn the following, we will show that this has the structure of a _commutative_ monoid.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#CommMonCat.FilteredColimits.M\"><span class=\"name\">CommMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">M</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#CommMonCat\">CommMonCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L360-L362","name":"AddCommMonCat.FilteredColimits.M","line":360,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddCommMonCat.FilteredColimits.M","doc":"The colimit of `F ⋙ forget₂ AddCommMonCat AddMonCat` in the category `AddMonCat`. In the\nfollowing, we will show that this has the structure of a _commutative_ additive monoid."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddCommMonCat.FilteredColimits.M\"><span class=\"name\">AddCommMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">M</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddCommMonCat\">AddCommMonCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L338-L342","name":"MonCat.FilteredColimits.forgetPreservesFilteredColimits","line":338,"kind":"instance","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.forgetPreservesFilteredColimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.forgetPreservesFilteredColimits\"><span class=\"name\">MonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">forgetPreservesFilteredColimits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Filtered.html#CategoryTheory.Limits.PreservesFilteredColimits\">CategoryTheory.Limits.PreservesFilteredColimits</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L337-L337","name":"AddMonCat.FilteredColimits.forgetPreservesFilteredColimits","line":337,"kind":"instance","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.forgetPreservesFilteredColimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.forgetPreservesFilteredColimits\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">forgetPreservesFilteredColimits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Filtered.html#CategoryTheory.Limits.PreservesFilteredColimits\">CategoryTheory.Limits.PreservesFilteredColimits</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L326-L333","name":"MonCat.FilteredColimits.colimitCoconeIsColimit","line":326,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.colimitCoconeIsColimit","doc":"The proposed colimit cocone is a colimit in `MonCat`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.colimitCoconeIsColimit\"><span class=\"name\">MonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitCoconeIsColimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">CategoryTheory.Limits.IsColimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.colimitCocone\">MonCat.FilteredColimits.colimitCocone</a> <span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L325-L325","name":"AddMonCat.FilteredColimits.colimitCoconeIsColimit","line":325,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitCoconeIsColimit","doc":"The proposed colimit cocone is a colimit in `AddMon`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitCoconeIsColimit\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitCoconeIsColimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">CategoryTheory.Limits.IsColimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitCocone\">AddMonCat.FilteredColimits.colimitCocone</a> <span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L325-L325","name":"AddMonCat.FilteredColimits.colimitCoconeIsColimit.proof_2","line":325,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitCoconeIsColimit.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitCoconeIsColimit.proof_2\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitCoconeIsColimit</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone\">CategoryTheory.Limits.Cocone</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitCocone\">AddMonCat.FilteredColimits.colimitCocone</a> <span class=\"fn\">F</span></span>)</span>.pt</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">t</span>.pt</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitCocone\">AddMonCat.FilteredColimits.colimitCocone</a> <span class=\"fn\">F</span></span>)</span>.ι</span>.app <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t</span>.ι</span>.app <span class=\"fn\">j</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitDesc\">AddMonCat.FilteredColimits.colimitDesc</a> <span class=\"fn\">F</span> <span class=\"fn\">t</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L325-L325","name":"AddMonCat.FilteredColimits.colimitCoconeIsColimit.proof_1","line":325,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitCoconeIsColimit.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitCoconeIsColimit.proof_1\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitCoconeIsColimit</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone\">CategoryTheory.Limits.Cocone</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitCocone\">AddMonCat.FilteredColimits.colimitCocone</a> <span class=\"fn\">F</span></span>)</span>.ι</span>.app <span class=\"fn\">j</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitDesc\">AddMonCat.FilteredColimits.colimitDesc</a> <span class=\"fn\">F</span> <span class=\"fn\">t</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t</span>.ι</span>.app <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L301-L320","name":"MonCat.FilteredColimits.colimitDesc","line":301,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.colimitDesc","doc":"Given a cocone `t` of `F`, the induced monoid homomorphism from the colimit to the cocone point.\nAs a function, this is simply given by the induced map of the corresponding cocone in `Type`.\nThe only thing left to see is that it is a monoid homomorphism.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.colimitDesc\"><span class=\"name\">MonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitDesc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone\">CategoryTheory.Limits.Cocone</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.colimit\">MonCat.FilteredColimits.colimit</a> <span class=\"fn\">F</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">t</span>.pt</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L296-L300","name":"AddMonCat.FilteredColimits.colimitDesc.proof_2","line":296,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitDesc.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitDesc.proof_2\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitDesc</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone\">CategoryTheory.Limits.Cocone</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimit\">AddMonCat.FilteredColimits.colimit</a> <span class=\"fn\">F</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimit\">AddMonCat.FilteredColimits.colimit</a> <span class=\"fn\">F</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a>\n    <span class=\"fn\">{\n      <span class=\"fn\">toFun</span> :=\n        <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit.desc\">CategoryTheory.Limits.IsColimit.desc</a>\n          <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Types.html#CategoryTheory.Limits.Types.colimitCoconeIsColimit\">CategoryTheory.Limits.Types.colimitCoconeIsColimit</a>\n            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>)</span></span>)</span>\n          <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span>.mapCocone <span class=\"fn\">t</span></span>)</span></span>,\n      <span class=\"fn\">map_zero'</span> :=\n        <span class=\"fn\">(_ :\n          <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit.desc\">CategoryTheory.Limits.IsColimit.desc</a>\n              <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Types.html#CategoryTheory.Limits.Types.colimitCoconeIsColimit\">CategoryTheory.Limits.Types.colimitCoconeIsColimit</a>\n                <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>)</span></span>)</span>\n              <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span>.mapCocone <span class=\"fn\">t</span></span>)</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>             <span class=\"fn\">0</span></span>)</span> }</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a>\n      <span class=\"fn\">{\n        <span class=\"fn\">toFun</span> :=\n          <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit.desc\">CategoryTheory.Limits.IsColimit.desc</a>\n            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Types.html#CategoryTheory.Limits.Types.colimitCoconeIsColimit\">CategoryTheory.Limits.Types.colimitCoconeIsColimit</a>\n              <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>)</span></span>)</span>\n            <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span>.mapCocone <span class=\"fn\">t</span></span>)</span></span>,\n        <span class=\"fn\">map_zero'</span> :=\n          <span class=\"fn\">(_ :\n            <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit.desc\">CategoryTheory.Limits.IsColimit.desc</a>\n                <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Types.html#CategoryTheory.Limits.Types.colimitCoconeIsColimit\">CategoryTheory.Limits.Types.colimitCoconeIsColimit</a>\n                  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>)</span></span>)</span>\n                <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span>.mapCocone <span class=\"fn\">t</span></span>)</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>               <span class=\"fn\">0</span></span>)</span> }</span>\n      <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>     <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a>\n      <span class=\"fn\">{\n        <span class=\"fn\">toFun</span> :=\n          <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit.desc\">CategoryTheory.Limits.IsColimit.desc</a>\n            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Types.html#CategoryTheory.Limits.Types.colimitCoconeIsColimit\">CategoryTheory.Limits.Types.colimitCoconeIsColimit</a>\n              <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>)</span></span>)</span>\n            <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span>.mapCocone <span class=\"fn\">t</span></span>)</span></span>,\n        <span class=\"fn\">map_zero'</span> :=\n          <span class=\"fn\">(_ :\n            <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit.desc\">CategoryTheory.Limits.IsColimit.desc</a>\n                <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Types.html#CategoryTheory.Limits.Types.colimitCoconeIsColimit\">CategoryTheory.Limits.Types.colimitCoconeIsColimit</a>\n                  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>)</span></span>)</span>\n                <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span>.mapCocone <span class=\"fn\">t</span></span>)</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>               <span class=\"fn\">0</span></span>)</span> }</span>\n      <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L296-L300","name":"AddMonCat.FilteredColimits.colimitDesc.proof_1","line":296,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitDesc.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitDesc.proof_1\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitDesc</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone\">CategoryTheory.Limits.Cocone</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit.desc\">CategoryTheory.Limits.IsColimit.desc</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Types.html#CategoryTheory.Limits.Types.colimitCoconeIsColimit\">CategoryTheory.Limits.Types.colimitCoconeIsColimit</a>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span>.mapCocone <span class=\"fn\">t</span></span>)</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L296-L300","name":"AddMonCat.FilteredColimits.colimitDesc","line":296,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitDesc","doc":"Given a cocone `t` of `F`, the induced additive monoid homomorphism from the colimit\nto the cocone point. As a function, this is simply given by the induced map of the\ncorresponding cocone in `Type`. The only thing left to see is that it is an additive monoid\nhomomorphism."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitDesc\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitDesc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone\">CategoryTheory.Limits.Cocone</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimit\">AddMonCat.FilteredColimits.colimit</a> <span class=\"fn\">F</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">t</span>.pt</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L286-L288","name":"MonCat.FilteredColimits.colimitCocone","line":286,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.colimitCocone","doc":"The cocone over the proposed colimit monoid. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.colimitCocone\"><span class=\"name\">MonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitCocone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone\">CategoryTheory.Limits.Cocone</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L285-L285","name":"AddMonCat.FilteredColimits.colimitCocone","line":285,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitCocone","doc":"The cocone over the proposed colimit additive monoid."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitCocone\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitCocone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone\">CategoryTheory.Limits.Cocone</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L285-L285","name":"AddMonCat.FilteredColimits.colimitCocone.proof_1","line":285,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitCocone.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitCocone.proof_1\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitCocone</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃X : <span class=\"fn\">J</span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃Y : <span class=\"fn\">J</span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.map <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.coconeMorphism\">AddMonCat.FilteredColimits.coconeMorphism</a> <span class=\"fn\">F</span> <span class=\"fn\">Y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.coconeMorphism\">AddMonCat.FilteredColimits.coconeMorphism</a> <span class=\"fn\">F</span> <span class=\"fn\">X</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimit\">AddMonCat.FilteredColimits.colimit</a> <span class=\"fn\">F</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L278-L280","name":"MonCat.FilteredColimits.cocone_naturality","line":278,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.cocone_naturality","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.cocone_naturality\"><span class=\"name\">MonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">cocone_naturality</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\">J</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j' : <span class=\"fn\">J</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">j'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.map <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.coconeMorphism\">MonCat.FilteredColimits.coconeMorphism</a> <span class=\"fn\">F</span> <span class=\"fn\">j'</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.coconeMorphism\">MonCat.FilteredColimits.coconeMorphism</a> <span class=\"fn\">F</span> <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L277-L277","name":"AddMonCat.FilteredColimits.cocone_naturality","line":277,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.cocone_naturality","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.cocone_naturality\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">cocone_naturality</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\">J</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j' : <span class=\"fn\">J</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">j'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.map <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.coconeMorphism\">AddMonCat.FilteredColimits.coconeMorphism</a> <span class=\"fn\">F</span> <span class=\"fn\">j'</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.coconeMorphism\">AddMonCat.FilteredColimits.coconeMorphism</a> <span class=\"fn\">F</span> <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L267-L273","name":"MonCat.FilteredColimits.coconeMorphism","line":267,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.coconeMorphism","doc":"The monoid homomorphism from a given monoid in the diagram to the colimit monoid. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.coconeMorphism\"><span class=\"name\">MonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">coconeMorphism</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.colimit\">MonCat.FilteredColimits.colimit</a> <span class=\"fn\">F</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L264-L266","name":"AddMonCat.FilteredColimits.coconeMorphism.proof_2","line":264,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.coconeMorphism.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.coconeMorphism.proof_2\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">coconeMorphism</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a>\n    <span class=\"fn\">{\n      <span class=\"fn\">toFun</span> :=\n        <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Types.html#CategoryTheory.Limits.Types.colimitCocone\">CategoryTheory.Limits.Types.colimitCocone</a>\n                <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>)</span></span>)</span>.ι</span>.app\n          <span class=\"fn\">j</span></span>,\n      <span class=\"fn\">map_zero'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.M.mk\">AddMonCat.FilteredColimits.M.mk</a> <span class=\"fn\">F</span> <span class=\"fn\">{ <span class=\"fn\">fst</span> := <span class=\"fn\">j</span>, <span class=\"fn\">snd</span> := <span class=\"fn\">0</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span> }</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a>\n      <span class=\"fn\">{\n        <span class=\"fn\">toFun</span> :=\n          <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Types.html#CategoryTheory.Limits.Types.colimitCocone\">CategoryTheory.Limits.Types.colimitCocone</a>\n                  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>)</span></span>)</span>.ι</span>.app\n            <span class=\"fn\">j</span></span>,\n        <span class=\"fn\">map_zero'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.M.mk\">AddMonCat.FilteredColimits.M.mk</a> <span class=\"fn\">F</span> <span class=\"fn\">{ <span class=\"fn\">fst</span> := <span class=\"fn\">j</span>, <span class=\"fn\">snd</span> := <span class=\"fn\">0</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span> }</span>\n      <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>     <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a>\n      <span class=\"fn\">{\n        <span class=\"fn\">toFun</span> :=\n          <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Types.html#CategoryTheory.Limits.Types.colimitCocone\">CategoryTheory.Limits.Types.colimitCocone</a>\n                  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>)</span></span>)</span>.ι</span>.app\n            <span class=\"fn\">j</span></span>,\n        <span class=\"fn\">map_zero'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.M.mk\">AddMonCat.FilteredColimits.M.mk</a> <span class=\"fn\">F</span> <span class=\"fn\">{ <span class=\"fn\">fst</span> := <span class=\"fn\">j</span>, <span class=\"fn\">snd</span> := <span class=\"fn\">0</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span> }</span>\n      <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L264-L266","name":"AddMonCat.FilteredColimits.coconeMorphism","line":264,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.coconeMorphism","doc":"The additive monoid homomorphism from a given additive monoid in the diagram to the\ncolimit additive monoid."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.coconeMorphism\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">coconeMorphism</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimit\">AddMonCat.FilteredColimits.colimit</a> <span class=\"fn\">F</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L264-L266","name":"AddMonCat.FilteredColimits.coconeMorphism.proof_1","line":264,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.coconeMorphism.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.coconeMorphism.proof_1\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">coconeMorphism</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.M.mk\">AddMonCat.FilteredColimits.M.mk</a> <span class=\"fn\">F</span> <span class=\"fn\">{ <span class=\"fn\">fst</span> := <span class=\"fn\">j</span>, <span class=\"fn\">snd</span> := <span class=\"fn\">0</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L258-L259","name":"MonCat.FilteredColimits.colimit","line":258,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.colimit","doc":"The bundled monoid giving the filtered colimit of a diagram. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.colimit\"><span class=\"name\">MonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L256-L257","name":"AddMonCat.FilteredColimits.colimit","line":256,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimit","doc":"The bundled additive monoid giving the filtered colimit of a diagram."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimit\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L228-L251","name":"MonCat.FilteredColimits.colimitMonoid","line":228,"kind":"instance","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.colimitMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.colimitMonoid\"><span class=\"name\">MonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.M\">MonCat.FilteredColimits.M</a> <span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L227-L227","name":"AddMonCat.FilteredColimits.colimitAddMonoid.proof_5","line":227,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAddMonoid.proof_5","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAddMonoid.proof_5\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitAddMonoid</span>.<span class=\"name\">proof_5</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.M\">AddMonCat.FilteredColimits.M</a> <span class=\"fn\">F</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">nsmulRec</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">nsmulRec</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L227-L227","name":"AddMonCat.FilteredColimits.colimitAddMonoid.proof_1","line":227,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAddMonoid.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAddMonoid.proof_1\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitAddMonoid</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.M\">AddMonCat.FilteredColimits.M</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.M\">AddMonCat.FilteredColimits.M</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.M\">AddMonCat.FilteredColimits.M</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">z</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L227-L227","name":"AddMonCat.FilteredColimits.colimitAddMonoid","line":227,"kind":"instance","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAddMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAddMonoid\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitAddMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.M\">AddMonCat.FilteredColimits.M</a> <span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L227-L227","name":"AddMonCat.FilteredColimits.colimitAddMonoid.proof_3","line":227,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAddMonoid.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAddMonoid.proof_3\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitAddMonoid</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.M\">AddMonCat.FilteredColimits.M</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L227-L227","name":"AddMonCat.FilteredColimits.colimitAddMonoid.proof_4","line":227,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAddMonoid.proof_4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAddMonoid.proof_4\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitAddMonoid</span>.<span class=\"name\">proof_4</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.M\">AddMonCat.FilteredColimits.M</a> <span class=\"fn\">F</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">nsmulRec</span> <span class=\"fn\">0</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">nsmulRec</span> <span class=\"fn\">0</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L227-L227","name":"AddMonCat.FilteredColimits.colimitAddMonoid.proof_2","line":227,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAddMonoid.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAddMonoid.proof_2\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitAddMonoid</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.M\">AddMonCat.FilteredColimits.M</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L207-L225","name":"MonCat.FilteredColimits.colimitMulOneClass","line":207,"kind":"instance","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.colimitMulOneClass","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.colimitMulOneClass\"><span class=\"name\">MonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitMulOneClass</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#MulOneClass\">MulOneClass</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.M\">MonCat.FilteredColimits.M</a> <span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L206-L206","name":"AddMonCat.FilteredColimits.colimitAddZeroClass.proof_2","line":206,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAddZeroClass.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAddZeroClass.proof_2\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitAddZeroClass</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.M\">AddMonCat.FilteredColimits.M</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L206-L206","name":"AddMonCat.FilteredColimits.colimitAddZeroClass","line":206,"kind":"instance","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAddZeroClass","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAddZeroClass\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitAddZeroClass</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.M\">AddMonCat.FilteredColimits.M</a> <span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L206-L206","name":"AddMonCat.FilteredColimits.colimitAddZeroClass.proof_1","line":206,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAddZeroClass.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAddZeroClass.proof_1\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitAddZeroClass</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.M\">AddMonCat.FilteredColimits.M</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L190-L202","name":"MonCat.FilteredColimits.colimit_mul_mk_eq","line":190,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.colimit_mul_mk_eq","doc":"Multiplication in the colimit is independent of the chosen \"maximum\" in the filtered category.\nIn particular, this lemma allows us to \"unfold\" the definition of the multiplication of `x` and `y`,\nusing a custom object `k` and morphisms `f : x.1 ⟶ k` and `g : y.1 ⟶ k`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.colimit_mul_mk_eq\"><span class=\"name\">MonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimit_mul_mk_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">(j : <span class=\"fn\">J</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">(j : <span class=\"fn\">J</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.fst</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.fst</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.M.mk\">MonCat.FilteredColimits.M.mk</a> <span class=\"fn\">F</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.M.mk\">MonCat.FilteredColimits.M.mk</a> <span class=\"fn\">F</span> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.M.mk\">MonCat.FilteredColimits.M.mk</a> <span class=\"fn\">F</span> <span class=\"fn\">{ <span class=\"fn\">fst</span> := <span class=\"fn\">k</span>, <span class=\"fn\">snd</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.map <span class=\"fn\">f</span></span>)</span> <span class=\"fn\"><span class=\"fn\">x</span>.snd</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.map <span class=\"fn\">g</span></span>)</span> <span class=\"fn\"><span class=\"fn\">y</span>.snd</span></span></span> }</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L186-L189","name":"AddMonCat.FilteredColimits.colimit_add_mk_eq","line":186,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimit_add_mk_eq","doc":"Addition in the colimit is independent of the chosen \"maximum\" in the filtered\ncategory. In particular, this lemma allows us to \"unfold\" the definition of the addition of\n`x` and `y`, using a custom object `k` and morphisms `f : x.1 ⟶ k` and `g : y.1 ⟶ k`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimit_add_mk_eq\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimit_add_mk_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">(j : <span class=\"fn\">J</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">(j : <span class=\"fn\">J</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.fst</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.fst</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.M.mk\">AddMonCat.FilteredColimits.M.mk</a> <span class=\"fn\">F</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.M.mk\">AddMonCat.FilteredColimits.M.mk</a> <span class=\"fn\">F</span> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.M.mk\">AddMonCat.FilteredColimits.M.mk</a> <span class=\"fn\">F</span> <span class=\"fn\">{ <span class=\"fn\">fst</span> := <span class=\"fn\">k</span>, <span class=\"fn\">snd</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.map <span class=\"fn\">f</span></span>)</span> <span class=\"fn\"><span class=\"fn\">x</span>.snd</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.map <span class=\"fn\">g</span></span>)</span> <span class=\"fn\"><span class=\"fn\">y</span>.snd</span></span></span> }</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L168-L178","name":"MonCat.FilteredColimits.colimitMul","line":168,"kind":"instance","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.colimitMul","doc":"Multiplication in the colimit. See also `colimitMulAux`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.colimitMul\"><span class=\"name\">MonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitMul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.M\">MonCat.FilteredColimits.M</a> <span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L167-L167","name":"AddMonCat.FilteredColimits.colimitAdd.proof_1","line":167,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAdd.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAdd.proof_1\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitAdd</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">(j : <span class=\"fn\">J</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">(j : <span class=\"fn\">J</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y' : <span class=\"fn\">(j : <span class=\"fn\">J</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Types.html#CategoryTheory.Limits.Types.Quot.Rel\">CategoryTheory.Limits.Types.Quot.Rel</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>)</span> <span class=\"fn\">y</span> <span class=\"fn\">y'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAddAux\">AddMonCat.FilteredColimits.colimitAddAux</a> <span class=\"fn\">F</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAddAux\">AddMonCat.FilteredColimits.colimitAddAux</a> <span class=\"fn\">F</span> <span class=\"fn\">x</span> <span class=\"fn\">y'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L167-L167","name":"AddMonCat.FilteredColimits.colimitAdd.proof_2","line":167,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAdd.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAdd.proof_2\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitAdd</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">(j : <span class=\"fn\">J</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x' : <span class=\"fn\">(j : <span class=\"fn\">J</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">(j : <span class=\"fn\">J</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Types.html#CategoryTheory.Limits.Types.Quot.Rel\">CategoryTheory.Limits.Types.Quot.Rel</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">x'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAddAux\">AddMonCat.FilteredColimits.colimitAddAux</a> <span class=\"fn\">F</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAddAux\">AddMonCat.FilteredColimits.colimitAddAux</a> <span class=\"fn\">F</span> <span class=\"fn\">x'</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L167-L167","name":"AddMonCat.FilteredColimits.colimitAdd","line":167,"kind":"instance","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAdd","doc":"Addition in the colimit. See also `colimitAddAux`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAdd\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitAdd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.M\">AddMonCat.FilteredColimits.M</a> <span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L143-L162","name":"MonCat.FilteredColimits.colimitMulAux_eq_of_rel_right","line":143,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.colimitMulAux_eq_of_rel_right","doc":"Multiplication in the colimit is well-defined in the right argument. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.colimitMulAux_eq_of_rel_right\"><span class=\"name\">MonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitMulAux_eq_of_rel_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">(j : <span class=\"fn\">J</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">(j : <span class=\"fn\">J</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y' : <span class=\"fn\">(j : <span class=\"fn\">J</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hyy' : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Types.html#CategoryTheory.Limits.Types.FilteredColimit.Rel\">CategoryTheory.Limits.Types.FilteredColimit.Rel</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a></span>)</span></span>)</span> <span class=\"fn\">y</span> <span class=\"fn\">y'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.colimitMulAux\">MonCat.FilteredColimits.colimitMulAux</a> <span class=\"fn\">F</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.colimitMulAux\">MonCat.FilteredColimits.colimitMulAux</a> <span class=\"fn\">F</span> <span class=\"fn\">x</span> <span class=\"fn\">y'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L142-L142","name":"AddMonCat.FilteredColimits.colimitAddAux_eq_of_rel_right","line":142,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAddAux_eq_of_rel_right","doc":"Addition in the colimit is well-defined in the right argument."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAddAux_eq_of_rel_right\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitAddAux_eq_of_rel_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">(j : <span class=\"fn\">J</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">(j : <span class=\"fn\">J</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y' : <span class=\"fn\">(j : <span class=\"fn\">J</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hyy' : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Types.html#CategoryTheory.Limits.Types.FilteredColimit.Rel\">CategoryTheory.Limits.Types.FilteredColimit.Rel</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>)</span> <span class=\"fn\">y</span> <span class=\"fn\">y'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAddAux\">AddMonCat.FilteredColimits.colimitAddAux</a> <span class=\"fn\">F</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAddAux\">AddMonCat.FilteredColimits.colimitAddAux</a> <span class=\"fn\">F</span> <span class=\"fn\">x</span> <span class=\"fn\">y'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L118-L137","name":"MonCat.FilteredColimits.colimitMulAux_eq_of_rel_left","line":118,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.colimitMulAux_eq_of_rel_left","doc":"Multiplication in the colimit is well-defined in the left argument. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.colimitMulAux_eq_of_rel_left\"><span class=\"name\">MonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitMulAux_eq_of_rel_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">(j : <span class=\"fn\">J</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x' : <span class=\"fn\">(j : <span class=\"fn\">J</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">(j : <span class=\"fn\">J</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hxx' : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Types.html#CategoryTheory.Limits.Types.FilteredColimit.Rel\">CategoryTheory.Limits.Types.FilteredColimit.Rel</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a></span>)</span></span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">x'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.colimitMulAux\">MonCat.FilteredColimits.colimitMulAux</a> <span class=\"fn\">F</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.colimitMulAux\">MonCat.FilteredColimits.colimitMulAux</a> <span class=\"fn\">F</span> <span class=\"fn\">x'</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L117-L117","name":"AddMonCat.FilteredColimits.colimitAddAux_eq_of_rel_left","line":117,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAddAux_eq_of_rel_left","doc":"Addition in the colimit is well-defined in the left argument."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAddAux_eq_of_rel_left\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitAddAux_eq_of_rel_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">(j : <span class=\"fn\">J</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x' : <span class=\"fn\">(j : <span class=\"fn\">J</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">(j : <span class=\"fn\">J</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hxx' : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Types.html#CategoryTheory.Limits.Types.FilteredColimit.Rel\">CategoryTheory.Limits.Types.FilteredColimit.Rel</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">x'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAddAux\">AddMonCat.FilteredColimits.colimitAddAux</a> <span class=\"fn\">F</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAddAux\">AddMonCat.FilteredColimits.colimitAddAux</a> <span class=\"fn\">F</span> <span class=\"fn\">x'</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L110-L112","name":"MonCat.FilteredColimits.colimitMulAux","line":110,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.colimitMulAux","doc":"The \"unlifted\" version of multiplication in the colimit. To multiply two dependent pairs\n`⟨j₁, x⟩` and `⟨j₂, y⟩`, we pass to a common successor of `j₁` and `j₂` (given by `IsFiltered.max`)\nand multiply them there.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.colimitMulAux\"><span class=\"name\">MonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitMulAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">(j : <span class=\"fn\">J</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">(j : <span class=\"fn\">J</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.M\">MonCat.FilteredColimits.M</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L106-L109","name":"AddMonCat.FilteredColimits.colimitAddAux","line":106,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAddAux","doc":"The \"unlifted\" version of addition in the colimit. To add two dependent pairs\n`⟨j₁, x⟩` and `⟨j₂, y⟩`, we pass to a common successor of `j₁` and `j₂`\n(given by `IsFiltered.max`) and add them there."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitAddAux\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitAddAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">(j : <span class=\"fn\">J</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">(j : <span class=\"fn\">J</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.M\">AddMonCat.FilteredColimits.M</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L95-L98","name":"MonCat.FilteredColimits.colimit_one_eq","line":95,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.colimit_one_eq","doc":"The definition of the \"one\" in the colimit is independent of the chosen object of `J`.\nIn particular, this lemma allows us to \"unfold\" the definition of `colimit_one` at a custom chosen\nobject `j`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.colimit_one_eq\"><span class=\"name\">MonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimit_one_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.M.mk\">MonCat.FilteredColimits.M.mk</a> <span class=\"fn\">F</span> <span class=\"fn\">{ <span class=\"fn\">fst</span> := <span class=\"fn\">j</span>, <span class=\"fn\">snd</span> := <span class=\"fn\">1</span> }</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L91-L94","name":"AddMonCat.FilteredColimits.colimit_zero_eq","line":91,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimit_zero_eq","doc":"The definition of the \"zero\" in the colimit is independent of the chosen object\nof `J`. In particular, this lemma allows us to \"unfold\" the definition of `colimit_zero` at\na custom chosen object `j`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimit_zero_eq\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimit_zero_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.M.mk\">AddMonCat.FilteredColimits.M.mk</a> <span class=\"fn\">F</span> <span class=\"fn\">{ <span class=\"fn\">fst</span> := <span class=\"fn\">j</span>, <span class=\"fn\">snd</span> := <span class=\"fn\">0</span> }</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L82-L83","name":"MonCat.FilteredColimits.colimitOne","line":82,"kind":"instance","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.colimitOne","doc":"As `J` is nonempty, we can pick an arbitrary object `j₀ : J`. We use this object to define the\n\"one\" in the colimit as the equivalence class of `⟨j₀, 1 : F.obj j₀⟩`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.colimitOne\"><span class=\"name\">MonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitOne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#One\">One</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.M\">MonCat.FilteredColimits.M</a> <span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L79-L81","name":"AddMonCat.FilteredColimits.colimitZero","line":79,"kind":"instance","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitZero","doc":"As `J` is nonempty, we can pick an arbitrary object `j₀ : J`. We use this object to\ndefine the \"zero\" in the colimit as the equivalence class of `⟨j₀, 0 : F.obj j₀⟩`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.colimitZero\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">colimitZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">CategoryTheory.IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.M\">AddMonCat.FilteredColimits.M</a> <span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L67-L70","name":"MonCat.FilteredColimits.M.mk_eq","line":67,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.M.mk_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.M.mk_eq\"><span class=\"name\">MonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">M</span>.<span class=\"name\">mk_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">(j : <span class=\"fn\">J</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">(j : <span class=\"fn\">J</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∃ (k : <span class=\"fn\">J</span>) (f : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.fst</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">k</span></span>) (g : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.fst</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">k</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.map <span class=\"fn\">f</span></span>)</span> <span class=\"fn\"><span class=\"fn\">x</span>.snd</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.map <span class=\"fn\">g</span></span>)</span> <span class=\"fn\"><span class=\"fn\">y</span>.snd</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.M.mk\">MonCat.FilteredColimits.M.mk</a> <span class=\"fn\">F</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.M.mk\">MonCat.FilteredColimits.M.mk</a> <span class=\"fn\">F</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L66-L66","name":"AddMonCat.FilteredColimits.M.mk_eq","line":66,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.M.mk_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.M.mk_eq\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">M</span>.<span class=\"name\">mk_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">(j : <span class=\"fn\">J</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">(j : <span class=\"fn\">J</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∃ (k : <span class=\"fn\">J</span>) (f : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.fst</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">k</span></span>) (g : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.fst</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">k</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.map <span class=\"fn\">f</span></span>)</span> <span class=\"fn\"><span class=\"fn\">x</span>.snd</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.map <span class=\"fn\">g</span></span>)</span> <span class=\"fn\"><span class=\"fn\">y</span>.snd</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.M.mk\">AddMonCat.FilteredColimits.M.mk</a> <span class=\"fn\">F</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.M.mk\">AddMonCat.FilteredColimits.M.mk</a> <span class=\"fn\">F</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L61-L62","name":"MonCat.FilteredColimits.M.mk","line":61,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.M.mk","doc":"The canonical projection into the colimit, as a quotient type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.M.mk\"><span class=\"name\">MonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">M</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(j : <span class=\"fn\">J</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.M\">MonCat.FilteredColimits.M</a> <span class=\"fn\">F</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L60-L60","name":"AddMonCat.FilteredColimits.M.mk","line":60,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.M.mk","doc":"The canonical projection into the colimit, as a quotient type."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.M.mk\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">M</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(j : <span class=\"fn\">J</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.M\">AddMonCat.FilteredColimits.M</a> <span class=\"fn\">F</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L54-L55","name":"MonCat.FilteredColimits.M","line":54,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.M","doc":"The colimit of `F ⋙ forget MonCat` in the category of types.\nIn the following, we will construct a monoid structure on `M`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#MonCat.FilteredColimits.M\"><span class=\"name\">MonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">M</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/TypeMax.html#TypeMax\">TypeMax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean#L51-L53","name":"AddMonCat.FilteredColimits.M","line":51,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.M","doc":"The colimit of `F ⋙ forget AddMon` in the category of types.\nIn the following, we will construct an additive monoid structure on `M`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/FilteredColimits.html#AddMonCat.FilteredColimits.M\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">FilteredColimits</span>.<span class=\"name\">M</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/TypeMax.html#TypeMax\">TypeMax</a></div></div>"}]}