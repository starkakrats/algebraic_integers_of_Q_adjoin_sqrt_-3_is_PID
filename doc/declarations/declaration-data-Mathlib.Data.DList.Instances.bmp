{"name":"Mathlib.Data.DList.Instances","instances":[{"typeNames":["Std.DList"],"name":"Std.instTraversableDList","className":"Traversable"},{"typeNames":["Std.DList"],"name":"Std.instLawfulTraversableDListInstTraversableDList","className":"LawfulTraversable"},{"typeNames":["Std.DList"],"name":"Std.instInhabitedDList","className":"Inhabited"}],"imports":["Init","Mathlib.Data.DList.Defs","Mathlib.Control.Traversable.Equiv","Mathlib.Control.Traversable.Instances"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/DList/Instances.lean#L41-L42","name":"Std.instInhabitedDList","line":41,"kind":"instance","docLink":"./Mathlib/Data/DList/Instances.html#Std.instInhabitedDList","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/DList/Instances.html#Std.instInhabitedDList\"><span class=\"name\">Std</span>.<span class=\"name\">instInhabitedDList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/DList.html#Std.DList\">Std.DList</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/DList/Instances.lean#L38-L39","name":"Std.instLawfulTraversableDListInstTraversableDList","line":38,"kind":"instance","docLink":"./Mathlib/Data/DList/Instances.html#Std.instLawfulTraversableDListInstTraversableDList","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/DList/Instances.html#Std.instLawfulTraversableDListInstTraversableDList\"><span class=\"name\">Std</span>.<span class=\"name\">instLawfulTraversableDListInstTraversableDList</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Control/Traversable/Basic.html#LawfulTraversable\">LawfulTraversable</a> <a href=\"./Std/Data/DList.html#Std.DList\">Std.DList</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/DList/Instances.lean#L35-L36","name":"Std.instTraversableDList","line":35,"kind":"instance","docLink":"./Mathlib/Data/DList/Instances.html#Std.instTraversableDList","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/DList/Instances.html#Std.instTraversableDList\"><span class=\"name\">Std</span>.<span class=\"name\">instTraversableDList</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Control/Traversable/Basic.html#Traversable\">Traversable</a> <a href=\"./Std/Data/DList.html#Std.DList\">Std.DList</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/DList/Instances.lean#L28-L32","name":"Std.DList.listEquivDList","line":28,"kind":"def","docLink":"./Mathlib/Data/DList/Instances.html#Std.DList.listEquivDList","doc":"The natural equivalence between lists and difference lists, using\n`DList.ofList` and `DList.toList`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/DList/Instances.html#Std.DList.listEquivDList\"><span class=\"name\">Std</span>.<span class=\"name\">DList</span>.<span class=\"name\">listEquivDList</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><a href=\"./Std/Data/DList.html#Std.DList\">Std.DList</a> <span class=\"fn\">α</span></span></span></div></div>"}]}