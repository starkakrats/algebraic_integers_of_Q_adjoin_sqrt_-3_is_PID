{"name":"Mathlib.NumberTheory.Rayleigh","instances":[],"imports":["Init","Mathlib.Data.Real.ConjugateExponents","Mathlib.Data.Real.Irrational"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Rayleigh.lean#L172-L175","name":"Irrational.beattySeq_symmDiff_beattySeq_pos","line":172,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Rayleigh.html#Irrational.beattySeq_symmDiff_beattySeq_pos","doc":"**Rayleigh's theorem** on Beatty sequences. Let `r` be an irrational number greater than 1, and\n`1/r + 1/s = 1`. Then `B⁺_r` and `B⁺_s` partition the positive integers. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Rayleigh.html#Irrational.beattySeq_symmDiff_beattySeq_pos\"><span class=\"name\">Irrational</span>.<span class=\"name\">beattySeq_symmDiff_beattySeq_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hrs : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/ConjugateExponents.html#Real.IsConjugateExponent\">Real.IsConjugateExponent</a> <span class=\"fn\">r</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Irrational.html#Irrational\">Irrational</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/SymmDiff.html#symmDiff\">symmDiff</a> <span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> | <span class=\"fn\">∃ k &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Rayleigh.html#beattySeq\">beattySeq</a> <span class=\"fn\">r</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></span>}</span> <span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> | <span class=\"fn\">∃ k &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Rayleigh.html#beattySeq\">beattySeq</a> <span class=\"fn\">s</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></span>}</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> | <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Rayleigh.lean#L162-L168","name":"Irrational.beattySeq'_pos_eq","line":162,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Rayleigh.html#Irrational.beattySeq'_pos_eq","doc":"Let `r` be an irrational number. Then `B⁺_r` and `B⁺'_r` are equal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Rayleigh.html#Irrational.beattySeq'_pos_eq\"><span class=\"name\">Irrational</span>.<span class=\"name\">beattySeq'_pos_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Irrational.html#Irrational\">Irrational</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> | <span class=\"fn\">∃ k &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Rayleigh.html#beattySeq'\">beattySeq'</a> <span class=\"fn\">r</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></span>}</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> | <span class=\"fn\">∃ k &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Rayleigh.html#beattySeq\">beattySeq</a> <span class=\"fn\">r</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Rayleigh.lean#L157-L159","name":"beattySeq'_symmDiff_beattySeq_pos","line":157,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Rayleigh.html#beattySeq'_symmDiff_beattySeq_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Rayleigh.html#beattySeq'_symmDiff_beattySeq_pos\"><span class=\"name\">beattySeq'_symmDiff_beattySeq_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hrs : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/ConjugateExponents.html#Real.IsConjugateExponent\">Real.IsConjugateExponent</a> <span class=\"fn\">r</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/SymmDiff.html#symmDiff\">symmDiff</a> <span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> | <span class=\"fn\">∃ k &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Rayleigh.html#beattySeq'\">beattySeq'</a> <span class=\"fn\">r</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></span>}</span> <span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> | <span class=\"fn\">∃ k &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Rayleigh.html#beattySeq\">beattySeq</a> <span class=\"fn\">s</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></span>}</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> | <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Rayleigh.lean#L134-L155","name":"beattySeq_symmDiff_beattySeq'_pos","line":134,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Rayleigh.html#beattySeq_symmDiff_beattySeq'_pos","doc":"Generalization of Rayleigh's theorem on Beatty sequences. Let `r` be a real number greater\nthan 1, and `1/r + 1/s = 1`. Then `B⁺_r` and `B⁺'_s` partition the positive integers. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Rayleigh.html#beattySeq_symmDiff_beattySeq'_pos\"><span class=\"name\">beattySeq_symmDiff_beattySeq'_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hrs : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/ConjugateExponents.html#Real.IsConjugateExponent\">Real.IsConjugateExponent</a> <span class=\"fn\">r</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/SymmDiff.html#symmDiff\">symmDiff</a> <span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> | <span class=\"fn\">∃ k &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Rayleigh.html#beattySeq\">beattySeq</a> <span class=\"fn\">r</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></span>}</span> <span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> | <span class=\"fn\">∃ k &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Rayleigh.html#beattySeq'\">beattySeq'</a> <span class=\"fn\">s</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></span>}</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> | <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Rayleigh.lean#L126-L128","name":"compl_beattySeq'","line":126,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Rayleigh.html#compl_beattySeq'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Rayleigh.html#compl_beattySeq'\"><span class=\"name\">compl_beattySeq'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hrs : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/ConjugateExponents.html#Real.IsConjugateExponent\">Real.IsConjugateExponent</a> <span class=\"fn\">r</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> | <span class=\"fn\">∃ (k : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Rayleigh.html#beattySeq'\">beattySeq'</a> <span class=\"fn\">r</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></span>}</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> | <span class=\"fn\">∃ (k : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Rayleigh.html#beattySeq\">beattySeq</a> <span class=\"fn\">s</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Rayleigh.lean#L115-L124","name":"compl_beattySeq","line":115,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Rayleigh.html#compl_beattySeq","doc":"Generalization of Rayleigh's theorem on Beatty sequences. Let `r` be a real number greater\nthan 1, and `1/r + 1/s = 1`. Then the complement of `B_r` is `B'_s`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Rayleigh.html#compl_beattySeq\"><span class=\"name\">compl_beattySeq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hrs : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/ConjugateExponents.html#Real.IsConjugateExponent\">Real.IsConjugateExponent</a> <span class=\"fn\">r</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> | <span class=\"fn\">∃ (k : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Rayleigh.html#beattySeq\">beattySeq</a> <span class=\"fn\">r</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></span>}</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> | <span class=\"fn\">∃ (k : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Rayleigh.html#beattySeq'\">beattySeq'</a> <span class=\"fn\">s</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Rayleigh.lean#L53-L54","name":"beattySeq'","line":53,"kind":"def","docLink":"./Mathlib/NumberTheory/Rayleigh.html#beattySeq'","doc":"In this variant of the Beatty sequence for `r`, the `k`th term is `⌈k * r⌉ - 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Rayleigh.html#beattySeq'\"><span class=\"name\">beattySeq'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> → <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Rayleigh.lean#L49-L50","name":"beattySeq","line":49,"kind":"def","docLink":"./Mathlib/NumberTheory/Rayleigh.html#beattySeq","doc":"In the Beatty sequence for real number `r`, the `k`th term is `⌊k * r⌋`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Rayleigh.html#beattySeq\"><span class=\"name\">beattySeq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> → <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></div></div>"}]}