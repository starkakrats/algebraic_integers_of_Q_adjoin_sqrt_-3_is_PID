{"name":"Mathlib.Data.Real.NNReal","instances":[{"typeNames":["NNReal"],"name":"NNReal.instFloorSemiringNNRealToOrderedSemiringInstNNRealOrderedCommSemiring","className":"FloorSemiring"},{"typeNames":["NNReal"],"name":"NNReal.instDenselyOrderedNNRealToLTToPreorderToPartialOrderInstNNRealStrictOrderedSemiring","className":"DenselyOrdered"},{"typeNames":["NNReal"],"name":"NNReal.instOrderBotNNRealToLEToPreorderToPartialOrderInstNNRealStrictOrderedSemiring","className":"OrderBot"},{"typeNames":["NNReal"],"name":"NNReal.instArchimedeanNNRealToOrderedAddCommMonoidToOrderedSemiringInstNNRealOrderedCommSemiring","className":"Archimedean"},{"typeNames":["NNReal"],"name":"NNReal.instSubNNReal","className":"Sub"},{"typeNames":["NNReal"],"name":"NNReal.instOrderedSubNNRealToLEToPreorderToPartialOrderInstNNRealStrictOrderedSemiringToAddToDistribToNonUnitalNonAssocSemiringToNonAssocSemiringInstNNRealSemiringInstSubNNReal","className":"OrderedSub"},{"typeNames":["NNReal"],"name":"NNReal.instCanonicallyLinearOrderedSemifieldNNReal","className":"CanonicallyLinearOrderedSemifield"},{"typeNames":["NNReal","Real"],"name":"NNReal.instCoeNNRealReal","className":"Coe"},{"typeNames":["Real","NNReal","NNReal.toReal"],"name":"NNReal.canLift","className":"CanLift"},{"typeNames":["NNReal"],"name":"NNReal.instMulActionNNRealToMonoidToMonoidWithZeroInstNNRealSemiring","className":"MulAction"},{"typeNames":["NNReal"],"name":"NNReal.instIsScalarTowerNNRealToSMulToMonoidToMonoidWithZeroInstNNRealSemiringInstMulActionNNRealToMonoidToMonoidWithZeroInstNNRealSemiringToSMulInstMulActionNNRealToMonoidToMonoidWithZeroInstNNRealSemiring","className":"IsScalarTower"},{"typeNames":["NNReal"],"name":"NNReal.smulCommClass_left","className":"SMulCommClass"},{"typeNames":["NNReal"],"name":"NNReal.smulCommClass_right","className":"SMulCommClass"},{"typeNames":["NNReal"],"name":"NNReal.instDistribMulActionNNRealToMonoidToMonoidWithZeroInstNNRealSemiring","className":"DistribMulAction"},{"typeNames":["NNReal"],"name":"NNReal.instModuleNNRealInstNNRealSemiring","className":"Module"},{"typeNames":["NNReal"],"name":"NNReal.instAlgebraNNRealInstNNRealCommSemiring","className":"Algebra"},{"typeNames":["NNReal"],"name":"NNReal.instStarRingNNRealToNonUnitalNonAssocSemiringToNonAssocSemiringInstNNRealSemiring","className":"StarRing"},{"typeNames":["NNReal"],"name":"NNReal.instTrivialStarNNRealToStarToInvolutiveStarToAddMonoidToAddMonoidWithOneToAddCommMonoidWithOneToNonAssocSemiringInstNNRealSemiringToStarAddMonoidToNonUnitalNonAssocSemiringInstStarRingNNRealToNonUnitalNonAssocSemiringToNonAssocSemiringInstNNRealSemiring","className":"TrivialStar"},{"typeNames":["NNReal","Real"],"name":"NNReal.instStarModuleNNRealRealToStarToInvolutiveStarToAddMonoidToAddMonoidWithOneToAddCommMonoidWithOneToNonAssocSemiringInstNNRealSemiringToStarAddMonoidToNonUnitalNonAssocSemiringInstStarRingNNRealToNonUnitalNonAssocSemiringToNonAssocSemiringInstNNRealSemiringInstAddMonoidRealToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingCommRingInstStarRingRealToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingCommRingToSMulInstNNRealCommSemiringSemiringInstAlgebraNNRealInstNNRealCommSemiringIdInstCommSemiringReal","className":"StarModule"},{"typeNames":["NNReal"],"name":"NNReal.instConditionallyCompleteLinearOrderBotNNReal","className":"ConditionallyCompleteLinearOrderBot"},{"typeNames":["NNReal","NNReal"],"name":"NNReal.covariant_add","className":"CovariantClass"},{"typeNames":["NNReal","NNReal"],"name":"NNReal.contravariant_add","className":"ContravariantClass"},{"typeNames":["NNReal","NNReal"],"name":"NNReal.covariant_mul","className":"CovariantClass"}],"imports":["Init","Mathlib.Algebra.Algebra.Basic","Mathlib.Algebra.BigOperators.Order","Mathlib.Algebra.BigOperators.Ring","Mathlib.Algebra.GroupPower.Lemmas","Mathlib.Algebra.Order.Field.Canonical.Basic","Mathlib.Algebra.Order.Nonneg.Field","Mathlib.Algebra.Order.Nonneg.Floor","Mathlib.Data.Real.Pointwise","Mathlib.Order.ConditionallyCompleteLattice.Group","Mathlib.Tactic.GCongr.Core"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L1196-L1204","name":"Mathlib.Meta.Positivity.evalNNRealtoReal","line":1196,"kind":"def","docLink":"./Mathlib/Data/Real/NNReal.html#Mathlib.Meta.Positivity.evalNNRealtoReal","doc":"Extension for the `positivity` tactic: cast from `ℝ≥0` to `ℝ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Mathlib.Meta.Positivity.evalNNRealtoReal\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Positivity</span>.<span class=\"name\">evalNNRealtoReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Positivity/Core.html#Mathlib.Meta.Positivity.PositivityExt\">Mathlib.Meta.Positivity.PositivityExt</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L1180-L1182","name":"Real.cast_natAbs_eq_nnabs_cast","line":1180,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.cast_natAbs_eq_nnabs_cast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.cast_natAbs_eq_nnabs_cast\"><span class=\"name\">Real</span>.<span class=\"name\">cast_natAbs_eq_nnabs_cast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">Int.natAbs</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.nnabs\">Real.nnabs</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L1176-L1177","name":"Real.coe_toNNReal_le","line":1176,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.coe_toNNReal_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.coe_toNNReal_le\"><span class=\"name\">Real</span>.<span class=\"name\">coe_toNNReal_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">|<span class=\"fn\">x</span>|</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L1173-L1173","name":"Real.nnabs_coe","line":1173,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.nnabs_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.nnabs_coe\"><span class=\"name\">Real</span>.<span class=\"name\">nnabs_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.nnabs\">Real.nnabs</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L1168-L1170","name":"Real.nnabs_of_nonneg","line":1168,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.nnabs_of_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.nnabs_of_nonneg\"><span class=\"name\">Real</span>.<span class=\"name\">nnabs_of_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.nnabs\">Real.nnabs</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L1163-L1164","name":"Real.coe_nnabs","line":1163,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.coe_nnabs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.coe_nnabs\"><span class=\"name\">Real</span>.<span class=\"name\">coe_nnabs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.nnabs\">Real.nnabs</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">|<span class=\"fn\">x</span>|</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L1155-L1159","name":"Real.nnabs","line":1155,"kind":"def","docLink":"./Mathlib/Data/Real/NNReal.html#Real.nnabs","doc":"The absolute value on `ℝ` as a map to `ℝ≥0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.nnabs\"><span class=\"name\">Real</span>.<span class=\"name\">nnabs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidWithZeroHom\">→*₀</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L1143-L1144","name":"Set.OrdConnected.preimage_real_toNNReal","line":1143,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Set.OrdConnected.preimage_real_toNNReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Set.OrdConnected.preimage_real_toNNReal\"><span class=\"name\">Set</span>.<span class=\"name\">OrdConnected</span>.<span class=\"name\">preimage_real_toNNReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/OrdConnected.html#Set.OrdConnected\">Set.OrdConnected</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/OrdConnected.html#Set.OrdConnected\">Set.OrdConnected</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">t</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L1133-L1140","name":"Set.OrdConnected.image_real_toNNReal","line":1133,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Set.OrdConnected.image_real_toNNReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Set.OrdConnected.image_real_toNNReal\"><span class=\"name\">Set</span>.<span class=\"name\">OrdConnected</span>.<span class=\"name\">image_real_toNNReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/OrdConnected.html#Set.OrdConnected\">Set.OrdConnected</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/OrdConnected.html#Set.OrdConnected\">Set.OrdConnected</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">s</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L1127-L1129","name":"Set.OrdConnected.image_coe_nnreal_real","line":1127,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Set.OrdConnected.image_coe_nnreal_real","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Set.OrdConnected.image_coe_nnreal_real\"><span class=\"name\">Set</span>.<span class=\"name\">OrdConnected</span>.<span class=\"name\">image_coe_nnreal_real</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/OrdConnected.html#Set.OrdConnected\">Set.OrdConnected</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/OrdConnected.html#Set.OrdConnected\">Set.OrdConnected</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#NNReal.toReal\">NNReal.toReal</a> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">t</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L1123-L1124","name":"Set.OrdConnected.preimage_coe_nnreal_real","line":1123,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Set.OrdConnected.preimage_coe_nnreal_real","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Set.OrdConnected.preimage_coe_nnreal_real\"><span class=\"name\">Set</span>.<span class=\"name\">OrdConnected</span>.<span class=\"name\">preimage_coe_nnreal_real</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/OrdConnected.html#Set.OrdConnected\">Set.OrdConnected</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/OrdConnected.html#Set.OrdConnected\">Set.OrdConnected</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#NNReal.toReal\">NNReal.toReal</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">s</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L1108-L1110","name":"NNReal.le_iInf_mul_iInf","line":1108,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.le_iInf_mul_iInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.le_iInf_mul_iInf\"><span class=\"name\">NNReal</span>.<span class=\"name\">le_iInf_mul_iInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ (<span class=\"fn\">i </span>j : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">h</span> <span class=\"fn\">j</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#iInf\">iInf</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#iInf\">iInf</a> <span class=\"fn\">h</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L1103-L1105","name":"NNReal.le_iInf_mul","line":1103,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.le_iInf_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.le_iInf_mul\"><span class=\"name\">NNReal</span>.<span class=\"name\">le_iInf_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">h</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#iInf\">iInf</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">h</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L1098-L1100","name":"NNReal.le_mul_iInf","line":1098,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.le_mul_iInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.le_mul_iInf\"><span class=\"name\">NNReal</span>.<span class=\"name\">le_mul_iInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">h</span> <span class=\"fn\">j</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#iInf\">iInf</a> <span class=\"fn\">h</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L1091-L1093","name":"NNReal.iSup_mul_iSup_le","line":1091,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.iSup_mul_iSup_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.iSup_mul_iSup_le\"><span class=\"name\">NNReal</span>.<span class=\"name\">iSup_mul_iSup_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ (<span class=\"fn\">i </span>j : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">h</span> <span class=\"fn\">j</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#iSup\">iSup</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#iSup\">iSup</a> <span class=\"fn\">h</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L1085-L1087","name":"NNReal.iSup_mul_le","line":1085,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.iSup_mul_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.iSup_mul_le\"><span class=\"name\">NNReal</span>.<span class=\"name\">iSup_mul_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#iSup\">iSup</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L1079-L1081","name":"NNReal.mul_iSup_le","line":1079,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.mul_iSup_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.mul_iSup_le\"><span class=\"name\">NNReal</span>.<span class=\"name\">mul_iSup_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">h</span> <span class=\"fn\">j</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#iSup\">iSup</a> <span class=\"fn\">h</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L1074-L1075","name":"NNReal.iSup_div","line":1074,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.iSup_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.iSup_div\"><span class=\"name\">NNReal</span>.<span class=\"name\">iSup_div</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L1069-L1071","name":"NNReal.iSup_mul","line":1069,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.iSup_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.iSup_mul\"><span class=\"name\">NNReal</span>.<span class=\"name\">iSup_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L1064-L1066","name":"NNReal.mul_iSup","line":1064,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.mul_iSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.mul_iSup\"><span class=\"name\">NNReal</span>.<span class=\"name\">mul_iSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L1060-L1061","name":"NNReal.mul_iInf","line":1060,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.mul_iInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.mul_iInf\"><span class=\"name\">NNReal</span>.<span class=\"name\">mul_iInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#iInf\">iInf</a> <span class=\"fn\">f</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L1055-L1057","name":"NNReal.iInf_mul","line":1055,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.iInf_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.iInf_mul\"><span class=\"name\">NNReal</span>.<span class=\"name\">iInf_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#iInf\">iInf</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L1050-L1052","name":"NNReal.iInf_const_zero","line":1050,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.iInf_const_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.iInf_const_zero\"><span class=\"name\">NNReal</span>.<span class=\"name\">iInf_const_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Sort</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⨅ (x : <span class=\"fn\">α</span>), <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L1045-L1046","name":"NNReal.iInf_empty","line":1045,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.iInf_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.iInf_empty\"><span class=\"name\">NNReal</span>.<span class=\"name\">iInf_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⨅ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L1043-L1043","name":"NNReal.iSup_empty","line":1043,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.iSup_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.iSup_empty\"><span class=\"name\">NNReal</span>.<span class=\"name\">iSup_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L1039-L1040","name":"NNReal.iSup_of_not_bddAbove","line":1039,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.iSup_of_not_bddAbove","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.iSup_of_not_bddAbove\"><span class=\"name\">NNReal</span>.<span class=\"name\">iSup_of_not_bddAbove</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Basic.html#BddAbove\">BddAbove</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">f</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L1033-L1036","name":"NNReal.sSup_of_not_bddAbove","line":1033,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.sSup_of_not_bddAbove","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.sSup_of_not_bddAbove\"><span class=\"name\">NNReal</span>.<span class=\"name\">sSup_of_not_bddAbove</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Basic.html#BddAbove\">BddAbove</a> <span class=\"fn\">s</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#SupSet.sSup\">sSup</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L1029-L1030","name":"NNReal.le_toNNReal_of_coe_le","line":1029,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.le_toNNReal_of_coe_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.le_toNNReal_of_coe_le\"><span class=\"name\">NNReal</span>.<span class=\"name\">le_toNNReal_of_coe_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L1019-L1020","name":"NNReal.abs_eq","line":1019,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.abs_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.abs_eq\"><span class=\"name\">NNReal</span>.<span class=\"name\">abs_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">|<span class=\"fn\">↑<span class=\"fn\">x</span></span>|</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L1012-L1013","name":"NNReal.inv_lt_inv","line":1012,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.inv_lt_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.inv_lt_inv\"><span class=\"name\">NNReal</span>.<span class=\"name\">inv_lt_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L1008-L1009","name":"NNReal.zpow_pos","line":1008,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.zpow_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.zpow_pos\"><span class=\"name\">NNReal</span>.<span class=\"name\">zpow_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L1004-L1005","name":"NNReal.inv_lt_one_iff","line":1004,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.inv_lt_one_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.inv_lt_one_iff\"><span class=\"name\">NNReal</span>.<span class=\"name\">inv_lt_one_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L999-L1001","name":"Real.toNNReal_div'","line":999,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_div'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_div'\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_div'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L994-L996","name":"Real.toNNReal_div","line":994,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_div\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_div</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L987-L991","name":"Real.toNNReal_inv","line":987,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_inv\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\"><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">x</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L982-L984","name":"NNReal.div_lt_one_of_lt","line":982,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.div_lt_one_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.div_lt_one_of_lt\"><span class=\"name\">NNReal</span>.<span class=\"name\">div_lt_one_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L978-L979","name":"NNReal.half_lt_self","line":978,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.half_lt_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.half_lt_self\"><span class=\"name\">NNReal</span>.<span class=\"name\">half_lt_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L974-L975","name":"NNReal.half_le_self","line":974,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.half_le_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.half_le_self\"><span class=\"name\">NNReal</span>.<span class=\"name\">half_le_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L965-L971","name":"NNReal.le_of_forall_lt_one_mul_le","line":965,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.le_of_forall_lt_one_mul_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.le_of_forall_lt_one_mul_le\"><span class=\"name\">NNReal</span>.<span class=\"name\">le_of_forall_lt_one_mul_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ <span class=\"fn\">a</span> &lt; <span class=\"fn\">1</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L960-L962","name":"NNReal.div_le_div_left","line":960,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.div_le_div_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.div_le_div_left\"><span class=\"name\">NNReal</span>.<span class=\"name\">div_le_div_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a0 : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b0 : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c0 : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">c</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L955-L957","name":"NNReal.div_le_div_left_of_le","line":955,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.div_le_div_left_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.div_le_div_left_of_le\"><span class=\"name\">NNReal</span>.<span class=\"name\">div_le_div_left_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c0 : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cb : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L950-L951","name":"NNReal.mul_lt_of_lt_div","line":950,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.mul_lt_of_lt_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.mul_lt_of_lt_div\"><span class=\"name\">NNReal</span>.<span class=\"name\">mul_lt_of_lt_div</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">r</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L946-L947","name":"NNReal.lt_div_iff'","line":946,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.lt_div_iff'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.lt_div_iff'\"><span class=\"name\">NNReal</span>.<span class=\"name\">lt_div_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">r</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L942-L943","name":"NNReal.lt_div_iff","line":942,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.lt_div_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.lt_div_iff\"><span class=\"name\">NNReal</span>.<span class=\"name\">lt_div_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">r</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L938-L939","name":"NNReal.div_lt_iff'","line":938,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.div_lt_iff'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.div_lt_iff'\"><span class=\"name\">NNReal</span>.<span class=\"name\">div_lt_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L934-L935","name":"NNReal.div_lt_iff","line":934,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.div_lt_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.div_lt_iff\"><span class=\"name\">NNReal</span>.<span class=\"name\">div_lt_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">r</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L930-L931","name":"NNReal.le_div_iff'","line":930,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.le_div_iff'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.le_div_iff'\"><span class=\"name\">NNReal</span>.<span class=\"name\">le_div_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">r</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L926-L927","name":"NNReal.le_div_iff","line":926,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.le_div_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.le_div_iff\"><span class=\"name\">NNReal</span>.<span class=\"name\">le_div_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">r</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L922-L923","name":"NNReal.div_le_of_le_mul'","line":922,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.div_le_of_le_mul'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.div_le_of_le_mul'\"><span class=\"name\">NNReal</span>.<span class=\"name\">div_le_of_le_mul'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L918-L919","name":"NNReal.div_le_of_le_mul","line":918,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.div_le_of_le_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.div_le_of_le_mul\"><span class=\"name\">NNReal</span>.<span class=\"name\">div_le_of_le_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L914-L915","name":"NNReal.div_le_iff'","line":914,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.div_le_iff'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.div_le_iff'\"><span class=\"name\">NNReal</span>.<span class=\"name\">div_le_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L910-L911","name":"NNReal.div_le_iff","line":910,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.div_le_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.div_le_iff\"><span class=\"name\">NNReal</span>.<span class=\"name\">div_le_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">r</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L906-L907","name":"NNReal.le_div_iff_mul_le","line":906,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.le_div_iff_mul_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.le_div_iff_mul_le\"><span class=\"name\">NNReal</span>.<span class=\"name\">le_div_iff_mul_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">r</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L901-L903","name":"NNReal.mul_le_iff_le_inv","line":901,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.mul_le_iff_le_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.mul_le_iff_le_inv\"><span class=\"name\">NNReal</span>.<span class=\"name\">mul_le_iff_le_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L897-L898","name":"NNReal.lt_inv_iff_mul_lt","line":897,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.lt_inv_iff_mul_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.lt_inv_iff_mul_lt\"><span class=\"name\">NNReal</span>.<span class=\"name\">lt_inv_iff_mul_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">p</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L892-L893","name":"NNReal.le_inv_iff_mul_le","line":892,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.le_inv_iff_mul_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.le_inv_iff_mul_le\"><span class=\"name\">NNReal</span>.<span class=\"name\">le_inv_iff_mul_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">p</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L887-L888","name":"NNReal.inv_le_of_le_mul","line":887,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.inv_le_of_le_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.inv_le_of_le_mul\"><span class=\"name\">NNReal</span>.<span class=\"name\">inv_le_of_le_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">p</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L883-L884","name":"NNReal.inv_le","line":883,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.inv_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.inv_le\"><span class=\"name\">NNReal</span>.<span class=\"name\">inv_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L872-L873","name":"NNReal.sub_div","line":872,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.sub_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.sub_div\"><span class=\"name\">NNReal</span>.<span class=\"name\">sub_div</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span></span>)</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">c</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L866-L867","name":"NNReal.coe_sub_def","line":866,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_sub_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_sub_def\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_sub_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">p</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">p</span></span></span>)</span> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L862-L863","name":"NNReal.sub_def","line":862,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.sub_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.sub_def\"><span class=\"name\">NNReal</span>.<span class=\"name\">sub_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">p</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L845-L847","name":"NNReal.exists_mem_Ioc_zpow","line":845,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.exists_mem_Ioc_zpow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.exists_mem_Ioc_zpow\"><span class=\"name\">NNReal</span>.<span class=\"name\">exists_mem_Ioc_zpow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Ioc\">Set.Ioc</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L840-L842","name":"NNReal.exists_mem_Ico_zpow","line":840,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.exists_mem_Ico_zpow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.exists_mem_Ico_zpow\"><span class=\"name\">NNReal</span>.<span class=\"name\">exists_mem_Ico_zpow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Ico\">Set.Ico</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L834-L837","name":"NNReal.exists_pow_lt_of_lt_one","line":834,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.exists_pow_lt_of_lt_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.exists_pow_lt_of_lt_one\"><span class=\"name\">NNReal</span>.<span class=\"name\">exists_pow_lt_of_lt_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L830-L831","name":"NNReal.pow_antitone_exp","line":830,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.pow_antitone_exp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.pow_antitone_exp\"><span class=\"name\">NNReal</span>.<span class=\"name\">pow_antitone_exp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mn : <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a1 : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L822-L823","name":"NNReal.mul_eq_mul_left","line":822,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.mul_eq_mul_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.mul_eq_mul_left\"><span class=\"name\">NNReal</span>.<span class=\"name\">mul_eq_mul_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L807-L809","name":"Real.toNNReal_mul","line":807,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_mul\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">q</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">q</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L802-L804","name":"Real.toNNReal_pow","line":802,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_pow\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L795-L796","name":"Real.lt_toNNReal_iff_coe_lt","line":795,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.lt_toNNReal_iff_coe_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.lt_toNNReal_iff_coe_lt\"><span class=\"name\">Real</span>.<span class=\"name\">lt_toNNReal_iff_coe_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">p</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L791-L792","name":"Real.toNNReal_lt_iff_lt_coe","line":791,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_lt_iff_lt_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_lt_iff_lt_coe\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_lt_iff_lt_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L786-L788","name":"Real.le_toNNReal_iff_coe_le'","line":786,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.le_toNNReal_iff_coe_le'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.le_toNNReal_iff_coe_le'\"><span class=\"name\">Real</span>.<span class=\"name\">le_toNNReal_iff_coe_le'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">p</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L782-L783","name":"Real.le_toNNReal_iff_coe_le","line":782,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.le_toNNReal_iff_coe_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.le_toNNReal_iff_coe_le\"><span class=\"name\">Real</span>.<span class=\"name\">le_toNNReal_iff_coe_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">p</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L778-L779","name":"Real.toNNReal_le_iff_le_coe","line":778,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_le_iff_le_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_le_iff_le_coe\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_le_iff_le_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L774-L775","name":"Real.toNNReal_add_le","line":774,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_add_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_add_le\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_add_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">p</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L770-L771","name":"Real.toNNReal_le_toNNReal","line":770,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_le_toNNReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_le_toNNReal\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_le_toNNReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L765-L767","name":"Real.toNNReal_add_toNNReal","line":765,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_add_toNNReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_add_toNNReal\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_add_toNNReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">p</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">p</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L760-L762","name":"Real.toNNReal_add","line":760,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_add\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">p</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L755-L757","name":"Real.ofNat_le_toNNReal","line":755,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.ofNat_le_toNNReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.ofNat_le_toNNReal\"><span class=\"name\">Real</span>.<span class=\"name\">ofNat_le_toNNReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#Nat.AtLeastTwo\">Nat.AtLeastTwo</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L750-L752","name":"Real.toNNReal_lt_ofNat","line":750,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_lt_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_lt_ofNat\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_lt_ofNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#Nat.AtLeastTwo\">Nat.AtLeastTwo</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L747-L747","name":"Real.toNNReal_lt_nat_cast","line":747,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_lt_nat_cast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_lt_nat_cast\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_lt_nat_cast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L745-L745","name":"Real.nat_cast_le_toNNReal","line":745,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.nat_cast_le_toNNReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.nat_cast_le_toNNReal\"><span class=\"name\">Real</span>.<span class=\"name\">nat_cast_le_toNNReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L742-L743","name":"Real.toNNReal_lt_nat_cast'","line":742,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_lt_nat_cast'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_lt_nat_cast'\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_lt_nat_cast'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L738-L739","name":"Real.nat_cast_le_toNNReal'","line":738,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.nat_cast_le_toNNReal'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.nat_cast_le_toNNReal'\"><span class=\"name\">Real</span>.<span class=\"name\">nat_cast_le_toNNReal'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L735-L735","name":"Real.toNNReal_lt_one","line":735,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_lt_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_lt_one\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_lt_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L731-L732","name":"Real.one_le_toNNReal","line":731,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.one_le_toNNReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.one_le_toNNReal\"><span class=\"name\">Real</span>.<span class=\"name\">one_le_toNNReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L727-L728","name":"Real.toNNReal_le_toNNReal_iff_of_pos","line":727,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_le_toNNReal_iff_of_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_le_toNNReal_iff_of_pos\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_le_toNNReal_iff_of_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">p</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L724-L725","name":"Real.toNNReal_le_toNNReal_iff'","line":724,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_le_toNNReal_iff'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_le_toNNReal_iff'\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_le_toNNReal_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">p</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">0</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L719-L721","name":"Real.toNNReal_lt_toNNReal_iff_of_nonneg","line":719,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_lt_toNNReal_iff_of_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_lt_toNNReal_iff_of_nonneg\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_lt_toNNReal_iff_of_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">p</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L714-L716","name":"Real.toNNReal_lt_toNNReal_iff","line":714,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_lt_toNNReal_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_lt_toNNReal_iff\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_lt_toNNReal_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">p</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L710-L711","name":"Real.toNNReal_lt_toNNReal_iff'","line":710,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_lt_toNNReal_iff'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_lt_toNNReal_iff'\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_lt_toNNReal_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">p</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L705-L706","name":"Real.toNNReal_eq_toNNReal_iff","line":705,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_eq_toNNReal_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_eq_toNNReal_iff\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_eq_toNNReal_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">p</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L700-L702","name":"Real.ofNat_lt_toNNReal","line":700,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.ofNat_lt_toNNReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.ofNat_lt_toNNReal\"><span class=\"name\">Real</span>.<span class=\"name\">ofNat_lt_toNNReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#Nat.AtLeastTwo\">Nat.AtLeastTwo</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L695-L697","name":"Real.toNNReal_le_ofNat","line":695,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_le_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_le_ofNat\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_le_ofNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#Nat.AtLeastTwo\">Nat.AtLeastTwo</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L691-L692","name":"Real.nat_cast_lt_toNNReal","line":691,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.nat_cast_lt_toNNReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.nat_cast_lt_toNNReal\"><span class=\"name\">Real</span>.<span class=\"name\">nat_cast_lt_toNNReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L687-L688","name":"Real.toNNReal_le_nat_cast","line":687,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_le_nat_cast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_le_nat_cast\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_le_nat_cast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L683-L684","name":"Real.one_lt_toNNReal","line":683,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.one_lt_toNNReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.one_lt_toNNReal\"><span class=\"name\">Real</span>.<span class=\"name\">one_lt_toNNReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L679-L680","name":"Real.toNNReal_le_one","line":679,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_le_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_le_one\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_le_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L674-L675","name":"Real.toNNReal_le_toNNReal_iff","line":674,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_le_toNNReal_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_le_toNNReal_iff\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_le_toNNReal_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">p</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L669-L671","name":"Real.toNNReal_eq_ofNat","line":669,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_eq_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_eq_ofNat\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_eq_ofNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#Nat.AtLeastTwo\">Nat.AtLeastTwo</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L665-L666","name":"Real.toNNReal_eq_nat_cast","line":665,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_eq_nat_cast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_eq_nat_cast\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_eq_nat_cast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L662-L662","name":"Real.toNNReal_eq_one","line":662,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_eq_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_eq_one\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L657-L659","name":"Real.toNNReal_eq_iff_eq_coe","line":657,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_eq_iff_eq_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_eq_iff_eq_coe\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_eq_iff_eq_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L653-L654","name":"Real.toNNReal_of_nonpos","line":653,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_of_nonpos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_of_nonpos\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_of_nonpos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">0</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L649-L650","name":"Real.toNNReal_eq_zero","line":649,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_eq_zero\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L644-L645","name":"Real.toNNReal_pos","line":644,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_pos\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L640-L640","name":"Real.toNNReal_one","line":640,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_one\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L636-L636","name":"Real.toNNReal_zero","line":636,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_zero\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L631-L632","name":"Real.coe_toNNReal'","line":631,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.coe_toNNReal'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.coe_toNNReal'\"><span class=\"name\">Real</span>.<span class=\"name\">coe_toNNReal'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">r</span> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L618-L619","name":"NNReal.zero_le_coe","line":618,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.zero_le_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.zero_le_coe\"><span class=\"name\">NNReal</span>.<span class=\"name\">zero_le_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">q</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L613-L614","name":"NNReal.coe_min","line":613,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_min","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_min\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_min</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Min.min\">min</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Min.min\">min</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L608-L609","name":"NNReal.coe_max","line":608,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_max","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_max\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_max</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L603-L604","name":"NNReal.finset_sup_div","line":603,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.finset_sup_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.finset_sup_div\"><span class=\"name\">NNReal</span>.<span class=\"name\">finset_sup_div</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Lattice.html#Finset.sup\">Finset.sup</a> <span class=\"fn\">s</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Lattice.html#Finset.sup\">Finset.sup</a> <span class=\"fn\">s</span> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">r</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L598-L600","name":"NNReal.finset_sup_mul","line":598,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.finset_sup_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.finset_sup_mul\"><span class=\"name\">NNReal</span>.<span class=\"name\">finset_sup_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Lattice.html#Finset.sup\">Finset.sup</a> <span class=\"fn\">s</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Lattice.html#Finset.sup\">Finset.sup</a> <span class=\"fn\">s</span> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">r</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L593-L595","name":"NNReal.mul_finset_sup","line":593,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.mul_finset_sup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.mul_finset_sup\"><span class=\"name\">NNReal</span>.<span class=\"name\">mul_finset_sup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Lattice.html#Finset.sup\">Finset.sup</a> <span class=\"fn\">s</span> <span class=\"fn\">f</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Lattice.html#Finset.sup\">Finset.sup</a> <span class=\"fn\">s</span> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L589-L590","name":"NNReal.sup_mul","line":589,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.sup_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.sup_mul\"><span class=\"name\">NNReal</span>.<span class=\"name\">sup_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">b</span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span></span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L585-L586","name":"NNReal.mul_sup","line":585,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.mul_sup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.mul_sup\"><span class=\"name\">NNReal</span>.<span class=\"name\">mul_sup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">c</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L582-L582","name":"NNReal.bot_eq_zero","line":582,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.bot_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.bot_eq_zero\"><span class=\"name\">NNReal</span>.<span class=\"name\">bot_eq_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L571-L579","name":"NNReal.lt_iff_exists_rat_btwn","line":571,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.lt_iff_exists_rat_btwn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.lt_iff_exists_rat_btwn\"><span class=\"name\">NNReal</span>.<span class=\"name\">lt_iff_exists_rat_btwn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (q : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">q</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">↑<span class=\"fn\">q</span></span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">↑<span class=\"fn\">q</span></span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L567-L568","name":"NNReal.le_of_forall_pos_le_add","line":567,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.le_of_forall_pos_le_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.le_of_forall_pos_le_add\"><span class=\"name\">NNReal</span>.<span class=\"name\">le_of_forall_pos_le_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">ε</span> : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">ε</span></span> → <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">ε</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L563-L563","name":"NNReal.covariant_mul","line":563,"kind":"instance","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.covariant_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.covariant_mul\"><span class=\"name\">NNReal</span>.<span class=\"name\">covariant_mul</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L560-L560","name":"NNReal.contravariant_add","line":560,"kind":"instance","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.contravariant_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.contravariant_add\"><span class=\"name\">NNReal</span>.<span class=\"name\">contravariant_add</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass\">ContravariantClass</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L557-L557","name":"NNReal.covariant_add","line":557,"kind":"instance","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.covariant_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.covariant_add\"><span class=\"name\">NNReal</span>.<span class=\"name\">covariant_add</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L548-L551","name":"NNReal.le_iInf_add_iInf","line":548,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.le_iInf_add_iInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.le_iInf_add_iInf\"><span class=\"name\">NNReal</span>.<span class=\"name\">le_iInf_add_iInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι' : <a href=\"./foundational_types.html\">Sort</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">ι'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">ι'</span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) (<span class=\"fn\">j</span> : <span class=\"fn\">ι'</span>), <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">j</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">⨅ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">⨅ (j : <span class=\"fn\">ι'</span>), <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">j</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L544-L545","name":"NNReal.coe_iInf","line":544,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_iInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_iInf\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_iInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">⨅ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ (i : <span class=\"fn\">ι</span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L539-L540","name":"NNReal.sInf_empty","line":539,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.sInf_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.sInf_empty\"><span class=\"name\">NNReal</span>.<span class=\"name\">sInf_empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet.sInf\">sInf</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L527-L535","name":"NNReal.coe_sInf","line":527,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_sInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_sInf\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_sInf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet.sInf\">sInf</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet.sInf\">sInf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#NNReal.toReal\">NNReal.toReal</a> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">s</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L522-L523","name":"NNReal.coe_iSup","line":522,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_iSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_iSup\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_iSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L506-L518","name":"NNReal.coe_sSup","line":506,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_sSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_sSup\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_sSup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#SupSet.sSup\">sSup</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#SupSet.sSup\">sSup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#NNReal.toReal\">NNReal.toReal</a> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">s</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L502-L503","name":"NNReal.instConditionallyCompleteLinearOrderBotNNReal","line":502,"kind":"instance","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.instConditionallyCompleteLinearOrderBotNNReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.instConditionallyCompleteLinearOrderBotNNReal\"><span class=\"name\">NNReal</span>.<span class=\"name\">instConditionallyCompleteLinearOrderBotNNReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/ConditionallyCompleteLattice/Basic.html#ConditionallyCompleteLinearOrderBot\">ConditionallyCompleteLinearOrderBot</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L498-L499","name":"NNReal.bddBelow_coe","line":498,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.bddBelow_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.bddBelow_coe\"><span class=\"name\">NNReal</span>.<span class=\"name\">bddBelow_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Basic.html#BddBelow\">BddBelow</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#NNReal.toReal\">NNReal.toReal</a> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">s</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L490-L495","name":"NNReal.bddAbove_coe","line":490,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.bddAbove_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.bddAbove_coe\"><span class=\"name\">NNReal</span>.<span class=\"name\">bddAbove_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Basic.html#BddAbove\">BddAbove</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#NNReal.toReal\">NNReal.toReal</a> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Basic.html#BddAbove\">BddAbove</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L485-L487","name":"NNReal.coe_image","line":485,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_image","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_image\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_image</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#NNReal.toReal\">NNReal.toReal</a> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> | <span class=\"fn\">∃ (h : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span></span>), <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">x</span>, <span class=\"fn\">property</span> := <span class=\"fn\">h</span> }</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L479-L481","name":"NNReal.orderIsoIccZeroCoe_symm_apply_coe","line":479,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.orderIsoIccZeroCoe_symm_apply_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.orderIsoIccZeroCoe_symm_apply_coe\"><span class=\"name\">NNReal</span>.<span class=\"name\">orderIsoIccZeroCoe_symm_apply_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Iic\">Set.Iic</a> <span class=\"fn\">a</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso.symm\">OrderIso.symm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#NNReal.orderIsoIccZeroCoe\">NNReal.orderIsoIccZeroCoe</a> <span class=\"fn\">a</span></span>)</span></span>)</span> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L474-L476","name":"NNReal.orderIsoIccZeroCoe_apply_coe_coe","line":474,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.orderIsoIccZeroCoe_apply_coe_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.orderIsoIccZeroCoe_apply_coe_coe\"><span class=\"name\">NNReal</span>.<span class=\"name\">orderIsoIccZeroCoe_apply_coe_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Icc\">Set.Icc</a> <span class=\"fn\">0</span> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#NNReal.orderIsoIccZeroCoe\">NNReal.orderIsoIccZeroCoe</a> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">b</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L468-L470","name":"NNReal.orderIsoIccZeroCoe","line":468,"kind":"def","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.orderIsoIccZeroCoe","doc":"If `a` is a nonnegative real number, then the closed interval `[0, a]` in `ℝ` is order\nisomorphic to the interval `Set.Iic a`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.orderIsoIccZeroCoe\"><span class=\"name\">NNReal</span>.<span class=\"name\">orderIsoIccZeroCoe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Icc\">Set.Icc</a> <span class=\"fn\">0</span> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span>)</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Iic\">Set.Iic</a> <span class=\"fn\">a</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L428-L430","name":"NNReal.gi","line":428,"kind":"def","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.gi","doc":"`Real.toNNReal` and `NNReal.toReal : ℝ≥0 → ℝ` form a Galois insertion. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.gi\"><span class=\"name\">NNReal</span>.<span class=\"name\">gi</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/GaloisConnection.html#GaloisInsertion\">GaloisInsertion</a> <a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal.toReal\">NNReal.toReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L423-L425","name":"Real.toNNReal_ofNat","line":423,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_ofNat\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#Nat.AtLeastTwo\">Nat.AtLeastTwo</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L417-L418","name":"NNReal.toNNReal_coe_nat","line":417,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.toNNReal_coe_nat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.toNNReal_coe_nat\"><span class=\"name\">NNReal</span>.<span class=\"name\">toNNReal_coe_nat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L411-L412","name":"NNReal.mk_coe_nat","line":411,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.mk_coe_nat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.mk_coe_nat\"><span class=\"name\">NNReal</span>.<span class=\"name\">mk_coe_nat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">↑<span class=\"fn\">n</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L406-L407","name":"Real.toNNReal_coe","line":406,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_coe\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L401-L402","name":"Real.toNNReal_mono","line":401,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_mono\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_mono</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L399-L399","name":"NNReal.toReal_le_toReal","line":399,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.toReal_le_toReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.toReal_le_toReal\"><span class=\"name\">NNReal</span>.<span class=\"name\">toReal_le_toReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L395-L395","name":"NNReal.coe_mono","line":395,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_mono\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_mono</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal.toReal\">NNReal.toReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L391-L392","name":"NNReal.coe_pos","line":391,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_pos\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L386-L387","name":"NNReal.coe_lt_coe","line":386,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_lt_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_lt_coe\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_lt_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r₁ : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r₂ : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">r₁</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">r₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">r₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">r₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L381-L382","name":"NNReal.coe_le_coe","line":381,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_le_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_le_coe\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_le_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r₁ : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r₂ : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">r₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">r₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">r₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">r₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L374-L376","name":"NNReal.coe_ofNat","line":374,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_ofNat\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#Nat.AtLeastTwo\">Nat.AtLeastTwo</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L368-L369","name":"NNReal.coe_nat_cast","line":368,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_nat_cast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_nat_cast\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_nat_cast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L364-L364","name":"NNReal.coe_nsmul","line":364,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_nsmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_nsmul\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_nsmul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">r</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L356-L360","name":"Real.toNNReal_prod_of_nonneg","line":356,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_prod_of_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_prod_of_nonneg\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_prod_of_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ <span class=\"fn\">a</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">s</span> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">s</span> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L352-L353","name":"NNReal.coe_prod","line":352,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_prod\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">s</span> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">s</span> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L344-L348","name":"Real.toNNReal_sum_of_nonneg","line":344,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_sum_of_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_sum_of_nonneg\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_sum_of_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ <span class=\"fn\">a</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">s</span> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">s</span> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L340-L341","name":"NNReal.coe_sum","line":340,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_sum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_sum\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_sum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">s</span> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">s</span> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L335-L336","name":"NNReal.coe_multiset_prod","line":335,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_multiset_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_multiset_prod\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_multiset_prod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.map\">Multiset.map</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal.toReal\">NNReal.toReal</a> <span class=\"fn\">s</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L330-L331","name":"NNReal.coe_multiset_sum","line":330,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_multiset_sum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_multiset_sum\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_multiset_sum</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.sum\">Multiset.sum</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.sum\">Multiset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.map\">Multiset.map</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal.toReal\">NNReal.toReal</a> <span class=\"fn\">s</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L325-L326","name":"NNReal.coe_list_prod","line":325,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_list_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_list_prod\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_list_prod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(l : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/List/BigOperators/Defs.html#List.prod\">List.prod</a> <span class=\"fn\">l</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/List/BigOperators/Defs.html#List.prod\">List.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.map\">List.map</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal.toReal\">NNReal.toReal</a> <span class=\"fn\">l</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L320-L321","name":"NNReal.coe_list_sum","line":320,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_list_sum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_list_sum\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_list_sum</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(l : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/List/BigOperators/Defs.html#List.sum\">List.sum</a> <span class=\"fn\">l</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/List/BigOperators/Defs.html#List.sum\">List.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.map\">List.map</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal.toReal\">NNReal.toReal</a> <span class=\"fn\">l</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L316-L316","name":"NNReal.coe_zpow","line":316,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_zpow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_zpow\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_zpow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L312-L312","name":"NNReal.coe_pow","line":312,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_pow\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_pow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L306-L308","name":"NNReal.coe_indicator","line":306,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_indicator","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_indicator\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_indicator</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Function/Indicator.html#Set.indicator\">Set.indicator</a> <span class=\"fn\">s</span> <span class=\"fn\">f</span> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Function/Indicator.html#Set.indicator\">Set.indicator</a> <span class=\"fn\">s</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span></span>)</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L289-L290","name":"NNReal.instStarModuleNNRealRealToStarToInvolutiveStarToAddMonoidToAddMonoidWithOneToAddCommMonoidWithOneToNonAssocSemiringInstNNRealSemiringToStarAddMonoidToNonUnitalNonAssocSemiringInstStarRingNNRealToNonUnitalNonAssocSemiringToNonAssocSemiringInstNNRealSemiringInstAddMonoidRealToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingCommRingInstStarRingRealToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingCommRingToSMulInstNNRealCommSemiringSemiringInstAlgebraNNRealInstNNRealCommSemiringIdInstCommSemiringReal","line":289,"kind":"instance","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.instStarModuleNNRealRealToStarToInvolutiveStarToAddMonoidToAddMonoidWithOneToAddCommMonoidWithOneToNonAssocSemiringInstNNRealSemiringToStarAddMonoidToNonUnitalNonAssocSemiringInstStarRingNNRealToNonUnitalNonAssocSemiringToNonAssocSemiringInstNNRealSemiringInstAddMonoidRealToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingCommRingInstStarRingRealToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingCommRingToSMulInstNNRealCommSemiringSemiringInstAlgebraNNRealInstNNRealCommSemiringIdInstCommSemiringReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.instStarModuleNNRealRealToStarToInvolutiveStarToAddMonoidToAddMonoidWithOneToAddCommMonoidWithOneToNonAssocSemiringInstNNRealSemiringToStarAddMonoidToNonUnitalNonAssocSemiringInstStarRingNNRealToNonUnitalNonAssocSemiringToNonAssocSemiringInstNNRealSemiringInstAddMonoidRealToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingCommRingInstStarRingRealToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingCommRingToSMulInstNNRealCommSemiringSemiringInstAlgebraNNRealInstNNRealCommSemiringIdInstCommSemiringReal\"><span class=\"name\">NNReal</span>.<span class=\"name\">instStarModuleNNRealRealToStarToInvolutiveStarToAddMonoidToAddMonoidWithOneToAddCommMonoidWithOneToNonAssocSemiringInstNNRealSemiringToStarAddMonoidToNonUnitalNonAssocSemiringInstStarRingNNRealToNonUnitalNonAssocSemiringToNonAssocSemiringInstNNRealSemiringInstAddMonoidRealToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingCommRingInstStarRingRealToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingCommRingToSMulInstNNRealCommSemiringSemiringInstAlgebraNNRealInstNNRealCommSemiringIdInstCommSemiringReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#StarModule\">StarModule</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L286-L287","name":"NNReal.instTrivialStarNNRealToStarToInvolutiveStarToAddMonoidToAddMonoidWithOneToAddCommMonoidWithOneToNonAssocSemiringInstNNRealSemiringToStarAddMonoidToNonUnitalNonAssocSemiringInstStarRingNNRealToNonUnitalNonAssocSemiringToNonAssocSemiringInstNNRealSemiring","line":286,"kind":"instance","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.instTrivialStarNNRealToStarToInvolutiveStarToAddMonoidToAddMonoidWithOneToAddCommMonoidWithOneToNonAssocSemiringInstNNRealSemiringToStarAddMonoidToNonUnitalNonAssocSemiringInstStarRingNNRealToNonUnitalNonAssocSemiringToNonAssocSemiringInstNNRealSemiring","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.instTrivialStarNNRealToStarToInvolutiveStarToAddMonoidToAddMonoidWithOneToAddCommMonoidWithOneToNonAssocSemiringInstNNRealSemiringToStarAddMonoidToNonUnitalNonAssocSemiringInstStarRingNNRealToNonUnitalNonAssocSemiringToNonAssocSemiringInstNNRealSemiring\"><span class=\"name\">NNReal</span>.<span class=\"name\">instTrivialStarNNRealToStarToInvolutiveStarToAddMonoidToAddMonoidWithOneToAddCommMonoidWithOneToNonAssocSemiringInstNNRealSemiringToStarAddMonoidToNonUnitalNonAssocSemiringInstStarRingNNRealToNonUnitalNonAssocSemiringToNonAssocSemiringInstNNRealSemiring</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#TrivialStar\">TrivialStar</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L280-L284","name":"NNReal.instStarRingNNRealToNonUnitalNonAssocSemiringToNonAssocSemiringInstNNRealSemiring","line":280,"kind":"instance","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.instStarRingNNRealToNonUnitalNonAssocSemiringToNonAssocSemiringInstNNRealSemiring","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.instStarRingNNRealToNonUnitalNonAssocSemiringToNonAssocSemiringInstNNRealSemiring\"><span class=\"name\">NNReal</span>.<span class=\"name\">instStarRingNNRealToNonUnitalNonAssocSemiringToNonAssocSemiringInstNNRealSemiring</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#StarRing\">StarRing</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L274-L278","name":"NNReal.instAlgebraNNRealInstNNRealCommSemiring","line":274,"kind":"instance","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.instAlgebraNNRealInstNNRealCommSemiring","doc":"An `Algebra` over `ℝ` restricts to an `Algebra` over `ℝ≥0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.instAlgebraNNRealInstNNRealCommSemiring\"><span class=\"name\">NNReal</span>.<span class=\"name\">instAlgebraNNRealInstNNRealCommSemiring</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L269-L270","name":"NNReal.instModuleNNRealInstNNRealSemiring","line":269,"kind":"instance","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.instModuleNNRealInstNNRealSemiring","doc":"A `Module` over `ℝ` restricts to a `Module` over `ℝ≥0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.instModuleNNRealInstNNRealSemiring\"><span class=\"name\">NNReal</span>.<span class=\"name\">instModuleNNRealInstNNRealSemiring</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L265-L266","name":"NNReal.instDistribMulActionNNRealToMonoidToMonoidWithZeroInstNNRealSemiring","line":265,"kind":"instance","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.instDistribMulActionNNRealToMonoidToMonoidWithZeroInstNNRealSemiring","doc":"A `DistribMulAction` over `ℝ` restricts to a `DistribMulAction` over `ℝ≥0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.instDistribMulActionNNRealToMonoidToMonoidWithZeroInstNNRealSemiring\"><span class=\"name\">NNReal</span>.<span class=\"name\">instDistribMulActionNNRealToMonoidToMonoidWithZeroInstNNRealSemiring</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribMulAction\">DistribMulAction</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribMulAction\">DistribMulAction</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L260-L261","name":"NNReal.smulCommClass_right","line":260,"kind":"instance","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.smulCommClass_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.smulCommClass_right\"><span class=\"name\">NNReal</span>.<span class=\"name\">smulCommClass_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction\">MulAction</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">M</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">M</span> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L256-L257","name":"NNReal.smulCommClass_left","line":256,"kind":"instance","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.smulCommClass_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.smulCommClass_left\"><span class=\"name\">NNReal</span>.<span class=\"name\">smulCommClass_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction\">MulAction</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#SMulCommClass\">SMulCommClass</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#SMulCommClass\">SMulCommClass</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L253-L254","name":"NNReal.instIsScalarTowerNNRealToSMulToMonoidToMonoidWithZeroInstNNRealSemiringInstMulActionNNRealToMonoidToMonoidWithZeroInstNNRealSemiringToSMulInstMulActionNNRealToMonoidToMonoidWithZeroInstNNRealSemiring","line":253,"kind":"instance","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.instIsScalarTowerNNRealToSMulToMonoidToMonoidWithZeroInstNNRealSemiringInstMulActionNNRealToMonoidToMonoidWithZeroInstNNRealSemiringToSMulInstMulActionNNRealToMonoidToMonoidWithZeroInstNNRealSemiring","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.instIsScalarTowerNNRealToSMulToMonoidToMonoidWithZeroInstNNRealSemiringInstMulActionNNRealToMonoidToMonoidWithZeroInstNNRealSemiringToSMulInstMulActionNNRealToMonoidToMonoidWithZeroInstNNRealSemiring\"><span class=\"name\">NNReal</span>.<span class=\"name\">instIsScalarTowerNNRealToSMulToMonoidToMonoidWithZeroInstNNRealSemiringInstMulActionNNRealToMonoidToMonoidWithZeroInstNNRealSemiringToSMulInstMulActionNNRealToMonoidToMonoidWithZeroInstNNRealSemiring</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction\">MulAction</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction\">MulAction</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L249-L250","name":"NNReal.smul_def","line":249,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.smul_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.smul_def\"><span class=\"name\">NNReal</span>.<span class=\"name\">smul_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction\">MulAction</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L246-L247","name":"NNReal.instMulActionNNRealToMonoidToMonoidWithZeroInstNNRealSemiring","line":246,"kind":"instance","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.instMulActionNNRealToMonoidToMonoidWithZeroInstNNRealSemiring","doc":"A `MulAction` over `ℝ` restricts to a `MulAction` over `ℝ≥0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.instMulActionNNRealToMonoidToMonoidWithZeroInstNNRealSemiring\"><span class=\"name\">NNReal</span>.<span class=\"name\">instMulActionNNRealToMonoidToMonoidWithZeroInstNNRealSemiring</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction\">MulAction</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction\">MulAction</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L240-L240","name":"NNReal.coe_toRealHom","line":240,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_toRealHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_toRealHom\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_toRealHom</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<a href=\"./Mathlib/Data/Real/NNReal.html#NNReal.toRealHom\">NNReal.toRealHom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal.toReal\">NNReal.toReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L232-L237","name":"NNReal.toRealHom","line":232,"kind":"def","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.toRealHom","doc":"Coercion `ℝ≥0 → ℝ` as a `RingHom`.\n\nPorting note: todo: what if we define `Coe ℝ≥0 ℝ` using this function? "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.toRealHom\"><span class=\"name\">NNReal</span>.<span class=\"name\">toRealHom</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L224-L224","name":"NNReal.coe_ne_zero","line":224,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_ne_zero\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">r</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L219-L220","name":"NNReal.coe_eq_one","line":219,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_eq_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_eq_one\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_eq_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L214-L215","name":"NNReal.coe_eq_zero","line":214,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_eq_zero\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_eq_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L209-L210","name":"NNReal.coe_sub","line":209,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_sub\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r₁ : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r₂ : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">r₂</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">r₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r₁</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">r₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">r₁</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">r₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L205-L205","name":"NNReal.coe_two","line":205,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_two","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_two\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_two</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L198-L199","name":"NNReal.coe_div","line":198,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_div\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_div</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r₁ : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r₂ : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r₁</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">r₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">r₁</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">r₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L193-L194","name":"NNReal.coe_inv","line":193,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_inv\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_inv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">r</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L188-L189","name":"NNReal.coe_mul","line":188,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_mul\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r₁ : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r₂ : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">r₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">r₁</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">r₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L183-L184","name":"NNReal.coe_add","line":183,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_add\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r₁ : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r₂ : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">r₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">r₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">r₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L178-L179","name":"NNReal.coe_one","line":178,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_one\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L173-L174","name":"NNReal.coe_zero","line":173,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_zero\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L168-L169","name":"NNReal.coe_eq","line":168,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_eq\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r₁ : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r₂ : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">r₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">r₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">r₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L164-L164","name":"NNReal.coe_injective","line":164,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_injective\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_injective</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal.toReal\">NNReal.toReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L139-L139","name":"NNReal.coe_mk","line":139,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_mk\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">a</span>, <span class=\"fn\">property</span> := <span class=\"fn\">ha</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L136-L136","name":"NNReal.coe_nonneg","line":136,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.coe_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.coe_nonneg\"><span class=\"name\">NNReal</span>.<span class=\"name\">coe_nonneg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L132-L133","name":"Real.le_coe_toNNReal","line":132,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.le_coe_toNNReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.le_coe_toNNReal\"><span class=\"name\">Real</span>.<span class=\"name\">le_coe_toNNReal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L128-L129","name":"Real.toNNReal_of_nonneg","line":128,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_of_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal_of_nonneg\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal_of_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">r</span>, <span class=\"fn\">property</span> := <span class=\"fn\">hr</span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L124-L125","name":"Real.coe_toNNReal","line":124,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#Real.coe_toNNReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.coe_toNNReal\"><span class=\"name\">Real</span>.<span class=\"name\">coe_toNNReal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\">Real.toNNReal</a> <span class=\"fn\">r</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L120-L121","name":"Real.toNNReal","line":120,"kind":"def","docLink":"./Mathlib/Data/Real/NNReal.html#Real.toNNReal","doc":"Reinterpret a real number `r` as a non-negative real number. Returns `0` if `r < 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#Real.toNNReal\"><span class=\"name\">Real</span>.<span class=\"name\">toNNReal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L114-L116","name":"NNReal.exists","line":114,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.exists","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.exists\"><span class=\"name\">NNReal</span>.<span class=\"name\">exists</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ (x : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) (hx : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span></span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">x</span>, <span class=\"fn\">property</span> := <span class=\"fn\">hx</span> }</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L109-L111","name":"NNReal.forall","line":109,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.forall","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.forall\"><span class=\"name\">NNReal</span>.<span class=\"name\">forall</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) (<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span></span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">x</span>, <span class=\"fn\">property</span> := <span class=\"fn\">hx</span> }</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L105-L106","name":"NNReal.ne_iff","line":105,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.ne_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.ne_iff\"><span class=\"name\">NNReal</span>.<span class=\"name\">ne_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L101-L102","name":"NNReal.eq_iff","line":101,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.eq_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.eq_iff\"><span class=\"name\">NNReal</span>.<span class=\"name\">eq_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L97-L98","name":"NNReal.eq","line":97,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.eq\"><span class=\"name\">NNReal</span>.<span class=\"name\">eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span> → <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L93-L94","name":"NNReal.canLift","line":93,"kind":"instance","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.canLift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.canLift\"><span class=\"name\">NNReal</span>.<span class=\"name\">canLift</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Lift.html#CanLift\">CanLift</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal.toReal\">NNReal.toReal</a> <span class=\"fn\">fun (<span class=\"fn\">r</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">r</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L89-L90","name":"NNReal.val_eq_coe","line":89,"kind":"theorem","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.val_eq_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.val_eq_coe\"><span class=\"name\">NNReal</span>.<span class=\"name\">val_eq_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L85-L85","name":"NNReal.instCoeNNRealReal","line":85,"kind":"instance","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.instCoeNNRealReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.instCoeNNRealReal\"><span class=\"name\">NNReal</span>.<span class=\"name\">instCoeNNRealReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L83-L83","name":"NNReal.toReal","line":83,"kind":"def","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.toReal","doc":"Coercion `ℝ≥0 → ℝ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.toReal\"><span class=\"name\">NNReal</span>.<span class=\"name\">toReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L79-L80","name":"NNReal.instCanonicallyLinearOrderedSemifieldNNReal","line":79,"kind":"instance","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.instCanonicallyLinearOrderedSemifieldNNReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.instCanonicallyLinearOrderedSemifieldNNReal\"><span class=\"name\">NNReal</span>.<span class=\"name\">instCanonicallyLinearOrderedSemifieldNNReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Canonical/Defs.html#CanonicallyLinearOrderedSemifield\">CanonicallyLinearOrderedSemifield</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L77-L77","name":"NNReal.instOrderedSubNNRealToLEToPreorderToPartialOrderInstNNRealStrictOrderedSemiringToAddToDistribToNonUnitalNonAssocSemiringToNonAssocSemiringInstNNRealSemiringInstSubNNReal","line":77,"kind":"instance","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.instOrderedSubNNRealToLEToPreorderToPartialOrderInstNNRealStrictOrderedSemiringToAddToDistribToNonUnitalNonAssocSemiringToNonAssocSemiringInstNNRealSemiringInstSubNNReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.instOrderedSubNNRealToLEToPreorderToPartialOrderInstNNRealStrictOrderedSemiringToAddToDistribToNonUnitalNonAssocSemiringToNonAssocSemiringInstNNRealSemiringInstSubNNReal\"><span class=\"name\">NNReal</span>.<span class=\"name\">instOrderedSubNNRealToLEToPreorderToPartialOrderInstNNRealStrictOrderedSemiringToAddToDistribToNonUnitalNonAssocSemiringToNonAssocSemiringInstNNRealSemiringInstSubNNReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Sub/Defs.html#OrderedSub\">OrderedSub</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L76-L76","name":"NNReal.instSubNNReal","line":76,"kind":"instance","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.instSubNNReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.instSubNNReal\"><span class=\"name\">NNReal</span>.<span class=\"name\">instSubNNReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L75-L75","name":"NNReal.instArchimedeanNNRealToOrderedAddCommMonoidToOrderedSemiringInstNNRealOrderedCommSemiring","line":75,"kind":"instance","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.instArchimedeanNNRealToOrderedAddCommMonoidToOrderedSemiringInstNNRealOrderedCommSemiring","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.instArchimedeanNNRealToOrderedAddCommMonoidToOrderedSemiringInstNNRealOrderedCommSemiring\"><span class=\"name\">NNReal</span>.<span class=\"name\">instArchimedeanNNRealToOrderedAddCommMonoidToOrderedSemiringInstNNRealOrderedCommSemiring</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Archimedean.html#Archimedean\">Archimedean</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L74-L74","name":"NNReal.instOrderBotNNRealToLEToPreorderToPartialOrderInstNNRealStrictOrderedSemiring","line":74,"kind":"instance","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.instOrderBotNNRealToLEToPreorderToPartialOrderInstNNRealStrictOrderedSemiring","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.instOrderBotNNRealToLEToPreorderToPartialOrderInstNNRealStrictOrderedSemiring\"><span class=\"name\">NNReal</span>.<span class=\"name\">instOrderBotNNRealToLEToPreorderToPartialOrderInstNNRealStrictOrderedSemiring</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder.html#OrderBot\">OrderBot</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L73-L73","name":"NNReal.instDenselyOrderedNNRealToLTToPreorderToPartialOrderInstNNRealStrictOrderedSemiring","line":73,"kind":"instance","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.instDenselyOrderedNNRealToLTToPreorderToPartialOrderInstNNRealStrictOrderedSemiring","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.instDenselyOrderedNNRealToLTToPreorderToPartialOrderInstNNRealStrictOrderedSemiring\"><span class=\"name\">NNReal</span>.<span class=\"name\">instDenselyOrderedNNRealToLTToPreorderToPartialOrderInstNNRealStrictOrderedSemiring</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Basic.html#DenselyOrdered\">DenselyOrdered</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L72-L72","name":"NNReal.instFloorSemiringNNRealToOrderedSemiringInstNNRealOrderedCommSemiring","line":72,"kind":"instance","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.instFloorSemiringNNRealToOrderedSemiringInstNNRealOrderedCommSemiring","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.instFloorSemiringNNRealToOrderedSemiringInstNNRealOrderedCommSemiring\"><span class=\"name\">NNReal</span>.<span class=\"name\">instFloorSemiringNNRealToOrderedSemiringInstNNRealOrderedCommSemiring</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#FloorSemiring\">FloorSemiring</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L70-L70","name":"NNReal.«termℝ≥0»","line":70,"kind":"def","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal.«termℝ≥0»","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal.«termℝ≥0»\"><span class=\"name\">NNReal</span>.<span class=\"name\">«termℝ≥0»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Real/NNReal.lean#L61-L64","name":"NNReal","line":61,"kind":"def","docLink":"./Mathlib/Data/Real/NNReal.html#NNReal","doc":"Nonnegative real numbers. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Real/NNReal.html#NNReal\"><span class=\"name\">NNReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}