{"name":"Mathlib.Algebra.Category.GroupCat.Preadditive","instances":[{"typeNames":["Quiver.Hom"],"name":"AddCommGroupCat.instAddCommGroupHomAddCommGroupCatToQuiverToCategoryStructInstAddCommGroupCatLargeCategory","className":"AddCommGroup"},{"typeNames":["AddCommGroupCat"],"name":"AddCommGroupCat.instPreadditiveAddCommGroupCatInstAddCommGroupCatLargeCategory","className":"CategoryTheory.Preadditive"}],"imports":["Init","Mathlib.Algebra.Category.GroupCat.Basic","Mathlib.CategoryTheory.Preadditive.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Preadditive.lean#L37-L37","name":"AddCommGroupCat.instPreadditiveAddCommGroupCatInstAddCommGroupCatLargeCategory","line":37,"kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Preadditive.html#AddCommGroupCat.instPreadditiveAddCommGroupCatInstAddCommGroupCatLargeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Preadditive.html#AddCommGroupCat.instPreadditiveAddCommGroupCatInstAddCommGroupCatLargeCategory\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">instPreadditiveAddCommGroupCatInstAddCommGroupCatLargeCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Preadditive.lean#L27-L27","name":"AddCommGroupCat.hom_add_apply","line":27,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/GroupCat/Preadditive.html#AddCommGroupCat.hom_add_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Preadditive.html#AddCommGroupCat.hom_add_apply\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">hom_add_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Preadditive.lean#L22-L23","name":"AddCommGroupCat.instAddCommGroupHomAddCommGroupCatToQuiverToCategoryStructInstAddCommGroupCatLargeCategory","line":22,"kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Preadditive.html#AddCommGroupCat.instAddCommGroupHomAddCommGroupCatToQuiverToCategoryStructInstAddCommGroupCatLargeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Preadditive.html#AddCommGroupCat.instAddCommGroupHomAddCommGroupCatToQuiverToCategoryStructInstAddCommGroupCatLargeCategory\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">instAddCommGroupHomAddCommGroupCatToQuiverToCategoryStructInstAddCommGroupCatLargeCategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(P : <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Q : <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span></span>)</span></span></div></div>"}]}