{"name":"Mathlib.Topology.Category.TopCat.Adjunctions","instances":[{"typeNames":["CategoryTheory.forget"],"name":"TopCat.instIsRightAdjointTypeTypesTopCatInstTopCatLargeCategoryForgetConcreteCategory","className":"CategoryTheory.IsRightAdjoint"},{"typeNames":["CategoryTheory.forget"],"name":"TopCat.instIsLeftAdjointTopCatInstTopCatLargeCategoryTypeTypesForgetConcreteCategory","className":"CategoryTheory.IsLeftAdjoint"}],"imports":["Init","Mathlib.Topology.Category.TopCat.Basic","Mathlib.CategoryTheory.Adjunction.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/TopCat/Adjunctions.lean#L51-L52","name":"TopCat.instIsLeftAdjointTopCatInstTopCatLargeCategoryTypeTypesForgetConcreteCategory","line":51,"kind":"instance","docLink":"./Mathlib/Topology/Category/TopCat/Adjunctions.html#TopCat.instIsLeftAdjointTopCatInstTopCatLargeCategoryTypeTypesForgetConcreteCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Adjunctions.html#TopCat.instIsLeftAdjointTopCatInstTopCatLargeCategoryTypeTypesForgetConcreteCategory\"><span class=\"name\">TopCat</span>.<span class=\"name\">instIsLeftAdjointTopCatInstTopCatLargeCategoryTypeTypesForgetConcreteCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.IsLeftAdjoint\">CategoryTheory.IsLeftAdjoint</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/TopCat/Adjunctions.lean#L48-L49","name":"TopCat.instIsRightAdjointTypeTypesTopCatInstTopCatLargeCategoryForgetConcreteCategory","line":48,"kind":"instance","docLink":"./Mathlib/Topology/Category/TopCat/Adjunctions.html#TopCat.instIsRightAdjointTypeTypesTopCatInstTopCatLargeCategoryForgetConcreteCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Adjunctions.html#TopCat.instIsRightAdjointTypeTypesTopCatInstTopCatLargeCategoryForgetConcreteCategory\"><span class=\"name\">TopCat</span>.<span class=\"name\">instIsRightAdjointTypeTypesTopCatInstTopCatLargeCategoryForgetConcreteCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.IsRightAdjoint\">CategoryTheory.IsRightAdjoint</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/TopCat/Adjunctions.lean#L41-L44","name":"TopCat.adj₂","line":41,"kind":"def","docLink":"./Mathlib/Topology/Category/TopCat/Adjunctions.html#TopCat.adj₂","doc":"Equipping a type with the trivial topology is right adjoint to the forgetful functor\n`Top ⥤ Type`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Adjunctions.html#TopCat.adj₂\"><span class=\"name\">TopCat</span>.<span class=\"name\">adj₂</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.trivial\">TopCat.trivial</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/TopCat/Adjunctions.lean#L40-L40","name":"TopCat.adj₂_unit","line":40,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Adjunctions.html#TopCat.adj₂_unit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Adjunctions.html#TopCat.adj₂_unit\"><span class=\"name\">TopCat</span>.<span class=\"name\">adj₂_unit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Adjunctions.html#TopCat.adj₂\">TopCat.adj₂</a>.unit</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.mk\">CategoryTheory.NatTrans.mk</a> <span class=\"fn\">fun (<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.mk\">ContinuousMap.mk</a> <span class=\"fn\">id</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/TopCat/Adjunctions.lean#L40-L40","name":"TopCat.adj₂_counit","line":40,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Adjunctions.html#TopCat.adj₂_counit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Adjunctions.html#TopCat.adj₂_counit\"><span class=\"name\">TopCat</span>.<span class=\"name\">adj₂_counit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Adjunctions.html#TopCat.adj₂\">TopCat.adj₂</a>.counit</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.mk\">CategoryTheory.NatTrans.mk</a> <span class=\"fn\">fun (<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u) =&gt; <span class=\"fn\">id</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/TopCat/Adjunctions.lean#L31-L34","name":"TopCat.adj₁","line":31,"kind":"def","docLink":"./Mathlib/Topology/Category/TopCat/Adjunctions.html#TopCat.adj₁","doc":"Equipping a type with the discrete topology is left adjoint to the forgetful functor\n`Top ⥤ Type`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Adjunctions.html#TopCat.adj₁\"><span class=\"name\">TopCat</span>.<span class=\"name\">adj₁</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.discrete\">TopCat.discrete</a> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/TopCat/Adjunctions.lean#L30-L30","name":"TopCat.adj₁_unit","line":30,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Adjunctions.html#TopCat.adj₁_unit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Adjunctions.html#TopCat.adj₁_unit\"><span class=\"name\">TopCat</span>.<span class=\"name\">adj₁_unit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Adjunctions.html#TopCat.adj₁\">TopCat.adj₁</a>.unit</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.mk\">CategoryTheory.NatTrans.mk</a> <span class=\"fn\">fun (<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u) =&gt; <span class=\"fn\">id</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/TopCat/Adjunctions.lean#L30-L30","name":"TopCat.adj₁_counit","line":30,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Adjunctions.html#TopCat.adj₁_counit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Adjunctions.html#TopCat.adj₁_counit\"><span class=\"name\">TopCat</span>.<span class=\"name\">adj₁_counit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Adjunctions.html#TopCat.adj₁\">TopCat.adj₁</a>.counit</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.mk\">CategoryTheory.NatTrans.mk</a> <span class=\"fn\">fun (<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.mk\">ContinuousMap.mk</a> <span class=\"fn\">id</span></span></span></span></span></div></div>"}]}