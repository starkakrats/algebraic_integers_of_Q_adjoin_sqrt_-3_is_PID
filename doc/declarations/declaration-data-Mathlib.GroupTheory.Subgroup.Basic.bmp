{"name":"Mathlib.GroupTheory.Subgroup.Basic","instances":[{"typeNames":["Subtype"],"name":"NegMemClass.neg","className":"Neg"},{"typeNames":["Subtype"],"name":"InvMemClass.inv","className":"Inv"},{"typeNames":["Subtype"],"name":"AddSubgroupClass.sub","className":"Sub"},{"typeNames":["Subtype"],"name":"SubgroupClass.div","className":"Div"},{"typeNames":["Int","Subtype"],"name":"AddSubgroupClass.zsmul","className":"SMul"},{"typeNames":["Subtype","Int"],"name":"SubgroupClass.zpow","className":"Pow"},{"typeNames":["Subtype"],"name":"AddSubgroupClass.toAddGroup","className":"AddGroup"},{"typeNames":["Subtype"],"name":"SubgroupClass.toGroup","className":"Group"},{"typeNames":["Subtype"],"name":"AddSubgroupClass.toAddCommGroup","className":"AddCommGroup"},{"typeNames":["Subtype"],"name":"SubgroupClass.toCommGroup","className":"CommGroup"},{"typeNames":["Subtype"],"name":"AddSubgroupClass.toOrderedAddCommGroup","className":"OrderedAddCommGroup"},{"typeNames":["Subtype"],"name":"SubgroupClass.toOrderedCommGroup","className":"OrderedCommGroup"},{"typeNames":["Subtype"],"name":"AddSubgroupClass.toLinearOrderedAddCommGroup","className":"LinearOrderedAddCommGroup"},{"typeNames":["Subtype"],"name":"SubgroupClass.toLinearOrderedCommGroup","className":"LinearOrderedCommGroup"},{"typeNames":["AddSubgroup"],"name":"AddSubgroup.instSetLikeAddSubgroup","className":"SetLike"},{"typeNames":["Subgroup"],"name":"Subgroup.instSetLikeSubgroup","className":"SetLike"},{"typeNames":["AddSubgroup"],"name":"AddSubgroup.instAddSubgroupClassAddSubgroupToSubNegAddMonoidInstSetLikeAddSubgroup","className":"AddSubgroupClass"},{"typeNames":["Subgroup"],"name":"Subgroup.instSubgroupClassSubgroupToDivInvMonoidInstSetLikeSubgroup","className":"SubgroupClass"},{"typeNames":["Subtype"],"name":"AddSubgroup.add","className":"Add"},{"typeNames":["Subtype"],"name":"Subgroup.mul","className":"Mul"},{"typeNames":["Subtype"],"name":"AddSubgroup.zero","className":"Zero"},{"typeNames":["Subtype"],"name":"Subgroup.one","className":"One"},{"typeNames":["Subtype"],"name":"AddSubgroup.neg","className":"Neg"},{"typeNames":["Subtype"],"name":"Subgroup.inv","className":"Inv"},{"typeNames":["Subtype"],"name":"AddSubgroup.sub","className":"Sub"},{"typeNames":["Subtype"],"name":"Subgroup.div","className":"Div"},{"typeNames":["Nat","Subtype"],"name":"AddSubgroup.nsmul","className":"SMul"},{"typeNames":["Subtype","Nat"],"name":"Subgroup.npow","className":"Pow"},{"typeNames":["Int","Subtype"],"name":"AddSubgroup.zsmul","className":"SMul"},{"typeNames":["Subtype","Int"],"name":"Subgroup.zpow","className":"Pow"},{"typeNames":["Subtype"],"name":"AddSubgroup.toAddGroup","className":"AddGroup"},{"typeNames":["Subtype"],"name":"Subgroup.toGroup","className":"Group"},{"typeNames":["Subtype"],"name":"AddSubgroup.toAddCommGroup","className":"AddCommGroup"},{"typeNames":["Subtype"],"name":"Subgroup.toCommGroup","className":"CommGroup"},{"typeNames":["Subtype"],"name":"AddSubgroup.toOrderedAddCommGroup","className":"OrderedAddCommGroup"},{"typeNames":["Subtype"],"name":"Subgroup.toOrderedCommGroup","className":"OrderedCommGroup"},{"typeNames":["Subtype"],"name":"AddSubgroup.toLinearOrderedAddCommGroup","className":"LinearOrderedAddCommGroup"},{"typeNames":["Subtype"],"name":"Subgroup.toLinearOrderedCommGroup","className":"LinearOrderedCommGroup"},{"typeNames":["AddSubgroup"],"name":"AddSubgroup.instTopAddSubgroup","className":"Top"},{"typeNames":["Subgroup"],"name":"Subgroup.instTopSubgroup","className":"Top"},{"typeNames":["AddSubgroup"],"name":"AddSubgroup.instBotAddSubgroup","className":"Bot"},{"typeNames":["Subgroup"],"name":"Subgroup.instBotSubgroup","className":"Bot"},{"typeNames":["AddSubgroup"],"name":"AddSubgroup.instInhabitedAddSubgroup","className":"Inhabited"},{"typeNames":["Subgroup"],"name":"Subgroup.instInhabitedSubgroup","className":"Inhabited"},{"typeNames":["Subtype"],"name":"AddSubgroup.instUniqueSubtypeMemAddSubgroupInstMembershipInstSetLikeAddSubgroupBotInstBotAddSubgroup","className":"Unique"},{"typeNames":["Subtype"],"name":"Subgroup.instUniqueSubtypeMemSubgroupInstMembershipInstSetLikeSubgroupBotInstBotSubgroup","className":"Unique"},{"typeNames":["AddSubgroup"],"name":"AddSubgroup.instInfAddSubgroup","className":"Inf"},{"typeNames":["Subgroup"],"name":"Subgroup.instInfSubgroup","className":"Inf"},{"typeNames":["AddSubgroup"],"name":"AddSubgroup.instInfSetAddSubgroup","className":"InfSet"},{"typeNames":["Subgroup"],"name":"Subgroup.instInfSetSubgroup","className":"InfSet"},{"typeNames":["AddSubgroup"],"name":"AddSubgroup.instCompleteLatticeAddSubgroup","className":"CompleteLattice"},{"typeNames":["Subgroup"],"name":"Subgroup.instCompleteLatticeSubgroup","className":"CompleteLattice"},{"typeNames":["AddSubgroup"],"name":"AddSubgroup.instUniqueAddSubgroup","className":"Unique"},{"typeNames":["Subgroup"],"name":"Subgroup.instUniqueSubgroup","className":"Unique"},{"typeNames":["AddSubgroup"],"name":"AddSubgroup.instNontrivialAddSubgroup","className":"Nontrivial"},{"typeNames":["Subgroup"],"name":"Subgroup.instNontrivialSubgroup","className":"Nontrivial"},{"typeNames":[],"name":"AddSubgroup.normal_of_comm","className":"AddSubgroup.Normal"},{"typeNames":[],"name":"Subgroup.normal_of_comm","className":"Subgroup.Normal"},{"typeNames":[],"name":"Subgroup.normal_of_characteristic","className":"Subgroup.Normal"},{"typeNames":[],"name":"AddSubgroup.normal_of_characteristic","className":"AddSubgroup.Normal"},{"typeNames":["Bot.bot"],"name":"AddSubgroup.botCharacteristic","className":"AddSubgroup.Characteristic"},{"typeNames":["Bot.bot"],"name":"Subgroup.botCharacteristic","className":"Subgroup.Characteristic"},{"typeNames":["Top.top"],"name":"AddSubgroup.topCharacteristic","className":"AddSubgroup.Characteristic"},{"typeNames":["Top.top"],"name":"Subgroup.topCharacteristic","className":"Subgroup.Characteristic"},{"typeNames":["Membership.mem"],"name":"Subgroup.decidableMemCenter","className":"Decidable"},{"typeNames":["AddSubgroup.center"],"name":"AddSubgroup.centerCharacteristic","className":"AddSubgroup.Characteristic"},{"typeNames":["Subgroup.center"],"name":"Subgroup.centerCharacteristic","className":"Subgroup.Characteristic"},{"typeNames":["AddSubgroup.addSubgroupOf"],"name":"AddSubgroup.normal_in_normalizer","className":"AddSubgroup.Normal"},{"typeNames":["Subgroup.subgroupOf"],"name":"Subgroup.normal_in_normalizer","className":"Subgroup.Normal"},{"typeNames":["AddSubgroup.centralizer"],"name":"AddSubgroup.Centralizer.characteristic","className":"AddSubgroup.Characteristic"},{"typeNames":["Subgroup.centralizer"],"name":"Subgroup.Centralizer.characteristic","className":"Subgroup.Characteristic"},{"typeNames":["Subtype"],"name":"AddSubgroup.IsCommutative.addCommGroup","className":"AddCommGroup"},{"typeNames":["Subtype"],"name":"Subgroup.IsCommutative.commGroup","className":"CommGroup"},{"typeNames":["Subgroup.center"],"name":"Subgroup.center.isCommutative","className":"Subgroup.IsCommutative"},{"typeNames":["AddSubgroup.map"],"name":"AddSubgroup.map_isCommutative","className":"AddSubgroup.IsCommutative"},{"typeNames":["Subgroup.map"],"name":"Subgroup.map_isCommutative","className":"Subgroup.IsCommutative"},{"typeNames":["AddSubgroup.addSubgroupOf"],"name":"AddSubgroup.addSubgroupOf_isCommutative","className":"AddSubgroup.IsCommutative"},{"typeNames":["Subgroup.subgroupOf"],"name":"Subgroup.subgroupOf_isCommutative","className":"Subgroup.IsCommutative"},{"typeNames":["Subgroup.normalClosure"],"name":"Subgroup.normalClosure_normal","className":"Subgroup.Normal"},{"typeNames":["Subgroup.normalCore"],"name":"Subgroup.normalCore_normal","className":"Subgroup.Normal"},{"typeNames":[],"name":"AddMonoidHom.decidableMemKer","className":"Decidable"},{"typeNames":[],"name":"MonoidHom.decidableMemKer","className":"Decidable"},{"typeNames":["AddMonoidHom.ker"],"name":"AddMonoidHom.normal_ker","className":"AddSubgroup.Normal"},{"typeNames":["MonoidHom.ker"],"name":"MonoidHom.normal_ker","className":"Subgroup.Normal"},{"typeNames":["AddSubgroup.comap"],"name":"AddSubgroup.normal_comap","className":"AddSubgroup.Normal"},{"typeNames":["Subgroup.comap"],"name":"Subgroup.normal_comap","className":"Subgroup.Normal"},{"typeNames":["AddSubgroup.addSubgroupOf"],"name":"AddSubgroup.normal_addSubgroupOf","className":"AddSubgroup.Normal"},{"typeNames":["Subgroup.subgroupOf"],"name":"Subgroup.normal_subgroupOf","className":"Subgroup.Normal"},{"typeNames":["AddSubgroup"],"name":"AddSubgroup.instIsModularLatticeAddSubgroupToAddGroupToLatticeInstCompleteLatticeAddSubgroup","className":"IsModularLattice"},{"typeNames":["Subgroup"],"name":"Subgroup.instIsModularLatticeSubgroupToGroupToLatticeInstCompleteLatticeSubgroup","className":"IsModularLattice"},{"typeNames":["AddSubgroup.addSubgroupOf"],"name":"AddSubgroup.sum_addSubgroupOf_sum_normal","className":"AddSubgroup.Normal"},{"typeNames":["Subgroup.subgroupOf"],"name":"Subgroup.prod_subgroupOf_prod_normal","className":"Subgroup.Normal"},{"typeNames":["AddSubgroup.prod"],"name":"AddSubgroup.sum_normal","className":"AddSubgroup.Normal"},{"typeNames":["Subgroup.prod"],"name":"Subgroup.prod_normal","className":"Subgroup.Normal"},{"typeNames":["Inf.inf"],"name":"AddSubgroup.normal_inf_normal","className":"AddSubgroup.Normal"},{"typeNames":["Inf.inf"],"name":"Subgroup.normal_inf_normal","className":"Subgroup.Normal"}],"imports":["Init","Mathlib.Algebra.Group.Conj","Mathlib.Algebra.Order.Group.InjSurj","Mathlib.Data.Set.Image","Mathlib.GroupTheory.Submonoid.Centralizer","Mathlib.Order.Atoms","Mathlib.Tactic.ApplyFun"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3853-L3872","name":"ConjClasses.mk_bijOn","line":3853,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#ConjClasses.mk_bijOn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#ConjClasses.mk_bijOn\"><span class=\"name\">ConjClasses</span>.<span class=\"name\">mk_bijOn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u_6)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.BijOn\">Set.BijOn</a> <span class=\"fn\">ConjClasses.mk</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.center\">Subgroup.center</a> <span class=\"fn\">G</span></span>)</span></span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#ConjClasses.noncenter\">ConjClasses.noncenter</a> <span class=\"fn\">G</span></span>)</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3850-L3851","name":"ConjClasses.mem_noncenter","line":3850,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#ConjClasses.mem_noncenter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#ConjClasses.mem_noncenter\"><span class=\"name\">ConjClasses</span>.<span class=\"name\">mem_noncenter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Conj.html#ConjClasses\">ConjClasses</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#ConjClasses.noncenter\">ConjClasses.noncenter</a> <span class=\"fn\">G</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Basic.html#Set.Nontrivial\">Set.Nontrivial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Conj.html#ConjClasses.carrier\">ConjClasses.carrier</a> <span class=\"fn\">g</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3847-L3848","name":"ConjClasses.noncenter","line":3847,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#ConjClasses.noncenter","doc":"The conjugacy classes that are not trivial. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#ConjClasses.noncenter\"><span class=\"name\">ConjClasses</span>.<span class=\"name\">noncenter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u_6)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Conj.html#ConjClasses\">ConjClasses</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3838-L3839","name":"IsConj.eq_of_right_mem_center","line":3838,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#IsConj.eq_of_right_mem_center","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#IsConj.eq_of_right_mem_center\"><span class=\"name\">IsConj</span>.<span class=\"name\">eq_of_right_mem_center</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Conj.html#IsConj\">IsConj</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Hh : <span class=\"fn\"><span class=\"fn\">h</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subsemigroup/Center.html#Set.center\">Set.center</a> <span class=\"fn\">M</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3834-L3835","name":"IsConj.eq_of_left_mem_center","line":3834,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#IsConj.eq_of_left_mem_center","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#IsConj.eq_of_left_mem_center\"><span class=\"name\">IsConj</span>.<span class=\"name\">eq_of_left_mem_center</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Conj.html#IsConj\">IsConj</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Hg : <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subsemigroup/Center.html#Set.center\">Set.center</a> <span class=\"fn\">M</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3809-L3829","name":"IsConj.normalClosure_eq_top_of","line":3809,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#IsConj.normalClosure_eq_top_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#IsConj.normalClosure_eq_top_of\"><span class=\"name\">IsConj</span>.<span class=\"name\">normalClosure_eq_top_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hn : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g' : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hg : <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hg' : <span class=\"fn\"><span class=\"fn\">g'</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Conj.html#IsConj\">IsConj</a> <span class=\"fn\">g</span> <span class=\"fn\">g'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ht : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure\">Subgroup.normalClosure</a> <span class=\"fn\">{<span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">g</span>, <span class=\"fn\">property</span> := <span class=\"fn\">hg</span> }</span>}</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure\">Subgroup.normalClosure</a> <span class=\"fn\">{<span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">g'</span>, <span class=\"fn\">property</span> := <span class=\"fn\">hg'</span> }</span>}</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3793-L3799","name":"Subgroup.mul_injective_of_disjoint","line":3793,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mul_injective_of_disjoint","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mul_injective_of_disjoint\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mul_injective_of_disjoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H₁ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H₂ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">H₁</span> <span class=\"fn\">H₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">fun (<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">H₁</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">H₂</span></span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">g</span>.1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">g</span>.2</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3792-L3792","name":"AddSubgroup.add_injective_of_disjoint","line":3792,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.add_injective_of_disjoint","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.add_injective_of_disjoint\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">add_injective_of_disjoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H₁ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H₂ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">H₁</span> <span class=\"fn\">H₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">fun (<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">H₁</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">H₂</span></span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">g</span>.1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">g</span>.2</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3782-L3788","name":"Subgroup.disjoint_iff_mul_eq_one","line":3782,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.disjoint_iff_mul_eq_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.disjoint_iff_mul_eq_one\"><span class=\"name\">Subgroup</span>.<span class=\"name\">disjoint_iff_mul_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H₁ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H₂ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">H₁</span> <span class=\"fn\">H₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ {<span class=\"fn\">x </span>y : <span class=\"fn\">G</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H₁</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H₂</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3781-L3781","name":"AddSubgroup.disjoint_iff_add_eq_zero","line":3781,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.disjoint_iff_add_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.disjoint_iff_add_eq_zero\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">disjoint_iff_add_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H₁ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H₂ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">H₁</span> <span class=\"fn\">H₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ {<span class=\"fn\">x </span>y : <span class=\"fn\">G</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H₁</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H₂</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3775-L3777","name":"Subgroup.disjoint_def'","line":3775,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.disjoint_def'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.disjoint_def'\"><span class=\"name\">Subgroup</span>.<span class=\"name\">disjoint_def'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H₁ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H₂ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">H₁</span> <span class=\"fn\">H₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ {<span class=\"fn\">x </span>y : <span class=\"fn\">G</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H₁</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H₂</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3774-L3774","name":"AddSubgroup.disjoint_def'","line":3774,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.disjoint_def'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.disjoint_def'\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">disjoint_def'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H₁ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H₂ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">H₁</span> <span class=\"fn\">H₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ {<span class=\"fn\">x </span>y : <span class=\"fn\">G</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H₁</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H₂</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3769-L3770","name":"Subgroup.disjoint_def","line":3769,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.disjoint_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.disjoint_def\"><span class=\"name\">Subgroup</span>.<span class=\"name\">disjoint_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H₁ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H₂ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">H₁</span> <span class=\"fn\">H₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\">G</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H₁</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H₂</span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3768-L3768","name":"AddSubgroup.disjoint_def","line":3768,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.disjoint_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.disjoint_def\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">disjoint_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H₁ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H₂ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">H₁</span> <span class=\"fn\">H₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\">G</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H₁</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H₂</span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3748-L3762","name":"Subgroup.commute_of_normal_of_disjoint","line":3748,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.commute_of_normal_of_disjoint","doc":"Elements of disjoint, normal subgroups commute. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.commute_of_normal_of_disjoint\"><span class=\"name\">Subgroup</span>.<span class=\"name\">commute_of_normal_of_disjoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H₁ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H₂ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hH₁ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">H₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hH₂ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">H₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hdis : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">H₁</span> <span class=\"fn\">H₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Commute/Defs.html#Commute\">Commute</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3747-L3747","name":"AddSubgroup.addCommute_of_normal_of_disjoint","line":3747,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addCommute_of_normal_of_disjoint","doc":"Elements of disjoint, normal subgroups commute."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addCommute_of_normal_of_disjoint\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">addCommute_of_normal_of_disjoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H₁ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H₂ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hH₁ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">H₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hH₂ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">H₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hdis : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">H₁</span> <span class=\"fn\">H₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Commute/Defs.html#AddCommute\">AddCommute</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3739-L3742","name":"Subgroup.SubgroupNormal.mem_comm","line":3739,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.SubgroupNormal.mem_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.SubgroupNormal.mem_comm\"><span class=\"name\">Subgroup</span>.<span class=\"name\">SubgroupNormal</span>.<span class=\"name\">mem_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hK : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hN : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3738-L3738","name":"AddSubgroup.SubgroupNormal.mem_comm","line":3738,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.SubgroupNormal.mem_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.SubgroupNormal.mem_comm\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">SubgroupNormal</span>.<span class=\"name\">mem_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hK : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hN : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3728-L3734","name":"Subgroup.subgroupOf_sup","line":3728,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf_sup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf_sup\"><span class=\"name\">Subgroup</span>.<span class=\"name\">subgroupOf_sup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(A' : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hA : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hA' : <span class=\"fn\"><span class=\"fn\">A'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">A'</span></span>)</span> <span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">A'</span> <span class=\"fn\">B</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3727-L3727","name":"AddSubgroup.addSubgroupOf_sup","line":3727,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf_sup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf_sup\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">addSubgroupOf_sup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(A' : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hA : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hA' : <span class=\"fn\"><span class=\"fn\">A'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">A'</span></span>)</span> <span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">A'</span> <span class=\"fn\">B</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3722-L3723","name":"Subgroup.normal_inf_normal","line":3722,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normal_inf_normal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normal_inf_normal\"><span class=\"name\">Subgroup</span>.<span class=\"name\">normal_inf_normal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hH : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hK : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">K</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3721-L3721","name":"AddSubgroup.normal_inf_normal","line":3721,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normal_inf_normal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normal_inf_normal\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">normal_inf_normal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hH : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hK : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">K</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3712-L3717","name":"Subgroup.inf_subgroupOf_inf_normal_of_left","line":3712,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.inf_subgroupOf_inf_normal_of_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.inf_subgroupOf_inf_normal_of_left\"><span class=\"name\">Subgroup</span>.<span class=\"name\">inf_subgroupOf_inf_normal_of_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A' : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hA : <span class=\"fn\"><span class=\"fn\">A'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hN : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">A'</span> <span class=\"fn\">A</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A'</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">B</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">B</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3711-L3711","name":"AddSubgroup.inf_addSubgroupOf_inf_normal_of_left","line":3711,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.inf_addSubgroupOf_inf_normal_of_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.inf_addSubgroupOf_inf_normal_of_left\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">inf_addSubgroupOf_inf_normal_of_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A' : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hA : <span class=\"fn\"><span class=\"fn\">A'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hN : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">A'</span> <span class=\"fn\">A</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A'</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">B</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">B</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3702-L3707","name":"Subgroup.inf_subgroupOf_inf_normal_of_right","line":3702,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.inf_subgroupOf_inf_normal_of_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.inf_subgroupOf_inf_normal_of_right\"><span class=\"name\">Subgroup</span>.<span class=\"name\">inf_subgroupOf_inf_normal_of_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B' : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hB : <span class=\"fn\"><span class=\"fn\">B'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hN : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">B'</span> <span class=\"fn\">B</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">B'</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">B</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3701-L3701","name":"AddSubgroup.inf_addSubgroupOf_inf_normal_of_right","line":3701,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.inf_addSubgroupOf_inf_normal_of_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.inf_addSubgroupOf_inf_normal_of_right\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">inf_addSubgroupOf_inf_normal_of_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B' : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hB : <span class=\"fn\"><span class=\"fn\">B'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hN : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">B'</span> <span class=\"fn\">B</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">B'</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">B</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3693-L3697","name":"Subgroup.prod_normal","line":3693,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod_normal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod_normal\"><span class=\"name\">Subgroup</span>.<span class=\"name\">prod_normal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hH : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hK : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod\">Subgroup.prod</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3692-L3692","name":"AddSubgroup.sum_normal","line":3692,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.sum_normal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.sum_normal\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">sum_normal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hH : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hK : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod\">AddSubgroup.prod</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3681-L3688","name":"Subgroup.prod_subgroupOf_prod_normal","line":3681,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod_subgroupOf_prod_normal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod_subgroupOf_prod_normal\"><span class=\"name\">Subgroup</span>.<span class=\"name\">prod_subgroupOf_prod_normal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H₁ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₁ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H₂ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₂ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h₁ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">H₁</span> <span class=\"fn\">K₁</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h₂ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">H₂</span> <span class=\"fn\">K₂</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod\">Subgroup.prod</a> <span class=\"fn\">H₁</span> <span class=\"fn\">H₂</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod\">Subgroup.prod</a> <span class=\"fn\">K₁</span> <span class=\"fn\">K₂</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3680-L3680","name":"AddSubgroup.sum_addSubgroupOf_sum_normal","line":3680,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.sum_addSubgroupOf_sum_normal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.sum_addSubgroupOf_sum_normal\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">sum_addSubgroupOf_sum_normal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H₁ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₁ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H₂ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₂ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h₁ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H₁</span> <span class=\"fn\">K₁</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h₂ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H₂</span> <span class=\"fn\">K₂</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod\">AddSubgroup.prod</a> <span class=\"fn\">H₁</span> <span class=\"fn\">H₂</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod\">AddSubgroup.prod</a> <span class=\"fn\">K₁</span> <span class=\"fn\">K₂</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3673-L3676","name":"Subgroup.normal_subgroupOf_iff","line":3673,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normal_subgroupOf_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normal_subgroupOf_iff\"><span class=\"name\">Subgroup</span>.<span class=\"name\">normal_subgroupOf_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hHK : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">h </span>k : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">k</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3672-L3672","name":"AddSubgroup.normal_addSubgroupOf_iff","line":3672,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normal_addSubgroupOf_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normal_addSubgroupOf_iff\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">normal_addSubgroupOf_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hHK : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">h </span>k : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">k</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3659-L3664","name":"Subgroup.instIsModularLatticeSubgroupToGroupToLatticeInstCompleteLatticeSubgroup","line":3659,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.instIsModularLatticeSubgroupToGroupToLatticeInstCompleteLatticeSubgroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.instIsModularLatticeSubgroupToGroupToLatticeInstCompleteLatticeSubgroup\"><span class=\"name\">Subgroup</span>.<span class=\"name\">instIsModularLatticeSubgroupToGroupToLatticeInstCompleteLatticeSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/ModularLattice.html#IsModularLattice\">IsModularLattice</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3658-L3658","name":"AddSubgroup.instIsModularLatticeAddSubgroupToAddGroupToLatticeInstCompleteLatticeAddSubgroup","line":3658,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instIsModularLatticeAddSubgroupToAddGroupToLatticeInstCompleteLatticeAddSubgroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instIsModularLatticeAddSubgroupToAddGroupToLatticeInstCompleteLatticeAddSubgroup\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instIsModularLatticeAddSubgroupToAddGroupToLatticeInstCompleteLatticeAddSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/ModularLattice.html#IsModularLattice\">IsModularLattice</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3651-L3654","name":"Subgroup.mem_closure_pair","line":3651,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_closure_pair","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_closure_pair\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_closure_pair</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">{<span class=\"fn\">x</span>, <span class=\"fn\">y</span>}</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (m : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) (n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3650-L3650","name":"AddSubgroup.mem_closure_pair","line":3650,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_closure_pair","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_closure_pair\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_closure_pair</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">{<span class=\"fn\">x</span>, <span class=\"fn\">y</span>}</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (m : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) (n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3645-L3646","name":"Subgroup.mem_sup'","line":3645,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_sup'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_sup'\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_sup'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">t</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (y : <span class=\"fn\">↥<span class=\"fn\">s</span></span>) (z : <span class=\"fn\">↥<span class=\"fn\">t</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">z</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3644-L3644","name":"AddSubgroup.mem_sup'","line":3644,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_sup'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_sup'\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_sup'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">t</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (y : <span class=\"fn\">↥<span class=\"fn\">s</span></span>) (z : <span class=\"fn\">↥<span class=\"fn\">t</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">z</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3628-L3640","name":"Subgroup.mem_sup","line":3628,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_sup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_sup\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_sup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">t</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ y ∈ <span class=\"fn\">s</span>, <span class=\"fn\">∃ z ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3627-L3627","name":"AddSubgroup.mem_sup","line":3627,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_sup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_sup\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_sup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">t</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ y ∈ <span class=\"fn\">s</span>, <span class=\"fn\">∃ z ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3618-L3621","name":"Subgroup.equivMapOfInjective_coe_mulEquiv","line":3618,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.equivMapOfInjective_coe_mulEquiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.equivMapOfInjective_coe_mulEquiv\"><span class=\"name\">Subgroup</span>.<span class=\"name\">equivMapOfInjective_coe_mulEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.equivMapOfInjective\">Subgroup.equivMapOfInjective</a> <span class=\"fn\">H</span> <span class=\"fn\">↑<span class=\"fn\">e</span></span> <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">e</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MulEquiv.subgroupMap\">MulEquiv.subgroupMap</a> <span class=\"fn\">e</span> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3617-L3617","name":"AddSubgroup.equivMapOfInjective_coe_addEquiv","line":3617,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.equivMapOfInjective_coe_addEquiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.equivMapOfInjective_coe_addEquiv\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">equivMapOfInjective_coe_addEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.equivMapOfInjective\">AddSubgroup.equivMapOfInjective</a> <span class=\"fn\">H</span> <span class=\"fn\">↑<span class=\"fn\">e</span></span> <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">e</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddEquiv.addSubgroupMap\">AddEquiv.addSubgroupMap</a> <span class=\"fn\">e</span> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3607-L3609","name":"MulEquiv.subgroupMap_symm_apply","line":3607,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MulEquiv.subgroupMap_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MulEquiv.subgroupMap_symm_apply\"><span class=\"name\">MulEquiv</span>.<span class=\"name\">subgroupMap_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">e</span></span>)</span> <span class=\"fn\">H</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.symm\">MulEquiv.symm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MulEquiv.subgroupMap\">MulEquiv.subgroupMap</a> <span class=\"fn\">e</span> <span class=\"fn\">H</span></span>)</span></span>)</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.symm\">MulEquiv.symm</a> <span class=\"fn\">e</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">g</span></span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.symm\">MulEquiv.symm</a> <span class=\"fn\">e</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">g</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3606-L3606","name":"AddEquiv.addSubgroupMap_symm_apply","line":3606,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddEquiv.addSubgroupMap_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddEquiv.addSubgroupMap_symm_apply\"><span class=\"name\">AddEquiv</span>.<span class=\"name\">addSubgroupMap_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">e</span></span>)</span> <span class=\"fn\">H</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.symm\">AddEquiv.symm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddEquiv.addSubgroupMap\">AddEquiv.addSubgroupMap</a> <span class=\"fn\">e</span> <span class=\"fn\">H</span></span>)</span></span>)</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.symm\">AddEquiv.symm</a> <span class=\"fn\">e</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">g</span></span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.symm\">AddEquiv.symm</a> <span class=\"fn\">e</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">g</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3600-L3602","name":"MulEquiv.coe_subgroupMap_apply","line":3600,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MulEquiv.coe_subgroupMap_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MulEquiv.coe_subgroupMap_apply\"><span class=\"name\">MulEquiv</span>.<span class=\"name\">coe_subgroupMap_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MulEquiv.subgroupMap\">MulEquiv.subgroupMap</a> <span class=\"fn\">e</span> <span class=\"fn\">H</span></span>)</span> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">e</span> <span class=\"fn\">↑<span class=\"fn\">g</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3599-L3599","name":"AddEquiv.coe_addSubgroupMap_apply","line":3599,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddEquiv.coe_addSubgroupMap_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddEquiv.coe_addSubgroupMap_apply\"><span class=\"name\">AddEquiv</span>.<span class=\"name\">coe_addSubgroupMap_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddEquiv.addSubgroupMap\">AddEquiv.addSubgroupMap</a> <span class=\"fn\">e</span> <span class=\"fn\">H</span></span>)</span> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">e</span> <span class=\"fn\">↑<span class=\"fn\">g</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3594-L3595","name":"MulEquiv.subgroupMap","line":3594,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MulEquiv.subgroupMap","doc":"A subgroup is isomorphic to its image under an isomorphism. If you only have an injective map,\nuse `Subgroup.equiv_map_of_injective`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MulEquiv.subgroupMap\"><span class=\"name\">MulEquiv</span>.<span class=\"name\">subgroupMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">H</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">e</span></span>)</span> <span class=\"fn\">H</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3591-L3593","name":"AddEquiv.addSubgroupMap","line":3591,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddEquiv.addSubgroupMap","doc":"An additive subgroup is isomorphic to its image under an isomorphism. If you only\nhave an injective map, use `AddSubgroup.equiv_map_of_injective`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddEquiv.addSubgroupMap\"><span class=\"name\">AddEquiv</span>.<span class=\"name\">addSubgroupMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">H</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">e</span></span>)</span> <span class=\"fn\">H</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3586-L3587","name":"MulEquiv.subgroupCongr_symm_apply","line":3586,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MulEquiv.subgroupCongr_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MulEquiv.subgroupCongr_symm_apply\"><span class=\"name\">MulEquiv</span>.<span class=\"name\">subgroupCongr_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.symm\">MulEquiv.symm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MulEquiv.subgroupCongr\">MulEquiv.subgroupCongr</a> <span class=\"fn\">h</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3585-L3585","name":"AddEquiv.addSubgroupCongr_symm_apply","line":3585,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddEquiv.addSubgroupCongr_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddEquiv.addSubgroupCongr_symm_apply\"><span class=\"name\">AddEquiv</span>.<span class=\"name\">addSubgroupCongr_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.symm\">AddEquiv.symm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddEquiv.addSubgroupCongr\">AddEquiv.addSubgroupCongr</a> <span class=\"fn\">h</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3582-L3583","name":"MulEquiv.subgroupCongr_apply","line":3582,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MulEquiv.subgroupCongr_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MulEquiv.subgroupCongr_apply\"><span class=\"name\">MulEquiv</span>.<span class=\"name\">subgroupCongr_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MulEquiv.subgroupCongr\">MulEquiv.subgroupCongr</a> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3581-L3581","name":"AddEquiv.addSubgroupCongr_apply","line":3581,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddEquiv.addSubgroupCongr_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddEquiv.addSubgroupCongr_apply\"><span class=\"name\">AddEquiv</span>.<span class=\"name\">addSubgroupCongr_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddEquiv.addSubgroupCongr\">AddEquiv.addSubgroupCongr</a> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3576-L3577","name":"MulEquiv.subgroupCongr","line":3576,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MulEquiv.subgroupCongr","doc":"Makes the identity isomorphism from a proof two subgroups of a multiplicative\ngroup are equal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MulEquiv.subgroupCongr\"><span class=\"name\">MulEquiv</span>.<span class=\"name\">subgroupCongr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">H</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3573-L3575","name":"AddEquiv.addSubgroupCongr.proof_3","line":3573,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddEquiv.addSubgroupCongr.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddEquiv.addSubgroupCongr.proof_3\"><span class=\"name\">AddEquiv</span>.<span class=\"name\">addSubgroupCongr</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.setCongr\">Equiv.setCongr</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span></span>)</span>.invFun</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.setCongr\">Equiv.setCongr</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span></span>)</span>.toFun</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3573-L3575","name":"AddEquiv.addSubgroupCongr.proof_2","line":3573,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddEquiv.addSubgroupCongr.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddEquiv.addSubgroupCongr.proof_2\"><span class=\"name\">AddEquiv</span>.<span class=\"name\">addSubgroupCongr</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.LeftInverse\">Function.LeftInverse</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.setCongr\">Equiv.setCongr</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span></span>)</span>.invFun</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.setCongr\">Equiv.setCongr</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span></span>)</span>.toFun</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3573-L3575","name":"AddEquiv.addSubgroupCongr","line":3573,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddEquiv.addSubgroupCongr","doc":"Makes the identity additive isomorphism from a proof\ntwo subgroups of an additive group are equal."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddEquiv.addSubgroupCongr\"><span class=\"name\">AddEquiv</span>.<span class=\"name\">addSubgroupCongr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">H</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">↥<span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3573-L3575","name":"AddEquiv.addSubgroupCongr.proof_4","line":3573,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddEquiv.addSubgroupCongr.proof_4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddEquiv.addSubgroupCongr.proof_4\"><span class=\"name\">AddEquiv</span>.<span class=\"name\">addSubgroupCongr</span>.<span class=\"name\">proof_4</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x </span>x_1 : <span class=\"fn\">↥<span class=\"fn\">H</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.toFun\">Equiv.toFun</a>\n      <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.setCongr\">Equiv.setCongr</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span></span>)</span>.toFun</span>, <span class=\"fn\">invFun</span> := <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.setCongr\">Equiv.setCongr</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span></span>)</span>.invFun</span>,\n        <span class=\"fn\">left_inv</span> :=\n          <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.LeftInverse\">Function.LeftInverse</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.setCongr\">Equiv.setCongr</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span></span>)</span>.invFun</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.setCongr\">Equiv.setCongr</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span></span>)</span>.toFun</span></span>)</span>,\n        <span class=\"fn\">right_inv</span> :=\n          <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.setCongr\">Equiv.setCongr</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span></span>)</span>.invFun</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.setCongr\">Equiv.setCongr</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span></span>)</span>.toFun</span></span>)</span> }</span>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.toFun\">Equiv.toFun</a>\n      <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.setCongr\">Equiv.setCongr</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span></span>)</span>.toFun</span>, <span class=\"fn\">invFun</span> := <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.setCongr\">Equiv.setCongr</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span></span>)</span>.invFun</span>,\n        <span class=\"fn\">left_inv</span> :=\n          <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.LeftInverse\">Function.LeftInverse</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.setCongr\">Equiv.setCongr</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span></span>)</span>.invFun</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.setCongr\">Equiv.setCongr</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span></span>)</span>.toFun</span></span>)</span>,\n        <span class=\"fn\">right_inv</span> :=\n          <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.setCongr\">Equiv.setCongr</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span></span>)</span>.invFun</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.setCongr\">Equiv.setCongr</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span></span>)</span>.toFun</span></span>)</span> }</span>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3573-L3575","name":"AddEquiv.addSubgroupCongr.proof_1","line":3573,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddEquiv.addSubgroupCongr.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddEquiv.addSubgroupCongr.proof_1\"><span class=\"name\">AddEquiv</span>.<span class=\"name\">addSubgroupCongr</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3559-L3561","name":"MonoidHom.subgroupMap_surjective","line":3559,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.subgroupMap_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.subgroupMap_surjective\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">subgroupMap_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.subgroupMap\">MonoidHom.subgroupMap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3558-L3558","name":"AddMonoidHom.addSubgroupMap_surjective","line":3558,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.addSubgroupMap_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.addSubgroupMap_surjective\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">addSubgroupMap_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.addSubgroupMap\">AddMonoidHom.addSubgroupMap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3551-L3552","name":"MonoidHom.subgroupMap","line":3551,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.subgroupMap","doc":"The `MonoidHom` from a subgroup to its image. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.subgroupMap\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">subgroupMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">H</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3550-L3550","name":"AddMonoidHom.addSubgroupMap_apply_coe","line":3550,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.addSubgroupMap_apply_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.addSubgroupMap_apply_coe\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">addSubgroupMap_apply_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">H</span>.toAddSubmonoid</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.addSubgroupMap\">AddMonoidHom.addSubgroupMap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3550-L3550","name":"MonoidHom.subgroupMap_apply_coe","line":3550,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.subgroupMap_apply_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.subgroupMap_apply_coe\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">subgroupMap_apply_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">H</span>.toSubmonoid</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.subgroupMap\">MonoidHom.subgroupMap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3550-L3550","name":"AddMonoidHom.addSubgroupMap","line":3550,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.addSubgroupMap","doc":"the `AddMonoidHom` from an additive subgroup to its image"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.addSubgroupMap\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">addSubgroupMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">H</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3542-L3543","name":"MonoidHom.subgroupComap","line":3542,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.subgroupComap","doc":"The `MonoidHom` from the preimage of a subgroup to itself. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.subgroupComap\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">subgroupComap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H' : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H'</span></span>)</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">↥<span class=\"fn\">H'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3540-L3540","name":"MonoidHom.subgroupComap_apply_coe","line":3540,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.subgroupComap_apply_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.subgroupComap_apply_coe\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">subgroupComap_apply_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H' : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#Submonoid.comap\">Submonoid.comap</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">H'</span>.toSubmonoid</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.subgroupComap\">MonoidHom.subgroupComap</a> <span class=\"fn\">f</span> <span class=\"fn\">H'</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3540-L3540","name":"AddMonoidHom.addSubgroupComap_apply_coe","line":3540,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.addSubgroupComap_apply_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.addSubgroupComap_apply_coe\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">addSubgroupComap_apply_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H' : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.comap\">AddSubmonoid.comap</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">H'</span>.toAddSubmonoid</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.addSubgroupComap\">AddMonoidHom.addSubgroupComap</a> <span class=\"fn\">f</span> <span class=\"fn\">H'</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3540-L3541","name":"AddMonoidHom.addSubgroupComap","line":3540,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.addSubgroupComap","doc":"the `AddMonoidHom` from the preimage of an\nadditive subgroup to itself."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.addSubgroupComap\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">addSubgroupComap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H' : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H'</span></span>)</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">↥<span class=\"fn\">H'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3532-L3535","name":"Subgroup.comap_normalClosure","line":3532,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_normalClosure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_normalClosure\"><span class=\"name\">Subgroup</span>.<span class=\"name\">comap_normalClosure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure\">Subgroup.normalClosure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure\">Subgroup.normalClosure</a> <span class=\"fn\">s</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3524-L3530","name":"Subgroup.map_normalClosure","line":3524,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_normalClosure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_normalClosure\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_normalClosure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure\">Subgroup.normalClosure</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure\">Subgroup.normalClosure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">s</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3518-L3520","name":"Subgroup.normal_subgroupOf","line":3518,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normal_subgroupOf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normal_subgroupOf\"><span class=\"name\">Subgroup</span>.<span class=\"name\">normal_subgroupOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">N</span> <span class=\"fn\">H</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3517-L3517","name":"AddSubgroup.normal_addSubgroupOf","line":3517,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normal_addSubgroupOf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normal_addSubgroupOf\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">normal_addSubgroupOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">N</span> <span class=\"fn\">H</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3511-L3513","name":"Subgroup.Normal.subgroupOf","line":3511,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal.subgroupOf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal.subgroupOf\"><span class=\"name\">Subgroup</span>.<span class=\"name\">Normal</span>.<span class=\"name\">subgroupOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hH : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3510-L3510","name":"AddSubgroup.Normal.addSubgroupOf","line":3510,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal.addSubgroupOf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal.addSubgroupOf\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">Normal</span>.<span class=\"name\">addSubgroupOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hH : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3503-L3505","name":"Subgroup.normal_comap","line":3503,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normal_comap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normal_comap\"><span class=\"name\">Subgroup</span>.<span class=\"name\">normal_comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[nH : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3502-L3502","name":"AddSubgroup.normal_comap","line":3502,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normal_comap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normal_comap\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">normal_comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[nH : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3497-L3498","name":"Subgroup.Normal.comap","line":3497,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal.comap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal.comap\"><span class=\"name\">Subgroup</span>.<span class=\"name\">Normal</span>.<span class=\"name\">comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hH : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3496-L3496","name":"AddSubgroup.Normal.comap","line":3496,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal.comap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal.comap\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">Normal</span>.<span class=\"name\">comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hH : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3483-L3487","name":"MonoidHom.eq_liftOfRightInverse","line":3483,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.eq_liftOfRightInverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.eq_liftOfRightInverse\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">eq_liftOfRightInverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₁ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₂ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₃ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f_inv : <span class=\"fn\"><span class=\"fn\">G₂</span> → <span class=\"fn\">G₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">f_inv</span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">g</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">G₂</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hh : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.comp\">MonoidHom.comp</a> <span class=\"fn\">h</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">h</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.liftOfRightInverse\">MonoidHom.liftOfRightInverse</a> <span class=\"fn\">f</span> <span class=\"fn\">f_inv</span> <span class=\"fn\">hf</span></span>)</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">g</span>, <span class=\"fn\">property</span> := <span class=\"fn\">hg</span> }</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3482-L3482","name":"AddMonoidHom.eq_liftOfRightInverse","line":3482,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.eq_liftOfRightInverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.eq_liftOfRightInverse\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">eq_liftOfRightInverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₁ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₂ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₃ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f_inv : <span class=\"fn\"><span class=\"fn\">G₂</span> → <span class=\"fn\">G₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">f_inv</span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">g</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">G₂</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hh : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">h</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">h</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.liftOfRightInverse\">AddMonoidHom.liftOfRightInverse</a> <span class=\"fn\">f</span> <span class=\"fn\">f_inv</span> <span class=\"fn\">hf</span></span>)</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">g</span>, <span class=\"fn\">property</span> := <span class=\"fn\">hg</span> }</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3476-L3478","name":"MonoidHom.liftOfRightInverse_comp","line":3476,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.liftOfRightInverse_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.liftOfRightInverse_comp\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">liftOfRightInverse_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₁ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₂ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₃ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f_inv : <span class=\"fn\"><span class=\"fn\">G₂</span> → <span class=\"fn\">G₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">f_inv</span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">{ <span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G₃</span></span> // <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">g</span></span></span> }</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.comp\">MonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.liftOfRightInverse\">MonoidHom.liftOfRightInverse</a> <span class=\"fn\">f</span> <span class=\"fn\">f_inv</span> <span class=\"fn\">hf</span></span>)</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3475-L3475","name":"AddMonoidHom.liftOfRightInverse_comp","line":3475,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.liftOfRightInverse_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.liftOfRightInverse_comp\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">liftOfRightInverse_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₁ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₂ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₃ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f_inv : <span class=\"fn\"><span class=\"fn\">G₂</span> → <span class=\"fn\">G₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">f_inv</span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">{ <span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₃</span></span> // <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">g</span></span></span> }</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.liftOfRightInverse\">AddMonoidHom.liftOfRightInverse</a> <span class=\"fn\">f</span> <span class=\"fn\">f_inv</span> <span class=\"fn\">hf</span></span>)</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3468-L3471","name":"MonoidHom.liftOfRightInverse_comp_apply","line":3468,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.liftOfRightInverse_comp_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.liftOfRightInverse_comp_apply\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">liftOfRightInverse_comp_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₁ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₂ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₃ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f_inv : <span class=\"fn\"><span class=\"fn\">G₂</span> → <span class=\"fn\">G₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">f_inv</span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">{ <span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G₃</span></span> // <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">g</span></span></span> }</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">G₁</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.liftOfRightInverse\">MonoidHom.liftOfRightInverse</a> <span class=\"fn\">f</span> <span class=\"fn\">f_inv</span> <span class=\"fn\">hf</span></span>)</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">g</span></span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3467-L3467","name":"AddMonoidHom.liftOfRightInverse_comp_apply","line":3467,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.liftOfRightInverse_comp_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.liftOfRightInverse_comp_apply\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">liftOfRightInverse_comp_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₁ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₂ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₃ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f_inv : <span class=\"fn\"><span class=\"fn\">G₂</span> → <span class=\"fn\">G₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">f_inv</span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">{ <span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₃</span></span> // <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">g</span></span></span> }</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">G₁</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.liftOfRightInverse\">AddMonoidHom.liftOfRightInverse</a> <span class=\"fn\">f</span> <span class=\"fn\">f_inv</span> <span class=\"fn\">hf</span></span>)</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">g</span></span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3461-L3463","name":"MonoidHom.liftOfSurjective","line":3461,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.liftOfSurjective","doc":"A non-computable version of `MonoidHom.liftOfRightInverse` for when no computable right\ninverse is available, that uses `Function.surjInv`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.liftOfSurjective\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">liftOfSurjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₁ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₂ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₃ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G₃</span></span> // <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">g</span></span></span> }</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G₂</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G₃</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3458-L3460","name":"AddMonoidHom.liftOfSurjective.proof_1","line":3458,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.liftOfSurjective.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.liftOfSurjective.proof_1\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">liftOfSurjective</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Basic.html#Function.surjInv\">Function.surjInv</a> <span class=\"fn\">hf</span></span>)</span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3458-L3460","name":"AddMonoidHom.liftOfSurjective","line":3458,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.liftOfSurjective","doc":"A non-computable version of `AddMonoidHom.liftOfRightInverse` for when no\ncomputable right inverse is available."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.liftOfSurjective\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">liftOfSurjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₁ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₂ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₃ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₃</span></span> // <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">g</span></span></span> }</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G₂</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₃</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3442-L3452","name":"MonoidHom.liftOfRightInverse","line":3442,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.liftOfRightInverse","doc":"`liftOfRightInverse f hf g hg` is the unique group homomorphism `φ`\n\n* such that `φ.comp f = g` (`MonoidHom.liftOfRightInverse_comp`),\n* where `f : G₁ →+* G₂` has a RightInverse `f_inv` (`hf`),\n* and `g : G₂ →+* G₃` satisfies `hg : f.ker ≤ g.ker`.\n\nSee `MonoidHom.eq_liftOfRightInverse` for the uniqueness lemma.\n\n```\n   G₁.\n   |  \\\n f |   \\ g\n   |    \\\n   v     \\⌟\n   G₂----> G₃\n      ∃!φ\n```\n "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.liftOfRightInverse\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">liftOfRightInverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₁ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₂ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₃ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f_inv : <span class=\"fn\"><span class=\"fn\">G₂</span> → <span class=\"fn\">G₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">f_inv</span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G₃</span></span> // <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">g</span></span></span> }</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G₂</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G₃</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3427-L3441","name":"AddMonoidHom.liftOfRightInverse.proof_3","line":3427,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.liftOfRightInverse.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.liftOfRightInverse.proof_3\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">liftOfRightInverse</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₃ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f_inv : <span class=\"fn\"><span class=\"fn\">G₂</span> → <span class=\"fn\">G₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">f_inv</span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">{ <span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₃</span></span> // <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">g</span></span></span> }</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\">G₂</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₃</span></span>) =&gt;\n      <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">φ</span> <span class=\"fn\">f</span></span>,\n        <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span>, <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">φ</span> <span class=\"fn\">f</span></span>)</span></span></span></span>)</span> }</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">g</span> : <span class=\"fn\">{ <span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₃</span></span> // <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">g</span></span></span> }</span>) =&gt;\n        <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.liftOfRightInverseAux\">AddMonoidHom.liftOfRightInverseAux</a> <span class=\"fn\">f</span> <span class=\"fn\">f_inv</span> <span class=\"fn\">hf</span> <span class=\"fn\">↑<span class=\"fn\">g</span></span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span></span></span>)</span></span></span>)</span>\n      <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3427-L3441","name":"AddMonoidHom.liftOfRightInverse.proof_1","line":3427,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.liftOfRightInverse.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.liftOfRightInverse.proof_1\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">liftOfRightInverse</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">{ <span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₃</span></span> // <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">g</span></span></span> }</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3427-L3441","name":"AddMonoidHom.liftOfRightInverse.proof_2","line":3427,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.liftOfRightInverse.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.liftOfRightInverse.proof_2\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">liftOfRightInverse</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">G₂</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">G₁</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">φ</span> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3427-L3441","name":"AddMonoidHom.liftOfRightInverse","line":3427,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.liftOfRightInverse","doc":"`liftOfRightInverse f f_inv hf g hg` is the unique additive group homomorphism `φ`\n* such that `φ.comp f = g` (`AddMonoidHom.liftOfRightInverse_comp`),\n* where `f : G₁ →+ G₂` has a RightInverse `f_inv` (`hf`),\n* and `g : G₂ →+ G₃` satisfies `hg : f.ker ≤ g.ker`.\nSee `AddMonoidHom.eq_liftOfRightInverse` for the uniqueness lemma.\n```\n   G₁.\n   |  \\\n f |   \\ g\n   |    \\\n   v     \\⌟\n   G₂----> G₃\n      ∃!φ\n```"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.liftOfRightInverse\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">liftOfRightInverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₁ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₂ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₃ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f_inv : <span class=\"fn\"><span class=\"fn\">G₂</span> → <span class=\"fn\">G₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">f_inv</span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₃</span></span> // <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">g</span></span></span> }</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G₂</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₃</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3427-L3441","name":"AddMonoidHom.liftOfRightInverse.proof_4","line":3427,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.liftOfRightInverse.proof_4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.liftOfRightInverse.proof_4\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">liftOfRightInverse</span>.<span class=\"name\">proof_4</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₃ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f_inv : <span class=\"fn\"><span class=\"fn\">G₂</span> → <span class=\"fn\">G₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">f_inv</span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">G₂</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₃</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">g</span> : <span class=\"fn\">{ <span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₃</span></span> // <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">g</span></span></span> }</span>) =&gt;\n      <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.liftOfRightInverseAux\">AddMonoidHom.liftOfRightInverseAux</a> <span class=\"fn\">f</span> <span class=\"fn\">f_inv</span> <span class=\"fn\">hf</span> <span class=\"fn\">↑<span class=\"fn\">g</span></span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span></span></span>)</span></span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\">G₂</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₃</span></span>) =&gt;\n        <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">φ</span> <span class=\"fn\">f</span></span>,\n          <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span>, <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">φ</span> <span class=\"fn\">f</span></span>)</span></span></span></span>)</span> }</span></span>)</span>\n      <span class=\"fn\">φ</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">φ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3399-L3405","name":"MonoidHom.liftOfRightInverseAux_comp_apply","line":3399,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.liftOfRightInverseAux_comp_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.liftOfRightInverseAux_comp_apply\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">liftOfRightInverseAux_comp_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₁ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₂ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₃ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f_inv : <span class=\"fn\"><span class=\"fn\">G₂</span> → <span class=\"fn\">G₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">f_inv</span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">g</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">G₁</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.liftOfRightInverseAux\">MonoidHom.liftOfRightInverseAux</a> <span class=\"fn\">f</span> <span class=\"fn\">f_inv</span> <span class=\"fn\">hf</span> <span class=\"fn\">g</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3398-L3398","name":"AddMonoidHom.liftOfRightInverseAux_comp_apply","line":3398,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.liftOfRightInverseAux_comp_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.liftOfRightInverseAux_comp_apply\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">liftOfRightInverseAux_comp_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₁ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₂ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₃ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f_inv : <span class=\"fn\"><span class=\"fn\">G₂</span> → <span class=\"fn\">G₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">f_inv</span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">g</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">G₁</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.liftOfRightInverseAux\">AddMonoidHom.liftOfRightInverseAux</a> <span class=\"fn\">f</span> <span class=\"fn\">f_inv</span> <span class=\"fn\">hf</span> <span class=\"fn\">g</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3385-L3394","name":"MonoidHom.liftOfRightInverseAux","line":3385,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.liftOfRightInverseAux","doc":"Auxiliary definition used to define `liftOfRightInverse` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.liftOfRightInverseAux\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">liftOfRightInverseAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₁ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₂ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₃ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f_inv : <span class=\"fn\"><span class=\"fn\">G₂</span> → <span class=\"fn\">G₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">f_inv</span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">g</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">G₂</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G₃</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3384-L3384","name":"AddMonoidHom.liftOfRightInverseAux","line":3384,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.liftOfRightInverseAux","doc":"Auxiliary definition used to define `liftOfRightInverse`"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.liftOfRightInverseAux\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">liftOfRightInverseAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₁ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₂ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₃ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f_inv : <span class=\"fn\"><span class=\"fn\">G₂</span> → <span class=\"fn\">G₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">f_inv</span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">g</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">G₂</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₃</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3384-L3384","name":"AddMonoidHom.liftOfRightInverseAux.proof_1","line":3384,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.liftOfRightInverseAux.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.liftOfRightInverseAux.proof_1\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">liftOfRightInverseAux</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f_inv : <span class=\"fn\"><span class=\"fn\">G₂</span> → <span class=\"fn\">G₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">f_inv</span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">g</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f_inv</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3384-L3384","name":"AddMonoidHom.liftOfRightInverseAux.proof_2","line":3384,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.liftOfRightInverseAux.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.liftOfRightInverseAux.proof_2\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">liftOfRightInverseAux</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₃ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f_inv : <span class=\"fn\"><span class=\"fn\">G₂</span> → <span class=\"fn\">G₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">f_inv</span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">g</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">G₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">G₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">b</span> : <span class=\"fn\">G₂</span>) =&gt; <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f_inv</span> <span class=\"fn\">b</span></span>)</span></span></span>, <span class=\"fn\">map_zero'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f_inv</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">g</span></span></span>)</span> }</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">b</span> : <span class=\"fn\">G₂</span>) =&gt; <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f_inv</span> <span class=\"fn\">b</span></span>)</span></span></span>, <span class=\"fn\">map_zero'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f_inv</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">g</span></span></span>)</span> }</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>     <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">b</span> : <span class=\"fn\">G₂</span>) =&gt; <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f_inv</span> <span class=\"fn\">b</span></span>)</span></span></span>, <span class=\"fn\">map_zero'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f_inv</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">g</span></span></span>)</span> }</span> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3369-L3371","name":"Subgroup.map_normalizer_eq_of_bijective","line":3369,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_normalizer_eq_of_bijective","doc":"The image of the normalizer is equal to the normalizer of the image of a bijective\nfunction. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_normalizer_eq_of_bijective\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_normalizer_eq_of_bijective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Bijective\">Function.Bijective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalizer\">Subgroup.normalizer</a> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalizer\">Subgroup.normalizer</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3366-L3368","name":"AddSubgroup.map_normalizer_eq_of_bijective","line":3366,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_normalizer_eq_of_bijective","doc":"The image of the normalizer is equal to the normalizer of the image of a bijective\nfunction."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_normalizer_eq_of_bijective\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_normalizer_eq_of_bijective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Bijective\">Function.Bijective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer\">AddSubgroup.normalizer</a> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer\">AddSubgroup.normalizer</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3352-L3360","name":"Subgroup.map_equiv_normalizer_eq","line":3352,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_equiv_normalizer_eq","doc":"The image of the normalizer is equal to the normalizer of the image of an isomorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_equiv_normalizer_eq\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_equiv_normalizer_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalizer\">Subgroup.normalizer</a> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalizer\">Subgroup.normalizer</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">H</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3349-L3351","name":"AddSubgroup.map_equiv_normalizer_eq","line":3349,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_equiv_normalizer_eq","doc":"The image of the normalizer is equal to the normalizer of the image of an\nisomorphism."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_equiv_normalizer_eq\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_equiv_normalizer_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer\">AddSubgroup.normalizer</a> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer\">AddSubgroup.normalizer</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">H</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3340-L3344","name":"Subgroup.subgroupOf_normalizer_eq","line":3340,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf_normalizer_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf_normalizer_eq\"><span class=\"name\">Subgroup</span>.<span class=\"name\">subgroupOf_normalizer_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalizer\">Subgroup.normalizer</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalizer\">Subgroup.normalizer</a> <span class=\"fn\">H</span></span>)</span> <span class=\"fn\">N</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalizer\">Subgroup.normalizer</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">N</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3339-L3339","name":"AddSubgroup.addSubgroupOf_normalizer_eq","line":3339,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf_normalizer_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf_normalizer_eq\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">addSubgroupOf_normalizer_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer\">AddSubgroup.normalizer</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer\">AddSubgroup.normalizer</a> <span class=\"fn\">H</span></span>)</span> <span class=\"fn\">N</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer\">AddSubgroup.normalizer</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">N</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3326-L3335","name":"Subgroup.comap_normalizer_eq_of_injective_of_le_range","line":3326,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_normalizer_eq_of_injective_of_le_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_normalizer_eq_of_injective_of_le_range\"><span class=\"name\">Subgroup</span>.<span class=\"name\">comap_normalizer_eq_of_injective_of_le_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalizer\">Subgroup.normalizer</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range\">MonoidHom.range</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalizer\">Subgroup.normalizer</a> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalizer\">Subgroup.normalizer</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3325-L3325","name":"AddSubgroup.comap_normalizer_eq_of_injective_of_le_range","line":3325,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_normalizer_eq_of_injective_of_le_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_normalizer_eq_of_injective_of_le_range\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">comap_normalizer_eq_of_injective_of_le_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer\">AddSubgroup.normalizer</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer\">AddSubgroup.normalizer</a> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer\">AddSubgroup.normalizer</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3313-L3321","name":"Subgroup.comap_normalizer_eq_of_surjective","line":3313,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_normalizer_eq_of_surjective","doc":"The preimage of the normalizer is equal to the normalizer of the preimage of a surjective\nfunction. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_normalizer_eq_of_surjective\"><span class=\"name\">Subgroup</span>.<span class=\"name\">comap_normalizer_eq_of_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalizer\">Subgroup.normalizer</a> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalizer\">Subgroup.normalizer</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3310-L3312","name":"AddSubgroup.comap_normalizer_eq_of_surjective","line":3310,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_normalizer_eq_of_surjective","doc":"The preimage of the normalizer is equal to the normalizer of the preimage of\na surjective function."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_normalizer_eq_of_surjective\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">comap_normalizer_eq_of_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer\">AddSubgroup.normalizer</a> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer\">AddSubgroup.normalizer</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3302-L3304","name":"Subgroup.coe_equivMapOfInjective_apply","line":3302,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_equivMapOfInjective_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_equivMapOfInjective_apply\"><span class=\"name\">Subgroup</span>.<span class=\"name\">coe_equivMapOfInjective_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.equivMapOfInjective\">Subgroup.equivMapOfInjective</a> <span class=\"fn\">H</span> <span class=\"fn\">f</span> <span class=\"fn\">hf</span></span>)</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">h</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3301-L3301","name":"AddSubgroup.coe_equivMapOfInjective_apply","line":3301,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_equivMapOfInjective_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_equivMapOfInjective_apply\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">coe_equivMapOfInjective_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.equivMapOfInjective\">AddSubgroup.equivMapOfInjective</a> <span class=\"fn\">H</span> <span class=\"fn\">f</span> <span class=\"fn\">hf</span></span>)</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">h</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3295-L3297","name":"Subgroup.equivMapOfInjective","line":3295,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.equivMapOfInjective","doc":"A subgroup is isomorphic to its image under an injective function. If you have an isomorphism,\nuse `MulEquiv.subgroupMap` for better definitional equalities. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.equivMapOfInjective\"><span class=\"name\">Subgroup</span>.<span class=\"name\">equivMapOfInjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">H</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3292-L3294","name":"AddSubgroup.equivMapOfInjective.proof_3","line":3292,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.equivMapOfInjective.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.equivMapOfInjective.proof_3\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">equivMapOfInjective</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x </span>x_1 : <span class=\"fn\">↥<span class=\"fn\">H</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.toFun\">Equiv.toFun</a>\n      <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.image\">Equiv.Set.image</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">H</span></span>)</span> <span class=\"fn\">hf</span></span>)</span>.toFun</span>, <span class=\"fn\">invFun</span> := <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.image\">Equiv.Set.image</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">H</span></span>)</span> <span class=\"fn\">hf</span></span>)</span>.invFun</span>,\n        <span class=\"fn\">left_inv</span> :=\n          <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.LeftInverse\">Function.LeftInverse</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.image\">Equiv.Set.image</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">H</span></span>)</span> <span class=\"fn\">hf</span></span>)</span>.invFun</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.image\">Equiv.Set.image</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">H</span></span>)</span> <span class=\"fn\">hf</span></span>)</span>.toFun</span></span>)</span>,\n        <span class=\"fn\">right_inv</span> :=\n          <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.image\">Equiv.Set.image</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">H</span></span>)</span> <span class=\"fn\">hf</span></span>)</span>.invFun</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.image\">Equiv.Set.image</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">H</span></span>)</span> <span class=\"fn\">hf</span></span>)</span>.toFun</span></span>)</span> }</span>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.toFun\">Equiv.toFun</a>\n        <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.image\">Equiv.Set.image</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">H</span></span>)</span> <span class=\"fn\">hf</span></span>)</span>.toFun</span>, <span class=\"fn\">invFun</span> := <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.image\">Equiv.Set.image</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">H</span></span>)</span> <span class=\"fn\">hf</span></span>)</span>.invFun</span>,\n          <span class=\"fn\">left_inv</span> :=\n            <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.LeftInverse\">Function.LeftInverse</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.image\">Equiv.Set.image</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">H</span></span>)</span> <span class=\"fn\">hf</span></span>)</span>.invFun</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.image\">Equiv.Set.image</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">H</span></span>)</span> <span class=\"fn\">hf</span></span>)</span>.toFun</span></span>)</span>,\n          <span class=\"fn\">right_inv</span> :=\n            <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.image\">Equiv.Set.image</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">H</span></span>)</span> <span class=\"fn\">hf</span></span>)</span>.invFun</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.image\">Equiv.Set.image</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">H</span></span>)</span> <span class=\"fn\">hf</span></span>)</span>.toFun</span></span>)</span> }</span>\n        <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>       <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.toFun\">Equiv.toFun</a>\n        <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.image\">Equiv.Set.image</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">H</span></span>)</span> <span class=\"fn\">hf</span></span>)</span>.toFun</span>, <span class=\"fn\">invFun</span> := <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.image\">Equiv.Set.image</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">H</span></span>)</span> <span class=\"fn\">hf</span></span>)</span>.invFun</span>,\n          <span class=\"fn\">left_inv</span> :=\n            <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.LeftInverse\">Function.LeftInverse</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.image\">Equiv.Set.image</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">H</span></span>)</span> <span class=\"fn\">hf</span></span>)</span>.invFun</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.image\">Equiv.Set.image</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">H</span></span>)</span> <span class=\"fn\">hf</span></span>)</span>.toFun</span></span>)</span>,\n          <span class=\"fn\">right_inv</span> :=\n            <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.image\">Equiv.Set.image</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">H</span></span>)</span> <span class=\"fn\">hf</span></span>)</span>.invFun</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.image\">Equiv.Set.image</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">H</span></span>)</span> <span class=\"fn\">hf</span></span>)</span>.toFun</span></span>)</span> }</span>\n        <span class=\"fn\">x_1</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3292-L3294","name":"AddSubgroup.equivMapOfInjective","line":3292,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.equivMapOfInjective","doc":"An additive subgroup is isomorphic to its image under an injective function. If you\nhave an isomorphism, use `AddEquiv.addSubgroupMap` for better definitional equalities."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.equivMapOfInjective\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">equivMapOfInjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">H</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3292-L3294","name":"AddSubgroup.equivMapOfInjective.proof_1","line":3292,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.equivMapOfInjective.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.equivMapOfInjective.proof_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">equivMapOfInjective</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.LeftInverse\">Function.LeftInverse</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.image\">Equiv.Set.image</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">H</span></span>)</span> <span class=\"fn\">hf</span></span>)</span>.invFun</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.image\">Equiv.Set.image</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">H</span></span>)</span> <span class=\"fn\">hf</span></span>)</span>.toFun</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3292-L3294","name":"AddSubgroup.equivMapOfInjective.proof_2","line":3292,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.equivMapOfInjective.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.equivMapOfInjective.proof_2\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">equivMapOfInjective</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.image\">Equiv.Set.image</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">H</span></span>)</span> <span class=\"fn\">hf</span></span>)</span>.invFun</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.image\">Equiv.Set.image</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">H</span></span>)</span> <span class=\"fn\">hf</span></span>)</span>.toFun</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3283-L3286","name":"Subgroup.codisjoint_subgroupOf_sup","line":3283,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.codisjoint_subgroupOf_sup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.codisjoint_subgroupOf_sup\"><span class=\"name\">Subgroup</span>.<span class=\"name\">codisjoint_subgroupOf_sup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Codisjoint\">Codisjoint</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">K</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">K</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">K</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3282-L3282","name":"AddSubgroup.codisjoint_addSubgroupOf_sup","line":3282,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.codisjoint_addSubgroupOf_sup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.codisjoint_addSubgroupOf_sup\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">codisjoint_addSubgroupOf_sup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Codisjoint\">Codisjoint</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">K</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">K</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">K</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3276-L3278","name":"Subgroup.sup_subgroupOf_eq","line":3276,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.sup_subgroupOf_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.sup_subgroupOf_eq\"><span class=\"name\">Subgroup</span>.<span class=\"name\">sup_subgroupOf_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hH : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hK : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">L</span></span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">L</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3275-L3275","name":"AddSubgroup.sup_addSubgroupOf_eq","line":3275,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.sup_addSubgroupOf_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.sup_addSubgroupOf_eq\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">sup_addSubgroupOf_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hH : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hK : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">L</span></span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">L</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3268-L3271","name":"Subgroup.comap_sup_eq","line":3268,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_sup_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_sup_eq\"><span class=\"name\">Subgroup</span>.<span class=\"name\">comap_sup_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">K</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3267-L3267","name":"AddSubgroup.comap_sup_eq","line":3267,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_sup_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_sup_eq\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">comap_sup_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">K</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3258-L3263","name":"Subgroup.comap_sup_eq_of_le_range","line":3258,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_sup_eq_of_le_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_sup_eq_of_le_range\"><span class=\"name\">Subgroup</span>.<span class=\"name\">comap_sup_eq_of_le_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hH : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range\">MonoidHom.range</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hK : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range\">MonoidHom.range</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">K</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3257-L3257","name":"AddSubgroup.comap_sup_eq_of_le_range","line":3257,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_sup_eq_of_le_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_sup_eq_of_le_range\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">comap_sup_eq_of_le_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hH : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hK : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">K</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3248-L3253","name":"Subgroup.closure_preimage_eq_top","line":3248,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_preimage_eq_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_preimage_eq_top\"><span class=\"name\">Subgroup</span>.<span class=\"name\">closure_preimage_eq_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subtype\">Subgroup.subtype</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">s</span></span>)</span></span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3247-L3247","name":"AddSubgroup.closure_preimage_eq_top","line":3247,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_preimage_eq_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_preimage_eq_top\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">closure_preimage_eq_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.subtype\">AddSubgroup.subtype</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">s</span></span>)</span></span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3240-L3243","name":"Subgroup.map_injective_of_ker_le","line":3240,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_injective_of_ker_le","doc":"Given `f(A) = f(B)`, `ker f ≤ A`, and `ker f ≤ B`, deduce that `A = B`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_injective_of_ker_le\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_injective_of_ker_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hH : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hK : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3239-L3239","name":"AddSubgroup.map_injective_of_ker_le","line":3239,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_injective_of_ker_le","doc":"Given `f(A) = f(B)`, `ker f ≤ A`, and `ker f ≤ B`, deduce that `A = B`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_injective_of_ker_le\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_injective_of_ker_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hH : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hK : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3232-L3234","name":"Subgroup.map_eq_comap_of_inverse","line":3232,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_eq_comap_of_inverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_eq_comap_of_inverse\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_eq_comap_of_inverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hl : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.LeftInverse\">Function.LeftInverse</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">g</span> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3231-L3231","name":"AddSubgroup.map_eq_comap_of_inverse","line":3231,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_eq_comap_of_inverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_eq_comap_of_inverse\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_eq_comap_of_inverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hl : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.LeftInverse\">Function.LeftInverse</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">g</span> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3226-L3227","name":"Subgroup.map_injective","line":3226,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_injective\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3225-L3225","name":"AddSubgroup.map_injective","line":3225,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_injective\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3219-L3221","name":"Subgroup.map_subtype_le_map_subtype","line":3219,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_subtype_le_map_subtype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_subtype_le_map_subtype\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_subtype_le_map_subtype</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">↥<span class=\"fn\">G'</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">↥<span class=\"fn\">G'</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subtype\">Subgroup.subtype</a> <span class=\"fn\">G'</span></span>)</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subtype\">Subgroup.subtype</a> <span class=\"fn\">G'</span></span>)</span> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3218-L3218","name":"AddSubgroup.map_subtype_le_map_subtype","line":3218,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_subtype_le_map_subtype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_subtype_le_map_subtype\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_subtype_le_map_subtype</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">↥<span class=\"fn\">G'</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">↥<span class=\"fn\">G'</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.subtype\">AddSubgroup.subtype</a> <span class=\"fn\">G'</span></span>)</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.subtype\">AddSubgroup.subtype</a> <span class=\"fn\">G'</span></span>)</span> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3213-L3214","name":"Subgroup.map_le_map_iff_of_injective","line":3213,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_le_map_iff_of_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_le_map_iff_of_injective\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_le_map_iff_of_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3212-L3212","name":"AddSubgroup.map_le_map_iff_of_injective","line":3212,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_le_map_iff_of_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_le_map_iff_of_injective\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_le_map_iff_of_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3207-L3208","name":"Subgroup.map_eq_range_iff","line":3207,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_eq_range_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_eq_range_iff\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_eq_range_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range\">MonoidHom.range</a> <span class=\"fn\">f</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Codisjoint\">Codisjoint</a> <span class=\"fn\">H</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3206-L3206","name":"AddSubgroup.map_eq_range_iff","line":3206,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_eq_range_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_eq_range_iff\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_eq_range_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">f</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Codisjoint\">Codisjoint</a> <span class=\"fn\">H</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3201-L3202","name":"Subgroup.map_eq_map_iff","line":3201,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_eq_map_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_eq_map_iff\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_eq_map_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">f</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">f</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3200-L3200","name":"AddSubgroup.map_eq_map_iff","line":3200,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_eq_map_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_eq_map_iff\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_eq_map_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3194-L3196","name":"Subgroup.map_le_map_iff'","line":3194,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_le_map_iff'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_le_map_iff'\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_le_map_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">f</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">f</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3193-L3193","name":"AddSubgroup.map_le_map_iff'","line":3193,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_le_map_iff'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_le_map_iff'\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_le_map_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3188-L3189","name":"Subgroup.map_le_map_iff","line":3188,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_le_map_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_le_map_iff\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_le_map_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">f</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3187-L3187","name":"AddSubgroup.map_le_map_iff","line":3187,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_le_map_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_le_map_iff\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_le_map_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3181-L3183","name":"Subgroup.comap_map_eq_self_of_injective","line":3181,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_map_eq_self_of_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_map_eq_self_of_injective\"><span class=\"name\">Subgroup</span>.<span class=\"name\">comap_map_eq_self_of_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3180-L3180","name":"AddSubgroup.comap_map_eq_self_of_injective","line":3180,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_map_eq_self_of_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_map_eq_self_of_injective\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">comap_map_eq_self_of_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3175-L3176","name":"Subgroup.comap_map_eq_self","line":3175,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_map_eq_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_map_eq_self\"><span class=\"name\">Subgroup</span>.<span class=\"name\">comap_map_eq_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3174-L3174","name":"AddSubgroup.comap_map_eq_self","line":3174,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_map_eq_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_map_eq_self\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">comap_map_eq_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3169-L3170","name":"Subgroup.comap_injective","line":3169,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_injective\"><span class=\"name\">Subgroup</span>.<span class=\"name\">comap_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3168-L3168","name":"AddSubgroup.comap_injective","line":3168,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_injective\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">comap_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3163-L3164","name":"Subgroup.comap_lt_comap_of_surjective","line":3163,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_lt_comap_of_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_lt_comap_of_surjective\"><span class=\"name\">Subgroup</span>.<span class=\"name\">comap_lt_comap_of_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">L</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">L</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3162-L3162","name":"AddSubgroup.comap_lt_comap_of_surjective","line":3162,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_lt_comap_of_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_lt_comap_of_surjective\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">comap_lt_comap_of_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">L</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">L</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3156-L3158","name":"Subgroup.comap_le_comap_of_surjective","line":3156,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_le_comap_of_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_le_comap_of_surjective\"><span class=\"name\">Subgroup</span>.<span class=\"name\">comap_le_comap_of_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">L</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">L</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3155-L3155","name":"AddSubgroup.comap_le_comap_of_surjective","line":3155,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_le_comap_of_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_le_comap_of_surjective\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">comap_le_comap_of_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">L</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">L</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3149-L3151","name":"Subgroup.comap_le_comap_of_le_range","line":3149,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_le_comap_of_le_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_le_comap_of_le_range\"><span class=\"name\">Subgroup</span>.<span class=\"name\">comap_le_comap_of_le_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range\">MonoidHom.range</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">L</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">L</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3148-L3148","name":"AddSubgroup.comap_le_comap_of_le_range","line":3148,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_le_comap_of_le_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_le_comap_of_le_range\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">comap_le_comap_of_le_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">L</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">L</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3142-L3144","name":"Subgroup.map_comap_eq_self_of_surjective","line":3142,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_comap_eq_self_of_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_comap_eq_self_of_surjective\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_comap_eq_self_of_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3141-L3141","name":"AddSubgroup.map_comap_eq_self_of_surjective","line":3141,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_comap_eq_self_of_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_comap_eq_self_of_surjective\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_comap_eq_self_of_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3136-L3137","name":"Subgroup.map_comap_eq_self","line":3136,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_comap_eq_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_comap_eq_self\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_comap_eq_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range\">MonoidHom.range</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3135-L3135","name":"AddSubgroup.map_comap_eq_self","line":3135,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_comap_eq_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_comap_eq_self\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_comap_eq_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3126-L3131","name":"Subgroup.comap_map_eq","line":3126,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_map_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_map_eq\"><span class=\"name\">Subgroup</span>.<span class=\"name\">comap_map_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3125-L3125","name":"AddSubgroup.comap_map_eq","line":3125,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_map_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_map_eq\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">comap_map_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3119-L3121","name":"Subgroup.map_comap_eq","line":3119,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_comap_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_comap_eq\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_comap_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range\">MonoidHom.range</a> <span class=\"fn\">f</span></span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3118-L3118","name":"AddSubgroup.map_comap_eq","line":3118,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_comap_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_comap_eq\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_comap_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">f</span></span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3113-L3114","name":"Subgroup.le_comap_map","line":3113,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.le_comap_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.le_comap_map\"><span class=\"name\">Subgroup</span>.<span class=\"name\">le_comap_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3112-L3112","name":"AddSubgroup.le_comap_map","line":3112,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.le_comap_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.le_comap_map\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">le_comap_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3107-L3108","name":"Subgroup.map_comap_le","line":3107,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_comap_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_comap_le\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_comap_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3106-L3106","name":"AddSubgroup.map_comap_le","line":3106,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_comap_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_comap_le\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_comap_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3101-L3102","name":"Subgroup.ker_le_comap","line":3101,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.ker_le_comap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.ker_le_comap\"><span class=\"name\">Subgroup</span>.<span class=\"name\">ker_le_comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3100-L3100","name":"AddSubgroup.ker_le_comap","line":3100,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.ker_le_comap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.ker_le_comap\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">ker_le_comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3095-L3096","name":"Subgroup.map_subtype_le","line":3095,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_subtype_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_subtype_le\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_subtype_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subtype\">Subgroup.subtype</a> <span class=\"fn\">H</span></span>)</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3094-L3094","name":"AddSubgroup.map_subtype_le","line":3094,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_subtype_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_subtype_le\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_subtype_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.subtype\">AddSubgroup.subtype</a> <span class=\"fn\">H</span></span>)</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3089-L3090","name":"Subgroup.map_le_range","line":3089,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_le_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_le_range\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_le_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range\">MonoidHom.range</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3088-L3088","name":"AddSubgroup.map_le_range","line":3088,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_le_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_le_range\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_le_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3075-L3076","name":"Subgroup.map_eq_bot_iff_of_injective","line":3075,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_eq_bot_iff_of_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_eq_bot_iff_of_injective\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_eq_bot_iff_of_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3074-L3074","name":"AddSubgroup.map_eq_bot_iff_of_injective","line":3074,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_eq_bot_iff_of_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_eq_bot_iff_of_injective\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_eq_bot_iff_of_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3069-L3070","name":"Subgroup.map_eq_bot_iff","line":3069,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_eq_bot_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_eq_bot_iff\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_eq_bot_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3068-L3068","name":"AddSubgroup.map_eq_bot_iff","line":3068,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_eq_bot_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_eq_bot_iff\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_eq_bot_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3060-L3064","name":"Subgroup.Normal.map","line":3060,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal.map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal.map\"><span class=\"name\">Subgroup</span>.<span class=\"name\">Normal</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3059-L3059","name":"AddSubgroup.Normal.map","line":3059,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal.map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal.map\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">Normal</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3047-L3049","name":"MonoidHom.map_closure","line":3047,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.map_closure","doc":"The image under a monoid homomorphism of the subgroup generated by a set equals the subgroup\ngenerated by the image of the set. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.map_closure\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">map_closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">s</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3044-L3046","name":"AddMonoidHom.map_closure","line":3044,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.map_closure","doc":"The image under an `AddMonoid` hom of the `AddSubgroup` generated by a set equals\nthe `AddSubgroup` generated by the image of the set."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.map_closure\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">map_closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">s</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3037-L3038","name":"MonoidHom.closure_preimage_le","line":3037,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.closure_preimage_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.closure_preimage_le\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">closure_preimage_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">s</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3036-L3036","name":"AddMonoidHom.closure_preimage_le","line":3036,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.closure_preimage_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.closure_preimage_le\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">closure_preimage_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">s</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3029-L3030","name":"MonoidHom.eq_of_eqOn_dense","line":3029,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.eq_of_eqOn_dense","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.eq_of_eqOn_dense\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">eq_of_eqOn_dense</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.EqOn\">Set.EqOn</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">g</span></span>)</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3028-L3028","name":"AddMonoidHom.eq_of_eqOn_dense","line":3028,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.eq_of_eqOn_dense","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.eq_of_eqOn_dense\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">eq_of_eqOn_dense</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.EqOn\">Set.EqOn</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">g</span></span>)</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3023-L3024","name":"MonoidHom.eq_of_eqOn_top","line":3023,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.eq_of_eqOn_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.eq_of_eqOn_top\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">eq_of_eqOn_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.EqOn\">Set.EqOn</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <span class=\"fn\">⇑<span class=\"fn\">g</span></span> <span class=\"fn\">↑<a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3022-L3022","name":"AddMonoidHom.eq_of_eqOn_top","line":3022,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.eq_of_eqOn_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.eq_of_eqOn_top\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">eq_of_eqOn_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.EqOn\">Set.EqOn</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <span class=\"fn\">⇑<span class=\"fn\">g</span></span> <span class=\"fn\">↑<a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3017-L3018","name":"MonoidHom.eqOn_closure","line":3017,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.eqOn_closure","doc":"If two monoid homomorphisms are equal on a set, then they are equal on its subgroup closure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.eqOn_closure\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">eqOn_closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.EqOn\">Set.EqOn</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">g</span></span>)</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.EqOn\">Set.EqOn</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <span class=\"fn\">⇑<span class=\"fn\">g</span></span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">s</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3014-L3016","name":"AddMonoidHom.eqOn_closure","line":3014,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.eqOn_closure","doc":"If two monoid homomorphisms are equal on a set, then they are equal on its subgroup\nclosure."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.eqOn_closure\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">eqOn_closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.EqOn\">Set.EqOn</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">g</span></span>)</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.EqOn\">Set.EqOn</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <span class=\"fn\">⇑<span class=\"fn\">g</span></span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">s</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3008-L3009","name":"MonoidHom.eqLocus_same","line":3008,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.eqLocus_same","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.eqLocus_same\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">eqLocus_same</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.eqLocus\">MonoidHom.eqLocus</a> <span class=\"fn\">f</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3007-L3007","name":"AddMonoidHom.eqLocus_same","line":3007,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.eqLocus_same","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.eqLocus_same\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">eqLocus_same</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.eqLocus\">AddMonoidHom.eqLocus</a> <span class=\"fn\">f</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3002-L3003","name":"MonoidHom.eqLocus","line":3002,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.eqLocus","doc":"The subgroup of elements `x : G` such that `f x = g x` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.eqLocus\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">eqLocus</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3001-L3001","name":"AddMonoidHom.eqLocus","line":3001,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.eqLocus","doc":"The additive subgroup of elements `x : G` such that `f x = g x`"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.eqLocus\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">eqLocus</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3001-L3001","name":"AddMonoidHom.eqLocus.proof_1","line":3001,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.eqLocus.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.eqLocus.proof_1\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">eqLocus</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddMonoidHom.eqLocusM\">AddMonoidHom.eqLocusM</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L3001-L3001","name":"AddMonoidHom.eqLocus.proof_2","line":3001,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.eqLocus.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.eqLocus.proof_2\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">eqLocus</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\">G</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2991-L2992","name":"MonoidHom.coe_toMultiplicative_ker","line":2991,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.coe_toMultiplicative_ker","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.coe_toMultiplicative_ker\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">coe_toMultiplicative_ker</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A' : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">A'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">AddMonoidHom.toMultiplicative</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">AddSubgroup.toSubgroup</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2987-L2988","name":"MonoidHom.coe_toAdditive_ker","line":2987,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.coe_toAdditive_ker","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.coe_toAdditive_ker\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">coe_toAdditive_ker</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">MonoidHom.toAdditive</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Subgroup.toAddSubgroup</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2984-L2984","name":"MonoidHom.ker_snd","line":2984,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker_snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker_snd\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">ker_snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Prod.html#MonoidHom.snd\">MonoidHom.snd</a> <span class=\"fn\">G</span> <span class=\"fn\">G'</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod\">Subgroup.prod</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2983-L2983","name":"AddMonoidHom.ker_snd","line":2983,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker_snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker_snd\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">ker_snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Prod.html#AddMonoidHom.snd\">AddMonoidHom.snd</a> <span class=\"fn\">G</span> <span class=\"fn\">G'</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod\">AddSubgroup.prod</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2981-L2981","name":"MonoidHom.ker_fst","line":2981,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker_fst\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">ker_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Prod.html#MonoidHom.fst\">MonoidHom.fst</a> <span class=\"fn\">G</span> <span class=\"fn\">G'</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod\">Subgroup.prod</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2980-L2980","name":"AddMonoidHom.ker_fst","line":2980,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker_fst\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">ker_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Prod.html#AddMonoidHom.fst\">AddMonoidHom.fst</a> <span class=\"fn\">G</span> <span class=\"fn\">G'</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod\">AddSubgroup.prod</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2974-L2976","name":"MonoidHom.normal_ker","line":2974,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.normal_ker","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.normal_ker\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">normal_ker</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#MulOneClass\">MulOneClass</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">f</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2973-L2973","name":"AddMonoidHom.normal_ker","line":2973,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.normal_ker","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.normal_ker\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">normal_ker</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2970-L2971","name":"MonoidHom.range_le_ker_iff","line":2970,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range_le_ker_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range_le_ker_iff\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">range_le_ker_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G'' : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G''</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">G'</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G''</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range\">MonoidHom.range</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">g</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.comp\">MonoidHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2969-L2969","name":"AddMonoidHom.range_le_ker_iff","line":2969,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range_le_ker_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range_le_ker_iff\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">range_le_ker_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G'' : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G''</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">G'</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G''</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">g</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2963-L2965","name":"MonoidHom.ker_prodMap","line":2963,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker_prodMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker_prodMap\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">ker_prodMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N' : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">G'</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Prod.html#MonoidHom.prodMap\">MonoidHom.prodMap</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod\">Subgroup.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">g</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2962-L2962","name":"AddMonoidHom.ker_sumMap","line":2962,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker_sumMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker_sumMap\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">ker_sumMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N' : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">G'</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Prod.html#AddMonoidHom.prodMap\">AddMonoidHom.prodMap</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod\">AddSubgroup.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">g</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2955-L2958","name":"MonoidHom.prodMap_comap_prod","line":2955,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.prodMap_comap_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.prodMap_comap_prod\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">prodMap_comap_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N' : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">G'</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(S' : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Prod.html#MonoidHom.prodMap\">MonoidHom.prodMap</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod\">Subgroup.prod</a> <span class=\"fn\">S</span> <span class=\"fn\">S'</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod\">Subgroup.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">g</span> <span class=\"fn\">S'</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2954-L2954","name":"AddMonoidHom.sumMap_comap_sum","line":2954,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.sumMap_comap_sum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.sumMap_comap_sum\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">sumMap_comap_sum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N' : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">G'</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(S' : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Prod.html#AddMonoidHom.prodMap\">AddMonoidHom.prodMap</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod\">AddSubgroup.prod</a> <span class=\"fn\">S</span> <span class=\"fn\">S'</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod\">AddSubgroup.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">g</span> <span class=\"fn\">S'</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2950-L2952","name":"MonoidHom.ker_prod","line":2950,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker_prod\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">ker_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#MulOneClass\">MulOneClass</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#MulOneClass\">MulOneClass</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Prod.html#MonoidHom.prod\">MonoidHom.prod</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">g</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2949-L2949","name":"AddMonoidHom.ker_sum","line":2949,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker_sum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker_sum\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">ker_sum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Prod.html#AddMonoidHom.prod\">AddMonoidHom.prod</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">g</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2944-L2945","name":"Subgroup.ker_inclusion","line":2944,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.ker_inclusion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.ker_inclusion\"><span class=\"name\">Subgroup</span>.<span class=\"name\">ker_inclusion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.inclusion\">Subgroup.inclusion</a> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2943-L2943","name":"AddSubgroup.ker_inclusion","line":2943,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.ker_inclusion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.ker_inclusion\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">ker_inclusion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.inclusion\">AddSubgroup.inclusion</a> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2938-L2939","name":"Subgroup.ker_subtype","line":2938,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.ker_subtype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.ker_subtype\"><span class=\"name\">Subgroup</span>.<span class=\"name\">ker_subtype</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subtype\">Subgroup.subtype</a> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2937-L2937","name":"AddSubgroup.ker_subtype","line":2937,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.ker_subtype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.ker_subtype\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">ker_subtype</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.subtype\">AddSubgroup.subtype</a> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2931-L2933","name":"MonoidHom.ker_eq_bot_iff","line":2931,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker_eq_bot_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker_eq_bot_iff\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">ker_eq_bot_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#MulOneClass\">MulOneClass</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2930-L2930","name":"AddMonoidHom.ker_eq_bot_iff","line":2930,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker_eq_bot_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker_eq_bot_iff\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">ker_eq_bot_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2925-L2926","name":"MonoidHom.ker_id","line":2925,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker_id\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">ker_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.id\">MonoidHom.id</a> <span class=\"fn\">G</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2924-L2924","name":"AddMonoidHom.ker_id","line":2924,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker_id\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">ker_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.id\">AddMonoidHom.id</a> <span class=\"fn\">G</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2919-L2920","name":"MonoidHom.ker_one","line":2919,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker_one\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">ker_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#MulOneClass\">MulOneClass</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2918-L2918","name":"AddMonoidHom.ker_zero","line":2918,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker_zero\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">ker_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2913-L2914","name":"MonoidHom.ker_rangeRestrict","line":2913,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker_rangeRestrict","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker_rangeRestrict\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">ker_rangeRestrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.rangeRestrict\">MonoidHom.rangeRestrict</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2912-L2912","name":"AddMonoidHom.ker_rangeRestrict","line":2912,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker_rangeRestrict","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker_rangeRestrict\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">ker_rangeRestrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.rangeRestrict\">AddMonoidHom.rangeRestrict</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2906-L2908","name":"MonoidHom.ker_codRestrict","line":2906,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker_codRestrict","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker_codRestrict\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">ker_codRestrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#SubmonoidClass\">SubmonoidClass</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#MonoidHom.codRestrict\">MonoidHom.codRestrict</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2905-L2905","name":"AddMonoidHom.ker_codRestrict","line":2905,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker_codRestrict","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker_codRestrict\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">ker_codRestrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddMonoidHom.codRestrict\">AddMonoidHom.codRestrict</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2900-L2901","name":"MonoidHom.ker_restrict","line":2900,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker_restrict","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker_restrict\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">ker_restrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#MonoidHom.restrict\">MonoidHom.restrict</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2899-L2899","name":"AddMonoidHom.ker_restrict","line":2899,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker_restrict","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker_restrict\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">ker_restrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddMonoidHom.restrict\">AddMonoidHom.restrict</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2894-L2895","name":"MonoidHom.comap_bot","line":2894,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.comap_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.comap_bot\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">comap_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2893-L2893","name":"AddMonoidHom.comap_bot","line":2893,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.comap_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.comap_bot\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">comap_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2888-L2889","name":"MonoidHom.comap_ker","line":2888,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.comap_ker","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.comap_ker\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">comap_ker</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.comp\">MonoidHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2887-L2887","name":"AddMonoidHom.comap_ker","line":2887,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.comap_ker","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.comap_ker\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">comap_ker</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2882-L2883","name":"MonoidHom.decidableMemKer","line":2882,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.decidableMemKer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.decidableMemKer\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">decidableMemKer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#MulOneClass\">MulOneClass</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidablePred\">DecidablePred</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">f</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2881-L2881","name":"AddMonoidHom.decidableMemKer","line":2881,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.decidableMemKer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.decidableMemKer\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">decidableMemKer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidablePred\">DecidablePred</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2874-L2877","name":"MonoidHom.eq_iff","line":2874,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.eq_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.eq_iff\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">eq_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#MulOneClass\">MulOneClass</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2873-L2873","name":"AddMonoidHom.eq_iff","line":2873,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.eq_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.eq_iff\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">eq_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2867-L2869","name":"MonoidHom.ker_toHomUnits","line":2867,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker_toHomUnits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker_toHomUnits\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">ker_toHomUnits</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Hom.html#MonoidHom.toHomUnits\">MonoidHom.toHomUnits</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2866-L2866","name":"AddMonoidHom.ker_toHomAddUnits","line":2866,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker_toHomAddUnits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker_toHomAddUnits\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">ker_toHomAddUnits</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Hom.html#AddMonoidHom.toHomAddUnits\">AddMonoidHom.toHomAddUnits</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2861-L2862","name":"MonoidHom.coe_ker","line":2861,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.coe_ker","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.coe_ker\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">coe_ker</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#MulOneClass\">MulOneClass</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">{<span class=\"fn\">1</span>}</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2860-L2860","name":"AddMonoidHom.coe_ker","line":2860,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.coe_ker","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.coe_ker\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">coe_ker</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">{<span class=\"fn\">0</span>}</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2855-L2856","name":"MonoidHom.mem_ker","line":2855,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.mem_ker","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.mem_ker\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">mem_ker</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#MulOneClass\">MulOneClass</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">f</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2854-L2854","name":"AddMonoidHom.mem_ker","line":2854,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.mem_ker","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.mem_ker\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">mem_ker</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a> <span class=\"fn\">f</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2845-L2850","name":"MonoidHom.ker","line":2845,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker","doc":"The multiplicative kernel of a monoid homomorphism is the subgroup of elements `x : G` such that\n`f x = 1` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">ker</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#MulOneClass\">MulOneClass</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2842-L2844","name":"AddMonoidHom.ker","line":2842,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker","doc":"The additive kernel of an `AddMonoid` homomorphism is the `AddSubgroup` of elements\nsuch that `f x = 0`"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">ker</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2842-L2844","name":"AddMonoidHom.ker.proof_1","line":2842,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker.proof_1\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">ker</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddMonoidHom.mker\">AddMonoidHom.mker</a> <span class=\"fn\">f</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2842-L2844","name":"AddMonoidHom.ker.proof_2","line":2842,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker.proof_2\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">ker</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2832-L2834","name":"MonoidHom.apply_ofInjective_symm","line":2832,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.apply_ofInjective_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.apply_ofInjective_symm\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">apply_ofInjective_symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range\">MonoidHom.range</a> <span class=\"fn\">f</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.symm\">MulEquiv.symm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ofInjective\">MonoidHom.ofInjective</a> <span class=\"fn\">hf</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2831-L2831","name":"AddMonoidHom.apply_ofInjective_symm","line":2831,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.apply_ofInjective_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.apply_ofInjective_symm\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">apply_ofInjective_symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">f</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.symm\">AddEquiv.symm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ofInjective\">AddMonoidHom.ofInjective</a> <span class=\"fn\">hf</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2825-L2827","name":"MonoidHom.ofInjective_apply","line":2825,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ofInjective_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ofInjective_apply\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">ofInjective_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ofInjective\">MonoidHom.ofInjective</a> <span class=\"fn\">hf</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2824-L2824","name":"AddMonoidHom.ofInjective_apply","line":2824,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ofInjective_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ofInjective_apply\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">ofInjective_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ofInjective\">AddMonoidHom.ofInjective</a> <span class=\"fn\">hf</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2816-L2820","name":"MonoidHom.ofInjective","line":2816,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ofInjective","doc":"The range of an injective group homomorphism is isomorphic to its domain. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ofInjective\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">ofInjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range\">MonoidHom.range</a> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2814-L2815","name":"AddMonoidHom.ofInjective","line":2814,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ofInjective","doc":"The range of an injective additive group homomorphism is isomorphic to its\ndomain."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ofInjective\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">ofInjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2814-L2815","name":"AddMonoidHom.ofInjective.proof_1","line":2814,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ofInjective.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ofInjective.proof_1\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">ofInjective</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>)</span> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2814-L2815","name":"AddMonoidHom.ofInjective.proof_2","line":2814,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ofInjective.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ofInjective.proof_2\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">ofInjective</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (y : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2814-L2815","name":"AddMonoidHom.ofInjective.proof_3","line":2814,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ofInjective.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ofInjective.proof_3\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">ofInjective</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddMonoidHom.codRestrict\">AddMonoidHom.codRestrict</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>), <span class=\"fn\">∃ (y : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></span></span>)</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a>   <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddMonoidHom.codRestrict\">AddMonoidHom.codRestrict</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>), <span class=\"fn\">∃ (y : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></span></span>)</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2807-L2809","name":"MonoidHom.ofLeftInverse_symm_apply","line":2807,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ofLeftInverse_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ofLeftInverse_symm_apply\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">ofLeftInverse_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.LeftInverse\">Function.LeftInverse</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range\">MonoidHom.range</a> <span class=\"fn\">f</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.symm\">MulEquiv.symm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ofLeftInverse\">MonoidHom.ofLeftInverse</a> <span class=\"fn\">h</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2806-L2806","name":"AddMonoidHom.ofLeftInverse_symm_apply","line":2806,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ofLeftInverse_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ofLeftInverse_symm_apply\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">ofLeftInverse_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.LeftInverse\">Function.LeftInverse</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">f</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.symm\">AddEquiv.symm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ofLeftInverse\">AddMonoidHom.ofLeftInverse</a> <span class=\"fn\">h</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2800-L2802","name":"MonoidHom.ofLeftInverse_apply","line":2800,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ofLeftInverse_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ofLeftInverse_apply\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">ofLeftInverse_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.LeftInverse\">Function.LeftInverse</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ofLeftInverse\">MonoidHom.ofLeftInverse</a> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2799-L2799","name":"AddMonoidHom.ofLeftInverse_apply","line":2799,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ofLeftInverse_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ofLeftInverse_apply\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">ofLeftInverse_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.LeftInverse\">Function.LeftInverse</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ofLeftInverse\">AddMonoidHom.ofLeftInverse</a> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2787-L2795","name":"MonoidHom.ofLeftInverse","line":2787,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ofLeftInverse","doc":"Computable alternative to `MonoidHom.ofInjective`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ofLeftInverse\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">ofLeftInverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.LeftInverse\">Function.LeftInverse</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range\">MonoidHom.range</a> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2786-L2786","name":"AddMonoidHom.ofLeftInverse","line":2786,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ofLeftInverse","doc":"Computable alternative to `AddMonoidHom.ofInjective`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ofLeftInverse\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">ofLeftInverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.LeftInverse\">Function.LeftInverse</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2786-L2786","name":"AddMonoidHom.ofLeftInverse.proof_1","line":2786,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ofLeftInverse.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ofLeftInverse.proof_1\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">ofLeftInverse</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.LeftInverse\">Function.LeftInverse</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">f</span></span>)</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.rangeRestrict\">AddMonoidHom.rangeRestrict</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Function.comp\">(<a href=\"./Init/Prelude.html#Function.comp\"><span class=\"fn\">⇑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.subtype\">AddSubgroup.subtype</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">f</span></span>)</span></span>)</span></span></a>)</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2786-L2786","name":"AddMonoidHom.ofLeftInverse.proof_2","line":2786,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ofLeftInverse.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ofLeftInverse.proof_2\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">ofLeftInverse</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.rangeRestrict\">AddMonoidHom.rangeRestrict</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.rangeRestrict\">AddMonoidHom.rangeRestrict</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.rangeRestrict\">AddMonoidHom.rangeRestrict</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2782-L2783","name":"MonoidHom.coe_toMultiplicative_range","line":2782,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.coe_toMultiplicative_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.coe_toMultiplicative_range\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">coe_toMultiplicative_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A' : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">A'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range\">MonoidHom.range</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">AddMonoidHom.toMultiplicative</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">AddSubgroup.toSubgroup</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2778-L2779","name":"MonoidHom.coe_toAdditive_range","line":2778,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.coe_toAdditive_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.coe_toAdditive_range\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">coe_toAdditive_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">MonoidHom.toAdditive</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Subgroup.toAddSubgroup</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range\">MonoidHom.range</a> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2768-L2773","name":"MonoidHom.subgroupOf_range_eq_of_le","line":2768,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.subgroupOf_range_eq_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.subgroupOf_range_eq_of_le\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">subgroupOf_range_eq_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₁ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₂ : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range\">MonoidHom.range</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range\">MonoidHom.range</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range\">MonoidHom.range</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#MonoidHom.codRestrict\">MonoidHom.codRestrict</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span> <span class=\"fn\">(_ : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">G₁</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2767-L2767","name":"AddMonoidHom.addSubgroupOf_range_eq_of_le","line":2767,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.addSubgroupOf_range_eq_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.addSubgroupOf_range_eq_of_le\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">addSubgroupOf_range_eq_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₁ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₂ : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddMonoidHom.codRestrict\">AddMonoidHom.codRestrict</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span> <span class=\"fn\">(_ : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">G₁</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2761-L2763","name":"Subgroup.inclusion_range","line":2761,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.inclusion_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.inclusion_range\"><span class=\"name\">Subgroup</span>.<span class=\"name\">inclusion_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_le : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range\">MonoidHom.range</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.inclusion\">Subgroup.inclusion</a> <span class=\"fn\">h_le</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2760-L2760","name":"AddSubgroup.inclusion_range","line":2760,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.inclusion_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.inclusion_range\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">inclusion_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_le : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.inclusion\">AddSubgroup.inclusion</a> <span class=\"fn\">h_le</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2753-L2756","name":"Subgroup.subtype_range","line":2753,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subtype_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subtype_range\"><span class=\"name\">Subgroup</span>.<span class=\"name\">subtype_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range\">MonoidHom.range</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subtype\">Subgroup.subtype</a> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2752-L2752","name":"AddSubgroup.subtype_range","line":2752,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.subtype_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.subtype_range\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">subtype_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.subtype\">AddSubgroup.subtype</a> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2747-L2748","name":"MonoidHom.range_one","line":2747,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range_one\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">range_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range\">MonoidHom.range</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2746-L2746","name":"AddMonoidHom.range_zero","line":2746,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range_zero\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">range_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2740-L2742","name":"MonoidHom.range_top_of_surjective","line":2740,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range_top_of_surjective","doc":"The range of a surjective monoid homomorphism is the whole of the codomain. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range_top_of_surjective\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">range_top_of_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range\">MonoidHom.range</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2738-L2739","name":"AddMonoidHom.range_top_of_surjective","line":2738,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range_top_of_surjective","doc":"The range of a surjective `AddMonoid` homomorphism is the whole of the codomain."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range_top_of_surjective\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">range_top_of_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2731-L2733","name":"MonoidHom.range_top_iff_surjective","line":2731,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range_top_iff_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range_top_iff_surjective\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">range_top_iff_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range\">MonoidHom.range</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2730-L2730","name":"AddMonoidHom.range_top_iff_surjective","line":2730,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range_top_iff_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range_top_iff_surjective\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">range_top_iff_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2725-L2726","name":"MonoidHom.map_range","line":2725,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.map_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.map_range\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">map_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range\">MonoidHom.range</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range\">MonoidHom.range</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.comp\">MonoidHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2724-L2724","name":"AddMonoidHom.map_range","line":2724,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.map_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.map_range\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">map_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2721-L2722","name":"MonoidHom.rangeRestrict_injective_iff","line":2721,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.rangeRestrict_injective_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.rangeRestrict_injective_iff\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">rangeRestrict_injective_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.rangeRestrict\">MonoidHom.rangeRestrict</a> <span class=\"fn\">f</span></span>)</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2720-L2720","name":"AddMonoidHom.rangeRestrict_injective_iff","line":2720,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.rangeRestrict_injective_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.rangeRestrict_injective_iff\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">rangeRestrict_injective_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.rangeRestrict\">AddMonoidHom.rangeRestrict</a> <span class=\"fn\">f</span></span>)</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2715-L2716","name":"MonoidHom.rangeRestrict_surjective","line":2715,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.rangeRestrict_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.rangeRestrict_surjective\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">rangeRestrict_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.rangeRestrict\">MonoidHom.rangeRestrict</a> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2714-L2714","name":"AddMonoidHom.rangeRestrict_surjective","line":2714,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.rangeRestrict_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.rangeRestrict_surjective\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">rangeRestrict_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.rangeRestrict\">AddMonoidHom.rangeRestrict</a> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2714-L2714","name":"AddMonoidHom.rangeRestrict_surjective.match_1","line":2714,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.rangeRestrict_surjective.match_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.rangeRestrict_surjective.match_1\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">rangeRestrict_surjective</span>.<span class=\"name\">match_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(motive : <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">f</span></span>)</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">f</span></span>)</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">g</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">g</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\">∃ (y : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">g</span></span></span></span>)</span> }</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2709-L2710","name":"MonoidHom.subtype_comp_rangeRestrict","line":2709,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.subtype_comp_rangeRestrict","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.subtype_comp_rangeRestrict\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">subtype_comp_rangeRestrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.comp\">MonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subtype\">Subgroup.subtype</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range\">MonoidHom.range</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.rangeRestrict\">MonoidHom.rangeRestrict</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2708-L2708","name":"AddMonoidHom.subtype_comp_rangeRestrict","line":2708,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.subtype_comp_rangeRestrict","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.subtype_comp_rangeRestrict\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">subtype_comp_rangeRestrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.subtype\">AddSubgroup.subtype</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.rangeRestrict\">AddMonoidHom.rangeRestrict</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2702-L2704","name":"MonoidHom.coe_comp_rangeRestrict","line":2702,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.coe_comp_rangeRestrict","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.coe_comp_rangeRestrict\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">coe_comp_rangeRestrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Subtype.val</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.rangeRestrict\">MonoidHom.rangeRestrict</a> <span class=\"fn\">f</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2701-L2701","name":"AddMonoidHom.coe_comp_rangeRestrict","line":2701,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.coe_comp_rangeRestrict","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.coe_comp_rangeRestrict\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">coe_comp_rangeRestrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Subtype.val</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.rangeRestrict\">AddMonoidHom.rangeRestrict</a> <span class=\"fn\">f</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2696-L2697","name":"MonoidHom.coe_rangeRestrict","line":2696,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.coe_rangeRestrict","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.coe_rangeRestrict\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">coe_rangeRestrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.rangeRestrict\">MonoidHom.rangeRestrict</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2695-L2695","name":"AddMonoidHom.coe_rangeRestrict","line":2695,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.coe_rangeRestrict","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.coe_rangeRestrict\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">coe_rangeRestrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.rangeRestrict\">AddMonoidHom.rangeRestrict</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2690-L2691","name":"MonoidHom.rangeRestrict","line":2690,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.rangeRestrict","doc":"The canonical surjective group homomorphism `G →* f(G)` induced by a group\nhomomorphism `G →* N`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.rangeRestrict\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">rangeRestrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range\">MonoidHom.range</a> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2687-L2689","name":"AddMonoidHom.rangeRestrict.proof_1","line":2687,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.rangeRestrict.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.rangeRestrict.proof_1\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">rangeRestrict</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>)</span> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2687-L2689","name":"AddMonoidHom.rangeRestrict","line":2687,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.rangeRestrict","doc":"The canonical surjective `AddGroup` homomorphism `G →+ f(G)` induced by a group\nhomomorphism `G →+ N`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.rangeRestrict\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">rangeRestrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2687-L2689","name":"AddMonoidHom.rangeRestrict.proof_2","line":2687,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.rangeRestrict.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.rangeRestrict.proof_2\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">rangeRestrict</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (y : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2679-L2681","name":"MonoidHom.restrict_range","line":2679,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.restrict_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.restrict_range\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">restrict_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range\">MonoidHom.range</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#MonoidHom.restrict\">MonoidHom.restrict</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2678-L2678","name":"AddMonoidHom.restrict_range","line":2678,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.restrict_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.restrict_range\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">restrict_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddMonoidHom.restrict\">AddMonoidHom.restrict</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2674-L2674","name":"MonoidHom.range_eq_map","line":2674,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range_eq_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range_eq_map\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">range_eq_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range\">MonoidHom.range</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2673-L2673","name":"AddMonoidHom.range_eq_map","line":2673,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range_eq_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range_eq_map\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">range_eq_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2668-L2669","name":"MonoidHom.mem_range","line":2668,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.mem_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.mem_range\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">mem_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range\">MonoidHom.range</a> <span class=\"fn\">f</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (x : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2667-L2667","name":"AddMonoidHom.mem_range","line":2667,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.mem_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.mem_range\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">mem_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">f</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (x : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2662-L2663","name":"MonoidHom.coe_range","line":2662,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.coe_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.coe_range\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">coe_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range\">MonoidHom.range</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2661-L2661","name":"AddMonoidHom.coe_range","line":2661,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.coe_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.coe_range\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">coe_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2656-L2657","name":"MonoidHom.range","line":2656,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range","doc":"The range of a monoid homomorphism from a group is a subgroup. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2655-L2655","name":"AddMonoidHom.range.proof_1","line":2655,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range.proof_1\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">range</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">Set.univ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2655-L2655","name":"AddMonoidHom.range","line":2655,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range","doc":"The range of an `AddMonoidHom` from an `AddGroup` is an `AddSubgroup`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2642-L2643","name":"Subgroup.normalCore_idempotent","line":2642,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalCore_idempotent","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalCore_idempotent\"><span class=\"name\">Subgroup</span>.<span class=\"name\">normalCore_idempotent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalCore\">Subgroup.normalCore</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalCore\">Subgroup.normalCore</a> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalCore\">Subgroup.normalCore</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2637-L2638","name":"Subgroup.normalCore_eq_self","line":2637,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalCore_eq_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalCore_eq_self\"><span class=\"name\">Subgroup</span>.<span class=\"name\">normalCore_eq_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalCore\">Subgroup.normalCore</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2628-L2633","name":"Subgroup.normalCore_eq_iSup","line":2628,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalCore_eq_iSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalCore_eq_iSup\"><span class=\"name\">Subgroup</span>.<span class=\"name\">normalCore_eq_iSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalCore\">Subgroup.normalCore</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨆ (N : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>), <span class=\"fn\">⨆ (_ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">N</span></span>), <span class=\"fn\">⨆ (_ : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">H</span></span>), <span class=\"fn\">N</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2624-L2625","name":"Subgroup.normalCore_mono","line":2624,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalCore_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalCore_mono\"><span class=\"name\">Subgroup</span>.<span class=\"name\">normalCore_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalCore\">Subgroup.normalCore</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalCore\">Subgroup.normalCore</a> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2619-L2621","name":"Subgroup.normal_le_normalCore","line":2619,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normal_le_normalCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normal_le_normalCore\"><span class=\"name\">Subgroup</span>.<span class=\"name\">normal_le_normalCore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hN : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalCore\">Subgroup.normalCore</a> <span class=\"fn\">H</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2614-L2616","name":"Subgroup.normalCore_normal","line":2614,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalCore_normal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalCore_normal\"><span class=\"name\">Subgroup</span>.<span class=\"name\">normalCore_normal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalCore\">Subgroup.normalCore</a> <span class=\"fn\">H</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2609-L2611","name":"Subgroup.normalCore_le","line":2609,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalCore_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalCore_le\"><span class=\"name\">Subgroup</span>.<span class=\"name\">normalCore_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalCore\">Subgroup.normalCore</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2602-L2606","name":"Subgroup.normalCore","line":2602,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalCore","doc":"The normal core of a subgroup `H` is the largest normal subgroup of `G` contained in `H`,\nas shown by `Subgroup.normalCore_eq_iSup`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalCore\"><span class=\"name\">Subgroup</span>.<span class=\"name\">normalCore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2595-L2597","name":"Subgroup.normalClosure_closure_eq_normalClosure","line":2595,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure_closure_eq_normalClosure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure_closure_eq_normalClosure\"><span class=\"name\">Subgroup</span>.<span class=\"name\">normalClosure_closure_eq_normalClosure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure\">Subgroup.normalClosure</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">s</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure\">Subgroup.normalClosure</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2590-L2591","name":"Subgroup.closure_le_normalClosure","line":2590,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_le_normalClosure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_le_normalClosure\"><span class=\"name\">Subgroup</span>.<span class=\"name\">closure_le_normalClosure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure\">Subgroup.normalClosure</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2586-L2587","name":"Subgroup.normalClosure_idempotent","line":2586,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure_idempotent","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure_idempotent\"><span class=\"name\">Subgroup</span>.<span class=\"name\">normalClosure_idempotent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure\">Subgroup.normalClosure</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure\">Subgroup.normalClosure</a> <span class=\"fn\">s</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure\">Subgroup.normalClosure</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2581-L2582","name":"Subgroup.normalClosure_eq_self","line":2581,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure_eq_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure_eq_self\"><span class=\"name\">Subgroup</span>.<span class=\"name\">normalClosure_eq_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure\">Subgroup.normalClosure</a> <span class=\"fn\">↑<span class=\"fn\">H</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2573-L2577","name":"Subgroup.normalClosure_eq_iInf","line":2573,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure_eq_iInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure_eq_iInf\"><span class=\"name\">Subgroup</span>.<span class=\"name\">normalClosure_eq_iInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure\">Subgroup.normalClosure</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ (N : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>), <span class=\"fn\">⨅ (_ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">N</span></span>), <span class=\"fn\">⨅ (_ : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">↑<span class=\"fn\">N</span></span></span>), <span class=\"fn\">N</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2569-L2570","name":"Subgroup.normalClosure_mono","line":2569,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure_mono\"><span class=\"name\">Subgroup</span>.<span class=\"name\">normalClosure_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure\">Subgroup.normalClosure</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure\">Subgroup.normalClosure</a> <span class=\"fn\">t</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2565-L2566","name":"Subgroup.normalClosure_subset_iff","line":2565,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure_subset_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure_subset_iff\"><span class=\"name\">Subgroup</span>.<span class=\"name\">normalClosure_subset_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">↑<span class=\"fn\">N</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure\">Subgroup.normalClosure</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">N</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2556-L2562","name":"Subgroup.normalClosure_le_normal","line":2556,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure_le_normal","doc":"The normal closure of `s` is the smallest normal subgroup containing `s`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure_le_normal\"><span class=\"name\">Subgroup</span>.<span class=\"name\">normalClosure_le_normal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">↑<span class=\"fn\">N</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure\">Subgroup.normalClosure</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2544-L2552","name":"Subgroup.normalClosure_normal","line":2544,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure_normal","doc":"The normal closure of `s` is a normal subgroup. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure_normal\"><span class=\"name\">Subgroup</span>.<span class=\"name\">normalClosure_normal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure\">Subgroup.normalClosure</a> <span class=\"fn\">s</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2539-L2540","name":"Subgroup.le_normalClosure","line":2539,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.le_normalClosure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.le_normalClosure\"><span class=\"name\">Subgroup</span>.<span class=\"name\">le_normalClosure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure\">Subgroup.normalClosure</a> <span class=\"fn\">↑<span class=\"fn\">H</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2535-L2536","name":"Subgroup.subset_normalClosure","line":2535,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subset_normalClosure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subset_normalClosure\"><span class=\"name\">Subgroup</span>.<span class=\"name\">subset_normalClosure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure\">Subgroup.normalClosure</a> <span class=\"fn\">s</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2531-L2532","name":"Subgroup.conjugatesOfSet_subset_normalClosure","line":2531,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.conjugatesOfSet_subset_normalClosure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.conjugatesOfSet_subset_normalClosure\"><span class=\"name\">Subgroup</span>.<span class=\"name\">conjugatesOfSet_subset_normalClosure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Group.conjugatesOfSet\">Group.conjugatesOfSet</a> <span class=\"fn\">s</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure\">Subgroup.normalClosure</a> <span class=\"fn\">s</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2527-L2528","name":"Subgroup.normalClosure","line":2527,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure","doc":"The normal closure of a set `s` is the subgroup closure of all the conjugates of\nelements of `s`. It is the smallest normal subgroup containing `s`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure\"><span class=\"name\">Subgroup</span>.<span class=\"name\">normalClosure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2511-L2514","name":"Group.conj_mem_conjugatesOfSet","line":2511,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Group.conj_mem_conjugatesOfSet","doc":"The set of conjugates of `s` is closed under conjugation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Group.conj_mem_conjugatesOfSet\"><span class=\"name\">Group</span>.<span class=\"name\">conj_mem_conjugatesOfSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Group.conjugatesOfSet\">Group.conjugatesOfSet</a> <span class=\"fn\">s</span></span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">c</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Group.conjugatesOfSet\">Group.conjugatesOfSet</a> <span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2505-L2507","name":"Group.conjugatesOfSet_subset","line":2505,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Group.conjugatesOfSet_subset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Group.conjugatesOfSet_subset\"><span class=\"name\">Group</span>.<span class=\"name\">conjugatesOfSet_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">↑<span class=\"fn\">N</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Group.conjugatesOfSet\">Group.conjugatesOfSet</a> <span class=\"fn\">s</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">↑<span class=\"fn\">N</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2498-L2502","name":"Group.conjugates_subset_normal","line":2498,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Group.conjugates_subset_normal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Group.conjugates_subset_normal\"><span class=\"name\">Group</span>.<span class=\"name\">conjugates_subset_normal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tn : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Conj.html#conjugatesOf\">conjugatesOf</a> <span class=\"fn\">a</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">↑<span class=\"fn\">N</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2494-L2495","name":"Group.conjugatesOfSet_mono","line":2494,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Group.conjugatesOfSet_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Group.conjugatesOfSet_mono\"><span class=\"name\">Group</span>.<span class=\"name\">conjugatesOfSet_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Group.conjugatesOfSet\">Group.conjugatesOfSet</a> <span class=\"fn\">s</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Group.conjugatesOfSet\">Group.conjugatesOfSet</a> <span class=\"fn\">t</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2490-L2491","name":"Group.subset_conjugatesOfSet","line":2490,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Group.subset_conjugatesOfSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Group.subset_conjugatesOfSet\"><span class=\"name\">Group</span>.<span class=\"name\">subset_conjugatesOfSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Group.conjugatesOfSet\">Group.conjugatesOfSet</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2486-L2487","name":"Group.mem_conjugatesOfSet_iff","line":2486,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Group.mem_conjugatesOfSet_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Group.mem_conjugatesOfSet_iff\"><span class=\"name\">Group</span>.<span class=\"name\">mem_conjugatesOfSet_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Group.conjugatesOfSet\">Group.conjugatesOfSet</a> <span class=\"fn\">s</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ a ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Conj.html#IsConj\">IsConj</a> <span class=\"fn\">a</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2482-L2483","name":"Group.conjugatesOfSet","line":2482,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Group.conjugatesOfSet","doc":"Given a set `s`, `conjugatesOfSet s` is the set of all conjugates of\nthe elements of `s`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Group.conjugatesOfSet\"><span class=\"name\">Group</span>.<span class=\"name\">conjugatesOfSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2469-L2470","name":"Subgroup.le_centralizer","line":2469,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.le_centralizer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.le_centralizer\"><span class=\"name\">Subgroup</span>.<span class=\"name\">le_centralizer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.IsCommutative\">Subgroup.IsCommutative</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.centralizer\">Subgroup.centralizer</a> <span class=\"fn\">↑<span class=\"fn\">H</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2468-L2468","name":"AddSubgroup.le_centralizer","line":2468,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.le_centralizer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.le_centralizer\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">le_centralizer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.IsCommutative\">AddSubgroup.IsCommutative</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.centralizer\">AddSubgroup.centralizer</a> <span class=\"fn\">↑<span class=\"fn\">H</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2462-L2464","name":"Subgroup.le_centralizer_iff_isCommutative","line":2462,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.le_centralizer_iff_isCommutative","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.le_centralizer_iff_isCommutative\"><span class=\"name\">Subgroup</span>.<span class=\"name\">le_centralizer_iff_isCommutative</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.centralizer\">Subgroup.centralizer</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.IsCommutative\">Subgroup.IsCommutative</a> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2461-L2461","name":"AddSubgroup.le_centralizer_iff_isCommutative","line":2461,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.le_centralizer_iff_isCommutative","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.le_centralizer_iff_isCommutative\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">le_centralizer_iff_isCommutative</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.centralizer\">AddSubgroup.centralizer</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.IsCommutative\">AddSubgroup.IsCommutative</a> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2456-L2457","name":"Subgroup.subgroupOf_isCommutative","line":2456,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf_isCommutative","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf_isCommutative\"><span class=\"name\">Subgroup</span>.<span class=\"name\">subgroupOf_isCommutative</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.IsCommutative\">Subgroup.IsCommutative</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.IsCommutative\">Subgroup.IsCommutative</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2455-L2455","name":"AddSubgroup.addSubgroupOf_isCommutative","line":2455,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf_isCommutative","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf_isCommutative\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">addSubgroupOf_isCommutative</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.IsCommutative\">AddSubgroup.IsCommutative</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.IsCommutative\">AddSubgroup.IsCommutative</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2444-L2451","name":"Subgroup.comap_injective_isCommutative","line":2444,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_injective_isCommutative","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_injective_isCommutative\"><span class=\"name\">Subgroup</span>.<span class=\"name\">comap_injective_isCommutative</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G'</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.IsCommutative\">Subgroup.IsCommutative</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.IsCommutative\">Subgroup.IsCommutative</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2443-L2443","name":"AddSubgroup.comap_injective_isCommutative","line":2443,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_injective_isCommutative","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_injective_isCommutative\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">comap_injective_isCommutative</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G'</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.IsCommutative\">AddSubgroup.IsCommutative</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.IsCommutative\">AddSubgroup.IsCommutative</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2435-L2439","name":"Subgroup.map_isCommutative","line":2435,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_isCommutative","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_isCommutative\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_isCommutative</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.IsCommutative\">Subgroup.IsCommutative</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.IsCommutative\">Subgroup.IsCommutative</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2434-L2434","name":"AddSubgroup.map_isCommutative","line":2434,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_isCommutative","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_isCommutative\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_isCommutative</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.IsCommutative\">AddSubgroup.IsCommutative</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.IsCommutative\">AddSubgroup.IsCommutative</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2430-L2431","name":"Subgroup.center.isCommutative","line":2430,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.center.isCommutative","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.center.isCommutative\"><span class=\"name\">Subgroup</span>.<span class=\"name\">center</span>.<span class=\"name\">isCommutative</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.IsCommutative\">Subgroup.IsCommutative</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.center\">Subgroup.center</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2425-L2426","name":"Subgroup.IsCommutative.commGroup","line":2425,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.IsCommutative.commGroup","doc":"A commutative subgroup is commutative. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.IsCommutative.commGroup\"><span class=\"name\">Subgroup</span>.<span class=\"name\">IsCommutative</span>.<span class=\"name\">commGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.IsCommutative\">Subgroup.IsCommutative</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2424-L2424","name":"AddSubgroup.IsCommutative.addCommGroup.proof_2","line":2424,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.IsCommutative.addCommGroup.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.IsCommutative.addCommGroup.proof_2\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">IsCommutative</span>.<span class=\"name\">addCommGroup</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.IsCommutative\">AddSubgroup.IsCommutative</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2424-L2424","name":"AddSubgroup.IsCommutative.addCommGroup","line":2424,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.IsCommutative.addCommGroup","doc":"A commutative subgroup is commutative."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.IsCommutative.addCommGroup\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">IsCommutative</span>.<span class=\"name\">addCommGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.IsCommutative\">AddSubgroup.IsCommutative</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2424-L2424","name":"AddSubgroup.IsCommutative.addCommGroup.proof_1","line":2424,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.IsCommutative.addCommGroup.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.IsCommutative.addCommGroup.proof_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">IsCommutative</span>.<span class=\"name\">addCommGroup</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2416-L2416","name":"AddSubgroup.IsCommutative.is_comm","line":2416,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.IsCommutative.is_comm","doc":"`+` is commutative on `H` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.IsCommutative.is_comm\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">IsCommutative</span>.<span class=\"name\">is_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.IsCommutative\">AddSubgroup.IsCommutative</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Algebra/Classes.html#IsCommutative\">IsCommutative</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2414-L2414","name":"AddSubgroup.IsCommutative.mk","line":2414,"kind":"ctor","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.IsCommutative.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.IsCommutative.mk\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">IsCommutative</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(is_comm : <span class=\"fn\"><a href=\"./Mathlib/Init/Algebra/Classes.html#IsCommutative\">IsCommutative</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.IsCommutative\">AddSubgroup.IsCommutative</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2414-L2416","name":"AddSubgroup.IsCommutative","line":2414,"kind":"class","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.IsCommutative","doc":"Commutativity of an additive subgroup "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.IsCommutative\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">IsCommutative</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2408-L2408","name":"Subgroup.IsCommutative.is_comm","line":2408,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.IsCommutative.is_comm","doc":"`*` is commutative on `H` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.IsCommutative.is_comm\"><span class=\"name\">Subgroup</span>.<span class=\"name\">IsCommutative</span>.<span class=\"name\">is_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.IsCommutative\">Subgroup.IsCommutative</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Algebra/Classes.html#IsCommutative\">IsCommutative</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2406-L2406","name":"Subgroup.IsCommutative.mk","line":2406,"kind":"ctor","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.IsCommutative.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.IsCommutative.mk\"><span class=\"name\">Subgroup</span>.<span class=\"name\">IsCommutative</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(is_comm : <span class=\"fn\"><a href=\"./Mathlib/Init/Algebra/Classes.html#IsCommutative\">IsCommutative</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x_1</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.IsCommutative\">Subgroup.IsCommutative</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2406-L2408","name":"Subgroup.IsCommutative","line":2406,"kind":"class","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.IsCommutative","doc":"Commutativity of a subgroup "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.IsCommutative\"><span class=\"name\">Subgroup</span>.<span class=\"name\">IsCommutative</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2395-L2399","name":"Subgroup.Centralizer.characteristic","line":2395,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Centralizer.characteristic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Centralizer.characteristic\"><span class=\"name\">Subgroup</span>.<span class=\"name\">Centralizer</span>.<span class=\"name\">characteristic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hH : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Characteristic\">Subgroup.Characteristic</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Characteristic\">Subgroup.Characteristic</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.centralizer\">Subgroup.centralizer</a> <span class=\"fn\">↑<span class=\"fn\">H</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2394-L2394","name":"AddSubgroup.Centralizer.characteristic","line":2394,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Centralizer.characteristic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Centralizer.characteristic\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">Centralizer</span>.<span class=\"name\">characteristic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hH : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Characteristic\">AddSubgroup.Characteristic</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Characteristic\">AddSubgroup.Characteristic</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.centralizer\">AddSubgroup.centralizer</a> <span class=\"fn\">↑<span class=\"fn\">H</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2389-L2390","name":"Subgroup.centralizer_eq_top_iff_subset","line":2389,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.centralizer_eq_top_iff_subset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.centralizer_eq_top_iff_subset\"><span class=\"name\">Subgroup</span>.<span class=\"name\">centralizer_eq_top_iff_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.centralizer\">Subgroup.centralizer</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.center\">Subgroup.center</a> <span class=\"fn\">G</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2388-L2388","name":"AddSubgroup.centralizer_eq_top_iff_subset","line":2388,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.centralizer_eq_top_iff_subset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.centralizer_eq_top_iff_subset\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">centralizer_eq_top_iff_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.centralizer\">AddSubgroup.centralizer</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.center\">AddSubgroup.center</a> <span class=\"fn\">G</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2383-L2384","name":"Subgroup.centralizer_le","line":2383,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.centralizer_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.centralizer_le\"><span class=\"name\">Subgroup</span>.<span class=\"name\">centralizer_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.centralizer\">Subgroup.centralizer</a> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.centralizer\">Subgroup.centralizer</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2382-L2382","name":"AddSubgroup.centralizer_le","line":2382,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.centralizer_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.centralizer_le\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">centralizer_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.centralizer\">AddSubgroup.centralizer</a> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.centralizer\">AddSubgroup.centralizer</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2377-L2378","name":"Subgroup.center_le_centralizer","line":2377,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.center_le_centralizer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.center_le_centralizer\"><span class=\"name\">Subgroup</span>.<span class=\"name\">center_le_centralizer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.center\">Subgroup.center</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.centralizer\">Subgroup.centralizer</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2376-L2376","name":"AddSubgroup.center_le_centralizer","line":2376,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.center_le_centralizer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.center_le_centralizer\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">center_le_centralizer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.center\">AddSubgroup.center</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.centralizer\">AddSubgroup.centralizer</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2371-L2372","name":"Subgroup.le_centralizer_iff","line":2371,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.le_centralizer_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.le_centralizer_iff\"><span class=\"name\">Subgroup</span>.<span class=\"name\">le_centralizer_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.centralizer\">Subgroup.centralizer</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.centralizer\">Subgroup.centralizer</a> <span class=\"fn\">↑<span class=\"fn\">H</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2370-L2370","name":"AddSubgroup.le_centralizer_iff","line":2370,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.le_centralizer_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.le_centralizer_iff\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">le_centralizer_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.centralizer\">AddSubgroup.centralizer</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.centralizer\">AddSubgroup.centralizer</a> <span class=\"fn\">↑<span class=\"fn\">H</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2365-L2366","name":"Subgroup.centralizer_univ","line":2365,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.centralizer_univ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.centralizer_univ\"><span class=\"name\">Subgroup</span>.<span class=\"name\">centralizer_univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.centralizer\">Subgroup.centralizer</a> <span class=\"fn\">Set.univ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.center\">Subgroup.center</a> <span class=\"fn\">G</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2364-L2364","name":"AddSubgroup.centralizer_univ","line":2364,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.centralizer_univ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.centralizer_univ\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">centralizer_univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.centralizer\">AddSubgroup.centralizer</a> <span class=\"fn\">Set.univ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.center\">AddSubgroup.center</a> <span class=\"fn\">G</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2358-L2360","name":"Subgroup.mem_centralizer_iff_commutator_eq_one","line":2358,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_centralizer_iff_commutator_eq_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_centralizer_iff_commutator_eq_one\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_centralizer_iff_commutator_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.centralizer\">Subgroup.centralizer</a> <span class=\"fn\">s</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">h</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">h</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">g</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2357-L2357","name":"AddSubgroup.mem_centralizer_iff_commutator_eq_zero","line":2357,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_centralizer_iff_commutator_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_centralizer_iff_commutator_eq_zero\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_centralizer_iff_commutator_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.centralizer\">AddSubgroup.centralizer</a> <span class=\"fn\">s</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">h</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">h</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">g</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2352-L2353","name":"Subgroup.mem_centralizer_iff","line":2352,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_centralizer_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_centralizer_iff\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_centralizer_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.centralizer\">Subgroup.centralizer</a> <span class=\"fn\">s</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">h</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">h</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2351-L2351","name":"AddSubgroup.mem_centralizer_iff","line":2351,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_centralizer_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_centralizer_iff\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_centralizer_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.centralizer\">AddSubgroup.centralizer</a> <span class=\"fn\">s</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">h</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">h</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2344-L2347","name":"Subgroup.centralizer","line":2344,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.centralizer","doc":"The `centralizer` of `H` is the subgroup of `g : G` commuting with every `h : H`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.centralizer\"><span class=\"name\">Subgroup</span>.<span class=\"name\">centralizer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2342-L2343","name":"AddSubgroup.centralizer.proof_1","line":2342,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.centralizer.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.centralizer.proof_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">centralizer</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">a </span>b : <span class=\"fn\">G</span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Centralizer.html#AddSubmonoid.centralizer\">AddSubmonoid.centralizer</a> <span class=\"fn\">s</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span> →\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Centralizer.html#AddSubmonoid.centralizer\">AddSubmonoid.centralizer</a> <span class=\"fn\">s</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span> →\n      <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Centralizer.html#AddSubmonoid.centralizer\">AddSubmonoid.centralizer</a> <span class=\"fn\">s</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2342-L2343","name":"AddSubgroup.centralizer.proof_2","line":2342,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.centralizer.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.centralizer.proof_2\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">centralizer</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Centralizer.html#AddSubmonoid.centralizer\">AddSubmonoid.centralizer</a> <span class=\"fn\">s</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2342-L2343","name":"AddSubgroup.centralizer","line":2342,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.centralizer","doc":"The `centralizer` of `H` is the additive subgroup of `g : G` commuting with every `h : H`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.centralizer\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">centralizer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2330-L2332","name":"Subgroup.NormalizerCondition.normal_of_coatom","line":2330,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.NormalizerCondition.normal_of_coatom","doc":"In a group that satisfies the normalizer condition, every maximal subgroup is normal "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.NormalizerCondition.normal_of_coatom\"><span class=\"name\">Subgroup</span>.<span class=\"name\">NormalizerCondition</span>.<span class=\"name\">normal_of_coatom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hnc : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#NormalizerCondition\">NormalizerCondition</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hmax : <span class=\"fn\"><a href=\"./Mathlib/Order/Atoms.html#IsCoatom\">IsCoatom</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2320-L2324","name":"normalizerCondition_iff_only_full_group_self_normalizing","line":2320,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#normalizerCondition_iff_only_full_group_self_normalizing","doc":"Alternative phrasing of the normalizer condition: Only the full group is self-normalizing.\nThis may be easier to work with, as it avoids inequalities and negations.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#normalizerCondition_iff_only_full_group_self_normalizing\"><span class=\"name\">normalizerCondition_iff_only_full_group_self_normalizing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#NormalizerCondition\">NormalizerCondition</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalizer\">Subgroup.normalizer</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">H</span></span> → <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2312-L2313","name":"NormalizerCondition","line":2312,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#NormalizerCondition","doc":"Every proper subgroup `H` of `G` is a proper normal subgroup of the normalizer of `H` in `G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#NormalizerCondition\"><span class=\"name\">NormalizerCondition</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2295-L2305","name":"Subgroup.le_normalizer_map","line":2295,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.le_normalizer_map","doc":"The image of the normalizer is contained in the normalizer of the image. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.le_normalizer_map\"><span class=\"name\">Subgroup</span>.<span class=\"name\">le_normalizer_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalizer\">Subgroup.normalizer</a> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalizer\">Subgroup.normalizer</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2294-L2294","name":"AddSubgroup.le_normalizer_map","line":2294,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.le_normalizer_map","doc":"The image of the normalizer is contained in the normalizer of the image."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.le_normalizer_map\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">le_normalizer_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer\">AddSubgroup.normalizer</a> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer\">AddSubgroup.normalizer</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2285-L2289","name":"Subgroup.le_normalizer_comap","line":2285,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.le_normalizer_comap","doc":"The preimage of the normalizer is contained in the normalizer of the preimage. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.le_normalizer_comap\"><span class=\"name\">Subgroup</span>.<span class=\"name\">le_normalizer_comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalizer\">Subgroup.normalizer</a> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalizer\">Subgroup.normalizer</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2284-L2284","name":"AddSubgroup.le_normalizer_comap","line":2284,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.le_normalizer_comap","doc":"The preimage of the normalizer is contained in the normalizer of the preimage."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.le_normalizer_comap\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">le_normalizer_comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer\">AddSubgroup.normalizer</a> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer\">AddSubgroup.normalizer</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2273-L2277","name":"Subgroup.le_normalizer_of_normal","line":2273,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.le_normalizer_of_normal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.le_normalizer_of_normal\"><span class=\"name\">Subgroup</span>.<span class=\"name\">le_normalizer_of_normal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hK : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(HK : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalizer\">Subgroup.normalizer</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2272-L2272","name":"AddSubgroup.le_normalizer_of_normal","line":2272,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.le_normalizer_of_normal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.le_normalizer_of_normal\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">le_normalizer_of_normal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hK : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(HK : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer\">AddSubgroup.normalizer</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2265-L2266","name":"Subgroup.center_le_normalizer","line":2265,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.center_le_normalizer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.center_le_normalizer\"><span class=\"name\">Subgroup</span>.<span class=\"name\">center_le_normalizer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.center\">Subgroup.center</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalizer\">Subgroup.normalizer</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2264-L2264","name":"AddSubgroup.center_le_normalizer","line":2264,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.center_le_normalizer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.center_le_normalizer\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">center_le_normalizer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.center\">AddSubgroup.center</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer\">AddSubgroup.normalizer</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2257-L2260","name":"Subgroup.normalizer_eq_top","line":2257,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalizer_eq_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalizer_eq_top\"><span class=\"name\">Subgroup</span>.<span class=\"name\">normalizer_eq_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalizer\">Subgroup.normalizer</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2256-L2256","name":"AddSubgroup.normalizer_eq_top","line":2256,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer_eq_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer_eq_top\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">normalizer_eq_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer\">AddSubgroup.normalizer</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2251-L2252","name":"Subgroup.normal_in_normalizer","line":2251,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normal_in_normalizer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normal_in_normalizer\"><span class=\"name\">Subgroup</span>.<span class=\"name\">normal_in_normalizer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalizer\">Subgroup.normalizer</a> <span class=\"fn\">H</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2250-L2250","name":"AddSubgroup.normal_in_normalizer","line":2250,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normal_in_normalizer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normal_in_normalizer\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">normal_in_normalizer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer\">AddSubgroup.normalizer</a> <span class=\"fn\">H</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2245-L2246","name":"Subgroup.le_normalizer","line":2245,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.le_normalizer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.le_normalizer\"><span class=\"name\">Subgroup</span>.<span class=\"name\">le_normalizer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalizer\">Subgroup.normalizer</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2244-L2244","name":"AddSubgroup.le_normalizer","line":2244,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.le_normalizer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.le_normalizer\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">le_normalizer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer\">AddSubgroup.normalizer</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2238-L2240","name":"Subgroup.mem_normalizer_iff'","line":2238,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_normalizer_iff'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_normalizer_iff'\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_normalizer_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalizer\">Subgroup.normalizer</a> <span class=\"fn\">H</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2237-L2237","name":"AddSubgroup.mem_normalizer_iff'","line":2237,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_normalizer_iff'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_normalizer_iff'\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_normalizer_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer\">AddSubgroup.normalizer</a> <span class=\"fn\">H</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2232-L2233","name":"Subgroup.mem_normalizer_iff''","line":2232,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_normalizer_iff''","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_normalizer_iff''\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_normalizer_iff''</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalizer\">Subgroup.normalizer</a> <span class=\"fn\">H</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">h</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2231-L2231","name":"AddSubgroup.mem_normalizer_iff''","line":2231,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_normalizer_iff''","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_normalizer_iff''\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_normalizer_iff''</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer\">AddSubgroup.normalizer</a> <span class=\"fn\">H</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">h</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2226-L2227","name":"Subgroup.mem_normalizer_iff","line":2226,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_normalizer_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_normalizer_iff\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_normalizer_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalizer\">Subgroup.normalizer</a> <span class=\"fn\">H</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">h</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">g</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2225-L2225","name":"AddSubgroup.mem_normalizer_iff","line":2225,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_normalizer_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_normalizer_iff\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_normalizer_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer\">AddSubgroup.normalizer</a> <span class=\"fn\">H</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">h</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">g</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2211-L2219","name":"Subgroup.setNormalizer","line":2211,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.setNormalizer","doc":"The `setNormalizer` of `S` is the subgroup of `G` whose elements satisfy `g*S*g⁻¹=S` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.setNormalizer\"><span class=\"name\">Subgroup</span>.<span class=\"name\">setNormalizer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2208-L2210","name":"AddSubgroup.setNormalizer.proof_2","line":2208,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.setNormalizer.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.setNormalizer.proof_2\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">setNormalizer</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">0</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2208-L2210","name":"AddSubgroup.setNormalizer","line":2208,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.setNormalizer","doc":"The `setNormalizer` of `S` is the subgroup of `G` whose elements satisfy\n`g+S-g=S`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.setNormalizer\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">setNormalizer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2208-L2210","name":"AddSubgroup.setNormalizer.proof_1","line":2208,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.setNormalizer.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.setNormalizer.proof_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">setNormalizer</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">b</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2208-L2210","name":"AddSubgroup.setNormalizer.proof_3","line":2208,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.setNormalizer.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.setNormalizer.proof_3\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">setNormalizer</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span></span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2193-L2201","name":"Subgroup.normalizer","line":2193,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalizer","doc":"The `normalizer` of `H` is the largest subgroup of `G` inside which `H` is normal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalizer\"><span class=\"name\">Subgroup</span>.<span class=\"name\">normalizer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2192-L2192","name":"AddSubgroup.normalizer.proof_1","line":2192,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer.proof_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">normalizer</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">b</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2192-L2192","name":"AddSubgroup.normalizer.proof_3","line":2192,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer.proof_3\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">normalizer</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span></span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2192-L2192","name":"AddSubgroup.normalizer.proof_2","line":2192,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer.proof_2\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">normalizer</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">0</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2192-L2192","name":"AddSubgroup.normalizer","line":2192,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer","doc":"The `normalizer` of `H` is the largest subgroup of `G` inside which `H` is normal."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normalizer\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">normalizer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2177-L2184","name":"Group.commGroupOfCenterEqTop","line":2177,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Group.commGroupOfCenterEqTop","doc":"A group is commutative if the center is the whole group "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Group.commGroupOfCenterEqTop\"><span class=\"name\">Group</span>.<span class=\"name\">commGroupOfCenterEqTop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.center\">Subgroup.center</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2168-L2173","name":"CommGroup.center_eq_top","line":2168,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#CommGroup.center_eq_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#CommGroup.center_eq_top\"><span class=\"name\">CommGroup</span>.<span class=\"name\">center_eq_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.center\">Subgroup.center</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2159-L2164","name":"Subgroup.centerCharacteristic","line":2159,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.centerCharacteristic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.centerCharacteristic\"><span class=\"name\">Subgroup</span>.<span class=\"name\">centerCharacteristic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Characteristic\">Subgroup.Characteristic</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.center\">Subgroup.center</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2158-L2158","name":"AddSubgroup.centerCharacteristic","line":2158,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.centerCharacteristic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.centerCharacteristic\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">centerCharacteristic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Characteristic\">AddSubgroup.Characteristic</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.center\">AddSubgroup.center</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2154-L2155","name":"Subgroup.decidableMemCenter","line":2154,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.decidableMemCenter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.decidableMemCenter\"><span class=\"name\">Subgroup</span>.<span class=\"name\">decidableMemCenter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">G</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">g</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span></span></span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.center\">Subgroup.center</a> <span class=\"fn\">G</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2148-L2150","name":"Subgroup.mem_center_iff","line":2148,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_center_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_center_iff\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_center_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.center\">Subgroup.center</a> <span class=\"fn\">G</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">g</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2147-L2147","name":"AddSubgroup.mem_center_iff","line":2147,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_center_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_center_iff\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_center_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.center\">AddSubgroup.center</a> <span class=\"fn\">G</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">g</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2130-L2143","name":"Subgroup.centerUnitsEquivUnitsCenter","line":2130,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.centerUnitsEquivUnitsCenter","doc":"For a group with zero, the center of the units is the same as the units of the center. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.centerUnitsEquivUnitsCenter\"><span class=\"name\">Subgroup</span>.<span class=\"name\">centerUnitsEquivUnitsCenter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G₀ : <a href=\"./foundational_types.html\">Type</a> u_5)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#GroupWithZero\">GroupWithZero</a> <span class=\"fn\">G₀</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.center\">Subgroup.center</a> <span class=\"fn\"><span class=\"fn\">G₀</span><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span></span>)</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Center.html#Submonoid.center\">Submonoid.center</a> <span class=\"fn\">G₀</span></span>)</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2129-L2129","name":"Subgroup.val_centerUnitsEquivUnitsCenter_symm_apply_coe","line":2129,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.val_centerUnitsEquivUnitsCenter_symm_apply_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.val_centerUnitsEquivUnitsCenter_symm_apply_coe\"><span class=\"name\">Subgroup</span>.<span class=\"name\">val_centerUnitsEquivUnitsCenter_symm_apply_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G₀ : <a href=\"./foundational_types.html\">Type</a> u_5)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#GroupWithZero\">GroupWithZero</a> <span class=\"fn\">G₀</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(u : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Center.html#Submonoid.center\">Submonoid.center</a> <span class=\"fn\">G₀</span></span>)</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.symm\">MulEquiv.symm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.centerUnitsEquivUnitsCenter\">Subgroup.centerUnitsEquivUnitsCenter</a> <span class=\"fn\">G₀</span></span>)</span></span>)</span> <span class=\"fn\">u</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">u</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2129-L2129","name":"Subgroup.val_centerUnitsEquivUnitsCenter_apply_coe","line":2129,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.val_centerUnitsEquivUnitsCenter_apply_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.val_centerUnitsEquivUnitsCenter_apply_coe\"><span class=\"name\">Subgroup</span>.<span class=\"name\">val_centerUnitsEquivUnitsCenter_apply_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G₀ : <a href=\"./foundational_types.html\">Type</a> u_5)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#GroupWithZero\">GroupWithZero</a> <span class=\"fn\">G₀</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.center\">Subgroup.center</a> <span class=\"fn\"><span class=\"fn\">G₀</span><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.centerUnitsEquivUnitsCenter\">Subgroup.centerUnitsEquivUnitsCenter</a> <span class=\"fn\">G₀</span></span>)</span> <span class=\"fn\">a</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2123-L2124","name":"Subgroup.center_toSubmonoid","line":2123,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.center_toSubmonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.center_toSubmonoid\"><span class=\"name\">Subgroup</span>.<span class=\"name\">center_toSubmonoid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.center\">Subgroup.center</a> <span class=\"fn\">G</span></span>)</span>.toSubmonoid</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Center.html#Submonoid.center\">Submonoid.center</a> <span class=\"fn\">G</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2122-L2122","name":"AddSubgroup.center_toAddSubmonoid","line":2122,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.center_toAddSubmonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.center_toAddSubmonoid\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">center_toAddSubmonoid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.center\">AddSubgroup.center</a> <span class=\"fn\">G</span></span>)</span>.toAddSubmonoid</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Center.html#AddSubmonoid.center\">AddSubmonoid.center</a> <span class=\"fn\">G</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2117-L2118","name":"Subgroup.coe_center","line":2117,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_center","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_center\"><span class=\"name\">Subgroup</span>.<span class=\"name\">coe_center</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.center\">Subgroup.center</a> <span class=\"fn\">G</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subsemigroup/Center.html#Set.center\">Set.center</a> <span class=\"fn\">G</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2116-L2116","name":"AddSubgroup.coe_center","line":2116,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_center","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_center\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">coe_center</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.center\">AddSubgroup.center</a> <span class=\"fn\">G</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subsemigroup/Center.html#Set.addCenter\">Set.addCenter</a> <span class=\"fn\">G</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2109-L2112","name":"Subgroup.center","line":2109,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.center","doc":"The center of a group `G` is the set of elements that commute with everything in `G` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.center\"><span class=\"name\">Subgroup</span>.<span class=\"name\">center</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2106-L2108","name":"AddSubgroup.center","line":2106,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.center","doc":"The center of an additive group `G` is the set of elements that commute with\neverything in `G`"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.center\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">center</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2106-L2108","name":"AddSubgroup.center.proof_2","line":2106,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.center.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.center.proof_2\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">center</span>.<span class=\"name\">proof_2</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Center.html#AddSubmonoid.center\">AddSubmonoid.center</a> <span class=\"fn\">G</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2106-L2108","name":"AddSubgroup.center.proof_1","line":2106,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.center.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.center.proof_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">center</span>.<span class=\"name\">proof_1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">a </span>b : <span class=\"fn\">G</span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Center.html#AddSubmonoid.center\">AddSubmonoid.center</a> <span class=\"fn\">G</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span> →\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Center.html#AddSubmonoid.center\">AddSubmonoid.center</a> <span class=\"fn\">G</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Center.html#AddSubmonoid.center\">AddSubmonoid.center</a> <span class=\"fn\">G</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2098-L2099","name":"Subgroup.topCharacteristic","line":2098,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.topCharacteristic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.topCharacteristic\"><span class=\"name\">Subgroup</span>.<span class=\"name\">topCharacteristic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Characteristic\">Subgroup.Characteristic</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2097-L2097","name":"AddSubgroup.topCharacteristic","line":2097,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.topCharacteristic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.topCharacteristic\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">topCharacteristic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Characteristic\">AddSubgroup.Characteristic</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2092-L2093","name":"Subgroup.botCharacteristic","line":2092,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.botCharacteristic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.botCharacteristic\"><span class=\"name\">Subgroup</span>.<span class=\"name\">botCharacteristic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Characteristic\">Subgroup.Characteristic</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2091-L2091","name":"AddSubgroup.botCharacteristic","line":2091,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.botCharacteristic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.botCharacteristic\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">botCharacteristic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Characteristic\">AddSubgroup.Characteristic</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2085-L2087","name":"Subgroup.characteristic_iff_le_map","line":2085,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.characteristic_iff_le_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.characteristic_iff_le_map\"><span class=\"name\">Subgroup</span>.<span class=\"name\">characteristic_iff_le_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Characteristic\">Subgroup.Characteristic</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">ϕ</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">ϕ</span></span>)</span> <span class=\"fn\">H</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2084-L2084","name":"AddSubgroup.characteristic_iff_le_map","line":2084,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.characteristic_iff_le_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.characteristic_iff_le_map\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">characteristic_iff_le_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Characteristic\">AddSubgroup.Characteristic</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">ϕ</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">ϕ</span></span>)</span> <span class=\"fn\">H</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2078-L2080","name":"Subgroup.characteristic_iff_map_le","line":2078,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.characteristic_iff_map_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.characteristic_iff_map_le\"><span class=\"name\">Subgroup</span>.<span class=\"name\">characteristic_iff_map_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Characteristic\">Subgroup.Characteristic</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">ϕ</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">ϕ</span></span>)</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">H</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2077-L2077","name":"AddSubgroup.characteristic_iff_map_le","line":2077,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.characteristic_iff_map_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.characteristic_iff_map_le\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">characteristic_iff_map_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Characteristic\">AddSubgroup.Characteristic</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">ϕ</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">ϕ</span></span>)</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">H</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2071-L2073","name":"Subgroup.characteristic_iff_map_eq","line":2071,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.characteristic_iff_map_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.characteristic_iff_map_eq\"><span class=\"name\">Subgroup</span>.<span class=\"name\">characteristic_iff_map_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Characteristic\">Subgroup.Characteristic</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">ϕ</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">ϕ</span></span>)</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">H</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2070-L2070","name":"AddSubgroup.characteristic_iff_map_eq","line":2070,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.characteristic_iff_map_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.characteristic_iff_map_eq\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">characteristic_iff_map_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Characteristic\">AddSubgroup.Characteristic</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">ϕ</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">ϕ</span></span>)</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">H</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2063-L2066","name":"Subgroup.characteristic_iff_le_comap","line":2063,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.characteristic_iff_le_comap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.characteristic_iff_le_comap\"><span class=\"name\">Subgroup</span>.<span class=\"name\">characteristic_iff_le_comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Characteristic\">Subgroup.Characteristic</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">ϕ</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">ϕ</span></span>)</span> <span class=\"fn\">H</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2062-L2062","name":"AddSubgroup.characteristic_iff_le_comap","line":2062,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.characteristic_iff_le_comap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.characteristic_iff_le_comap\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">characteristic_iff_le_comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Characteristic\">AddSubgroup.Characteristic</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">ϕ</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">ϕ</span></span>)</span> <span class=\"fn\">H</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2055-L2058","name":"Subgroup.characteristic_iff_comap_le","line":2055,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.characteristic_iff_comap_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.characteristic_iff_comap_le\"><span class=\"name\">Subgroup</span>.<span class=\"name\">characteristic_iff_comap_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Characteristic\">Subgroup.Characteristic</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">ϕ</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">ϕ</span></span>)</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">H</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2054-L2054","name":"AddSubgroup.characteristic_iff_comap_le","line":2054,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.characteristic_iff_comap_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.characteristic_iff_comap_le\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">characteristic_iff_comap_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Characteristic\">AddSubgroup.Characteristic</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">ϕ</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">ϕ</span></span>)</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">H</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2049-L2050","name":"Subgroup.characteristic_iff_comap_eq","line":2049,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.characteristic_iff_comap_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.characteristic_iff_comap_eq\"><span class=\"name\">Subgroup</span>.<span class=\"name\">characteristic_iff_comap_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Characteristic\">Subgroup.Characteristic</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">ϕ</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">ϕ</span></span>)</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">H</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2048-L2048","name":"AddSubgroup.characteristic_iff_comap_eq","line":2048,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.characteristic_iff_comap_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.characteristic_iff_comap_eq\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">characteristic_iff_comap_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Characteristic\">AddSubgroup.Characteristic</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">ϕ</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">ϕ</span></span>)</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">H</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2038-L2039","name":"AddSubgroup.normal_of_characteristic","line":2038,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normal_of_characteristic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normal_of_characteristic\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">normal_of_characteristic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Characteristic\">AddSubgroup.Characteristic</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2031-L2031","name":"AddSubgroup.Characteristic.fixed","line":2031,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Characteristic.fixed","doc":"`H` is fixed by all automorphisms "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Characteristic.fixed\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">Characteristic</span>.<span class=\"name\">fixed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Characteristic\">AddSubgroup.Characteristic</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ϕ : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">ϕ</span></span>)</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2029-L2029","name":"AddSubgroup.Characteristic.mk","line":2029,"kind":"ctor","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Characteristic.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Characteristic.mk\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">Characteristic</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(fixed : <span class=\"fn\">∀ (<span class=\"fn\">ϕ</span> : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">A</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">ϕ</span></span>)</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">H</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Characteristic\">AddSubgroup.Characteristic</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2029-L2031","name":"AddSubgroup.Characteristic","line":2029,"kind":"class","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Characteristic","doc":"An `AddSubgroup` is characteristic if it is fixed by all automorphisms.\nSeveral equivalent conditions are provided by lemmas of the form `Characteristic.iff...` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Characteristic\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">Characteristic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2017-L2018","name":"Subgroup.normal_of_characteristic","line":2017,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normal_of_characteristic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normal_of_characteristic\"><span class=\"name\">Subgroup</span>.<span class=\"name\">normal_of_characteristic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Characteristic\">Subgroup.Characteristic</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2012-L2012","name":"Subgroup.Characteristic.fixed","line":2012,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Characteristic.fixed","doc":"`H` is fixed by all automorphisms "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Characteristic.fixed\"><span class=\"name\">Subgroup</span>.<span class=\"name\">Characteristic</span>.<span class=\"name\">fixed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Characteristic\">Subgroup.Characteristic</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ϕ : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">ϕ</span></span>)</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2010-L2010","name":"Subgroup.Characteristic.mk","line":2010,"kind":"ctor","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Characteristic.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Characteristic.mk\"><span class=\"name\">Subgroup</span>.<span class=\"name\">Characteristic</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(fixed : <span class=\"fn\">∀ (<span class=\"fn\">ϕ</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">ϕ</span></span>)</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">H</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Characteristic\">Subgroup.Characteristic</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L2010-L2012","name":"Subgroup.Characteristic","line":2010,"kind":"class","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Characteristic","doc":"A subgroup is characteristic if it is fixed by all automorphisms.\nSeveral equivalent conditions are provided by lemmas of the form `Characteristic.iff...` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Characteristic\"><span class=\"name\">Subgroup</span>.<span class=\"name\">Characteristic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1999-L2000","name":"Subgroup.Normal.mem_comm_iff","line":1999,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal.mem_comm_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal.mem_comm_iff\"><span class=\"name\">Subgroup</span>.<span class=\"name\">Normal</span>.<span class=\"name\">mem_comm_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(nH : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1998-L1998","name":"AddSubgroup.Normal.mem_comm_iff","line":1998,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal.mem_comm_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal.mem_comm_iff\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">Normal</span>.<span class=\"name\">mem_comm_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(nH : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1990-L1994","name":"Subgroup.Normal.mem_comm","line":1990,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal.mem_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal.mem_comm\"><span class=\"name\">Subgroup</span>.<span class=\"name\">Normal</span>.<span class=\"name\">mem_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(nH : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1989-L1989","name":"AddSubgroup.Normal.mem_comm","line":1989,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal.mem_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal.mem_comm\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">Normal</span>.<span class=\"name\">mem_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(nH : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1980-L1981","name":"Subgroup.normal_of_comm","line":1980,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normal_of_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normal_of_comm\"><span class=\"name\">Subgroup</span>.<span class=\"name\">normal_of_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1979-L1979","name":"AddSubgroup.normal_of_comm","line":1979,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normal_of_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.normal_of_comm\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">normal_of_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1966-L1966","name":"AddSubgroup.Normal.conj_mem","line":1966,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal.conj_mem","doc":"`N` is closed under additive conjugation "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal.conj_mem\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">Normal</span>.<span class=\"name\">conj_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> → <span class=\"fn\">∀ (<span class=\"fn\">g</span> : <span class=\"fn\">A</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">g</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1964-L1964","name":"AddSubgroup.Normal.mk","line":1964,"kind":"ctor","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal.mk\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">Normal</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(conj_mem : <span class=\"fn\">∀ <span class=\"fn\">n</span> ∈ <span class=\"fn\">H</span>, <span class=\"fn\">∀ (<span class=\"fn\">g</span> : <span class=\"fn\">A</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">g</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\">AddSubgroup.Normal</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1964-L1966","name":"AddSubgroup.Normal","line":1964,"kind":"class","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal","doc":"An AddSubgroup is normal if whenever `n ∈ H`, then `g + n - g ∈ H` for every `g : G` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.Normal\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">Normal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1954-L1954","name":"Subgroup.Normal.conj_mem","line":1954,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal.conj_mem","doc":"`N` is closed under conjugation "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal.conj_mem\"><span class=\"name\">Subgroup</span>.<span class=\"name\">Normal</span>.<span class=\"name\">conj_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> → <span class=\"fn\">∀ (<span class=\"fn\">g</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">g</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1952-L1952","name":"Subgroup.Normal.mk","line":1952,"kind":"ctor","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal.mk\"><span class=\"name\">Subgroup</span>.<span class=\"name\">Normal</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(conj_mem : <span class=\"fn\">∀ <span class=\"fn\">n</span> ∈ <span class=\"fn\">H</span>, <span class=\"fn\">∀ (<span class=\"fn\">g</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">g</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1952-L1954","name":"Subgroup.Normal","line":1952,"kind":"class","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal","doc":"A subgroup is normal if whenever `n ∈ H`, then `g * n * g⁻¹ ∈ H` for every `g : G` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\"><span class=\"name\">Subgroup</span>.<span class=\"name\">Normal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1937-L1945","name":"Subgroup.pi_eq_bot_iff","line":1937,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.pi_eq_bot_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.pi_eq_bot_iff\"><span class=\"name\">Subgroup</span>.<span class=\"name\">pi_eq_bot_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{η : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">η</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.pi\">Subgroup.pi</a> <span class=\"fn\">Set.univ</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">η</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1936-L1936","name":"AddSubgroup.pi_eq_bot_iff","line":1936,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.pi_eq_bot_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.pi_eq_bot_iff\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">pi_eq_bot_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{η : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">η</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.pi\">AddSubgroup.pi</a> <span class=\"fn\">Set.univ</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">η</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1923-L1932","name":"Subgroup.mulSingle_mem_pi","line":1923,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mulSingle_mem_pi","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mulSingle_mem_pi\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mulSingle_mem_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{η : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">η</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">η</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">η</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">η</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Pi/Algebra.html#Pi.mulSingle\">Pi.mulSingle</a> <span class=\"fn\">i</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.pi\">Subgroup.pi</a> <span class=\"fn\">I</span> <span class=\"fn\">H</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">H</span> <span class=\"fn\">i</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1922-L1922","name":"AddSubgroup.single_mem_pi","line":1922,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.single_mem_pi","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.single_mem_pi\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">single_mem_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{η : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">η</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">η</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">η</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">η</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Pi/Algebra.html#Pi.single\">Pi.single</a> <span class=\"fn\">i</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.pi\">AddSubgroup.pi</a> <span class=\"fn\">I</span> <span class=\"fn\">H</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">H</span> <span class=\"fn\">i</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1911-L1918","name":"Subgroup.le_pi_iff","line":1911,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.le_pi_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.le_pi_iff\"><span class=\"name\">Subgroup</span>.<span class=\"name\">le_pi_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{η : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">η</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">η</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.pi\">Subgroup.pi</a> <span class=\"fn\">I</span> <span class=\"fn\">H</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">I</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Pi.html#Pi.evalMonoidHom\">Pi.evalMonoidHom</a> <span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">J</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">H</span> <span class=\"fn\">i</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1910-L1910","name":"AddSubgroup.le_pi_iff","line":1910,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.le_pi_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.le_pi_iff\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">le_pi_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{η : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">η</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">η</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.pi\">AddSubgroup.pi</a> <span class=\"fn\">I</span> <span class=\"fn\">H</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">I</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Pi.html#Pi.evalAddMonoidHom\">Pi.evalAddMonoidHom</a> <span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">J</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">H</span> <span class=\"fn\">i</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1902-L1906","name":"Subgroup.pi_bot","line":1902,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.pi_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.pi_bot\"><span class=\"name\">Subgroup</span>.<span class=\"name\">pi_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{η : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">η</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.pi\">Subgroup.pi</a> <span class=\"fn\">Set.univ</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) =&gt; <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1901-L1901","name":"AddSubgroup.pi_bot","line":1901,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.pi_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.pi_bot\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">pi_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{η : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">η</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.pi\">AddSubgroup.pi</a> <span class=\"fn\">Set.univ</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) =&gt; <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1896-L1897","name":"Subgroup.pi_empty","line":1896,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.pi_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.pi_empty\"><span class=\"name\">Subgroup</span>.<span class=\"name\">pi_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{η : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">η</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.pi\">Subgroup.pi</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1895-L1895","name":"AddSubgroup.pi_empty","line":1895,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.pi_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.pi_empty\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">pi_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{η : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">η</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.pi\">AddSubgroup.pi</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1890-L1891","name":"Subgroup.pi_top","line":1890,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.pi_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.pi_top\"><span class=\"name\">Subgroup</span>.<span class=\"name\">pi_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{η : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">η</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">η</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.pi\">Subgroup.pi</a> <span class=\"fn\">I</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) =&gt; <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1889-L1889","name":"AddSubgroup.pi_top","line":1889,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.pi_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.pi_top\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">pi_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{η : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">η</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">η</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.pi\">AddSubgroup.pi</a> <span class=\"fn\">I</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) =&gt; <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1883-L1885","name":"Subgroup.mem_pi","line":1883,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_pi","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_pi\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{η : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">η</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">η</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.pi\">Subgroup.pi</a> <span class=\"fn\">I</span> <span class=\"fn\">H</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">I</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">H</span> <span class=\"fn\">i</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1882-L1882","name":"AddSubgroup.mem_pi","line":1882,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_pi","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_pi\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{η : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">η</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">η</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.pi\">AddSubgroup.pi</a> <span class=\"fn\">I</span> <span class=\"fn\">H</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">I</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">H</span> <span class=\"fn\">i</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1876-L1878","name":"Subgroup.coe_pi","line":1876,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_pi","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_pi\"><span class=\"name\">Subgroup</span>.<span class=\"name\">coe_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{η : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">η</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">η</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.pi\">Subgroup.pi</a> <span class=\"fn\">I</span> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.pi\">Set.pi</a> <span class=\"fn\">I</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> <span class=\"fn\">i</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1875-L1875","name":"AddSubgroup.coe_pi","line":1875,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_pi","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_pi\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">coe_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{η : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">η</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">η</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.pi\">AddSubgroup.pi</a> <span class=\"fn\">I</span> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.pi\">Set.pi</a> <span class=\"fn\">I</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> <span class=\"fn\">i</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1869-L1871","name":"Subgroup.pi","line":1869,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.pi","doc":"A version of `Set.pi` for subgroups. Given an index set `I` and a family of submodules\n`s : Π i, Subgroup f i`, `pi I s` is the subgroup of dependent functions `f : Π i, f i` such that\n`f i` belongs to `pi I s` whenever `i ∈ I`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.pi\"><span class=\"name\">Subgroup</span>.<span class=\"name\">pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{η : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">η</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">η</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1865-L1868","name":"AddSubgroup.pi.proof_1","line":1865,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.pi.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.pi.proof_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">pi</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{η : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">η</span> → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">η</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubmonoid.pi\">AddSubmonoid.pi</a> <span class=\"fn\">I</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> <span class=\"fn\">i</span></span>)</span>.toAddSubmonoid</span></span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1865-L1868","name":"AddSubgroup.pi.proof_2","line":1865,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.pi.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.pi.proof_2\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">pi</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{η : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">η</span> → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">η</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a>       <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toAddSubsemigroup</span> := <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubmonoid.pi\">AddSubmonoid.pi</a> <span class=\"fn\">I</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> <span class=\"fn\">i</span></span>)</span>.toAddSubmonoid</span></span></span>)</span>.toAddSubsemigroup</span>,\n            <span class=\"fn\">zero_mem'</span> :=\n              <span class=\"fn\">(_ :\n                <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a>                   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubmonoid.pi\">AddSubmonoid.pi</a> <span class=\"fn\">I</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) =&gt;\n                        <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> <span class=\"fn\">i</span></span>)</span>.toAddSubmonoid</span></span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span>)</span> }</span>.toAddSubsemigroup</span>.carrier</span></span> →\n    <span class=\"fn\">∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">I</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">i</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">H</span> <span class=\"fn\">i</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1865-L1868","name":"AddSubgroup.pi","line":1865,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.pi","doc":"A version of `Set.pi` for `AddSubgroup`s. Given an index set `I` and a family\nof submodules `s : Π i, AddSubgroup f i`, `pi I s` is the `AddSubgroup` of dependent functions\n`f : Π i, f i` such that `f i` belongs to `pi I s` whenever `i ∈ I`. -/ "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.pi\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{η : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">η</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">η</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1852-L1856","name":"Submonoid.pi","line":1852,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Submonoid.pi","doc":"A version of `Set.pi` for submonoids. Given an index set `I` and a family of submodules\n`s : Π i, Submonoid f i`, `pi I s` is the submonoid of dependent functions `f : Π i, f i` such that\n`f i` belongs to `Pi I s` whenever `i ∈ I`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Submonoid.pi\"><span class=\"name\">Submonoid</span>.<span class=\"name\">pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{η : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">η</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#MulOneClass\">MulOneClass</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">η</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1849-L1851","name":"AddSubmonoid.pi.proof_1","line":1849,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubmonoid.pi.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubmonoid.pi.proof_1\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">pi</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{η : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">η</span> → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">η</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">a </span>b : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>},\n  <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.pi\">Set.pi</a> <span class=\"fn\">I</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span>.carrier</span></span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.pi\">Set.pi</a> <span class=\"fn\">I</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span>.carrier</span></span></span></span>)</span> → <span class=\"fn\">∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">I</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">b</span> <span class=\"fn\">i</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1849-L1851","name":"AddSubmonoid.pi.proof_2","line":1849,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubmonoid.pi.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubmonoid.pi.proof_2\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">pi</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{η : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">η</span> → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">η</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">η</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1849-L1851","name":"AddSubmonoid.pi","line":1849,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubmonoid.pi","doc":"A version of `Set.pi` for `AddSubmonoid`s. Given an index set `I` and a family\nof submodules `s : Π i, AddSubmonoid f i`, `pi I s` is the `AddSubmonoid` of dependent functions\n`f : Π i, f i` such that `f i` belongs to `pi I s` whenever `i ∈ I`. -/ "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubmonoid.pi\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{η : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">η</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">η</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1836-L1837","name":"Subgroup.prodEquiv","line":1836,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prodEquiv","doc":"Product of subgroups is isomorphic to their product as groups. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prodEquiv\"><span class=\"name\">Subgroup</span>.<span class=\"name\">prodEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod\">Subgroup.prod</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">K</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1833-L1835","name":"AddSubgroup.prodEquiv.proof_2","line":1833,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prodEquiv.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prodEquiv.proof_2\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">prodEquiv</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.prod\">Equiv.Set.prod</a> <span class=\"fn\">↑<span class=\"fn\">H</span></span> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span>.invFun</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.prod\">Equiv.Set.prod</a> <span class=\"fn\">↑<span class=\"fn\">H</span></span> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span>.toFun</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1833-L1835","name":"AddSubgroup.prodEquiv.proof_1","line":1833,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prodEquiv.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prodEquiv.proof_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">prodEquiv</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.LeftInverse\">Function.LeftInverse</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.prod\">Equiv.Set.prod</a> <span class=\"fn\">↑<span class=\"fn\">H</span></span> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span>.invFun</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.prod\">Equiv.Set.prod</a> <span class=\"fn\">↑<span class=\"fn\">H</span></span> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span>.toFun</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1833-L1835","name":"AddSubgroup.prodEquiv","line":1833,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prodEquiv","doc":"Product of additive subgroups is isomorphic to their product\nas additive groups"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prodEquiv\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">prodEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod\">AddSubgroup.prod</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">K</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1833-L1835","name":"AddSubgroup.prodEquiv.proof_3","line":1833,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prodEquiv.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prodEquiv.proof_3\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">prodEquiv</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x </span>x_1 : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod\">AddSubgroup.prod</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.toFun\">Equiv.toFun</a>\n      <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.prod\">Equiv.Set.prod</a> <span class=\"fn\">↑<span class=\"fn\">H</span></span> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span>.toFun</span>, <span class=\"fn\">invFun</span> := <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.prod\">Equiv.Set.prod</a> <span class=\"fn\">↑<span class=\"fn\">H</span></span> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span>.invFun</span>,\n        <span class=\"fn\">left_inv</span> := <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.LeftInverse\">Function.LeftInverse</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.prod\">Equiv.Set.prod</a> <span class=\"fn\">↑<span class=\"fn\">H</span></span> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span>.invFun</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.prod\">Equiv.Set.prod</a> <span class=\"fn\">↑<span class=\"fn\">H</span></span> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span>.toFun</span></span>)</span>,\n        <span class=\"fn\">right_inv</span> := <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.prod\">Equiv.Set.prod</a> <span class=\"fn\">↑<span class=\"fn\">H</span></span> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span>.invFun</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.prod\">Equiv.Set.prod</a> <span class=\"fn\">↑<span class=\"fn\">H</span></span> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span>.toFun</span></span>)</span> }</span>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.toFun\">Equiv.toFun</a>\n      <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.prod\">Equiv.Set.prod</a> <span class=\"fn\">↑<span class=\"fn\">H</span></span> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span>.toFun</span>, <span class=\"fn\">invFun</span> := <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.prod\">Equiv.Set.prod</a> <span class=\"fn\">↑<span class=\"fn\">H</span></span> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span>.invFun</span>,\n        <span class=\"fn\">left_inv</span> := <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.LeftInverse\">Function.LeftInverse</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.prod\">Equiv.Set.prod</a> <span class=\"fn\">↑<span class=\"fn\">H</span></span> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span>.invFun</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.prod\">Equiv.Set.prod</a> <span class=\"fn\">↑<span class=\"fn\">H</span></span> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span>.toFun</span></span>)</span>,\n        <span class=\"fn\">right_inv</span> := <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.prod\">Equiv.Set.prod</a> <span class=\"fn\">↑<span class=\"fn\">H</span></span> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span>.invFun</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.prod\">Equiv.Set.prod</a> <span class=\"fn\">↑<span class=\"fn\">H</span></span> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span>.toFun</span></span>)</span> }</span>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1827-L1828","name":"Subgroup.prod_eq_bot_iff","line":1827,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod_eq_bot_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod_eq_bot_iff\"><span class=\"name\">Subgroup</span>.<span class=\"name\">prod_eq_bot_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod\">Subgroup.prod</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1826-L1826","name":"AddSubgroup.prod_eq_bot_iff","line":1826,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod_eq_bot_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod_eq_bot_iff\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">prod_eq_bot_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod\">AddSubgroup.prod</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1820-L1822","name":"Subgroup.prod_le_iff","line":1820,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod_le_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod_le_iff\"><span class=\"name\">Subgroup</span>.<span class=\"name\">prod_le_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">N</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod\">Subgroup.prod</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">J</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Prod.html#MonoidHom.inl\">MonoidHom.inl</a> <span class=\"fn\">G</span> <span class=\"fn\">N</span></span>)</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">J</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Prod.html#MonoidHom.inr\">MonoidHom.inr</a> <span class=\"fn\">G</span> <span class=\"fn\">N</span></span>)</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">J</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1819-L1819","name":"AddSubgroup.prod_le_iff","line":1819,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod_le_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod_le_iff\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">prod_le_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">N</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod\">AddSubgroup.prod</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">J</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Prod.html#AddMonoidHom.inl\">AddMonoidHom.inl</a> <span class=\"fn\">G</span> <span class=\"fn\">N</span></span>)</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">J</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Prod.html#AddMonoidHom.inr\">AddMonoidHom.inr</a> <span class=\"fn\">G</span> <span class=\"fn\">N</span></span>)</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">J</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1813-L1815","name":"Subgroup.le_prod_iff","line":1813,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.le_prod_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.le_prod_iff\"><span class=\"name\">Subgroup</span>.<span class=\"name\">le_prod_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">N</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod\">Subgroup.prod</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Prod.html#MonoidHom.fst\">MonoidHom.fst</a> <span class=\"fn\">G</span> <span class=\"fn\">N</span></span>)</span> <span class=\"fn\">J</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Prod.html#MonoidHom.snd\">MonoidHom.snd</a> <span class=\"fn\">G</span> <span class=\"fn\">N</span></span>)</span> <span class=\"fn\">J</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1812-L1812","name":"AddSubgroup.le_prod_iff","line":1812,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.le_prod_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.le_prod_iff\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">le_prod_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">N</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod\">AddSubgroup.prod</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Prod.html#AddMonoidHom.fst\">AddMonoidHom.fst</a> <span class=\"fn\">G</span> <span class=\"fn\">N</span></span>)</span> <span class=\"fn\">J</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Prod.html#AddMonoidHom.snd\">AddMonoidHom.snd</a> <span class=\"fn\">G</span> <span class=\"fn\">N</span></span>)</span> <span class=\"fn\">J</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1807-L1808","name":"Subgroup.bot_prod_bot","line":1807,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.bot_prod_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.bot_prod_bot\"><span class=\"name\">Subgroup</span>.<span class=\"name\">bot_prod_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod\">Subgroup.prod</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1806-L1806","name":"AddSubgroup.bot_sum_bot","line":1806,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.bot_sum_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.bot_sum_bot\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">bot_sum_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod\">AddSubgroup.prod</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1801-L1802","name":"Subgroup.top_prod_top","line":1801,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.top_prod_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.top_prod_top\"><span class=\"name\">Subgroup</span>.<span class=\"name\">top_prod_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod\">Subgroup.prod</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1800-L1800","name":"AddSubgroup.top_prod_top","line":1800,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.top_prod_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.top_prod_top\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">top_prod_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod\">AddSubgroup.prod</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1795-L1796","name":"Subgroup.top_prod","line":1795,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.top_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.top_prod\"><span class=\"name\">Subgroup</span>.<span class=\"name\">top_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod\">Subgroup.prod</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Prod.html#MonoidHom.snd\">MonoidHom.snd</a> <span class=\"fn\">G</span> <span class=\"fn\">N</span></span>)</span> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1794-L1794","name":"AddSubgroup.top_prod","line":1794,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.top_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.top_prod\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">top_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod\">AddSubgroup.prod</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Prod.html#AddMonoidHom.snd\">AddMonoidHom.snd</a> <span class=\"fn\">G</span> <span class=\"fn\">N</span></span>)</span> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1789-L1790","name":"Subgroup.prod_top","line":1789,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod_top\"><span class=\"name\">Subgroup</span>.<span class=\"name\">prod_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod\">Subgroup.prod</a> <span class=\"fn\">K</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Prod.html#MonoidHom.fst\">MonoidHom.fst</a> <span class=\"fn\">G</span> <span class=\"fn\">N</span></span>)</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1788-L1788","name":"AddSubgroup.prod_top","line":1788,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod_top\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">prod_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod\">AddSubgroup.prod</a> <span class=\"fn\">K</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Prod.html#AddMonoidHom.fst\">AddMonoidHom.fst</a> <span class=\"fn\">G</span> <span class=\"fn\">N</span></span>)</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1783-L1784","name":"Subgroup.prod_mono_left","line":1783,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod_mono_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod_mono_left\"><span class=\"name\">Subgroup</span>.<span class=\"name\">prod_mono_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">fun (<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod\">Subgroup.prod</a> <span class=\"fn\">K</span> <span class=\"fn\">H</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1782-L1782","name":"AddSubgroup.prod_mono_left","line":1782,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod_mono_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod_mono_left\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">prod_mono_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">fun (<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod\">AddSubgroup.prod</a> <span class=\"fn\">K</span> <span class=\"fn\">H</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1777-L1778","name":"Subgroup.prod_mono_right","line":1777,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod_mono_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod_mono_right\"><span class=\"name\">Subgroup</span>.<span class=\"name\">prod_mono_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">fun (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod\">Subgroup.prod</a> <span class=\"fn\">K</span> <span class=\"fn\">t</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1776-L1776","name":"AddSubgroup.prod_mono_right","line":1776,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod_mono_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod_mono_right\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">prod_mono_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">fun (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod\">AddSubgroup.prod</a> <span class=\"fn\">K</span> <span class=\"fn\">t</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1771-L1772","name":"Subgroup.prod_mono","line":1771,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod_mono\"><span class=\"name\">Subgroup</span>.<span class=\"name\">prod_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Relator.html#Relator.LiftFun\">(<a href=\"./Mathlib/Logic/Relator.html#Relator.LiftFun\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span>)</span> <a href=\"./Mathlib/Logic/Relator.html#Relator.LiftFun\">⇒</a>     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span>)</span> <a href=\"./Mathlib/Logic/Relator.html#Relator.LiftFun\">⇒</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">N</span></span>)</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span></a>)</a>\n  <span class=\"fn\">Subgroup.prod</span> <span class=\"fn\">Subgroup.prod</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1770-L1770","name":"AddSubgroup.prod_mono","line":1770,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod_mono\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">prod_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Relator.html#Relator.LiftFun\">(<a href=\"./Mathlib/Logic/Relator.html#Relator.LiftFun\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span>)</span> <a href=\"./Mathlib/Logic/Relator.html#Relator.LiftFun\">⇒</a>     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span>)</span> <a href=\"./Mathlib/Logic/Relator.html#Relator.LiftFun\">⇒</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">N</span></span>)</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span></a>)</a>\n  <span class=\"fn\">AddSubgroup.prod</span> <span class=\"fn\">AddSubgroup.prod</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1765-L1766","name":"Subgroup.mem_prod","line":1765,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_prod\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod\">Subgroup.prod</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.1</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.2</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1764-L1764","name":"AddSubgroup.mem_prod","line":1764,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_prod\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod\">AddSubgroup.prod</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.1</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.2</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1758-L1760","name":"Subgroup.coe_prod","line":1758,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_prod\"><span class=\"name\">Subgroup</span>.<span class=\"name\">coe_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod\">Subgroup.prod</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">H</span></span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1757-L1757","name":"AddSubgroup.coe_prod","line":1757,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_prod\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">coe_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod\">AddSubgroup.prod</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">H</span></span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1751-L1753","name":"Subgroup.prod","line":1751,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod","doc":"Given `Subgroup`s `H`, `K` of groups `G`, `N` respectively, `H × K` as a subgroup of `G × N`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.prod\"><span class=\"name\">Subgroup</span>.<span class=\"name\">prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">N</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1748-L1750","name":"AddSubgroup.prod.proof_1","line":1748,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod.proof_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">prod</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.prod\">AddSubmonoid.prod</a> <span class=\"fn\"><span class=\"fn\">H</span>.toAddSubmonoid</span> <span class=\"fn\"><span class=\"fn\">K</span>.toAddSubmonoid</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1748-L1750","name":"AddSubgroup.prod.proof_2","line":1748,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod.proof_2\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">prod</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">N</span></span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a>       <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toAddSubsemigroup</span> := <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.prod\">AddSubmonoid.prod</a> <span class=\"fn\"><span class=\"fn\">H</span>.toAddSubmonoid</span> <span class=\"fn\"><span class=\"fn\">K</span>.toAddSubmonoid</span></span>)</span>.toAddSubsemigroup</span>,\n            <span class=\"fn\">zero_mem'</span> :=\n              <span class=\"fn\">(_ :\n                <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a>                   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.prod\">AddSubmonoid.prod</a> <span class=\"fn\"><span class=\"fn\">H</span>.toAddSubmonoid</span>\n                        <span class=\"fn\"><span class=\"fn\">K</span>.toAddSubmonoid</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span>)</span> }</span>.toAddSubsemigroup</span>.carrier</span></span> →\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span>.1</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">H</span>.toAddSubmonoid</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span>.2</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">K</span>.toAddSubmonoid</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1748-L1750","name":"AddSubgroup.prod","line":1748,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod","doc":"Given `AddSubgroup`s `H`, `K` of `AddGroup`s `A`, `B` respectively, `H × K`\nas an `AddSubgroup` of `A × B`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.prod\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">N</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1742-L1743","name":"Subgroup.subgroupOf_eq_top","line":1742,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf_eq_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf_eq_top\"><span class=\"name\">Subgroup</span>.<span class=\"name\">subgroupOf_eq_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1741-L1741","name":"AddSubgroup.addSubgroupOf_eq_top","line":1741,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf_eq_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf_eq_top\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">addSubgroupOf_eq_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1736-L1737","name":"Subgroup.subgroupOf_eq_bot","line":1736,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf_eq_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf_eq_bot\"><span class=\"name\">Subgroup</span>.<span class=\"name\">subgroupOf_eq_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1735-L1735","name":"AddSubgroup.addSubgroupOf_eq_bot","line":1735,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf_eq_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf_eq_bot\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">addSubgroupOf_eq_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1730-L1731","name":"Subgroup.inf_subgroupOf_left","line":1730,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.inf_subgroupOf_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.inf_subgroupOf_left\"><span class=\"name\">Subgroup</span>.<span class=\"name\">inf_subgroupOf_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">H</span></span>)</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1729-L1729","name":"AddSubgroup.inf_addSubgroupOf_left","line":1729,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.inf_addSubgroupOf_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.inf_addSubgroupOf_left\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">inf_addSubgroupOf_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">H</span></span>)</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1724-L1725","name":"Subgroup.inf_subgroupOf_right","line":1724,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.inf_subgroupOf_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.inf_subgroupOf_right\"><span class=\"name\">Subgroup</span>.<span class=\"name\">inf_subgroupOf_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1723-L1723","name":"AddSubgroup.inf_addSubgroupOf_right","line":1723,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.inf_addSubgroupOf_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.inf_addSubgroupOf_right\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">inf_addSubgroupOf_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1717-L1719","name":"Subgroup.subgroupOf_inj","line":1717,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf_inj\"><span class=\"name\">Subgroup</span>.<span class=\"name\">subgroupOf_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H₁ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H₂ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">H₁</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">H₂</span> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H₁</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">H₂</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">K</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1716-L1716","name":"AddSubgroup.addSubgroupOf_inj","line":1716,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf_inj\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">addSubgroupOf_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H₁ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H₂ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H₁</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H₂</span> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H₁</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">H₂</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">K</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1711-L1712","name":"Subgroup.subgroupOf_self","line":1711,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf_self\"><span class=\"name\">Subgroup</span>.<span class=\"name\">subgroupOf_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1710-L1710","name":"AddSubgroup.addSubgroupOf_self","line":1710,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf_self\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">addSubgroupOf_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1705-L1706","name":"Subgroup.subgroupOf_bot_eq_top","line":1705,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf_bot_eq_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf_bot_eq_top\"><span class=\"name\">Subgroup</span>.<span class=\"name\">subgroupOf_bot_eq_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1704-L1704","name":"AddSubgroup.addSubgroupOf_bot_eq_top","line":1704,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf_bot_eq_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf_bot_eq_top\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">addSubgroupOf_bot_eq_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1699-L1700","name":"Subgroup.subgroupOf_bot_eq_bot","line":1699,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf_bot_eq_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf_bot_eq_bot\"><span class=\"name\">Subgroup</span>.<span class=\"name\">subgroupOf_bot_eq_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1698-L1698","name":"AddSubgroup.addSubgroupOf_bot_eq_bot","line":1698,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf_bot_eq_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf_bot_eq_bot\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">addSubgroupOf_bot_eq_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1693-L1694","name":"Subgroup.top_subgroupOf","line":1693,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.top_subgroupOf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.top_subgroupOf\"><span class=\"name\">Subgroup</span>.<span class=\"name\">top_subgroupOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1692-L1692","name":"AddSubgroup.top_addSubgroupOf","line":1692,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.top_addSubgroupOf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.top_addSubgroupOf\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">top_addSubgroupOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1687-L1688","name":"Subgroup.bot_subgroupOf","line":1687,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.bot_subgroupOf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.bot_subgroupOf\"><span class=\"name\">Subgroup</span>.<span class=\"name\">bot_subgroupOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1686-L1686","name":"AddSubgroup.bot_addSubgroupOf","line":1686,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.bot_addSubgroupOf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.bot_addSubgroupOf\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">bot_addSubgroupOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1681-L1682","name":"Subgroup.subgroupOf_map_subtype","line":1681,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf_map_subtype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf_map_subtype\"><span class=\"name\">Subgroup</span>.<span class=\"name\">subgroupOf_map_subtype</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subtype\">Subgroup.subtype</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1680-L1680","name":"AddSubgroup.addSubgroupOf_map_subtype","line":1680,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf_map_subtype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf_map_subtype\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">addSubgroupOf_map_subtype</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.subtype\">AddSubgroup.subtype</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1675-L1676","name":"Subgroup.mem_subgroupOf","line":1675,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_subgroupOf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_subgroupOf\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_subgroupOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\">↥<span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1674-L1674","name":"AddSubgroup.mem_addSubgroupOf","line":1674,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_addSubgroupOf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_addSubgroupOf\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_addSubgroupOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\">↥<span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1669-L1670","name":"Subgroup.coe_subgroupOf","line":1669,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_subgroupOf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_subgroupOf\"><span class=\"name\">Subgroup</span>.<span class=\"name\">coe_subgroupOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subtype\">Subgroup.subtype</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">↑<span class=\"fn\">H</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1668-L1668","name":"AddSubgroup.coe_addSubgroupOf","line":1668,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_addSubgroupOf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_addSubgroupOf\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">coe_addSubgroupOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.subtype\">AddSubgroup.subtype</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">↑<span class=\"fn\">H</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1662-L1664","name":"Subgroup.comap_inclusion_subgroupOf","line":1662,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_inclusion_subgroupOf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_inclusion_subgroupOf\"><span class=\"name\">Subgroup</span>.<span class=\"name\">comap_inclusion_subgroupOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₁ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₂ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.inclusion\">Subgroup.inclusion</a> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K₁</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1661-L1661","name":"AddSubgroup.comap_inclusion_addSubgroupOf","line":1661,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_inclusion_addSubgroupOf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_inclusion_addSubgroupOf\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">comap_inclusion_addSubgroupOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₁ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₂ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.inclusion\">AddSubgroup.inclusion</a> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K₁</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1656-L1657","name":"Subgroup.comap_subtype","line":1656,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_subtype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_subtype\"><span class=\"name\">Subgroup</span>.<span class=\"name\">comap_subtype</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subtype\">Subgroup.subtype</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1655-L1655","name":"AddSubgroup.comap_subtype","line":1655,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_subtype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_subtype\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">comap_subtype</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.subtype\">AddSubgroup.subtype</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1641-L1647","name":"Subgroup.subgroupOfEquivOfLe","line":1641,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOfEquivOfLe","doc":"If `H ≤ K`, then `H` as a subgroup of `K` is isomorphic to `H`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOfEquivOfLe\"><span class=\"name\">Subgroup</span>.<span class=\"name\">subgroupOfEquivOfLe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1640-L1640","name":"Subgroup.subgroupOfEquivOfLe_symm_apply_coe_coe","line":1640,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOfEquivOfLe_symm_apply_coe_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOfEquivOfLe_symm_apply_coe_coe\"><span class=\"name\">Subgroup</span>.<span class=\"name\">subgroupOfEquivOfLe_symm_apply_coe_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.symm\">MulEquiv.symm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOfEquivOfLe\">Subgroup.subgroupOfEquivOfLe</a> <span class=\"fn\">h</span></span>)</span></span>)</span> <span class=\"fn\">g</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1640-L1640","name":"AddSubgroup.addSubgroupOfEquivOfLe_apply_coe","line":1640,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOfEquivOfLe_apply_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOfEquivOfLe_apply_coe\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">addSubgroupOfEquivOfLe_apply_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOfEquivOfLe\">AddSubgroup.addSubgroupOfEquivOfLe</a> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">g</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1640-L1640","name":"AddSubgroup.addSubgroupOfEquivOfLe_symm_apply_coe_coe","line":1640,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOfEquivOfLe_symm_apply_coe_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOfEquivOfLe_symm_apply_coe_coe\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">addSubgroupOfEquivOfLe_symm_apply_coe_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.symm\">AddEquiv.symm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOfEquivOfLe\">AddSubgroup.addSubgroupOfEquivOfLe</a> <span class=\"fn\">h</span></span>)</span></span>)</span> <span class=\"fn\">g</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1640-L1640","name":"Subgroup.subgroupOfEquivOfLe_apply_coe","line":1640,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOfEquivOfLe_apply_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOfEquivOfLe_apply_coe\"><span class=\"name\">Subgroup</span>.<span class=\"name\">subgroupOfEquivOfLe_apply_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\">Subgroup.subgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOfEquivOfLe\">Subgroup.subgroupOfEquivOfLe</a> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">g</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1640-L1640","name":"AddSubgroup.addSubgroupOfEquivOfLe.proof_5","line":1640,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOfEquivOfLe.proof_5","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOfEquivOfLe.proof_5\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">addSubgroupOfEquivOfLe</span>.<span class=\"name\">proof_5</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(_g : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">g</span> : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span>) =&gt; <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">g</span></span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span></span>)</span> }</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">g</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) =&gt; <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">↑<span class=\"fn\">g</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span>)</span> }</span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span> }</span></span>)</span> <span class=\"fn\">_g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">_g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1640-L1640","name":"AddSubgroup.addSubgroupOfEquivOfLe","line":1640,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOfEquivOfLe","doc":"If `H ≤ K`, then `H` as a subgroup of `K` is isomorphic to `H`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOfEquivOfLe\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">addSubgroupOfEquivOfLe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1640-L1640","name":"AddSubgroup.addSubgroupOfEquivOfLe.proof_2","line":1640,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOfEquivOfLe.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOfEquivOfLe.proof_2\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">addSubgroupOfEquivOfLe</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1640-L1640","name":"AddSubgroup.addSubgroupOfEquivOfLe.proof_3","line":1640,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOfEquivOfLe.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOfEquivOfLe.proof_3\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">addSubgroupOfEquivOfLe</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1640-L1640","name":"AddSubgroup.addSubgroupOfEquivOfLe.proof_4","line":1640,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOfEquivOfLe.proof_4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOfEquivOfLe.proof_4\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">addSubgroupOfEquivOfLe</span>.<span class=\"name\">proof_4</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(_g : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">g</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) =&gt; <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">↑<span class=\"fn\">g</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span>)</span> }</span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span> }</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">g</span> : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span>) =&gt;\n        <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">g</span></span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span></span>)</span> }</span></span>)</span>\n      <span class=\"fn\">_g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">_g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1640-L1640","name":"AddSubgroup.addSubgroupOfEquivOfLe.proof_6","line":1640,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOfEquivOfLe.proof_6","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOfEquivOfLe.proof_6\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">addSubgroupOfEquivOfLe</span>.<span class=\"name\">proof_6</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(_g : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(_h : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.toFun\">Equiv.toFun</a>\n    <span class=\"fn\">{\n      <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">g</span> : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span>) =&gt;\n        <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">g</span></span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span></span>)</span> }</span></span>,\n      <span class=\"fn\">invFun</span> := <span class=\"fn\">fun (<span class=\"fn\">g</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) =&gt; <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">↑<span class=\"fn\">g</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span>)</span> }</span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span> }</span></span>,\n      <span class=\"fn\">left_inv</span> :=\n        <span class=\"fn\">(_ :\n          <span class=\"fn\">∀ (<span class=\"fn\">_g</span> : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span>),\n            <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">g</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) =&gt; <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">↑<span class=\"fn\">g</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span>)</span> }</span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span> }</span></span>)</span>\n                <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">g</span> : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span>) =&gt;\n                    <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">g</span></span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span></span>)</span> }</span></span>)</span>\n                  <span class=\"fn\">_g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>               <span class=\"fn\">_g</span></span></span>)</span>,\n      <span class=\"fn\">right_inv</span> :=\n        <span class=\"fn\">(_ :\n          <span class=\"fn\">∀ (<span class=\"fn\">_g</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>),\n            <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">g</span> : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span>) =&gt;\n                  <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">g</span></span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span></span>)</span> }</span></span>)</span>\n                <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">g</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) =&gt; <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">↑<span class=\"fn\">g</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span>)</span> }</span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span> }</span></span>)</span> <span class=\"fn\">_g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>               <span class=\"fn\">_g</span></span></span>)</span> }</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">_g</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">_h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.toFun\">Equiv.toFun</a>\n    <span class=\"fn\">{\n      <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">g</span> : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span>) =&gt;\n        <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">g</span></span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span></span>)</span> }</span></span>,\n      <span class=\"fn\">invFun</span> := <span class=\"fn\">fun (<span class=\"fn\">g</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) =&gt; <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">↑<span class=\"fn\">g</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span>)</span> }</span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span> }</span></span>,\n      <span class=\"fn\">left_inv</span> :=\n        <span class=\"fn\">(_ :\n          <span class=\"fn\">∀ (<span class=\"fn\">_g</span> : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span>),\n            <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">g</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) =&gt; <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">↑<span class=\"fn\">g</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span>)</span> }</span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span> }</span></span>)</span>\n                <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">g</span> : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span>) =&gt;\n                    <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">g</span></span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span></span>)</span> }</span></span>)</span>\n                  <span class=\"fn\">_g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>               <span class=\"fn\">_g</span></span></span>)</span>,\n      <span class=\"fn\">right_inv</span> :=\n        <span class=\"fn\">(_ :\n          <span class=\"fn\">∀ (<span class=\"fn\">_g</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>),\n            <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">g</span> : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span>) =&gt;\n                  <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">g</span></span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span></span>)</span> }</span></span>)</span>\n                <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">g</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) =&gt; <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">↑<span class=\"fn\">g</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span>)</span> }</span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span> }</span></span>)</span> <span class=\"fn\">_g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>               <span class=\"fn\">_g</span></span></span>)</span> }</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">_g</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">_h</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1640-L1640","name":"AddSubgroup.addSubgroupOfEquivOfLe.proof_1","line":1640,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOfEquivOfLe.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOfEquivOfLe.proof_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">addSubgroupOfEquivOfLe</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\">AddSubgroup.addSubgroupOf</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1634-L1635","name":"Subgroup.subgroupOf","line":1634,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf","doc":"For any subgroups `H` and `K`, view `H ⊓ K` as a subgroup of `K`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subgroupOf\"><span class=\"name\">Subgroup</span>.<span class=\"name\">subgroupOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">↥<span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1633-L1633","name":"AddSubgroup.addSubgroupOf","line":1633,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf","doc":"For any subgroups `H` and `K`, view `H ⊓ K` as a subgroup of `K`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.addSubgroupOf\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">addSubgroupOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">↥<span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1627-L1628","name":"Subgroup.comap_top","line":1627,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_top\"><span class=\"name\">Subgroup</span>.<span class=\"name\">comap_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1626-L1626","name":"AddSubgroup.comap_top","line":1626,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_top\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">comap_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1618-L1622","name":"Subgroup.map_top_of_surjective","line":1618,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_top_of_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_top_of_surjective\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_top_of_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1617-L1617","name":"AddSubgroup.map_top_of_surjective","line":1617,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_top_of_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_top_of_surjective\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_top_of_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1612-L1613","name":"Subgroup.map_bot","line":1612,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_bot\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1611-L1611","name":"AddSubgroup.map_bot","line":1611,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_bot\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1604-L1607","name":"Subgroup.map_inf_eq","line":1604,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_inf_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_inf_eq\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_inf_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1603-L1603","name":"AddSubgroup.map_inf_eq","line":1603,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_inf_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_inf_eq\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_inf_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1598-L1599","name":"Subgroup.map_inf_le","line":1598,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_inf_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_inf_le\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_inf_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1597-L1597","name":"AddSubgroup.map_inf_le","line":1597,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_inf_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_inf_le\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_inf_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1591-L1593","name":"Subgroup.comap_iInf","line":1591,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_iInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_iInf\"><span class=\"name\">Subgroup</span>.<span class=\"name\">comap_iInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_7}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#iInf\">iInf</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1590-L1590","name":"AddSubgroup.comap_iInf","line":1590,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_iInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_iInf\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">comap_iInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_7}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#iInf\">iInf</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1585-L1586","name":"Subgroup.comap_inf","line":1585,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_inf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_inf\"><span class=\"name\">Subgroup</span>.<span class=\"name\">comap_inf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1584-L1584","name":"AddSubgroup.comap_inf","line":1584,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_inf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_inf\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">comap_inf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1578-L1580","name":"Subgroup.iSup_comap_le","line":1578,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.iSup_comap_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.iSup_comap_le\"><span class=\"name\">Subgroup</span>.<span class=\"name\">iSup_comap_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_7}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#iSup\">iSup</a> <span class=\"fn\">s</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1577-L1577","name":"AddSubgroup.iSup_comap_le","line":1577,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.iSup_comap_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.iSup_comap_le\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">iSup_comap_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_7}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#iSup\">iSup</a> <span class=\"fn\">s</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1571-L1573","name":"Subgroup.comap_sup_comap_le","line":1571,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_sup_comap_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_sup_comap_le\"><span class=\"name\">Subgroup</span>.<span class=\"name\">comap_sup_comap_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">K</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1570-L1570","name":"AddSubgroup.comap_sup_comap_le","line":1570,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_sup_comap_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_sup_comap_le\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">comap_sup_comap_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">K</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1564-L1566","name":"Subgroup.map_iSup","line":1564,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_iSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_iSup\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_iSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_7}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#iSup\">iSup</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1563-L1563","name":"AddSubgroup.map_iSup","line":1563,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_iSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_iSup\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_iSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_7}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#iSup\">iSup</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1558-L1559","name":"Subgroup.map_sup","line":1558,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_sup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_sup\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_sup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1557-L1557","name":"AddSubgroup.map_sup","line":1557,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_sup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_sup\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_sup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1552-L1553","name":"Subgroup.gc_map_comap","line":1552,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.gc_map_comap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.gc_map_comap\"><span class=\"name\">Subgroup</span>.<span class=\"name\">gc_map_comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/GaloisConnection.html#GaloisConnection\">GaloisConnection</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1551-L1551","name":"AddSubgroup.gc_map_comap","line":1551,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.gc_map_comap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.gc_map_comap\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">gc_map_comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/GaloisConnection.html#GaloisConnection\">GaloisConnection</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1545-L1547","name":"Subgroup.map_le_iff_le_comap","line":1545,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_le_iff_le_comap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_le_iff_le_comap\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_le_iff_le_comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1544-L1544","name":"AddSubgroup.map_le_iff_le_comap","line":1544,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_le_iff_le_comap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_le_iff_le_comap\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_le_iff_le_comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1534-L1540","name":"Subgroup.map_symm_eq_iff_map_eq","line":1534,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_symm_eq_iff_map_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_symm_eq_iff_map_eq\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_symm_eq_iff_map_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{e : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.symm\">MulEquiv.symm</a> <span class=\"fn\">e</span></span>)</span></span>)</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">e</span></span>)</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1533-L1533","name":"AddSubgroup.map_symm_eq_iff_map_eq","line":1533,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_symm_eq_iff_map_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_symm_eq_iff_map_eq\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_symm_eq_iff_map_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{e : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.symm\">AddEquiv.symm</a> <span class=\"fn\">e</span></span>)</span></span>)</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">e</span></span>)</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1527-L1529","name":"Subgroup.comap_equiv_eq_map_symm'","line":1527,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_equiv_eq_map_symm'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_equiv_eq_map_symm'\"><span class=\"name\">Subgroup</span>.<span class=\"name\">comap_equiv_eq_map_symm'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.symm\">MulEquiv.symm</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1526-L1526","name":"AddSubgroup.comap_equiv_eq_map_symm'","line":1526,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_equiv_eq_map_symm'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_equiv_eq_map_symm'\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">comap_equiv_eq_map_symm'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.symm\">AddEquiv.symm</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1522-L1524","name":"Subgroup.comap_equiv_eq_map_symm","line":1522,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_equiv_eq_map_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_equiv_eq_map_symm\"><span class=\"name\">Subgroup</span>.<span class=\"name\">comap_equiv_eq_map_symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.symm\">MulEquiv.symm</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1521-L1521","name":"AddSubgroup.comap_equiv_eq_map_symm","line":1521,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_equiv_eq_map_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_equiv_eq_map_symm\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">comap_equiv_eq_map_symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.symm\">AddEquiv.symm</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1517-L1519","name":"Subgroup.map_equiv_eq_comap_symm","line":1517,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_equiv_eq_comap_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_equiv_eq_comap_symm\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_equiv_eq_comap_symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.symm\">MulEquiv.symm</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1516-L1516","name":"AddSubgroup.map_equiv_eq_comap_symm","line":1516,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_equiv_eq_comap_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_equiv_eq_comap_symm\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_equiv_eq_comap_symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.symm\">AddEquiv.symm</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1510-L1512","name":"Subgroup.map_equiv_eq_comap_symm'","line":1510,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_equiv_eq_comap_symm'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_equiv_eq_comap_symm'\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_equiv_eq_comap_symm'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.symm\">MulEquiv.symm</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1509-L1509","name":"AddSubgroup.map_equiv_eq_comap_symm'","line":1509,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_equiv_eq_comap_symm'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_equiv_eq_comap_symm'\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_equiv_eq_comap_symm'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.symm\">AddEquiv.symm</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1503-L1505","name":"Subgroup.mem_map_iff_mem","line":1503,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_map_iff_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_map_iff_mem\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_map_iff_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1502-L1502","name":"AddSubgroup.mem_map_iff_mem","line":1502,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_map_iff_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_map_iff_mem\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_map_iff_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1493-L1495","name":"Subgroup.mem_map_equiv","line":1493,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_map_equiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_map_equiv\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_map_equiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.symm\">MulEquiv.symm</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1492-L1492","name":"AddSubgroup.mem_map_equiv","line":1492,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_map_equiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_map_equiv\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_map_equiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.symm\">AddEquiv.symm</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1485-L1488","name":"Subgroup.map_one_eq_bot","line":1485,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_one_eq_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_one_eq_bot\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_one_eq_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">1</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1484-L1484","name":"AddSubgroup.map_zero_eq_bot","line":1484,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_zero_eq_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_zero_eq_bot\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_zero_eq_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">0</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1479-L1480","name":"Subgroup.map_map","line":1479,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_map\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.comp\">MonoidHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1478-L1478","name":"AddSubgroup.map_map","line":1478,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_map\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1473-L1474","name":"Subgroup.map_id","line":1473,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_id\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.id\">MonoidHom.id</a> <span class=\"fn\">G</span></span>)</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1472-L1472","name":"AddSubgroup.map_id","line":1472,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_id\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.id\">AddMonoidHom.id</a> <span class=\"fn\">G</span></span>)</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1467-L1468","name":"Subgroup.map_mono","line":1467,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map_mono\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K' : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K'</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K'</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1466-L1466","name":"AddSubgroup.map_mono","line":1466,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map_mono\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K' : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K'</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K'</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1461-L1462","name":"Subgroup.apply_coe_mem_map","line":1461,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.apply_coe_mem_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.apply_coe_mem_map\"><span class=\"name\">Subgroup</span>.<span class=\"name\">apply_coe_mem_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1460-L1460","name":"AddSubgroup.apply_coe_mem_map","line":1460,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.apply_coe_mem_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.apply_coe_mem_map\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">apply_coe_mem_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1455-L1456","name":"Subgroup.mem_map_of_mem","line":1455,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_map_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_map_of_mem\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_map_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1454-L1454","name":"AddSubgroup.mem_map_of_mem","line":1454,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_map_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_map_of_mem\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_map_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1449-L1450","name":"Subgroup.mem_map","line":1449,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_map\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ x ∈ <span class=\"fn\">K</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1448-L1448","name":"AddSubgroup.mem_map","line":1448,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_map\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ x ∈ <span class=\"fn\">K</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1443-L1444","name":"Subgroup.coe_map","line":1443,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_map\"><span class=\"name\">Subgroup</span>.<span class=\"name\">coe_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1442-L1442","name":"AddSubgroup.coe_map","line":1442,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_map\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">coe_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1433-L1438","name":"Subgroup.map","line":1433,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map","doc":"The image of a subgroup along a monoid homomorphism is a subgroup. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1430-L1432","name":"AddSubgroup.map.proof_1","line":1430,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map.proof_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">a </span>b : <span class=\"fn\">N</span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">H</span>.toAddSubmonoid</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span> →\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">H</span>.toAddSubmonoid</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span> →\n      <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">H</span>.toAddSubmonoid</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1430-L1432","name":"AddSubgroup.map.proof_3","line":1430,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map.proof_3\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\">N</span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a>       <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{\n            <span class=\"fn\">toAddSubsemigroup</span> :=\n              <span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">↑<span class=\"fn\">H</span></span></span>,\n                <span class=\"fn\">add_mem'</span> :=\n                  <span class=\"fn\">(_ :\n                    <span class=\"fn\">∀ {<span class=\"fn\">a </span>b : <span class=\"fn\">N</span>},\n                      <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">H</span>.toAddSubmonoid</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span> →\n                        <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">H</span>.toAddSubmonoid</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span> →\n                          <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">H</span>.toAddSubmonoid</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span></span></span></span>)</span> }</span>,\n            <span class=\"fn\">zero_mem'</span> :=\n              <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">H</span>.toAddSubmonoid</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span>)</span> }</span>.toAddSubsemigroup</span>.carrier</span></span> →\n    <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a>       <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{\n            <span class=\"fn\">toAddSubsemigroup</span> :=\n              <span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">↑<span class=\"fn\">H</span></span></span>,\n                <span class=\"fn\">add_mem'</span> :=\n                  <span class=\"fn\">(_ :\n                    <span class=\"fn\">∀ {<span class=\"fn\">a </span>b : <span class=\"fn\">N</span>},\n                      <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">H</span>.toAddSubmonoid</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span> →\n                        <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">H</span>.toAddSubmonoid</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span> →\n                          <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">H</span>.toAddSubmonoid</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span></span></span></span>)</span> }</span>,\n            <span class=\"fn\">zero_mem'</span> :=\n              <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">H</span>.toAddSubmonoid</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span>)</span> }</span>.toAddSubsemigroup</span>.carrier</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1430-L1432","name":"AddSubgroup.map","line":1430,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map","doc":"The image of an `AddSubgroup` along an `AddMonoid` homomorphism\nis an `AddSubgroup`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1430-L1432","name":"AddSubgroup.map.proof_2","line":1430,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map.proof_2\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">map</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">H</span>.toAddSubmonoid</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1423-L1425","name":"Subgroup.comap_id","line":1423,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_id\"><span class=\"name\">Subgroup</span>.<span class=\"name\">comap_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.id\">MonoidHom.id</a> <span class=\"fn\">N</span></span>)</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1422-L1422","name":"AddSubgroup.comap_id","line":1422,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_id\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">comap_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.id\">AddMonoidHom.id</a> <span class=\"fn\">N</span></span>)</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1416-L1418","name":"Subgroup.comap_comap","line":1416,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_comap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_comap\"><span class=\"name\">Subgroup</span>.<span class=\"name\">comap_comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">g</span> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.comp\">MonoidHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1415-L1415","name":"AddSubgroup.comap_comap","line":1415,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_comap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_comap\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">comap_comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">g</span> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1410-L1411","name":"Subgroup.comap_mono","line":1410,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap_mono\"><span class=\"name\">Subgroup</span>.<span class=\"name\">comap_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K' : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K'</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">K'</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1409-L1409","name":"AddSubgroup.comap_mono","line":1409,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap_mono\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">comap_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K' : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K'</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">K'</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1404-L1405","name":"Subgroup.mem_comap","line":1404,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_comap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_comap\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1403-L1403","name":"AddSubgroup.mem_comap","line":1403,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_comap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_comap\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1399-L1401","name":"AddSubgroup.toSubgroup_comap","line":1399,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toSubgroup_comap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toSubgroup_comap\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toSubgroup_comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A₂ : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">A₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">A₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">AddMonoidHom.toMultiplicative</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">AddSubgroup.toSubgroup</span> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">AddSubgroup.toSubgroup</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1395-L1396","name":"Subgroup.toAddSubgroup_comap","line":1395,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.toAddSubgroup_comap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.toAddSubgroup_comap\"><span class=\"name\">Subgroup</span>.<span class=\"name\">toAddSubgroup_comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₂ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">MonoidHom.toAdditive</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Subgroup.toAddSubgroup</span> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Subgroup.toAddSubgroup</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1389-L1390","name":"Subgroup.coe_comap","line":1389,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_comap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_comap\"><span class=\"name\">Subgroup</span>.<span class=\"name\">coe_comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1388-L1388","name":"AddSubgroup.coe_comap","line":1388,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_comap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_comap\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">coe_comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1381-L1384","name":"Subgroup.comap","line":1381,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap","doc":"The preimage of a subgroup along a monoid homomorphism is a subgroup. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.comap\"><span class=\"name\">Subgroup</span>.<span class=\"name\">comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1378-L1380","name":"AddSubgroup.comap.proof_1","line":1378,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap.proof_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">comap</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">a </span>b : <span class=\"fn\">G</span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.comap\">AddSubmonoid.comap</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">H</span>.toAddSubmonoid</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span> →\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.comap\">AddSubmonoid.comap</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">H</span>.toAddSubmonoid</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span> →\n      <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.comap\">AddSubmonoid.comap</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">H</span>.toAddSubmonoid</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1378-L1380","name":"AddSubgroup.comap","line":1378,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap","doc":"The preimage of an `AddSubgroup` along an `AddMonoid` homomorphism\nis an `AddSubgroup`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1378-L1380","name":"AddSubgroup.comap.proof_2","line":1378,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap.proof_2\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">comap</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.comap\">AddSubmonoid.comap</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">H</span>.toAddSubmonoid</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1378-L1380","name":"AddSubgroup.comap.proof_3","line":1378,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.comap.proof_3\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">comap</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{\n        <span class=\"fn\">toAddSubsemigroup</span> :=\n          <span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">↑<span class=\"fn\">H</span></span></span>,\n            <span class=\"fn\">add_mem'</span> :=\n              <span class=\"fn\">(_ :\n                <span class=\"fn\">∀ {<span class=\"fn\">a </span>b : <span class=\"fn\">G</span>},\n                  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.comap\">AddSubmonoid.comap</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">H</span>.toAddSubmonoid</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span> →\n                    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.comap\">AddSubmonoid.comap</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">H</span>.toAddSubmonoid</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span> →\n                      <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.comap\">AddSubmonoid.comap</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">H</span>.toAddSubmonoid</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span></span></span></span>)</span> }</span>,\n        <span class=\"fn\">zero_mem'</span> :=\n          <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.comap\">AddSubmonoid.comap</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">H</span>.toAddSubmonoid</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span>)</span> }</span>.toAddSubsemigroup</span>.carrier</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1367-L1371","name":"Subgroup.mem_sSup_of_directedOn","line":1367,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_sSup_of_directedOn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_sSup_of_directedOn\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_sSup_of_directedOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Kne : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hK : <span class=\"fn\"><a href=\"./Mathlib/Order/Directed.html#DirectedOn\">DirectedOn</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#SupSet.sSup\">sSup</a> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ s ∈ <span class=\"fn\">K</span>, <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1366-L1366","name":"AddSubgroup.mem_sSup_of_directedOn","line":1366,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_sSup_of_directedOn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_sSup_of_directedOn\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_sSup_of_directedOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Kne : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hK : <span class=\"fn\"><a href=\"./Mathlib/Order/Directed.html#DirectedOn\">DirectedOn</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#SupSet.sSup\">sSup</a> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ s ∈ <span class=\"fn\">K</span>, <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1360-L1362","name":"Subgroup.coe_iSup_of_directed","line":1360,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_iSup_of_directed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_iSup_of_directed\"><span class=\"name\">Subgroup</span>.<span class=\"name\">coe_iSup_of_directed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hS : <span class=\"fn\"><a href=\"./Mathlib/Order/Directed.html#Directed\">Directed</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">S</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⋃ (i : <span class=\"fn\">ι</span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">S</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1359-L1359","name":"AddSubgroup.coe_iSup_of_directed","line":1359,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_iSup_of_directed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_iSup_of_directed\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">coe_iSup_of_directed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hS : <span class=\"fn\"><a href=\"./Mathlib/Order/Directed.html#Directed\">Directed</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">S</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⋃ (i : <span class=\"fn\">ι</span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">S</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1344-L1355","name":"Subgroup.mem_iSup_of_directed","line":1344,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_iSup_of_directed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_iSup_of_directed\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_iSup_of_directed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hι : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hK : <span class=\"fn\"><a href=\"./Mathlib/Order/Directed.html#Directed\">Directed</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#iSup\">iSup</a> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">K</span> <span class=\"fn\">i</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1343-L1343","name":"AddSubgroup.mem_iSup_of_directed","line":1343,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_iSup_of_directed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_iSup_of_directed\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_iSup_of_directed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hι : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hK : <span class=\"fn\"><a href=\"./Mathlib/Order/Directed.html#Directed\">Directed</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#iSup\">iSup</a> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">K</span> <span class=\"fn\">i</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1343-L1343","name":"AddSubgroup.mem_iSup_of_directed.match_1","line":1343,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_iSup_of_directed.match_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_iSup_of_directed.match_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_iSup_of_directed</span>.<span class=\"name\">match_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(motive : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">K</span> <span class=\"fn\">i</span></span></span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x_1</span> : <span class=\"fn\">∃ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">K</span> <span class=\"fn\">i</span></span></span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) (<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">K</span> <span class=\"fn\">i</span></span></span>), <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">(_ : <span class=\"fn\">∃ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">K</span> <span class=\"fn\">i</span></span></span></span>)</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1337-L1339","name":"Subgroup.closure_eq_top_of_mclosure_eq_top","line":1337,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_eq_top_of_mclosure_eq_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_eq_top_of_mclosure_eq_top\"><span class=\"name\">Subgroup</span>.<span class=\"name\">closure_eq_top_of_mclosure_eq_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid.closure\">Submonoid.closure</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1336-L1336","name":"AddSubgroup.closure_eq_top_of_mclosure_eq_top","line":1336,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_eq_top_of_mclosure_eq_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_eq_top_of_mclosure_eq_top\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">closure_eq_top_of_mclosure_eq_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid.closure\">AddSubmonoid.closure</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1331-L1332","name":"Subgroup.le_closure_toSubmonoid","line":1331,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.le_closure_toSubmonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.le_closure_toSubmonoid\"><span class=\"name\">Subgroup</span>.<span class=\"name\">le_closure_toSubmonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid.closure\">Submonoid.closure</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">S</span></span>)</span>.toSubmonoid</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1330-L1330","name":"AddSubgroup.le_closure_toAddSubmonoid","line":1330,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.le_closure_toAddSubmonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.le_closure_toAddSubmonoid\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">le_closure_toAddSubmonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid.closure\">AddSubmonoid.closure</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">S</span></span>)</span>.toAddSubmonoid</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1325-L1326","name":"Subgroup.closure_singleton_one","line":1325,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_singleton_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_singleton_one\"><span class=\"name\">Subgroup</span>.<span class=\"name\">closure_singleton_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">{<span class=\"fn\">1</span>}</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1324-L1324","name":"AddSubgroup.closure_singleton_zero","line":1324,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_singleton_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_singleton_zero\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">closure_singleton_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">{<span class=\"fn\">0</span>}</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1309-L1320","name":"Subgroup.mem_closure_singleton","line":1309,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_closure_singleton","doc":"The subgroup generated by an element of a group equals the set of integer number powers of\nthe element. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_closure_singleton\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_closure_singleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">{<span class=\"fn\">x</span>}</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1306-L1308","name":"AddSubgroup.mem_closure_singleton.match_1","line":1306,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_closure_singleton.match_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_closure_singleton.match_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_closure_singleton</span>.<span class=\"name\">match_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(motive : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ (n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x_1</span> : <span class=\"fn\">∃ (n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) (<span class=\"fn\">hn</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span>), <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">(_ : <span class=\"fn\">∃ (n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></span>)</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1306-L1308","name":"AddSubgroup.mem_closure_singleton","line":1306,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_closure_singleton","doc":"The `AddSubgroup` generated by an element of an `AddGroup` equals the set of\nnatural number multiples of the element."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_closure_singleton\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_closure_singleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">{<span class=\"fn\">x</span>}</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1299-L1300","name":"Subgroup.iSup_eq_closure","line":1299,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.iSup_eq_closure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.iSup_eq_closure\"><span class=\"name\">Subgroup</span>.<span class=\"name\">iSup_eq_closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">i</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <span class=\"fn\">ι</span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1298-L1298","name":"AddSubgroup.iSup_eq_closure","line":1298,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.iSup_eq_closure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.iSup_eq_closure\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">iSup_eq_closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">i</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <span class=\"fn\">ι</span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1294-L1294","name":"Subgroup.closure_eq_bot_iff","line":1294,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_eq_bot_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_eq_bot_iff\"><span class=\"name\">Subgroup</span>.<span class=\"name\">closure_eq_bot_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">{<span class=\"fn\">1</span>}</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1293-L1293","name":"AddSubgroup.closure_eq_bot_iff","line":1293,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_eq_bot_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_eq_bot_iff\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">closure_eq_bot_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">{<span class=\"fn\">0</span>}</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1288-L1289","name":"Subgroup.closure_iUnion","line":1288,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_iUnion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_iUnion\"><span class=\"name\">Subgroup</span>.<span class=\"name\">closure_iUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1287-L1287","name":"AddSubgroup.closure_iUnion","line":1287,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_iUnion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_iUnion\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">closure_iUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1284-L1285","name":"Subgroup.sup_eq_closure","line":1284,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.sup_eq_closure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.sup_eq_closure\"><span class=\"name\">Subgroup</span>.<span class=\"name\">sup_eq_closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H' : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">H'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">H</span></span> <a href=\"./Std/Classes/SetNotation.html#Union.union\">∪</a> <span class=\"fn\">↑<span class=\"fn\">H'</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1283-L1283","name":"AddSubgroup.sup_eq_closure","line":1283,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.sup_eq_closure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.sup_eq_closure\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">sup_eq_closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H' : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">H'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">H</span></span> <a href=\"./Std/Classes/SetNotation.html#Union.union\">∪</a> <span class=\"fn\">↑<span class=\"fn\">H'</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1278-L1279","name":"Subgroup.closure_union","line":1278,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_union","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_union\"><span class=\"name\">Subgroup</span>.<span class=\"name\">closure_union</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#Union.union\">∪</a> <span class=\"fn\">t</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">s</span></span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">t</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1277-L1277","name":"AddSubgroup.closure_union","line":1277,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_union","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_union\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">closure_union</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#Union.union\">∪</a> <span class=\"fn\">t</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">s</span></span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">t</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1272-L1273","name":"Subgroup.closure_univ","line":1272,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_univ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_univ\"><span class=\"name\">Subgroup</span>.<span class=\"name\">closure_univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">Set.univ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1271-L1271","name":"AddSubgroup.closure_univ","line":1271,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_univ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_univ\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">closure_univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">Set.univ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1266-L1267","name":"Subgroup.closure_empty","line":1266,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_empty\"><span class=\"name\">Subgroup</span>.<span class=\"name\">closure_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1265-L1265","name":"AddSubgroup.closure_empty","line":1265,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_empty\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">closure_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1260-L1261","name":"Subgroup.closure_eq","line":1260,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_eq","doc":"Closure of a subgroup `K` equals `K`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_eq\"><span class=\"name\">Subgroup</span>.<span class=\"name\">closure_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1259-L1259","name":"AddSubgroup.closure_eq","line":1259,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_eq","doc":"Additive closure of an additive subgroup `K` equals `K`"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_eq\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">closure_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1253-L1254","name":"Subgroup.closure_mono","line":1253,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_mono","doc":"Subgroup closure of a set is monotone in its argument: if `h ⊆ k`,\nthen `closure h ≤ closure k`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_mono\"><span class=\"name\">Subgroup</span>.<span class=\"name\">closure_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃h : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃k : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h' : <span class=\"fn\"><span class=\"fn\">h</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1250-L1252","name":"AddSubgroup.closure_mono","line":1250,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_mono","doc":"Additive subgroup closure of a set is monotone in its argument: if `h ⊆ k`,\nthen `closure h ≤ closure k`"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_mono\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">closure_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃h : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃k : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h' : <span class=\"fn\"><span class=\"fn\">h</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1237-L1242","name":"Subgroup.gi","line":1237,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.gi","doc":"`closure` forms a Galois insertion with the coercion to set. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.gi\"><span class=\"name\">Subgroup</span>.<span class=\"name\">gi</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/GaloisConnection.html#GaloisInsertion\">GaloisInsertion</a> <span class=\"fn\">Subgroup.closure</span> <span class=\"fn\">SetLike.coe</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1236-L1236","name":"AddSubgroup.gi.proof_2","line":1236,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.gi.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.gi.proof_2\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">gi</span>.<span class=\"name\">proof_2</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(_s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(_h : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">_s</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">_s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>) (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">s</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">s</span></span></span>)</span> <span class=\"fn\">_s</span> <span class=\"fn\">_h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>) (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">s</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">s</span></span></span>)</span> <span class=\"fn\">_s</span> <span class=\"fn\">_h</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1236-L1236","name":"AddSubgroup.gi","line":1236,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.gi","doc":"`closure` forms a Galois insertion with the coercion to set."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.gi\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">gi</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/GaloisConnection.html#GaloisInsertion\">GaloisInsertion</a> <span class=\"fn\">AddSubgroup.closure</span> <span class=\"fn\">SetLike.coe</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1236-L1236","name":"AddSubgroup.gi.proof_1","line":1236,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.gi.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.gi.proof_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">gi</span>.<span class=\"name\">proof_1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(_s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">_s</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">↑<span class=\"fn\">_s</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1215-L1229","name":"Subgroup.closureCommGroupOfComm","line":1215,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closureCommGroupOfComm","doc":"If all the elements of a set `s` commute, then `closure s` is a commutative group. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closureCommGroupOfComm\"><span class=\"name\">Subgroup</span>.<span class=\"name\">closureCommGroupOfComm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hcomm : <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">k</span>, <span class=\"fn\">∀ <span class=\"fn\">y</span> ∈ <span class=\"fn\">k</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">k</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1212-L1214","name":"AddSubgroup.closureAddCommGroupOfComm","line":1212,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closureAddCommGroupOfComm","doc":"If all the elements of a set `s` commute, then `closure s` is an additive\ncommutative group."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closureAddCommGroupOfComm\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">closureAddCommGroupOfComm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hcomm : <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">k</span>, <span class=\"fn\">∀ <span class=\"fn\">y</span> ∈ <span class=\"fn\">k</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">k</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1212-L1214","name":"AddSubgroup.closureAddCommGroupOfComm.proof_1","line":1212,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closureAddCommGroupOfComm.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closureAddCommGroupOfComm.proof_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">closureAddCommGroupOfComm</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">k</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1212-L1214","name":"AddSubgroup.closureAddCommGroupOfComm.proof_2","line":1212,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closureAddCommGroupOfComm.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closureAddCommGroupOfComm.proof_2\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">closureAddCommGroupOfComm</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hcomm : <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">k</span>, <span class=\"fn\">∀ <span class=\"fn\">y</span> ∈ <span class=\"fn\">k</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">k</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">k</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1200-L1207","name":"Subgroup.closure_closure_coe_preimage","line":1200,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_closure_coe_preimage","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_closure_coe_preimage\"><span class=\"name\">Subgroup</span>.<span class=\"name\">closure_closure_coe_preimage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Subtype.val</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">k</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1199-L1199","name":"AddSubgroup.closure_closure_coe_preimage","line":1199,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_closure_coe_preimage","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_closure_coe_preimage\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">closure_closure_coe_preimage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Subtype.val</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">k</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1188-L1195","name":"Subgroup.closure_induction₂","line":1188,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_induction₂","doc":"An induction principle for closure membership for predicates with two arguments. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_induction₂\"><span class=\"name\">Subgroup</span>.<span class=\"name\">closure_induction₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">G</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">k</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">k</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Hk : <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">k</span>, <span class=\"fn\">∀ <span class=\"fn\">y</span> ∈ <span class=\"fn\">k</span>, <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H1_left : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">1</span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H1_right : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">1</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Hmul_left : <span class=\"fn\">∀ (<span class=\"fn\">x₁ </span>x₂ y : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x₂</span></span>)</span> <span class=\"fn\">y</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Hmul_right : <span class=\"fn\">∀ (<span class=\"fn\">x </span>y₁ y₂ : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">y₁</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">y₂</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y₂</span></span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Hinv_left : <span class=\"fn\">∀ (<span class=\"fn\">x </span>y : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\"><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span> <span class=\"fn\">y</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Hinv_right : <span class=\"fn\">∀ (<span class=\"fn\">x </span>y : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\"><span class=\"fn\">y</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1185-L1187","name":"AddSubgroup.closure_induction₂","line":1185,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_induction₂","doc":"An induction principle for additive closure membership, for\npredicates with two arguments."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_induction₂\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">closure_induction₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">G</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">k</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">k</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Hk : <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">k</span>, <span class=\"fn\">∀ <span class=\"fn\">y</span> ∈ <span class=\"fn\">k</span>, <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H1_left : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">0</span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H1_right : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Hmul_left : <span class=\"fn\">∀ (<span class=\"fn\">x₁ </span>x₂ y : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x₂</span></span>)</span> <span class=\"fn\">y</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Hmul_right : <span class=\"fn\">∀ (<span class=\"fn\">x </span>y₁ y₂ : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">y₁</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">y₂</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y₂</span></span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Hinv_left : <span class=\"fn\">∀ (<span class=\"fn\">x </span>y : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span> <span class=\"fn\">y</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Hinv_right : <span class=\"fn\">∀ (<span class=\"fn\">x </span>y : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">y</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1173-L1180","name":"Subgroup.closure_induction'","line":1173,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_induction'","doc":"A dependent version of `Subgroup.closure_induction`.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_induction'\"><span class=\"name\">Subgroup</span>.<span class=\"name\">closure_induction'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">k</span></span></span> → <a href=\"./foundational_types.html\">Prop</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Hs : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">k</span></span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">k</span></span>)</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H1 : <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">1</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">k</span></span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Hmul : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) (<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">k</span></span></span>) (<span class=\"fn\">y</span> : <span class=\"fn\">G</span>) (<span class=\"fn\">hy</span> : <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">k</span></span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">hx</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">y</span> <span class=\"fn\">hy</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">k</span></span></span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Hinv : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) (<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">k</span></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">hx</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\"><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">k</span></span></span>)</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">k</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">hx</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1172-L1172","name":"AddSubgroup.closure_induction'.match_1","line":1172,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_induction'.match_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_induction'.match_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">closure_induction'</span>.<span class=\"name\">match_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">k</span></span></span> → <a href=\"./foundational_types.html\">Prop</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(motive : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ (x : <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">k</span></span></span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">y</span> <span class=\"fn\">x</span></span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">∃ (x : <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">k</span></span></span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">y</span> <span class=\"fn\">x</span></span></span>),\n  <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">hy'</span> : <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">k</span></span></span>) (<span class=\"fn\">hy</span> : <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">y</span> <span class=\"fn\">hy'</span></span>), <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">(_ : <span class=\"fn\">∃ (x : <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">k</span></span></span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">y</span> <span class=\"fn\">x</span></span></span>)</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1172-L1172","name":"AddSubgroup.closure_induction'","line":1172,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_induction'","doc":"A dependent version of `AddSubgroup.closure_induction`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_induction'\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">closure_induction'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">k</span></span></span> → <a href=\"./foundational_types.html\">Prop</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Hs : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">k</span></span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">k</span></span>)</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H1 : <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">0</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">k</span></span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Hmul : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) (<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">k</span></span></span>) (<span class=\"fn\">y</span> : <span class=\"fn\">G</span>) (<span class=\"fn\">hy</span> : <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">k</span></span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">hx</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">y</span> <span class=\"fn\">hy</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">k</span></span></span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Hinv : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) (<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">k</span></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">hx</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">k</span></span></span>)</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">k</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">hx</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1165-L1167","name":"Subgroup.closure_induction","line":1165,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_induction","doc":"An induction principle for closure membership. If `p` holds for `1` and all elements of `k`, and\nis preserved under multiplication and inverse, then `p` holds for all elements of the closure\nof `k`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_induction\"><span class=\"name\">Subgroup</span>.<span class=\"name\">closure_induction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\">G</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">k</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Hk : <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">k</span>, <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H1 : <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Hmul : <span class=\"fn\">∀ (<span class=\"fn\">x </span>y : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Hinv : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\"><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1161-L1164","name":"AddSubgroup.closure_induction","line":1161,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_induction","doc":"An induction principle for additive closure membership. If `p`\nholds for `0` and all elements of `k`, and is preserved under addition and inverses, then `p`\nholds for all elements of the additive closure of `k`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_induction\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">closure_induction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\">G</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">k</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Hk : <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">k</span>, <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H1 : <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Hmul : <span class=\"fn\">∀ (<span class=\"fn\">x </span>y : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Hinv : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1153-L1154","name":"Subgroup.closure_eq_of_le","line":1153,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_eq_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_eq_of_le\"><span class=\"name\">Subgroup</span>.<span class=\"name\">closure_eq_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">k</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1152-L1152","name":"AddSubgroup.closure_eq_of_le","line":1152,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_eq_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_eq_of_le\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">closure_eq_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">k</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1147-L1148","name":"Subgroup.closure_le","line":1147,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_le","doc":"A subgroup `K` includes `closure k` if and only if it includes `k`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure_le\"><span class=\"name\">Subgroup</span>.<span class=\"name\">closure_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1145-L1146","name":"AddSubgroup.closure_le","line":1145,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_le","doc":"An additive subgroup `K` includes `closure k` if and only if it includes `k`"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_le\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">closure_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1137-L1138","name":"Subgroup.not_mem_of_not_mem_closure","line":1137,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.not_mem_of_not_mem_closure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.not_mem_of_not_mem_closure\"><span class=\"name\">Subgroup</span>.<span class=\"name\">not_mem_of_not_mem_closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hP : <span class=\"fn\"><span class=\"fn\">P</span> ∉ <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">k</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> ∉ <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1136-L1136","name":"AddSubgroup.not_mem_of_not_mem_closure","line":1136,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.not_mem_of_not_mem_closure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.not_mem_of_not_mem_closure\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">not_mem_of_not_mem_closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hP : <span class=\"fn\"><span class=\"fn\">P</span> ∉ <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">k</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> ∉ <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1132-L1132","name":"Subgroup.subset_closure","line":1132,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subset_closure","doc":"The subgroup generated by a set includes the set. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subset_closure\"><span class=\"name\">Subgroup</span>.<span class=\"name\">subset_closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">k</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1130-L1131","name":"AddSubgroup.subset_closure","line":1130,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.subset_closure","doc":"The `AddSubgroup` generated by a set includes the set."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.subset_closure\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">subset_closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">k</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1124-L1125","name":"Subgroup.mem_closure","line":1124,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_closure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_closure\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">k</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1123-L1123","name":"AddSubgroup.mem_closure","line":1123,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_closure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_closure\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">k</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1116-L1117","name":"Subgroup.closure","line":1116,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure","doc":"The `Subgroup` generated by a set. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\"><span class=\"name\">Subgroup</span>.<span class=\"name\">closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1115-L1115","name":"AddSubgroup.closure","line":1115,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure","doc":"The `AddSubgroup` generated by a set"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1109-L1110","name":"Subgroup.eq_top_iff'","line":1109,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.eq_top_iff'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.eq_top_iff'\"><span class=\"name\">Subgroup</span>.<span class=\"name\">eq_top_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1108-L1108","name":"AddSubgroup.eq_top_iff'","line":1108,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.eq_top_iff'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.eq_top_iff'\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">eq_top_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1105-L1106","name":"Subgroup.instNontrivialSubgroup","line":1105,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.instNontrivialSubgroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.instNontrivialSubgroup\"><span class=\"name\">Subgroup</span>.<span class=\"name\">instNontrivialSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1104-L1104","name":"AddSubgroup.instNontrivialAddSubgroup","line":1104,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instNontrivialAddSubgroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instNontrivialAddSubgroup\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instNontrivialAddSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1101-L1102","name":"Subgroup.instUniqueSubgroup","line":1101,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.instUniqueSubgroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.instUniqueSubgroup\"><span class=\"name\">Subgroup</span>.<span class=\"name\">instUniqueSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1100-L1100","name":"AddSubgroup.instUniqueAddSubgroup","line":1100,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instUniqueAddSubgroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instUniqueAddSubgroup\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instUniqueAddSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1100-L1100","name":"AddSubgroup.instUniqueAddSubgroup.proof_1","line":1100,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instUniqueAddSubgroup.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instUniqueAddSubgroup.proof_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instUniqueAddSubgroup</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">default</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1093-L1096","name":"Subgroup.nontrivial_iff","line":1093,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.nontrivial_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.nontrivial_iff\"><span class=\"name\">Subgroup</span>.<span class=\"name\">nontrivial_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">G</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1092-L1092","name":"AddSubgroup.nontrivial_iff","line":1092,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.nontrivial_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.nontrivial_iff\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">nontrivial_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">G</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1082-L1088","name":"Subgroup.subsingleton_iff","line":1082,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subsingleton_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subsingleton_iff\"><span class=\"name\">Subgroup</span>.<span class=\"name\">subsingleton_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">G</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1081-L1081","name":"AddSubgroup.subsingleton_iff","line":1081,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.subsingleton_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.subsingleton_iff\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">subsingleton_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">G</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1075-L1077","name":"Subgroup.mem_sSup_of_mem","line":1075,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_sSup_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_sSup_of_mem\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_sSup_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#SupSet.sSup\">sSup</a> <span class=\"fn\">S</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1074-L1074","name":"AddSubgroup.mem_sSup_of_mem","line":1074,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_sSup_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_sSup_of_mem\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_sSup_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#SupSet.sSup\">sSup</a> <span class=\"fn\">S</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1068-L1070","name":"Subgroup.mem_iSup_of_mem","line":1068,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_iSup_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_iSup_of_mem\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_iSup_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">S</span> <span class=\"fn\">i</span></span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#iSup\">iSup</a> <span class=\"fn\">S</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1067-L1067","name":"AddSubgroup.mem_iSup_of_mem","line":1067,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_iSup_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_iSup_of_mem\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_iSup_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">S</span> <span class=\"fn\">i</span></span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#iSup\">iSup</a> <span class=\"fn\">S</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1062-L1063","name":"Subgroup.mul_mem_sup","line":1062,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mul_mem_sup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mul_mem_sup\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mul_mem_sup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">T</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1061-L1061","name":"AddSubgroup.add_mem_sup","line":1061,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.add_mem_sup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.add_mem_sup\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">add_mem_sup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">T</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1056-L1057","name":"Subgroup.mem_sup_right","line":1056,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_sup_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_sup_right\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_sup_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">T</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1055-L1055","name":"AddSubgroup.mem_sup_right","line":1055,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_sup_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_sup_right\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_sup_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">T</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1050-L1051","name":"Subgroup.mem_sup_left","line":1050,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_sup_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_sup_left\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_sup_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">T</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1049-L1049","name":"AddSubgroup.mem_sup_left","line":1049,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_sup_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_sup_left\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_sup_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">T</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1037-L1047","name":"Subgroup.instCompleteLatticeSubgroup","line":1037,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.instCompleteLatticeSubgroup","doc":"Subgroups of a group form a complete lattice. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.instCompleteLatticeSubgroup\"><span class=\"name\">Subgroup</span>.<span class=\"name\">instCompleteLatticeSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1036-L1036","name":"AddSubgroup.instCompleteLatticeAddSubgroup.proof_4","line":1036,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instCompleteLatticeAddSubgroup.proof_4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instCompleteLatticeAddSubgroup.proof_4\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instCompleteLatticeAddSubgroup</span>.<span class=\"name\">proof_4</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(_a : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(_b : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(_c : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">_a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">_b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">_a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">_c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(_x : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">_x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">_a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">_x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">_b</span>.toAddSubmonoid</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">_x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">_c</span>.toAddSubmonoid</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1036-L1036","name":"AddSubgroup.instCompleteLatticeAddSubgroup","line":1036,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instCompleteLatticeAddSubgroup","doc":"The `AddSubgroup`s of an `AddGroup` form a complete lattice."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instCompleteLatticeAddSubgroup\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instCompleteLatticeAddSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1036-L1036","name":"AddSubgroup.instCompleteLatticeAddSubgroup.proof_5","line":1036,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instCompleteLatticeAddSubgroup.proof_5","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instCompleteLatticeAddSubgroup.proof_5\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instCompleteLatticeAddSubgroup</span>.<span class=\"name\">proof_5</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#SupSet.sSup\">sSup</a> <span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1036-L1036","name":"AddSubgroup.instCompleteLatticeAddSubgroup.proof_7","line":1036,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instCompleteLatticeAddSubgroup.proof_7","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instCompleteLatticeAddSubgroup.proof_7\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instCompleteLatticeAddSubgroup</span>.<span class=\"name\">proof_7</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet.sInf\">sInf</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1036-L1036","name":"AddSubgroup.instCompleteLatticeAddSubgroup.proof_2","line":1036,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instCompleteLatticeAddSubgroup.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instCompleteLatticeAddSubgroup.proof_2\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instCompleteLatticeAddSubgroup</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(_a : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(_b : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(_x : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">_x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">_a</span>.toAddSubmonoid</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">_x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">_b</span>.toAddSubmonoid</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">_x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">_a</span>.toAddSubmonoid</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1036-L1036","name":"AddSubgroup.instCompleteLatticeAddSubgroup.proof_3","line":1036,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instCompleteLatticeAddSubgroup.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instCompleteLatticeAddSubgroup.proof_3\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instCompleteLatticeAddSubgroup</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(_a : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(_b : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(_x : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">_x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">_a</span>.toAddSubmonoid</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">_x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">_b</span>.toAddSubmonoid</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">_x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">_b</span>.toAddSubmonoid</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1036-L1036","name":"AddSubgroup.instCompleteLatticeAddSubgroup.proof_6","line":1036,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instCompleteLatticeAddSubgroup.proof_6","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instCompleteLatticeAddSubgroup.proof_6\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instCompleteLatticeAddSubgroup</span>.<span class=\"name\">proof_6</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">b</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#SupSet.sSup\">sSup</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1036-L1036","name":"AddSubgroup.instCompleteLatticeAddSubgroup.proof_9","line":1036,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instCompleteLatticeAddSubgroup.proof_9","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instCompleteLatticeAddSubgroup.proof_9\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instCompleteLatticeAddSubgroup</span>.<span class=\"name\">proof_9</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(_x : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">_x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">_x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1036-L1036","name":"AddSubgroup.instCompleteLatticeAddSubgroup.proof_8","line":1036,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instCompleteLatticeAddSubgroup.proof_8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instCompleteLatticeAddSubgroup.proof_8\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instCompleteLatticeAddSubgroup</span>.<span class=\"name\">proof_8</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">b</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet.sInf\">sInf</a> <span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1036-L1036","name":"AddSubgroup.instCompleteLatticeAddSubgroup.proof_1","line":1036,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instCompleteLatticeAddSubgroup.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instCompleteLatticeAddSubgroup.proof_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instCompleteLatticeAddSubgroup</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(_s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Basic.html#IsGLB\">IsGLB</a> <span class=\"fn\">_s</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet.sInf\">sInf</a> <span class=\"fn\">_s</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1030-L1031","name":"Subgroup.coe_iInf","line":1030,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_iInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_iInf\"><span class=\"name\">Subgroup</span>.<span class=\"name\">coe_iInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">⨅ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">S</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⋂ (i : <span class=\"fn\">ι</span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">S</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1029-L1029","name":"AddSubgroup.coe_iInf","line":1029,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_iInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_iInf\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">coe_iInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">⨅ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">S</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⋂ (i : <span class=\"fn\">ι</span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">S</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1024-L1025","name":"Subgroup.mem_iInf","line":1024,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_iInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_iInf\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_iInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">⨅ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">S</span> <span class=\"fn\">i</span></span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">S</span> <span class=\"fn\">i</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1023-L1023","name":"AddSubgroup.mem_iInf","line":1023,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_iInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_iInf\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_iInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">⨅ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">S</span> <span class=\"fn\">i</span></span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">S</span> <span class=\"fn\">i</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1018-L1019","name":"Subgroup.mem_sInf","line":1018,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_sInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_sInf\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_sInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet.sInf\">sInf</a> <span class=\"fn\">S</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">p</span> ∈ <span class=\"fn\">S</span>, <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1017-L1017","name":"AddSubgroup.mem_sInf","line":1017,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_sInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_sInf\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_sInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet.sInf\">sInf</a> <span class=\"fn\">S</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">p</span> ∈ <span class=\"fn\">S</span>, <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1012-L1013","name":"Subgroup.coe_sInf","line":1012,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_sInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_sInf\"><span class=\"name\">Subgroup</span>.<span class=\"name\">coe_sInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet.sInf\">sInf</a> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⋂ s ∈ <span class=\"fn\">H</span>, <span class=\"fn\">↑<span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1011-L1011","name":"AddSubgroup.coe_sInf","line":1011,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_sInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_sInf\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">coe_sInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet.sInf\">sInf</a> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⋂ s ∈ <span class=\"fn\">H</span>, <span class=\"fn\">↑<span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1005-L1009","name":"Subgroup.instInfSetSubgroup","line":1005,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.instInfSetSubgroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.instInfSetSubgroup\"><span class=\"name\">Subgroup</span>.<span class=\"name\">instInfSetSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet\">InfSet</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1004-L1004","name":"AddSubgroup.instInfSetAddSubgroup.proof_3","line":1004,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instInfSetAddSubgroup.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instInfSetAddSubgroup.proof_3\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instInfSetAddSubgroup</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{\n        <span class=\"fn\">toAddSubsemigroup</span> :=\n          <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid.copy\">AddSubmonoid.copy</a> <span class=\"fn\">(<span class=\"fn\">⨅ S ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">S</span>.toAddSubmonoid</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">⋂ S ∈ <span class=\"fn\">s</span>, <span class=\"fn\">↑<span class=\"fn\">S</span></span></span>)</span>\n              <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">⋂ S ∈ <span class=\"fn\">s</span>, <span class=\"fn\">↑<span class=\"fn\">S</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">⨅ i ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">i</span>.toAddSubmonoid</span></span>)</span></span></span>)</span></span>)</span>.toAddSubsemigroup</span>,\n        <span class=\"fn\">zero_mem'</span> :=\n          <span class=\"fn\">(_ :\n            <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a>               <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid.copy\">AddSubmonoid.copy</a> <span class=\"fn\">(<span class=\"fn\">⨅ S ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">S</span>.toAddSubmonoid</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">⋂ S ∈ <span class=\"fn\">s</span>, <span class=\"fn\">↑<span class=\"fn\">S</span></span></span>)</span>\n                    <span class=\"fn\">(_ :\n                      <span class=\"fn\"><span class=\"fn\">⋂ S ∈ <span class=\"fn\">s</span>, <span class=\"fn\">↑<span class=\"fn\">S</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                         <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">⨅ i ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">i</span>.toAddSubmonoid</span></span>)</span></span></span>)</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span>)</span> }</span>.toAddSubsemigroup</span>.carrier</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">⋂ x ∈ <span class=\"fn\">s</span>, <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1004-L1004","name":"AddSubgroup.instInfSetAddSubgroup","line":1004,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instInfSetAddSubgroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instInfSetAddSubgroup\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instInfSetAddSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet\">InfSet</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1004-L1004","name":"AddSubgroup.instInfSetAddSubgroup.proof_1","line":1004,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instInfSetAddSubgroup.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instInfSetAddSubgroup.proof_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instInfSetAddSubgroup</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⋂ S ∈ <span class=\"fn\">s</span>, <span class=\"fn\">↑<span class=\"fn\">S</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">⨅ i ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">i</span>.toAddSubmonoid</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L1004-L1004","name":"AddSubgroup.instInfSetAddSubgroup.proof_2","line":1004,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instInfSetAddSubgroup.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instInfSetAddSubgroup.proof_2\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instInfSetAddSubgroup</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid.copy\">AddSubmonoid.copy</a> <span class=\"fn\">(<span class=\"fn\">⨅ S ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">S</span>.toAddSubmonoid</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">⋂ S ∈ <span class=\"fn\">s</span>, <span class=\"fn\">↑<span class=\"fn\">S</span></span></span>)</span>\n        <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">⋂ S ∈ <span class=\"fn\">s</span>, <span class=\"fn\">↑<span class=\"fn\">S</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">⨅ i ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">i</span>.toAddSubmonoid</span></span>)</span></span></span>)</span></span>)</span>.toAddSubsemigroup</span>.carrier</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L999-L1000","name":"Subgroup.mem_inf","line":999,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_inf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_inf\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_inf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p' : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">p'</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">p'</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L998-L998","name":"AddSubgroup.mem_inf","line":998,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_inf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_inf\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_inf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p' : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">p'</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">p'</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L993-L994","name":"Subgroup.coe_inf","line":993,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_inf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_inf\"><span class=\"name\">Subgroup</span>.<span class=\"name\">coe_inf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p' : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">p'</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">↑<span class=\"fn\">p'</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L992-L992","name":"AddSubgroup.coe_inf","line":992,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_inf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_inf\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">coe_inf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p' : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">p'</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">↑<span class=\"fn\">p'</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L987-L990","name":"Subgroup.instInfSubgroup","line":987,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.instInfSubgroup","doc":"The inf of two subgroups is their intersection. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.instInfSubgroup\"><span class=\"name\">Subgroup</span>.<span class=\"name\">instInfSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Inf\">Inf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L986-L986","name":"AddSubgroup.instInfAddSubgroup.proof_2","line":986,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instInfAddSubgroup.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instInfAddSubgroup.proof_2\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instInfAddSubgroup</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H₁ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H₂ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\">G</span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a>       <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toAddSubsemigroup</span> := <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H₁</span>.toAddSubmonoid</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\"><span class=\"fn\">H₂</span>.toAddSubmonoid</span></span>)</span>.toAddSubsemigroup</span>,\n            <span class=\"fn\">zero_mem'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H₁</span>.toAddSubmonoid</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\"><span class=\"fn\">H₂</span>.toAddSubmonoid</span></span>)</span>.carrier</span></span>)</span> }</span>.toAddSubsemigroup</span>.carrier</span></span> →\n    <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a>       <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toAddSubsemigroup</span> := <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H₁</span>.toAddSubmonoid</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\"><span class=\"fn\">H₂</span>.toAddSubmonoid</span></span>)</span>.toAddSubsemigroup</span>,\n            <span class=\"fn\">zero_mem'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H₁</span>.toAddSubmonoid</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\"><span class=\"fn\">H₂</span>.toAddSubmonoid</span></span>)</span>.carrier</span></span>)</span> }</span>.toAddSubsemigroup</span>.carrier</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L986-L986","name":"AddSubgroup.instInfAddSubgroup","line":986,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instInfAddSubgroup","doc":"The inf of two `AddSubgroup`s is their intersection."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instInfAddSubgroup\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instInfAddSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Inf\">Inf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L986-L986","name":"AddSubgroup.instInfAddSubgroup.match_1","line":986,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instInfAddSubgroup.match_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instInfAddSubgroup.match_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instInfAddSubgroup</span>.<span class=\"name\">match_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H₁ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H₂ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\">G</span>},\n  <span class=\"fn\">let src := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H₁</span>.toAddSubmonoid</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\"><span class=\"fn\">H₂</span>.toAddSubmonoid</span></span>;\n  <span class=\"fn\">∀\n    (<span class=\"fn\">motive</span> :\n      <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toAddSubsemigroup</span> := <span class=\"fn\"><span class=\"fn\">src</span>.toAddSubsemigroup</span>, <span class=\"fn\">zero_mem'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">src</span>.carrier</span></span>)</span> }</span>.toAddSubsemigroup</span>.carrier</span></span> →\n        <a href=\"./foundational_types.html\">Prop</a></span>)\n    (<span class=\"fn\">x_1</span> :\n      <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toAddSubsemigroup</span> := <span class=\"fn\"><span class=\"fn\">src</span>.toAddSubsemigroup</span>, <span class=\"fn\">zero_mem'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">src</span>.carrier</span></span>)</span> }</span>.toAddSubsemigroup</span>.carrier</span></span>),\n    <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">H₁</span>.toAddSubmonoid</span></span></span>) (<span class=\"fn\">hx'</span> : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">H₂</span>.toAddSubmonoid</span></span></span>),\n        <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">H₁</span>.toAddSubmonoid</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">H₂</span>.toAddSubmonoid</span></span></span></span>)</span></span></span>)</span> →\n      <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">x_1</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L986-L986","name":"AddSubgroup.instInfAddSubgroup.proof_1","line":986,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instInfAddSubgroup.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instInfAddSubgroup.proof_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instInfAddSubgroup</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H₁ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H₂ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H₁</span>.toAddSubmonoid</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\"><span class=\"fn\">H₂</span>.toAddSubmonoid</span></span>)</span>.carrier</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L981-L983","name":"Subgroup.ne_bot_iff_exists_ne_one","line":981,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.ne_bot_iff_exists_ne_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.ne_bot_iff_exists_ne_one\"><span class=\"name\">Subgroup</span>.<span class=\"name\">ne_bot_iff_exists_ne_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (a : <span class=\"fn\">↥<span class=\"fn\">H</span></span>), <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L980-L980","name":"AddSubgroup.ne_bot_iff_exists_ne_zero","line":980,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.ne_bot_iff_exists_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.ne_bot_iff_exists_ne_zero\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">ne_bot_iff_exists_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (a : <span class=\"fn\">↥<span class=\"fn\">H</span></span>), <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L974-L976","name":"Subgroup.bot_or_exists_ne_one","line":974,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.bot_or_exists_ne_one","doc":"A subgroup is either the trivial subgroup or contains a non-identity element. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.bot_or_exists_ne_one\"><span class=\"name\">Subgroup</span>.<span class=\"name\">bot_or_exists_ne_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">∃ x ∈ <span class=\"fn\">H</span>, <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L973-L973","name":"AddSubgroup.bot_or_exists_ne_zero","line":973,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.bot_or_exists_ne_zero","doc":"A subgroup is either the trivial subgroup or contains a nonzero element."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.bot_or_exists_ne_zero\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">bot_or_exists_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">∃ x ∈ <span class=\"fn\">H</span>, <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L966-L968","name":"Subgroup.bot_or_nontrivial","line":966,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.bot_or_nontrivial","doc":"A subgroup is either the trivial subgroup or nontrivial. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.bot_or_nontrivial\"><span class=\"name\">Subgroup</span>.<span class=\"name\">bot_or_nontrivial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L965-L965","name":"AddSubgroup.bot_or_nontrivial","line":965,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.bot_or_nontrivial","doc":"A subgroup is either the trivial subgroup or nontrivial."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.bot_or_nontrivial\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">bot_or_nontrivial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L960-L962","name":"Subgroup.nontrivial_iff_ne_bot","line":960,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.nontrivial_iff_ne_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.nontrivial_iff_ne_bot\"><span class=\"name\">Subgroup</span>.<span class=\"name\">nontrivial_iff_ne_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L959-L959","name":"AddSubgroup.nontrivial_iff_ne_bot","line":959,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.nontrivial_iff_ne_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.nontrivial_iff_ne_bot\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">nontrivial_iff_ne_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L955-L957","name":"Subgroup.exists_ne_one_of_nontrivial","line":955,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.exists_ne_one_of_nontrivial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.exists_ne_one_of_nontrivial\"><span class=\"name\">Subgroup</span>.<span class=\"name\">exists_ne_one_of_nontrivial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ x ∈ <span class=\"fn\">H</span>, <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L954-L954","name":"AddSubgroup.exists_ne_zero_of_nontrivial","line":954,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.exists_ne_zero_of_nontrivial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.exists_ne_zero_of_nontrivial\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">exists_ne_zero_of_nontrivial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ x ∈ <span class=\"fn\">H</span>, <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L948-L950","name":"Subgroup.nontrivial_iff_exists_ne_one","line":948,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.nontrivial_iff_exists_ne_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.nontrivial_iff_exists_ne_one\"><span class=\"name\">Subgroup</span>.<span class=\"name\">nontrivial_iff_exists_ne_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ x ∈ <span class=\"fn\">H</span>, <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L947-L947","name":"AddSubgroup.nontrivial_iff_exists_ne_zero","line":947,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.nontrivial_iff_exists_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.nontrivial_iff_exists_ne_zero\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">nontrivial_iff_exists_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ x ∈ <span class=\"fn\">H</span>, <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L937-L943","name":"Subgroup.coe_eq_singleton","line":937,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_eq_singleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_eq_singleton\"><span class=\"name\">Subgroup</span>.<span class=\"name\">coe_eq_singleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ (g : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">g</span>}</span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L936-L936","name":"AddSubgroup.coe_eq_singleton.match_1","line":936,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_eq_singleton.match_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_eq_singleton.match_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">coe_eq_singleton</span>.<span class=\"name\">match_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(motive : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ (g : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">g</span>}</span></span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">∃ (g : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">g</span>}</span></span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">g</span> : <span class=\"fn\">G</span>) (<span class=\"fn\">hg</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">g</span>}</span></span>), <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">(_ : <span class=\"fn\">∃ (g : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">g</span>}</span></span></span>)</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L936-L936","name":"AddSubgroup.coe_eq_singleton","line":936,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_eq_singleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_eq_singleton\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">coe_eq_singleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ (g : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">g</span>}</span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L931-L932","name":"Subgroup.coe_eq_univ","line":931,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_eq_univ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_eq_univ\"><span class=\"name\">Subgroup</span>.<span class=\"name\">coe_eq_univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Set.univ</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L930-L930","name":"AddSubgroup.coe_eq_univ","line":930,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_eq_univ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_eq_univ\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">coe_eq_univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Set.univ</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L923-L926","name":"Subgroup.eq_bot_of_subsingleton","line":923,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.eq_bot_of_subsingleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.eq_bot_of_subsingleton\"><span class=\"name\">Subgroup</span>.<span class=\"name\">eq_bot_of_subsingleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L922-L922","name":"AddSubgroup.eq_bot_of_subsingleton","line":922,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.eq_bot_of_subsingleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.eq_bot_of_subsingleton\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">eq_bot_of_subsingleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L917-L918","name":"Subgroup.eq_bot_iff_forall","line":917,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.eq_bot_iff_forall","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.eq_bot_iff_forall\"><span class=\"name\">Subgroup</span>.<span class=\"name\">eq_bot_iff_forall</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">H</span>, <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L916-L916","name":"AddSubgroup.eq_bot_iff_forall","line":916,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.eq_bot_iff_forall","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.eq_bot_iff_forall\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">eq_bot_iff_forall</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">H</span>, <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L911-L912","name":"Subgroup.bot_toSubmonoid","line":911,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.bot_toSubmonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.bot_toSubmonoid\"><span class=\"name\">Subgroup</span>.<span class=\"name\">bot_toSubmonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a>.toSubmonoid</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L910-L910","name":"AddSubgroup.bot_toAddSubmonoid","line":910,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.bot_toAddSubmonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.bot_toAddSubmonoid\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">bot_toAddSubmonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a>.toAddSubmonoid</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L905-L906","name":"Subgroup.top_toSubmonoid","line":905,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.top_toSubmonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.top_toSubmonoid\"><span class=\"name\">Subgroup</span>.<span class=\"name\">top_toSubmonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>.toSubmonoid</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L904-L904","name":"AddSubgroup.top_toAddSubmonoid","line":904,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.top_toAddSubmonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.top_toAddSubmonoid\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">top_toAddSubmonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>.toAddSubmonoid</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L901-L902","name":"Subgroup.instUniqueSubtypeMemSubgroupInstMembershipInstSetLikeSubgroupBotInstBotSubgroup","line":901,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.instUniqueSubtypeMemSubgroupInstMembershipInstSetLikeSubgroupBotInstBotSubgroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.instUniqueSubtypeMemSubgroupInstMembershipInstSetLikeSubgroupBotInstBotSubgroup\"><span class=\"name\">Subgroup</span>.<span class=\"name\">instUniqueSubtypeMemSubgroupInstMembershipInstSetLikeSubgroupBotInstBotSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">↥<a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L900-L900","name":"AddSubgroup.instUniqueSubtypeMemAddSubgroupInstMembershipInstSetLikeAddSubgroupBotInstBotAddSubgroup.proof_1","line":900,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instUniqueSubtypeMemAddSubgroupInstMembershipInstSetLikeAddSubgroupBotInstBotAddSubgroup.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instUniqueSubtypeMemAddSubgroupInstMembershipInstSetLikeAddSubgroupBotInstBotAddSubgroup.proof_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instUniqueSubtypeMemAddSubgroupInstMembershipInstSetLikeAddSubgroupBotInstBotAddSubgroup</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">↥<a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">default</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L900-L900","name":"AddSubgroup.instUniqueSubtypeMemAddSubgroupInstMembershipInstSetLikeAddSubgroupBotInstBotAddSubgroup","line":900,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instUniqueSubtypeMemAddSubgroupInstMembershipInstSetLikeAddSubgroupBotInstBotAddSubgroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instUniqueSubtypeMemAddSubgroupInstMembershipInstSetLikeAddSubgroupBotInstBotAddSubgroup\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instUniqueSubtypeMemAddSubgroupInstMembershipInstSetLikeAddSubgroupBotInstBotAddSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">↥<a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L895-L896","name":"Subgroup.coe_bot","line":895,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_bot\"><span class=\"name\">Subgroup</span>.<span class=\"name\">coe_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">1</span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L894-L894","name":"AddSubgroup.coe_bot","line":894,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_bot\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">coe_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">0</span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L889-L890","name":"Subgroup.coe_top","line":889,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_top\"><span class=\"name\">Subgroup</span>.<span class=\"name\">coe_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Set.univ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L888-L888","name":"AddSubgroup.coe_top","line":888,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_top\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">coe_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Set.univ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L883-L884","name":"Subgroup.mem_top","line":883,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_top\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L882-L882","name":"AddSubgroup.mem_top","line":882,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_top\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L877-L878","name":"Subgroup.mem_bot","line":877,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_bot\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L876-L876","name":"AddSubgroup.mem_bot","line":876,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_bot\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L873-L874","name":"Subgroup.instInhabitedSubgroup","line":873,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.instInhabitedSubgroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.instInhabitedSubgroup\"><span class=\"name\">Subgroup</span>.<span class=\"name\">instInhabitedSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L872-L872","name":"AddSubgroup.instInhabitedAddSubgroup","line":872,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instInhabitedAddSubgroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instInhabitedAddSubgroup\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instInhabitedAddSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L869-L870","name":"Subgroup.instBotSubgroup","line":869,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.instBotSubgroup","doc":"The trivial subgroup `{1}` of a group `G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.instBotSubgroup\"><span class=\"name\">Subgroup</span>.<span class=\"name\">instBotSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Bot\">Bot</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L868-L868","name":"AddSubgroup.instBotAddSubgroup","line":868,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instBotAddSubgroup","doc":"The trivial `AddSubgroup` `{0}` of an `AddGroup` `G`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instBotAddSubgroup\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instBotAddSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Bot\">Bot</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L868-L868","name":"AddSubgroup.instBotAddSubgroup.proof_2","line":868,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instBotAddSubgroup.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instBotAddSubgroup.proof_2\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instBotAddSubgroup</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a>.carrier</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a>.carrier</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L868-L868","name":"AddSubgroup.instBotAddSubgroup.proof_1","line":868,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instBotAddSubgroup.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instBotAddSubgroup.proof_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instBotAddSubgroup</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a>.carrier</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L859-L860","name":"Subgroup.topEquiv","line":859,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.topEquiv","doc":"The top subgroup is isomorphic to the group.\n\nThis is the group version of `Submonoid.topEquiv`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.topEquiv\"><span class=\"name\">Subgroup</span>.<span class=\"name\">topEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↥<a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L855-L855","name":"Subgroup.topEquiv_symm_apply_coe","line":855,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.topEquiv_symm_apply_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.topEquiv_symm_apply_coe\"><span class=\"name\">Subgroup</span>.<span class=\"name\">topEquiv_symm_apply_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.symm\">MulEquiv.symm</a> <span class=\"fn\">Subgroup.topEquiv</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L855-L855","name":"AddSubgroup.topEquiv_apply","line":855,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.topEquiv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.topEquiv_apply\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">topEquiv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">AddSubgroup.topEquiv</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L855-L855","name":"AddSubgroup.topEquiv_symm_apply_coe","line":855,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.topEquiv_symm_apply_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.topEquiv_symm_apply_coe\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">topEquiv_symm_apply_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.symm\">AddEquiv.symm</a> <span class=\"fn\">AddSubgroup.topEquiv</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L855-L855","name":"Subgroup.topEquiv_apply","line":855,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.topEquiv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.topEquiv_apply\"><span class=\"name\">Subgroup</span>.<span class=\"name\">topEquiv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Subgroup.topEquiv</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L855-L858","name":"AddSubgroup.topEquiv","line":855,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.topEquiv","doc":"The top additive subgroup is isomorphic to the additive group.\n\nThis is the additive group version of `AddSubmonoid.topEquiv`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.topEquiv\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">topEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↥<a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L849-L850","name":"Subgroup.instTopSubgroup","line":849,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.instTopSubgroup","doc":"The subgroup `G` of the group `G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.instTopSubgroup\"><span class=\"name\">Subgroup</span>.<span class=\"name\">instTopSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Top\">Top</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L848-L848","name":"AddSubgroup.instTopAddSubgroup.proof_2","line":848,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instTopAddSubgroup.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instTopAddSubgroup.proof_2\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instTopAddSubgroup</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\">G</span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toAddSubsemigroup</span> := <span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>.toAddSubsemigroup</span>, <span class=\"fn\">zero_mem'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>.carrier</span></span>)</span> }</span>.toAddSubsemigroup</span>.carrier</span></span> →\n    <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">Set.univ</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L848-L848","name":"AddSubgroup.instTopAddSubgroup","line":848,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instTopAddSubgroup","doc":"The `AddSubgroup G` of the `AddGroup G`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instTopAddSubgroup\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instTopAddSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Top\">Top</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L848-L848","name":"AddSubgroup.instTopAddSubgroup.proof_1","line":848,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instTopAddSubgroup.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instTopAddSubgroup.proof_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instTopAddSubgroup</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>.carrier</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L841-L843","name":"Subgroup.subtype_comp_inclusion","line":841,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subtype_comp_inclusion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subtype_comp_inclusion\"><span class=\"name\">Subgroup</span>.<span class=\"name\">subtype_comp_inclusion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hH : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.comp\">MonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subtype\">Subgroup.subtype</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.inclusion\">Subgroup.inclusion</a> <span class=\"fn\">hH</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subtype\">Subgroup.subtype</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L840-L840","name":"AddSubgroup.subtype_comp_inclusion","line":840,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.subtype_comp_inclusion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.subtype_comp_inclusion\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">subtype_comp_inclusion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hH : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.subtype\">AddSubgroup.subtype</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.inclusion\">AddSubgroup.inclusion</a> <span class=\"fn\">hH</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.subtype\">AddSubgroup.subtype</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L835-L836","name":"Subgroup.inclusion_injective","line":835,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.inclusion_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.inclusion_injective\"><span class=\"name\">Subgroup</span>.<span class=\"name\">inclusion_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.inclusion\">Subgroup.inclusion</a> <span class=\"fn\">h</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L834-L834","name":"AddSubgroup.inclusion_injective","line":834,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.inclusion_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.inclusion_injective\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">inclusion_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.inclusion\">AddSubgroup.inclusion</a> <span class=\"fn\">h</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L828-L830","name":"Subgroup.coe_inclusion","line":828,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_inclusion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_inclusion\"><span class=\"name\">Subgroup</span>.<span class=\"name\">coe_inclusion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.inclusion\">Subgroup.inclusion</a> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L827-L827","name":"AddSubgroup.coe_inclusion","line":827,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_inclusion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_inclusion\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">coe_inclusion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.inclusion\">AddSubgroup.inclusion</a> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L822-L823","name":"Subgroup.inclusion","line":822,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.inclusion","doc":"The inclusion homomorphism from a subgroup `H` contained in `K` to `K`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.inclusion\"><span class=\"name\">Subgroup</span>.<span class=\"name\">inclusion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">H</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">↥<span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L821-L821","name":"AddSubgroup.inclusion.proof_1","line":821,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.inclusion.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.inclusion.proof_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">inclusion</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L821-L821","name":"AddSubgroup.inclusion","line":821,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.inclusion","doc":"The inclusion homomorphism from an additive subgroup `H` contained in `K` to `K`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.inclusion\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">inclusion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">H</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">↥<span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L821-L821","name":"AddSubgroup.inclusion.proof_2","line":821,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.inclusion.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.inclusion.proof_2\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">inclusion</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x </span>x_1 : <span class=\"fn\">↥<span class=\"fn\">H</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) =&gt; <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">↑<span class=\"fn\">x</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span>)</span> }</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) =&gt; <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">↑<span class=\"fn\">x</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span>)</span> }</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L815-L816","name":"Subgroup.subtype_injective","line":815,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subtype_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subtype_injective\"><span class=\"name\">Subgroup</span>.<span class=\"name\">subtype_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subtype\">Subgroup.subtype</a> <span class=\"fn\">H</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L814-L814","name":"AddSubgroup.subtype_injective","line":814,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.subtype_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.subtype_injective\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">subtype_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.subtype\">AddSubgroup.subtype</a> <span class=\"fn\">H</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L809-L810","name":"Subgroup.coeSubtype","line":809,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coeSubtype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coeSubtype\"><span class=\"name\">Subgroup</span>.<span class=\"name\">coeSubtype</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subtype\">Subgroup.subtype</a> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Subtype.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L808-L808","name":"AddSubgroup.coeSubtype","line":808,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coeSubtype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coeSubtype\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">coeSubtype</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.subtype\">AddSubgroup.subtype</a> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Subtype.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L803-L804","name":"Subgroup.subtype","line":803,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subtype","doc":"The natural group hom from a subgroup of group `G` to `G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.subtype\"><span class=\"name\">Subgroup</span>.<span class=\"name\">subtype</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">H</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L802-L802","name":"AddSubgroup.subtype.proof_2","line":802,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.subtype.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.subtype.proof_2\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">subtype</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x </span>x_1 : <span class=\"fn\">↥<span class=\"fn\">H</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">Subtype.val</span>, <span class=\"fn\">map_zero'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">0</span></span></span>)</span> }</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">Subtype.val</span>, <span class=\"fn\">map_zero'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">0</span></span></span>)</span> }</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L802-L802","name":"AddSubgroup.subtype","line":802,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.subtype","doc":"The natural group hom from an `AddSubgroup` of `AddGroup` `G` to `G`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.subtype\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">subtype</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">H</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L802-L802","name":"AddSubgroup.subtype.proof_1","line":802,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.subtype.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.subtype.proof_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">subtype</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L794-L797","name":"Subgroup.toLinearOrderedCommGroup","line":794,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.toLinearOrderedCommGroup","doc":"A subgroup of a `LinearOrderedCommGroup` is a `LinearOrderedCommGroup`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.toLinearOrderedCommGroup\"><span class=\"name\">Subgroup</span>.<span class=\"name\">toLinearOrderedCommGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#LinearOrderedCommGroup\">LinearOrderedCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#LinearOrderedCommGroup\">LinearOrderedCommGroup</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L791-L793","name":"AddSubgroup.toLinearOrderedAddCommGroup.proof_1","line":791,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toLinearOrderedAddCommGroup.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toLinearOrderedAddCommGroup.proof_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toLinearOrderedAddCommGroup</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#LinearOrderedAddCommGroup\">LinearOrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L791-L793","name":"AddSubgroup.toLinearOrderedAddCommGroup.proof_4","line":791,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toLinearOrderedAddCommGroup.proof_4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toLinearOrderedAddCommGroup.proof_4\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toLinearOrderedAddCommGroup</span>.<span class=\"name\">proof_4</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#LinearOrderedAddCommGroup\">LinearOrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L791-L793","name":"AddSubgroup.toLinearOrderedAddCommGroup.proof_5","line":791,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toLinearOrderedAddCommGroup.proof_5","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toLinearOrderedAddCommGroup.proof_5\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toLinearOrderedAddCommGroup</span>.<span class=\"name\">proof_5</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#LinearOrderedAddCommGroup\">LinearOrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x </span>x_1 : <span class=\"fn\">↥<span class=\"fn\">H</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x_1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x_1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L791-L793","name":"AddSubgroup.toLinearOrderedAddCommGroup.proof_6","line":791,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toLinearOrderedAddCommGroup.proof_6","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toLinearOrderedAddCommGroup.proof_6\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toLinearOrderedAddCommGroup</span>.<span class=\"name\">proof_6</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#LinearOrderedAddCommGroup\">LinearOrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) (<span class=\"fn\">x_1</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L791-L793","name":"AddSubgroup.toLinearOrderedAddCommGroup.proof_9","line":791,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toLinearOrderedAddCommGroup.proof_9","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toLinearOrderedAddCommGroup.proof_9\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toLinearOrderedAddCommGroup</span>.<span class=\"name\">proof_9</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#LinearOrderedAddCommGroup\">LinearOrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x </span>x_1 : <span class=\"fn\">↥<span class=\"fn\">H</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">x_1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">x_1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L791-L793","name":"AddSubgroup.toLinearOrderedAddCommGroup.proof_2","line":791,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toLinearOrderedAddCommGroup.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toLinearOrderedAddCommGroup.proof_2\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toLinearOrderedAddCommGroup</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#LinearOrderedAddCommGroup\">LinearOrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L791-L793","name":"AddSubgroup.toLinearOrderedAddCommGroup","line":791,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toLinearOrderedAddCommGroup","doc":"An `AddSubgroup` of a `LinearOrderedAddCommGroup` is a\n`LinearOrderedAddCommGroup`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toLinearOrderedAddCommGroup\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toLinearOrderedAddCommGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#LinearOrderedAddCommGroup\">LinearOrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#LinearOrderedAddCommGroup\">LinearOrderedAddCommGroup</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L791-L793","name":"AddSubgroup.toLinearOrderedAddCommGroup.proof_8","line":791,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toLinearOrderedAddCommGroup.proof_8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toLinearOrderedAddCommGroup.proof_8\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toLinearOrderedAddCommGroup</span>.<span class=\"name\">proof_8</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#LinearOrderedAddCommGroup\">LinearOrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x </span>x_1 : <span class=\"fn\">↥<span class=\"fn\">H</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">x_1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">x_1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L791-L793","name":"AddSubgroup.toLinearOrderedAddCommGroup.proof_3","line":791,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toLinearOrderedAddCommGroup.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toLinearOrderedAddCommGroup.proof_3\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toLinearOrderedAddCommGroup</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#LinearOrderedAddCommGroup\">LinearOrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x </span>x_1 : <span class=\"fn\">↥<span class=\"fn\">H</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L791-L793","name":"AddSubgroup.toLinearOrderedAddCommGroup.proof_7","line":791,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toLinearOrderedAddCommGroup.proof_7","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toLinearOrderedAddCommGroup.proof_7\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toLinearOrderedAddCommGroup</span>.<span class=\"name\">proof_7</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#LinearOrderedAddCommGroup\">LinearOrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) (<span class=\"fn\">x_1</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L783-L786","name":"Subgroup.toOrderedCommGroup","line":783,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.toOrderedCommGroup","doc":"A subgroup of an `OrderedCommGroup` is an `OrderedCommGroup`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.toOrderedCommGroup\"><span class=\"name\">Subgroup</span>.<span class=\"name\">toOrderedCommGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#OrderedCommGroup\">OrderedCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#OrderedCommGroup\">OrderedCommGroup</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L782-L782","name":"AddSubgroup.toOrderedAddCommGroup.proof_6","line":782,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toOrderedAddCommGroup.proof_6","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toOrderedAddCommGroup.proof_6\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toOrderedAddCommGroup</span>.<span class=\"name\">proof_6</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#OrderedAddCommGroup\">OrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) (<span class=\"fn\">x_1</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L782-L782","name":"AddSubgroup.toOrderedAddCommGroup.proof_1","line":782,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toOrderedAddCommGroup.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toOrderedAddCommGroup.proof_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toOrderedAddCommGroup</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#OrderedAddCommGroup\">OrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L782-L782","name":"AddSubgroup.toOrderedAddCommGroup.proof_7","line":782,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toOrderedAddCommGroup.proof_7","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toOrderedAddCommGroup.proof_7\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toOrderedAddCommGroup</span>.<span class=\"name\">proof_7</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#OrderedAddCommGroup\">OrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) (<span class=\"fn\">x_1</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L782-L782","name":"AddSubgroup.toOrderedAddCommGroup.proof_3","line":782,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toOrderedAddCommGroup.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toOrderedAddCommGroup.proof_3\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toOrderedAddCommGroup</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#OrderedAddCommGroup\">OrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x </span>x_1 : <span class=\"fn\">↥<span class=\"fn\">H</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L782-L782","name":"AddSubgroup.toOrderedAddCommGroup.proof_5","line":782,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toOrderedAddCommGroup.proof_5","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toOrderedAddCommGroup.proof_5\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toOrderedAddCommGroup</span>.<span class=\"name\">proof_5</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#OrderedAddCommGroup\">OrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x </span>x_1 : <span class=\"fn\">↥<span class=\"fn\">H</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x_1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x_1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L782-L782","name":"AddSubgroup.toOrderedAddCommGroup.proof_4","line":782,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toOrderedAddCommGroup.proof_4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toOrderedAddCommGroup.proof_4\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toOrderedAddCommGroup</span>.<span class=\"name\">proof_4</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#OrderedAddCommGroup\">OrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L782-L782","name":"AddSubgroup.toOrderedAddCommGroup.proof_2","line":782,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toOrderedAddCommGroup.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toOrderedAddCommGroup.proof_2\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toOrderedAddCommGroup</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#OrderedAddCommGroup\">OrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L782-L782","name":"AddSubgroup.toOrderedAddCommGroup","line":782,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toOrderedAddCommGroup","doc":"An `AddSubgroup` of an `AddOrderedCommGroup` is an `AddOrderedCommGroup`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toOrderedAddCommGroup\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toOrderedAddCommGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#OrderedAddCommGroup\">OrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#OrderedAddCommGroup\">OrderedAddCommGroup</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L775-L777","name":"Subgroup.toCommGroup","line":775,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.toCommGroup","doc":"A subgroup of a `CommGroup` is a `CommGroup`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.toCommGroup\"><span class=\"name\">Subgroup</span>.<span class=\"name\">toCommGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L774-L774","name":"AddSubgroup.toAddCommGroup.proof_5","line":774,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddCommGroup.proof_5","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddCommGroup.proof_5\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toAddCommGroup</span>.<span class=\"name\">proof_5</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x </span>x_1 : <span class=\"fn\">↥<span class=\"fn\">H</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x_1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x_1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L774-L774","name":"AddSubgroup.toAddCommGroup.proof_3","line":774,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddCommGroup.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddCommGroup.proof_3\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toAddCommGroup</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x </span>x_1 : <span class=\"fn\">↥<span class=\"fn\">H</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L774-L774","name":"AddSubgroup.toAddCommGroup","line":774,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddCommGroup","doc":"An `AddSubgroup` of an `AddCommGroup` is an `AddCommGroup`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddCommGroup\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toAddCommGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L774-L774","name":"AddSubgroup.toAddCommGroup.proof_7","line":774,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddCommGroup.proof_7","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddCommGroup.proof_7\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toAddCommGroup</span>.<span class=\"name\">proof_7</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) (<span class=\"fn\">x_1</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L774-L774","name":"AddSubgroup.toAddCommGroup.proof_6","line":774,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddCommGroup.proof_6","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddCommGroup.proof_6\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toAddCommGroup</span>.<span class=\"name\">proof_6</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) (<span class=\"fn\">x_1</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L774-L774","name":"AddSubgroup.toAddCommGroup.proof_4","line":774,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddCommGroup.proof_4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddCommGroup.proof_4\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toAddCommGroup</span>.<span class=\"name\">proof_4</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L774-L774","name":"AddSubgroup.toAddCommGroup.proof_1","line":774,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddCommGroup.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddCommGroup.proof_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toAddCommGroup</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L774-L774","name":"AddSubgroup.toAddCommGroup.proof_2","line":774,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddCommGroup.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddCommGroup.proof_2\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toAddCommGroup</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L767-L769","name":"Subgroup.toGroup","line":767,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.toGroup","doc":"A subgroup of a group inherits a group structure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.toGroup\"><span class=\"name\">Subgroup</span>.<span class=\"name\">toGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L766-L766","name":"AddSubgroup.toAddGroup","line":766,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddGroup","doc":"An `AddSubgroup` of an `AddGroup` inherits an `AddGroup` structure."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddGroup\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toAddGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L766-L766","name":"AddSubgroup.toAddGroup.proof_2","line":766,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddGroup.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddGroup.proof_2\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toAddGroup</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L766-L766","name":"AddSubgroup.toAddGroup.proof_3","line":766,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddGroup.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddGroup.proof_3\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toAddGroup</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x </span>x_1 : <span class=\"fn\">↥<span class=\"fn\">H</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L766-L766","name":"AddSubgroup.toAddGroup.proof_4","line":766,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddGroup.proof_4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddGroup.proof_4\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toAddGroup</span>.<span class=\"name\">proof_4</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L766-L766","name":"AddSubgroup.toAddGroup.proof_7","line":766,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddGroup.proof_7","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddGroup.proof_7\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toAddGroup</span>.<span class=\"name\">proof_7</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) (<span class=\"fn\">x_1</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L766-L766","name":"AddSubgroup.toAddGroup.proof_5","line":766,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddGroup.proof_5","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddGroup.proof_5\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toAddGroup</span>.<span class=\"name\">proof_5</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x </span>x_1 : <span class=\"fn\">↥<span class=\"fn\">H</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x_1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x_1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L766-L766","name":"AddSubgroup.toAddGroup.proof_1","line":766,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddGroup.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddGroup.proof_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toAddGroup</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L766-L766","name":"AddSubgroup.toAddGroup.proof_6","line":766,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddGroup.proof_6","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddGroup.proof_6\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toAddGroup</span>.<span class=\"name\">proof_6</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) (<span class=\"fn\">x_1</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L760-L761","name":"Subgroup.mk_eq_one_iff","line":760,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mk_eq_one_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mk_eq_one_iff\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mk_eq_one_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">g</span>, <span class=\"fn\">property</span> := <span class=\"fn\">h</span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L759-L759","name":"AddSubgroup.mk_eq_zero_iff","line":759,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mk_eq_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mk_eq_zero_iff\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mk_eq_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">g</span>, <span class=\"fn\">property</span> := <span class=\"fn\">h</span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L754-L755","name":"Subgroup.coe_zpow","line":754,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_zpow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_zpow\"><span class=\"name\">Subgroup</span>.<span class=\"name\">coe_zpow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L753-L753","name":"AddSubgroup.coe_zsmul","line":753,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_zsmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_zsmul\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">coe_zsmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L748-L749","name":"Subgroup.coe_pow","line":748,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_pow\"><span class=\"name\">Subgroup</span>.<span class=\"name\">coe_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L747-L747","name":"AddSubgroup.coe_nsmul","line":747,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_nsmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_nsmul\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">coe_nsmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L742-L743","name":"Subgroup.coe_mk","line":742,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_mk\"><span class=\"name\">Subgroup</span>.<span class=\"name\">coe_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">x</span>, <span class=\"fn\">property</span> := <span class=\"fn\">hx</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L741-L741","name":"AddSubgroup.coe_mk","line":741,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_mk\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">coe_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">x</span>, <span class=\"fn\">property</span> := <span class=\"fn\">hx</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L735-L736","name":"Subgroup.coe_div","line":735,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_div\"><span class=\"name\">Subgroup</span>.<span class=\"name\">coe_div</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L734-L734","name":"AddSubgroup.coe_sub","line":734,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_sub\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">coe_sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L729-L730","name":"Subgroup.coe_inv","line":729,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_inv\"><span class=\"name\">Subgroup</span>.<span class=\"name\">coe_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">x</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L728-L728","name":"AddSubgroup.coe_neg","line":728,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_neg\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">coe_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L723-L724","name":"Subgroup.coe_one","line":723,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_one\"><span class=\"name\">Subgroup</span>.<span class=\"name\">coe_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L722-L722","name":"AddSubgroup.coe_zero","line":722,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_zero\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">coe_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L717-L718","name":"Subgroup.coe_mul","line":717,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_mul\"><span class=\"name\">Subgroup</span>.<span class=\"name\">coe_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L716-L716","name":"AddSubgroup.coe_add","line":716,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_add\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">coe_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L712-L713","name":"Subgroup.zpow","line":712,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.zpow","doc":"A subgroup of a group inherits an integer power "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.zpow\"><span class=\"name\">Subgroup</span>.<span class=\"name\">zpow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Pow\">Pow</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L706-L707","name":"AddSubgroup.zsmul","line":706,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.zsmul","doc":"An `AddSubgroup` of an `AddGroup` inherits an integer scaling. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.zsmul\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">zsmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L701-L702","name":"Subgroup.npow","line":701,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.npow","doc":"A subgroup of a group inherits a natural power "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.npow\"><span class=\"name\">Subgroup</span>.<span class=\"name\">npow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Pow\">Pow</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L695-L696","name":"AddSubgroup.nsmul","line":695,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.nsmul","doc":"An `AddSubgroup` of an `AddGroup` inherits a natural scaling. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.nsmul\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">nsmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L689-L690","name":"Subgroup.div","line":689,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.div","doc":"A subgroup of a group inherits a division "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.div\"><span class=\"name\">Subgroup</span>.<span class=\"name\">div</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Div\">Div</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L688-L688","name":"AddSubgroup.sub","line":688,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.sub","doc":"An `AddSubgroup` of an `AddGroup` inherits a subtraction."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.sub\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L688-L688","name":"AddSubgroup.sub.proof_1","line":688,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.sub.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.sub.proof_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">sub</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L682-L683","name":"Subgroup.inv","line":682,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.inv","doc":"A subgroup of a group inherits an inverse. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.inv\"><span class=\"name\">Subgroup</span>.<span class=\"name\">inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv\">Inv</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L681-L681","name":"AddSubgroup.neg.proof_1","line":681,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.neg.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.neg.proof_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">neg</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L681-L681","name":"AddSubgroup.neg","line":681,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.neg","doc":"An `AddSubgroup` of an `AddGroup` inherits an inverse."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.neg\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L675-L676","name":"Subgroup.one","line":675,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.one","doc":"A subgroup of a group inherits a 1. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.one\"><span class=\"name\">Subgroup</span>.<span class=\"name\">one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#One\">One</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L674-L674","name":"AddSubgroup.zero","line":674,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.zero","doc":"An `AddSubgroup` of an `AddGroup` inherits a zero."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.zero\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L668-L669","name":"Subgroup.mul","line":668,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mul","doc":"A subgroup of a group inherits a multiplication. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mul\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L667-L667","name":"AddSubgroup.add","line":667,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.add","doc":"An `AddSubgroup` of an `AddGroup` inherits an addition."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.add\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L653-L662","name":"Subgroup.ofDiv","line":653,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.ofDiv","doc":"Construct a subgroup from a nonempty set that is closed under division. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.ofDiv\"><span class=\"name\">Subgroup</span>.<span class=\"name\">ofDiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hsn : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\">∀ <span class=\"fn\">y</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">y</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L652-L652","name":"AddSubgroup.ofSub.proof_2","line":652,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.ofSub.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.ofSub.proof_2\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">ofSub</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\">∀ <span class=\"fn\">y</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(one_mem : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L652-L652","name":"AddSubgroup.ofSub","line":652,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.ofSub","doc":"Construct a subgroup from a nonempty set that is closed under subtraction"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.ofSub\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">ofSub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hsn : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\">∀ <span class=\"fn\">y</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L652-L652","name":"AddSubgroup.ofSub.proof_1","line":652,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.ofSub.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.ofSub.proof_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">ofSub</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hsn : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\">∀ <span class=\"fn\">y</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L652-L652","name":"AddSubgroup.ofSub.match_1","line":652,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.ofSub.match_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.ofSub.match_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">ofSub</span>.<span class=\"name\">match_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(motive : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">s</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">hsn</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">s</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) (<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span>), <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">(_ : <span class=\"fn\">∃ (x : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span>)</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">hsn</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L652-L652","name":"AddSubgroup.ofSub.proof_3","line":652,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.ofSub.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.ofSub.proof_3\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">ofSub</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\">∀ <span class=\"fn\">y</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(inv_mem : <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">a </span>b : <span class=\"fn\">G</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L646-L647","name":"Subgroup.zpow_mem","line":646,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.zpow_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.zpow_mem\"><span class=\"name\">Subgroup</span>.<span class=\"name\">zpow_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L645-L645","name":"AddSubgroup.zsmul_mem","line":645,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.zsmul_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.zsmul_mem\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">zsmul_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L640-L641","name":"Subgroup.pow_mem","line":640,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.pow_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.pow_mem\"><span class=\"name\">Subgroup</span>.<span class=\"name\">pow_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L639-L639","name":"AddSubgroup.nsmul_mem","line":639,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.nsmul_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.nsmul_mem\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">nsmul_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L634-L635","name":"Subgroup.mul_mem_cancel_left","line":634,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mul_mem_cancel_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mul_mem_cancel_left\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mul_mem_cancel_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L633-L633","name":"AddSubgroup.add_mem_cancel_left","line":633,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.add_mem_cancel_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.add_mem_cancel_left\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">add_mem_cancel_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L628-L629","name":"Subgroup.mul_mem_cancel_right","line":628,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mul_mem_cancel_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mul_mem_cancel_right\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mul_mem_cancel_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L627-L627","name":"AddSubgroup.add_mem_cancel_right","line":627,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.add_mem_cancel_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.add_mem_cancel_right\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">add_mem_cancel_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L621-L623","name":"Subgroup.exists_inv_mem_iff_exists_mem","line":621,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.exists_inv_mem_iff_exists_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.exists_inv_mem_iff_exists_mem\"><span class=\"name\">Subgroup</span>.<span class=\"name\">exists_inv_mem_iff_exists_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\">G</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ x ∈ <span class=\"fn\">K</span>, <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\"><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ x ∈ <span class=\"fn\">K</span>, <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L620-L620","name":"AddSubgroup.exists_neg_mem_iff_exists_mem","line":620,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.exists_neg_mem_iff_exists_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.exists_neg_mem_iff_exists_mem\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">exists_neg_mem_iff_exists_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\">G</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ x ∈ <span class=\"fn\">K</span>, <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ x ∈ <span class=\"fn\">K</span>, <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L615-L616","name":"Subgroup.div_mem_comm_iff","line":615,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.div_mem_comm_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.div_mem_comm_iff\"><span class=\"name\">Subgroup</span>.<span class=\"name\">div_mem_comm_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L614-L614","name":"AddSubgroup.sub_mem_comm_iff","line":614,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.sub_mem_comm_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.sub_mem_comm_iff\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">sub_mem_comm_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L609-L610","name":"Subgroup.inv_mem_iff","line":609,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.inv_mem_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.inv_mem_iff\"><span class=\"name\">Subgroup</span>.<span class=\"name\">inv_mem_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L608-L608","name":"AddSubgroup.neg_mem_iff","line":608,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.neg_mem_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.neg_mem_iff\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">neg_mem_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L603-L604","name":"Subgroup.div_mem","line":603,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.div_mem","doc":"A subgroup is closed under division. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.div_mem\"><span class=\"name\">Subgroup</span>.<span class=\"name\">div_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L602-L602","name":"AddSubgroup.sub_mem","line":602,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.sub_mem","doc":"An `AddSubgroup` is closed under subtraction."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.sub_mem\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">sub_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L596-L597","name":"Subgroup.inv_mem","line":596,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.inv_mem","doc":"A subgroup is closed under inverse. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.inv_mem\"><span class=\"name\">Subgroup</span>.<span class=\"name\">inv_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L595-L595","name":"AddSubgroup.neg_mem","line":595,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.neg_mem","doc":"An `AddSubgroup` is closed under inverse."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.neg_mem\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">neg_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L589-L590","name":"Subgroup.mul_mem","line":589,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mul_mem","doc":"A subgroup is closed under multiplication. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mul_mem\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mul_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L588-L588","name":"AddSubgroup.add_mem","line":588,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.add_mem","doc":"An `AddSubgroup` is closed under addition."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.add_mem\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">add_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L582-L583","name":"Subgroup.one_mem","line":582,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.one_mem","doc":"A subgroup contains the group's 1. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.one_mem\"><span class=\"name\">Subgroup</span>.<span class=\"name\">one_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L581-L581","name":"AddSubgroup.zero_mem","line":581,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.zero_mem","doc":"An `AddSubgroup` contains the group's 0."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.zero_mem\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">zero_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L575-L576","name":"Subgroup.ext","line":575,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.ext","doc":"Two subgroups are equal if they have the same elements. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.ext\"><span class=\"name\">Subgroup</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L574-L574","name":"AddSubgroup.ext","line":574,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.ext","doc":"Two `AddSubgroup`s are equal if they have the same elements."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.ext\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L568-L569","name":"Subgroup.copy_eq","line":568,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.copy_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.copy_eq\"><span class=\"name\">Subgroup</span>.<span class=\"name\">copy_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.copy\">Subgroup.copy</a> <span class=\"fn\">K</span> <span class=\"fn\">s</span> <span class=\"fn\">hs</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L567-L567","name":"AddSubgroup.copy_eq","line":567,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.copy_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.copy_eq\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">copy_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.copy\">AddSubgroup.copy</a> <span class=\"fn\">K</span> <span class=\"fn\">s</span> <span class=\"fn\">hs</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L562-L563","name":"Subgroup.coe_copy","line":562,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_copy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_copy\"><span class=\"name\">Subgroup</span>.<span class=\"name\">coe_copy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.copy\">Subgroup.copy</a> <span class=\"fn\">K</span> <span class=\"fn\">s</span> <span class=\"fn\">hs</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L561-L561","name":"AddSubgroup.coe_copy","line":561,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_copy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_copy\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">coe_copy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.copy\">AddSubgroup.copy</a> <span class=\"fn\">K</span> <span class=\"fn\">s</span> <span class=\"fn\">hs</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L553-L557","name":"Subgroup.copy","line":553,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.copy","doc":"Copy of a subgroup with a new `carrier` equal to the old one. Useful to fix definitional\nequalities."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.copy\"><span class=\"name\">Subgroup</span>.<span class=\"name\">copy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L550-L552","name":"AddSubgroup.copy.proof_2","line":550,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.copy.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.copy.proof_2\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">copy</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\">s</span>, <span class=\"fn\">add_mem'</span> := <span class=\"fn\">(_ : <span class=\"fn\">∀ {<span class=\"fn\">a </span>b : <span class=\"fn\">G</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span></span>)</span> }</span>.carrier</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L550-L552","name":"AddSubgroup.copy.proof_1","line":550,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.copy.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.copy.proof_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">copy</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">a </span>b : <span class=\"fn\">G</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L550-L552","name":"AddSubgroup.copy.proof_3","line":550,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.copy.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.copy.proof_3\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">copy</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\">G</span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a>       <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toAddSubsemigroup</span> := <span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\">s</span>, <span class=\"fn\">add_mem'</span> := <span class=\"fn\">(_ : <span class=\"fn\">∀ {<span class=\"fn\">a </span>b : <span class=\"fn\">G</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span></span>)</span> }</span>,\n            <span class=\"fn\">zero_mem'</span> :=\n              <span class=\"fn\">(_ :\n                <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a>                   <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\">s</span>,\n                      <span class=\"fn\">add_mem'</span> := <span class=\"fn\">(_ : <span class=\"fn\">∀ {<span class=\"fn\">a </span>b : <span class=\"fn\">G</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span></span>)</span> }</span>.carrier</span></span>)</span> }</span>.toAddSubsemigroup</span>.carrier</span></span> →\n    <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a>       <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toAddSubsemigroup</span> := <span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\">s</span>, <span class=\"fn\">add_mem'</span> := <span class=\"fn\">(_ : <span class=\"fn\">∀ {<span class=\"fn\">a </span>b : <span class=\"fn\">G</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span></span>)</span> }</span>,\n            <span class=\"fn\">zero_mem'</span> :=\n              <span class=\"fn\">(_ :\n                <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a>                   <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\">s</span>,\n                      <span class=\"fn\">add_mem'</span> := <span class=\"fn\">(_ : <span class=\"fn\">∀ {<span class=\"fn\">a </span>b : <span class=\"fn\">G</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span></span>)</span> }</span>.carrier</span></span>)</span> }</span>.toAddSubsemigroup</span>.carrier</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L550-L552","name":"AddSubgroup.copy","line":550,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.copy","doc":"Copy of an additive subgroup with a new `carrier` equal to the old one.\nUseful to fix definitional equalities"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.copy\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">copy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L538-L539","name":"Subgroup.toAddSubgroup'","line":538,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.toAddSubgroup'","doc":"Subgroups of an additive group `Multiplicative A` are isomorphic to additive subgroups of `A`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.toAddSubgroup'\"><span class=\"name\">Subgroup</span>.<span class=\"name\">toAddSubgroup'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags.html#Multiplicative\">Multiplicative</a> <span class=\"fn\">A</span></span>)</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">A</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L526-L531","name":"AddSubgroup.toSubgroup","line":526,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toSubgroup","doc":"Additive subgroups of an additive group `A` are isomorphic to subgroups of `Multiplicative A`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toSubgroup\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">A</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags.html#Multiplicative\">Multiplicative</a> <span class=\"fn\">A</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L525-L525","name":"AddSubgroup.toSubgroup_symm_apply_coe","line":525,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toSubgroup_symm_apply_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toSubgroup_symm_apply_coe\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toSubgroup_symm_apply_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags.html#Multiplicative\">Multiplicative</a> <span class=\"fn\">A</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/RelIso/Basic.html#RelIso.symm\">RelIso.symm</a> <span class=\"fn\">AddSubgroup.toSubgroup</span></span>)</span> <span class=\"fn\">S</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">Additive.toMul</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">↑<span class=\"fn\">S</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L525-L525","name":"AddSubgroup.toSubgroup_apply_coe","line":525,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toSubgroup_apply_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toSubgroup_apply_coe\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toSubgroup_apply_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">AddSubgroup.toSubgroup</span> <span class=\"fn\">S</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">Multiplicative.toAdd</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">↑<span class=\"fn\">S</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L519-L520","name":"AddSubgroup.toSubgroup'","line":519,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toSubgroup'","doc":"Additive subgroup of an additive group `Additive G` are isomorphic to subgroup of `G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toSubgroup'\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toSubgroup'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags.html#Additive\">Additive</a> <span class=\"fn\">G</span></span>)</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L508-L513","name":"Subgroup.toAddSubgroup","line":508,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.toAddSubgroup","doc":"Subgroups of a group `G` are isomorphic to additive subgroups of `Additive G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.toAddSubgroup\"><span class=\"name\">Subgroup</span>.<span class=\"name\">toAddSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags.html#Additive\">Additive</a> <span class=\"fn\">G</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L507-L507","name":"Subgroup.toAddSubgroup_symm_apply_coe","line":507,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.toAddSubgroup_symm_apply_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.toAddSubgroup_symm_apply_coe\"><span class=\"name\">Subgroup</span>.<span class=\"name\">toAddSubgroup_symm_apply_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags.html#Additive\">Additive</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/RelIso/Basic.html#RelIso.symm\">RelIso.symm</a> <span class=\"fn\">Subgroup.toAddSubgroup</span></span>)</span> <span class=\"fn\">S</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">Multiplicative.toAdd</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">↑<span class=\"fn\">S</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L507-L507","name":"Subgroup.toAddSubgroup_apply_coe","line":507,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.toAddSubgroup_apply_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.toAddSubgroup_apply_coe\"><span class=\"name\">Subgroup</span>.<span class=\"name\">toAddSubgroup_apply_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Subgroup.toAddSubgroup</span> <span class=\"fn\">S</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">Additive.toMul</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">↑<span class=\"fn\">S</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L495-L495","name":"Subgroup.coe_nonempty","line":495,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_nonempty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_nonempty\"><span class=\"name\">Subgroup</span>.<span class=\"name\">coe_nonempty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L494-L494","name":"AddSubgroup.coe_nonempty","line":494,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_nonempty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_nonempty\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">coe_nonempty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L489-L490","name":"Subgroup.toSubmonoid_le","line":489,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.toSubmonoid_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.toSubmonoid_le\"><span class=\"name\">Subgroup</span>.<span class=\"name\">toSubmonoid_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.toSubmonoid</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">q</span>.toSubmonoid</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">q</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L488-L488","name":"AddSubgroup.toAddSubmonoid_le","line":488,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddSubmonoid_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddSubmonoid_le\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toAddSubmonoid_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.toAddSubmonoid</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">q</span>.toAddSubmonoid</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">q</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L483-L484","name":"Subgroup.toSubmonoid_mono","line":483,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.toSubmonoid_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.toSubmonoid_mono\"><span class=\"name\">Subgroup</span>.<span class=\"name\">toSubmonoid_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">Subgroup.toSubmonoid</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L482-L482","name":"AddSubgroup.toAddSubmonoid_mono","line":482,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddSubmonoid_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddSubmonoid_mono\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toAddSubmonoid_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">AddSubgroup.toAddSubmonoid</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L477-L478","name":"Subgroup.toSubmonoid_strictMono","line":477,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.toSubmonoid_strictMono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.toSubmonoid_strictMono\"><span class=\"name\">Subgroup</span>.<span class=\"name\">toSubmonoid_strictMono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#StrictMono\">StrictMono</a> <span class=\"fn\">Subgroup.toSubmonoid</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L476-L476","name":"AddSubgroup.toAddSubmonoid_strictMono","line":476,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddSubmonoid_strictMono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddSubmonoid_strictMono\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toAddSubmonoid_strictMono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#StrictMono\">StrictMono</a> <span class=\"fn\">AddSubgroup.toAddSubmonoid</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L471-L472","name":"Subgroup.toSubmonoid_eq","line":471,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.toSubmonoid_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.toSubmonoid_eq\"><span class=\"name\">Subgroup</span>.<span class=\"name\">toSubmonoid_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.toSubmonoid</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">q</span>.toSubmonoid</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L470-L470","name":"AddSubgroup.toAddSubmonoid_eq","line":470,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddSubmonoid_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddSubmonoid_eq\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toAddSubmonoid_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.toAddSubmonoid</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">q</span>.toAddSubmonoid</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L461-L466","name":"Subgroup.toSubmonoid_injective","line":461,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.toSubmonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.toSubmonoid_injective\"><span class=\"name\">Subgroup</span>.<span class=\"name\">toSubmonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">Subgroup.toSubmonoid</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L460-L460","name":"AddSubgroup.toAddSubmonoid_injective","line":460,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddSubmonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddSubmonoid_injective\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toAddSubmonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">AddSubgroup.toAddSubmonoid</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L455-L456","name":"Subgroup.mem_toSubmonoid","line":455,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_toSubmonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_toSubmonoid\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_toSubmonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">K</span>.toSubmonoid</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L454-L454","name":"AddSubgroup.mem_toAddSubmonoid","line":454,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_toAddSubmonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_toAddSubmonoid\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_toAddSubmonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">K</span>.toAddSubmonoid</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L449-L450","name":"Subgroup.coe_toSubmonoid","line":449,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_toSubmonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_toSubmonoid\"><span class=\"name\">Subgroup</span>.<span class=\"name\">coe_toSubmonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">K</span>.toSubmonoid</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L448-L448","name":"AddSubgroup.coe_toAddSubmonoid","line":448,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_toAddSubmonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_toAddSubmonoid\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">coe_toAddSubmonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">K</span>.toAddSubmonoid</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L439-L441","name":"Subgroup.mk_le_mk","line":439,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mk_le_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mk_le_mk\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mk_le_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_one : <span class=\"fn\">∀ {<span class=\"fn\">a </span>b : <span class=\"fn\">G</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_inv : <span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\">G</span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toSubsemigroup</span> := <span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\">s</span>, <span class=\"fn\">mul_mem'</span> := <span class=\"fn\">h_one</span> }</span>, <span class=\"fn\">one_mem'</span> := <span class=\"fn\">h_mul</span> }</span>.toSubsemigroup</span>.carrier</span></span> →\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toSubsemigroup</span> := <span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\">s</span>, <span class=\"fn\">mul_mem'</span> := <span class=\"fn\">h_one</span> }</span>, <span class=\"fn\">one_mem'</span> := <span class=\"fn\">h_mul</span> }</span>.toSubsemigroup</span>.carrier</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_one' : <span class=\"fn\">∀ {<span class=\"fn\">a </span>b : <span class=\"fn\">G</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">t</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">t</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">t</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_mul' : <span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_inv' : <span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\">G</span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toSubsemigroup</span> := <span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\">t</span>, <span class=\"fn\">mul_mem'</span> := <span class=\"fn\">h_one'</span> }</span>, <span class=\"fn\">one_mem'</span> := <span class=\"fn\">h_mul'</span> }</span>.toSubsemigroup</span>.carrier</span></span> →\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toSubsemigroup</span> := <span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\">t</span>, <span class=\"fn\">mul_mem'</span> := <span class=\"fn\">h_one'</span> }</span>, <span class=\"fn\">one_mem'</span> := <span class=\"fn\">h_mul'</span> }</span>.toSubsemigroup</span>.carrier</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toSubmonoid</span> := <span class=\"fn\">{ <span class=\"fn\">toSubsemigroup</span> := <span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\">s</span>, <span class=\"fn\">mul_mem'</span> := <span class=\"fn\">h_one</span> }</span>, <span class=\"fn\">one_mem'</span> := <span class=\"fn\">h_mul</span> }</span>, <span class=\"fn\">inv_mem'</span> := <span class=\"fn\">h_inv</span> }</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>     <span class=\"fn\">{ <span class=\"fn\">toSubmonoid</span> := <span class=\"fn\">{ <span class=\"fn\">toSubsemigroup</span> := <span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\">t</span>, <span class=\"fn\">mul_mem'</span> := <span class=\"fn\">h_one'</span> }</span>, <span class=\"fn\">one_mem'</span> := <span class=\"fn\">h_mul'</span> }</span>,\n      <span class=\"fn\">inv_mem'</span> := <span class=\"fn\">h_inv'</span> }</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">t</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L438-L438","name":"AddSubgroup.mk_le_mk","line":438,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mk_le_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mk_le_mk\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mk_le_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_one : <span class=\"fn\">∀ {<span class=\"fn\">a </span>b : <span class=\"fn\">G</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_inv : <span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\">G</span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toAddSubsemigroup</span> := <span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\">s</span>, <span class=\"fn\">add_mem'</span> := <span class=\"fn\">h_one</span> }</span>, <span class=\"fn\">zero_mem'</span> := <span class=\"fn\">h_mul</span> }</span>.toAddSubsemigroup</span>.carrier</span></span> →\n    <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toAddSubsemigroup</span> := <span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\">s</span>, <span class=\"fn\">add_mem'</span> := <span class=\"fn\">h_one</span> }</span>, <span class=\"fn\">zero_mem'</span> := <span class=\"fn\">h_mul</span> }</span>.toAddSubsemigroup</span>.carrier</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_one' : <span class=\"fn\">∀ {<span class=\"fn\">a </span>b : <span class=\"fn\">G</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">t</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">t</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">t</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_mul' : <span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_inv' : <span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\">G</span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toAddSubsemigroup</span> := <span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\">t</span>, <span class=\"fn\">add_mem'</span> := <span class=\"fn\">h_one'</span> }</span>, <span class=\"fn\">zero_mem'</span> := <span class=\"fn\">h_mul'</span> }</span>.toAddSubsemigroup</span>.carrier</span></span> →\n    <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toAddSubsemigroup</span> := <span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\">t</span>, <span class=\"fn\">add_mem'</span> := <span class=\"fn\">h_one'</span> }</span>, <span class=\"fn\">zero_mem'</span> := <span class=\"fn\">h_mul'</span> }</span>.toAddSubsemigroup</span>.carrier</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toAddSubmonoid</span> := <span class=\"fn\">{ <span class=\"fn\">toAddSubsemigroup</span> := <span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\">s</span>, <span class=\"fn\">add_mem'</span> := <span class=\"fn\">h_one</span> }</span>, <span class=\"fn\">zero_mem'</span> := <span class=\"fn\">h_mul</span> }</span>,\n      <span class=\"fn\">neg_mem'</span> := <span class=\"fn\">h_inv</span> }</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>     <span class=\"fn\">{ <span class=\"fn\">toAddSubmonoid</span> := <span class=\"fn\">{ <span class=\"fn\">toAddSubsemigroup</span> := <span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\">t</span>, <span class=\"fn\">add_mem'</span> := <span class=\"fn\">h_one'</span> }</span>, <span class=\"fn\">zero_mem'</span> := <span class=\"fn\">h_mul'</span> }</span>,\n      <span class=\"fn\">neg_mem'</span> := <span class=\"fn\">h_inv'</span> }</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">t</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L432-L434","name":"Subgroup.coe_set_mk","line":432,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_set_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.coe_set_mk\"><span class=\"name\">Subgroup</span>.<span class=\"name\">coe_set_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_one : <span class=\"fn\">∀ {<span class=\"fn\">a </span>b : <span class=\"fn\">G</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_inv : <span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\">G</span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toSubsemigroup</span> := <span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\">s</span>, <span class=\"fn\">mul_mem'</span> := <span class=\"fn\">h_one</span> }</span>, <span class=\"fn\">one_mem'</span> := <span class=\"fn\">h_mul</span> }</span>.toSubsemigroup</span>.carrier</span></span> →\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toSubsemigroup</span> := <span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\">s</span>, <span class=\"fn\">mul_mem'</span> := <span class=\"fn\">h_one</span> }</span>, <span class=\"fn\">one_mem'</span> := <span class=\"fn\">h_mul</span> }</span>.toSubsemigroup</span>.carrier</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">{ <span class=\"fn\">toSubmonoid</span> := <span class=\"fn\">{ <span class=\"fn\">toSubsemigroup</span> := <span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\">s</span>, <span class=\"fn\">mul_mem'</span> := <span class=\"fn\">h_one</span> }</span>, <span class=\"fn\">one_mem'</span> := <span class=\"fn\">h_mul</span> }</span>, <span class=\"fn\">inv_mem'</span> := <span class=\"fn\">h_inv</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L431-L431","name":"AddSubgroup.coe_set_mk","line":431,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_set_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.coe_set_mk\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">coe_set_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_one : <span class=\"fn\">∀ {<span class=\"fn\">a </span>b : <span class=\"fn\">G</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_inv : <span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\">G</span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toAddSubsemigroup</span> := <span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\">s</span>, <span class=\"fn\">add_mem'</span> := <span class=\"fn\">h_one</span> }</span>, <span class=\"fn\">zero_mem'</span> := <span class=\"fn\">h_mul</span> }</span>.toAddSubsemigroup</span>.carrier</span></span> →\n    <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toAddSubsemigroup</span> := <span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\">s</span>, <span class=\"fn\">add_mem'</span> := <span class=\"fn\">h_one</span> }</span>, <span class=\"fn\">zero_mem'</span> := <span class=\"fn\">h_mul</span> }</span>.toAddSubsemigroup</span>.carrier</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">{ <span class=\"fn\">toAddSubmonoid</span> := <span class=\"fn\">{ <span class=\"fn\">toAddSubsemigroup</span> := <span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\">s</span>, <span class=\"fn\">add_mem'</span> := <span class=\"fn\">h_one</span> }</span>, <span class=\"fn\">zero_mem'</span> := <span class=\"fn\">h_mul</span> }</span>,\n      <span class=\"fn\">neg_mem'</span> := <span class=\"fn\">h_inv</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L425-L427","name":"Subgroup.mem_mk","line":425,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_mk\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_one : <span class=\"fn\">∀ {<span class=\"fn\">a </span>b : <span class=\"fn\">G</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_inv : <span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\">G</span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toSubsemigroup</span> := <span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\">s</span>, <span class=\"fn\">mul_mem'</span> := <span class=\"fn\">h_one</span> }</span>, <span class=\"fn\">one_mem'</span> := <span class=\"fn\">h_mul</span> }</span>.toSubsemigroup</span>.carrier</span></span> →\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toSubsemigroup</span> := <span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\">s</span>, <span class=\"fn\">mul_mem'</span> := <span class=\"fn\">h_one</span> }</span>, <span class=\"fn\">one_mem'</span> := <span class=\"fn\">h_mul</span> }</span>.toSubsemigroup</span>.carrier</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">{ <span class=\"fn\">toSubmonoid</span> := <span class=\"fn\">{ <span class=\"fn\">toSubsemigroup</span> := <span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\">s</span>, <span class=\"fn\">mul_mem'</span> := <span class=\"fn\">h_one</span> }</span>, <span class=\"fn\">one_mem'</span> := <span class=\"fn\">h_mul</span> }</span>, <span class=\"fn\">inv_mem'</span> := <span class=\"fn\">h_inv</span> }</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L424-L424","name":"AddSubgroup.mem_mk","line":424,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_mk\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_one : <span class=\"fn\">∀ {<span class=\"fn\">a </span>b : <span class=\"fn\">G</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_inv : <span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\">G</span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toAddSubsemigroup</span> := <span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\">s</span>, <span class=\"fn\">add_mem'</span> := <span class=\"fn\">h_one</span> }</span>, <span class=\"fn\">zero_mem'</span> := <span class=\"fn\">h_mul</span> }</span>.toAddSubsemigroup</span>.carrier</span></span> →\n    <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toAddSubsemigroup</span> := <span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\">s</span>, <span class=\"fn\">add_mem'</span> := <span class=\"fn\">h_one</span> }</span>, <span class=\"fn\">zero_mem'</span> := <span class=\"fn\">h_mul</span> }</span>.toAddSubsemigroup</span>.carrier</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a>     <span class=\"fn\">{ <span class=\"fn\">toAddSubmonoid</span> := <span class=\"fn\">{ <span class=\"fn\">toAddSubsemigroup</span> := <span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\">s</span>, <span class=\"fn\">add_mem'</span> := <span class=\"fn\">h_one</span> }</span>, <span class=\"fn\">zero_mem'</span> := <span class=\"fn\">h_mul</span> }</span>,\n      <span class=\"fn\">neg_mem'</span> := <span class=\"fn\">h_inv</span> }</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L419-L420","name":"Subgroup.mem_carrier","line":419,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_carrier","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mem_carrier\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_carrier</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">s</span>.carrier</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L418-L418","name":"AddSubgroup.mem_carrier","line":418,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_carrier","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mem_carrier\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_carrier</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">s</span>.carrier</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L413-L416","name":"Subgroup.instSubgroupClassSubgroupToDivInvMonoidInstSetLikeSubgroup","line":413,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.instSubgroupClassSubgroupToDivInvMonoidInstSetLikeSubgroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.instSubgroupClassSubgroupToDivInvMonoidInstSetLikeSubgroup\"><span class=\"name\">Subgroup</span>.<span class=\"name\">instSubgroupClassSubgroupToDivInvMonoidInstSetLikeSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass\">SubgroupClass</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L412-L412","name":"AddSubgroup.instAddSubgroupClassAddSubgroupToSubNegAddMonoidInstSetLikeAddSubgroup","line":412,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instAddSubgroupClassAddSubgroupToSubNegAddMonoidInstSetLikeAddSubgroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instAddSubgroupClassAddSubgroupToSubNegAddMonoidInstSetLikeAddSubgroup\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instAddSubgroupClassAddSubgroupToSubNegAddMonoidInstSetLikeAddSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L404-L409","name":"Subgroup.instSetLikeSubgroup","line":404,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.instSetLikeSubgroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.instSetLikeSubgroup\"><span class=\"name\">Subgroup</span>.<span class=\"name\">instSetLikeSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L403-L403","name":"AddSubgroup.instSetLikeAddSubgroup","line":403,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instSetLikeAddSubgroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instSetLikeAddSubgroup\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instSetLikeAddSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L403-L403","name":"AddSubgroup.instSetLikeAddSubgroup.proof_1","line":403,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instSetLikeAddSubgroup.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.instSetLikeAddSubgroup.proof_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instSetLikeAddSubgroup</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(q : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">s</span>.carrier</span></span>)</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">s</span>.carrier</span></span>)</span> <span class=\"fn\">q</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L397-L398","name":"AddSubgroup.toAddSubmonoid","line":397,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddSubmonoid","doc":"Reinterpret an `AddSubgroup` as an `AddSubmonoid`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.toAddSubmonoid\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">toAddSubmonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L393-L394","name":"Subgroup.toSubmonoid","line":393,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.toSubmonoid","doc":"Reinterpret a `Subgroup` as a `Submonoid`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.toSubmonoid\"><span class=\"name\">Subgroup</span>.<span class=\"name\">toSubmonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L385-L385","name":"AddSubgroup.neg_mem'","line":385,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.neg_mem'","doc":"`G` is closed under negation "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.neg_mem'\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">neg_mem'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">self</span>.carrier</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">self</span>.carrier</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L383-L383","name":"AddSubgroup.mk","line":383,"kind":"ctor","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.mk\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(toAddSubmonoid : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(neg_mem' : <span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\">G</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">toAddSubmonoid</span>.carrier</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">toAddSubmonoid</span>.carrier</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L383-L385","name":"AddSubgroup","line":383,"kind":"structure","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup","doc":"An additive subgroup of an additive group `G` is a subset containing 0, closed\nunder addition and additive inverse. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\"><span class=\"name\">AddSubgroup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u_5)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\"><span class=\"name\">AddSubmonoid</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_5</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L378-L378","name":"Subgroup.inv_mem'","line":378,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.inv_mem'","doc":"`G` is closed under inverses "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.inv_mem'\"><span class=\"name\">Subgroup</span>.<span class=\"name\">inv_mem'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">self</span>.carrier</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">self</span>.carrier</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L376-L376","name":"Subgroup.mk","line":376,"kind":"ctor","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.mk\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(toSubmonoid : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(inv_mem' : <span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\">G</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">toSubmonoid</span>.carrier</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">toSubmonoid</span>.carrier</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L376-L378","name":"Subgroup","line":376,"kind":"structure","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup","doc":"A subgroup of a group `G` is a subset containing 1, closed under multiplication\nand closed under multiplicative inverse. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\"><span class=\"name\">Subgroup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u_5)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\"><span class=\"name\">Submonoid</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_5</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L363-L366","name":"SubgroupClass.subtype_comp_inclusion","line":363,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.subtype_comp_inclusion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.subtype_comp_inclusion\"><span class=\"name\">SubgroupClass</span>.<span class=\"name\">subtype_comp_inclusion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass\">SubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hH : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.comp\">MonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.inclusion\">SubgroupClass.inclusion</a> <span class=\"fn\">hH</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L362-L362","name":"AddSubgroupClass.subtype_comp_inclusion","line":362,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.subtype_comp_inclusion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.subtype_comp_inclusion\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">subtype_comp_inclusion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hH : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.inclusion\">AddSubgroupClass.inclusion</a> <span class=\"fn\">hH</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L356-L358","name":"SubgroupClass.coe_inclusion","line":356,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.coe_inclusion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.coe_inclusion\"><span class=\"name\">SubgroupClass</span>.<span class=\"name\">coe_inclusion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass\">SubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.inclusion\">SubgroupClass.inclusion</a> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L355-L355","name":"AddSubgroupClass.coe_inclusion","line":355,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.coe_inclusion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.coe_inclusion\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">coe_inclusion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.inclusion\">AddSubgroupClass.inclusion</a> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L349-L352","name":"SubgroupClass.inclusion_inclusion","line":349,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.inclusion_inclusion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.inclusion_inclusion\"><span class=\"name\">SubgroupClass</span>.<span class=\"name\">inclusion_inclusion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass\">SubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hHK : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hKL : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.inclusion\">SubgroupClass.inclusion</a> <span class=\"fn\">hKL</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.inclusion\">SubgroupClass.inclusion</a> <span class=\"fn\">hHK</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.inclusion\">SubgroupClass.inclusion</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">L</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L342-L344","name":"SubgroupClass.inclusion_right","line":342,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.inclusion_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.inclusion_right\"><span class=\"name\">SubgroupClass</span>.<span class=\"name\">inclusion_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass\">SubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.inclusion\">SubgroupClass.inclusion</a> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">↑<span class=\"fn\">x</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">hx</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L341-L341","name":"AddSubgroupClass.inclusion_right","line":341,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.inclusion_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.inclusion_right\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">inclusion_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.inclusion\">AddSubgroupClass.inclusion</a> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">↑<span class=\"fn\">x</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">hx</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L336-L337","name":"SubgroupClass.inclusion_mk","line":336,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.inclusion_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.inclusion_mk\"><span class=\"name\">SubgroupClass</span>.<span class=\"name\">inclusion_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass\">SubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.inclusion\">SubgroupClass.inclusion</a> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">x</span>, <span class=\"fn\">property</span> := <span class=\"fn\">hx</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">x</span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span>)</span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L335-L335","name":"AddSubgroupClass.inclusion_mk","line":335,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.inclusion_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.inclusion_mk\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">inclusion_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.inclusion\">AddSubgroupClass.inclusion</a> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">x</span>, <span class=\"fn\">property</span> := <span class=\"fn\">hx</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">x</span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span>)</span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L329-L331","name":"SubgroupClass.inclusion_self","line":329,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.inclusion_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.inclusion_self\"><span class=\"name\">SubgroupClass</span>.<span class=\"name\">inclusion_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass\">SubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.inclusion\">SubgroupClass.inclusion</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">H</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L328-L328","name":"AddSubgroupClass.inclusion_self","line":328,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.inclusion_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.inclusion_self\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">inclusion_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.inclusion\">AddSubgroupClass.inclusion</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">H</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L323-L324","name":"SubgroupClass.inclusion","line":323,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.inclusion","doc":"The inclusion homomorphism from a subgroup `H` contained in `K` to `K`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.inclusion\"><span class=\"name\">SubgroupClass</span>.<span class=\"name\">inclusion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass\">SubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">H</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">↥<span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L322-L322","name":"AddSubgroupClass.inclusion.proof_1","line":322,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.inclusion.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.inclusion.proof_1\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">inclusion</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L322-L322","name":"AddSubgroupClass.inclusion","line":322,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.inclusion","doc":"The inclusion homomorphism from an additive subgroup `H` contained in `K` to `K`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.inclusion\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">inclusion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">H</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">↥<span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L322-L322","name":"AddSubgroupClass.inclusion.proof_2","line":322,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.inclusion.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.inclusion.proof_2\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">inclusion</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x </span>x_1 : <span class=\"fn\">↥<span class=\"fn\">H</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) =&gt; <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">↑<span class=\"fn\">x</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span>)</span> }</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) =&gt; <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">↑<span class=\"fn\">x</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span>)</span> }</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L316-L317","name":"SubgroupClass.coe_zpow","line":316,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.coe_zpow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.coe_zpow\"><span class=\"name\">SubgroupClass</span>.<span class=\"name\">coe_zpow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass\">SubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L315-L315","name":"AddSubgroupClass.coe_zsmul","line":315,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.coe_zsmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.coe_zsmul\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">coe_zsmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L310-L311","name":"SubgroupClass.coe_pow","line":310,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.coe_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.coe_pow\"><span class=\"name\">SubgroupClass</span>.<span class=\"name\">coe_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass\">SubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L309-L309","name":"AddSubgroupClass.coe_nsmul","line":309,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.coe_nsmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.coe_nsmul\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">coe_nsmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L302-L303","name":"SubgroupClass.coeSubtype","line":302,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.coeSubtype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.coeSubtype\"><span class=\"name\">SubgroupClass</span>.<span class=\"name\">coeSubtype</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass\">SubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">↑<span class=\"fn\">H</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Subtype.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L301-L301","name":"AddSubgroupClass.coeSubtype","line":301,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.coeSubtype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.coeSubtype\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">coeSubtype</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">↑<span class=\"fn\">H</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Subtype.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L296-L297","name":"SubgroupClass.subtype","line":296,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.subtype","doc":"The natural group hom from a subgroup of group `G` to `G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.subtype\"><span class=\"name\">SubgroupClass</span>.<span class=\"name\">subtype</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass\">SubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">H</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L294-L295","name":"AddSubgroupClass.subtype.proof_1","line":294,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.subtype.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.subtype.proof_1\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">subtype</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L294-L295","name":"AddSubgroupClass.subtype.proof_2","line":294,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.subtype.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.subtype.proof_2\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">subtype</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x </span>x_1 : <span class=\"fn\">↥<span class=\"fn\">H</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">Subtype.val</span>, <span class=\"fn\">map_zero'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">0</span></span></span>)</span> }</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">Subtype.val</span>, <span class=\"fn\">map_zero'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">0</span></span></span>)</span> }</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L294-L295","name":"AddSubgroupClass.subtype","line":294,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.subtype","doc":"The natural group hom from an additive subgroup of `AddGroup` `G` to `G`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.subtype\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">subtype</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">H</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L286-L289","name":"SubgroupClass.toLinearOrderedCommGroup","line":286,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.toLinearOrderedCommGroup","doc":"A subgroup of a `LinearOrderedCommGroup` is a `LinearOrderedCommGroup`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.toLinearOrderedCommGroup\"><span class=\"name\">SubgroupClass</span>.<span class=\"name\">toLinearOrderedCommGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#LinearOrderedCommGroup\">LinearOrderedCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass\">SubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#LinearOrderedCommGroup\">LinearOrderedCommGroup</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L283-L285","name":"AddSubgroupClass.toLinearOrderedAddCommGroup.proof_1","line":283,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toLinearOrderedAddCommGroup.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toLinearOrderedAddCommGroup.proof_1\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toLinearOrderedAddCommGroup</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#LinearOrderedAddCommGroup\">LinearOrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#ZeroMemClass\">ZeroMemClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L283-L285","name":"AddSubgroupClass.toLinearOrderedAddCommGroup.proof_8","line":283,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toLinearOrderedAddCommGroup.proof_8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toLinearOrderedAddCommGroup.proof_8\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toLinearOrderedAddCommGroup</span>.<span class=\"name\">proof_8</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#LinearOrderedAddCommGroup\">LinearOrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x </span>x_1 : <span class=\"fn\">↥<span class=\"fn\">H</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x_1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x_1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L283-L285","name":"AddSubgroupClass.toLinearOrderedAddCommGroup.proof_9","line":283,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toLinearOrderedAddCommGroup.proof_9","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toLinearOrderedAddCommGroup.proof_9\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toLinearOrderedAddCommGroup</span>.<span class=\"name\">proof_9</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#LinearOrderedAddCommGroup\">LinearOrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) (<span class=\"fn\">x_1</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L283-L285","name":"AddSubgroupClass.toLinearOrderedAddCommGroup.proof_10","line":283,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toLinearOrderedAddCommGroup.proof_10","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toLinearOrderedAddCommGroup.proof_10\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toLinearOrderedAddCommGroup</span>.<span class=\"name\">proof_10</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#LinearOrderedAddCommGroup\">LinearOrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) (<span class=\"fn\">x_1</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L283-L285","name":"AddSubgroupClass.toLinearOrderedAddCommGroup.proof_5","line":283,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toLinearOrderedAddCommGroup.proof_5","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toLinearOrderedAddCommGroup.proof_5\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toLinearOrderedAddCommGroup</span>.<span class=\"name\">proof_5</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#LinearOrderedAddCommGroup\">LinearOrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L283-L285","name":"AddSubgroupClass.toLinearOrderedAddCommGroup","line":283,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toLinearOrderedAddCommGroup","doc":"An additive subgroup of a `LinearOrderedAddCommGroup` is a\n`LinearOrderedAddCommGroup`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toLinearOrderedAddCommGroup\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toLinearOrderedAddCommGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#LinearOrderedAddCommGroup\">LinearOrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#LinearOrderedAddCommGroup\">LinearOrderedAddCommGroup</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L283-L285","name":"AddSubgroupClass.toLinearOrderedAddCommGroup.proof_7","line":283,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toLinearOrderedAddCommGroup.proof_7","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toLinearOrderedAddCommGroup.proof_7\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toLinearOrderedAddCommGroup</span>.<span class=\"name\">proof_7</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#LinearOrderedAddCommGroup\">LinearOrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L283-L285","name":"AddSubgroupClass.toLinearOrderedAddCommGroup.proof_6","line":283,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toLinearOrderedAddCommGroup.proof_6","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toLinearOrderedAddCommGroup.proof_6\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toLinearOrderedAddCommGroup</span>.<span class=\"name\">proof_6</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#LinearOrderedAddCommGroup\">LinearOrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x </span>x_1 : <span class=\"fn\">↥<span class=\"fn\">H</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L283-L285","name":"AddSubgroupClass.toLinearOrderedAddCommGroup.proof_3","line":283,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toLinearOrderedAddCommGroup.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toLinearOrderedAddCommGroup.proof_3\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toLinearOrderedAddCommGroup</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#LinearOrderedAddCommGroup\">LinearOrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L283-L285","name":"AddSubgroupClass.toLinearOrderedAddCommGroup.proof_11","line":283,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toLinearOrderedAddCommGroup.proof_11","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toLinearOrderedAddCommGroup.proof_11\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toLinearOrderedAddCommGroup</span>.<span class=\"name\">proof_11</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#LinearOrderedAddCommGroup\">LinearOrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x </span>x_1 : <span class=\"fn\">↥<span class=\"fn\">H</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">x_1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">x_1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L283-L285","name":"AddSubgroupClass.toLinearOrderedAddCommGroup.proof_2","line":283,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toLinearOrderedAddCommGroup.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toLinearOrderedAddCommGroup.proof_2\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toLinearOrderedAddCommGroup</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#LinearOrderedAddCommGroup\">LinearOrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#NegMemClass\">NegMemClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L283-L285","name":"AddSubgroupClass.toLinearOrderedAddCommGroup.proof_12","line":283,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toLinearOrderedAddCommGroup.proof_12","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toLinearOrderedAddCommGroup.proof_12\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toLinearOrderedAddCommGroup</span>.<span class=\"name\">proof_12</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#LinearOrderedAddCommGroup\">LinearOrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x </span>x_1 : <span class=\"fn\">↥<span class=\"fn\">H</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">x_1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">x_1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L283-L285","name":"AddSubgroupClass.toLinearOrderedAddCommGroup.proof_4","line":283,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toLinearOrderedAddCommGroup.proof_4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toLinearOrderedAddCommGroup.proof_4\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toLinearOrderedAddCommGroup</span>.<span class=\"name\">proof_4</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L274-L277","name":"SubgroupClass.toOrderedCommGroup","line":274,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.toOrderedCommGroup","doc":"A subgroup of an `OrderedCommGroup` is an `OrderedCommGroup`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.toOrderedCommGroup\"><span class=\"name\">SubgroupClass</span>.<span class=\"name\">toOrderedCommGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#OrderedCommGroup\">OrderedCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass\">SubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#OrderedCommGroup\">OrderedCommGroup</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L273-L273","name":"AddSubgroupClass.toOrderedAddCommGroup.proof_3","line":273,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toOrderedAddCommGroup.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toOrderedAddCommGroup.proof_3\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toOrderedAddCommGroup</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#OrderedAddCommGroup\">OrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L273-L273","name":"AddSubgroupClass.toOrderedAddCommGroup.proof_10","line":273,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toOrderedAddCommGroup.proof_10","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toOrderedAddCommGroup.proof_10\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toOrderedAddCommGroup</span>.<span class=\"name\">proof_10</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#OrderedAddCommGroup\">OrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) (<span class=\"fn\">x_1</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L273-L273","name":"AddSubgroupClass.toOrderedAddCommGroup.proof_5","line":273,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toOrderedAddCommGroup.proof_5","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toOrderedAddCommGroup.proof_5\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toOrderedAddCommGroup</span>.<span class=\"name\">proof_5</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#OrderedAddCommGroup\">OrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L273-L273","name":"AddSubgroupClass.toOrderedAddCommGroup.proof_1","line":273,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toOrderedAddCommGroup.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toOrderedAddCommGroup.proof_1\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toOrderedAddCommGroup</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#OrderedAddCommGroup\">OrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#ZeroMemClass\">ZeroMemClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L273-L273","name":"AddSubgroupClass.toOrderedAddCommGroup","line":273,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toOrderedAddCommGroup","doc":"An additive subgroup of an `AddOrderedCommGroup` is an `AddOrderedCommGroup`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toOrderedAddCommGroup\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toOrderedAddCommGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#OrderedAddCommGroup\">OrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#OrderedAddCommGroup\">OrderedAddCommGroup</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L273-L273","name":"AddSubgroupClass.toOrderedAddCommGroup.proof_2","line":273,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toOrderedAddCommGroup.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toOrderedAddCommGroup.proof_2\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toOrderedAddCommGroup</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#OrderedAddCommGroup\">OrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#NegMemClass\">NegMemClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L273-L273","name":"AddSubgroupClass.toOrderedAddCommGroup.proof_8","line":273,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toOrderedAddCommGroup.proof_8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toOrderedAddCommGroup.proof_8\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toOrderedAddCommGroup</span>.<span class=\"name\">proof_8</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#OrderedAddCommGroup\">OrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x </span>x_1 : <span class=\"fn\">↥<span class=\"fn\">H</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x_1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x_1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L273-L273","name":"AddSubgroupClass.toOrderedAddCommGroup.proof_4","line":273,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toOrderedAddCommGroup.proof_4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toOrderedAddCommGroup.proof_4\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toOrderedAddCommGroup</span>.<span class=\"name\">proof_4</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L273-L273","name":"AddSubgroupClass.toOrderedAddCommGroup.proof_9","line":273,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toOrderedAddCommGroup.proof_9","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toOrderedAddCommGroup.proof_9\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toOrderedAddCommGroup</span>.<span class=\"name\">proof_9</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#OrderedAddCommGroup\">OrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) (<span class=\"fn\">x_1</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L273-L273","name":"AddSubgroupClass.toOrderedAddCommGroup.proof_7","line":273,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toOrderedAddCommGroup.proof_7","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toOrderedAddCommGroup.proof_7\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toOrderedAddCommGroup</span>.<span class=\"name\">proof_7</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#OrderedAddCommGroup\">OrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L273-L273","name":"AddSubgroupClass.toOrderedAddCommGroup.proof_6","line":273,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toOrderedAddCommGroup.proof_6","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toOrderedAddCommGroup.proof_6\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toOrderedAddCommGroup</span>.<span class=\"name\">proof_6</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#OrderedAddCommGroup\">OrderedAddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x </span>x_1 : <span class=\"fn\">↥<span class=\"fn\">H</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L264-L267","name":"SubgroupClass.toCommGroup","line":264,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.toCommGroup","doc":"A subgroup of a `CommGroup` is a `CommGroup`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.toCommGroup\"><span class=\"name\">SubgroupClass</span>.<span class=\"name\">toCommGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass\">SubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L263-L263","name":"AddSubgroupClass.toAddCommGroup.proof_7","line":263,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddCommGroup.proof_7","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddCommGroup.proof_7\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toAddCommGroup</span>.<span class=\"name\">proof_7</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L263-L263","name":"AddSubgroupClass.toAddCommGroup.proof_4","line":263,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddCommGroup.proof_4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddCommGroup.proof_4\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toAddCommGroup</span>.<span class=\"name\">proof_4</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L263-L263","name":"AddSubgroupClass.toAddCommGroup.proof_3","line":263,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddCommGroup.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddCommGroup.proof_3\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toAddCommGroup</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#NegMemClass\">NegMemClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L263-L263","name":"AddSubgroupClass.toAddCommGroup.proof_6","line":263,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddCommGroup.proof_6","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddCommGroup.proof_6\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toAddCommGroup</span>.<span class=\"name\">proof_6</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x </span>x_1 : <span class=\"fn\">↥<span class=\"fn\">H</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L263-L263","name":"AddSubgroupClass.toAddCommGroup.proof_9","line":263,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddCommGroup.proof_9","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddCommGroup.proof_9\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toAddCommGroup</span>.<span class=\"name\">proof_9</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) (<span class=\"fn\">x_1</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L263-L263","name":"AddSubgroupClass.toAddCommGroup.proof_10","line":263,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddCommGroup.proof_10","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddCommGroup.proof_10\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toAddCommGroup</span>.<span class=\"name\">proof_10</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) (<span class=\"fn\">x_1</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L263-L263","name":"AddSubgroupClass.toAddCommGroup.proof_2","line":263,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddCommGroup.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddCommGroup.proof_2\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toAddCommGroup</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L263-L263","name":"AddSubgroupClass.toAddCommGroup.proof_5","line":263,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddCommGroup.proof_5","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddCommGroup.proof_5\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toAddCommGroup</span>.<span class=\"name\">proof_5</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L263-L263","name":"AddSubgroupClass.toAddCommGroup.proof_1","line":263,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddCommGroup.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddCommGroup.proof_1\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toAddCommGroup</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#ZeroMemClass\">ZeroMemClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L263-L263","name":"AddSubgroupClass.toAddCommGroup","line":263,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddCommGroup","doc":"An additive subgroup of an `AddCommGroup` is an `AddCommGroup`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddCommGroup\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toAddCommGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L263-L263","name":"AddSubgroupClass.toAddCommGroup.proof_8","line":263,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddCommGroup.proof_8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddCommGroup.proof_8\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toAddCommGroup</span>.<span class=\"name\">proof_8</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x </span>x_1 : <span class=\"fn\">↥<span class=\"fn\">H</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x_1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x_1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L255-L257","name":"SubgroupClass.toGroup","line":255,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.toGroup","doc":"A subgroup of a group inherits a group structure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.toGroup\"><span class=\"name\">SubgroupClass</span>.<span class=\"name\">toGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass\">SubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L254-L254","name":"AddSubgroupClass.toAddGroup","line":254,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddGroup","doc":"An additive subgroup of an `AddGroup` inherits an `AddGroup` structure."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddGroup\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toAddGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L254-L254","name":"AddSubgroupClass.toAddGroup.proof_10","line":254,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddGroup.proof_10","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddGroup.proof_10\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toAddGroup</span>.<span class=\"name\">proof_10</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) (<span class=\"fn\">x_1</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L254-L254","name":"AddSubgroupClass.toAddGroup.proof_6","line":254,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddGroup.proof_6","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddGroup.proof_6\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toAddGroup</span>.<span class=\"name\">proof_6</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x </span>x_1 : <span class=\"fn\">↥<span class=\"fn\">H</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L254-L254","name":"AddSubgroupClass.toAddGroup.proof_5","line":254,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddGroup.proof_5","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddGroup.proof_5\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toAddGroup</span>.<span class=\"name\">proof_5</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L254-L254","name":"AddSubgroupClass.toAddGroup.proof_9","line":254,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddGroup.proof_9","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddGroup.proof_9\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toAddGroup</span>.<span class=\"name\">proof_9</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) (<span class=\"fn\">x_1</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L254-L254","name":"AddSubgroupClass.toAddGroup.proof_3","line":254,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddGroup.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddGroup.proof_3\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toAddGroup</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#NegMemClass\">NegMemClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L254-L254","name":"AddSubgroupClass.toAddGroup.proof_1","line":254,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddGroup.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddGroup.proof_1\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toAddGroup</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L254-L254","name":"AddSubgroupClass.toAddGroup.proof_4","line":254,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddGroup.proof_4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddGroup.proof_4\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toAddGroup</span>.<span class=\"name\">proof_4</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L254-L254","name":"AddSubgroupClass.toAddGroup.proof_7","line":254,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddGroup.proof_7","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddGroup.proof_7\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toAddGroup</span>.<span class=\"name\">proof_7</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L254-L254","name":"AddSubgroupClass.toAddGroup.proof_8","line":254,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddGroup.proof_8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddGroup.proof_8\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toAddGroup</span>.<span class=\"name\">proof_8</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x </span>x_1 : <span class=\"fn\">↥<span class=\"fn\">H</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x_1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x_1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L254-L254","name":"AddSubgroupClass.toAddGroup.proof_2","line":254,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddGroup.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.toAddGroup.proof_2\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">toAddGroup</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#ZeroMemClass\">ZeroMemClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L245-L246","name":"SubgroupClass.coe_div","line":245,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.coe_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.coe_div\"><span class=\"name\">SubgroupClass</span>.<span class=\"name\">coe_div</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass\">SubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L244-L244","name":"AddSubgroupClass.coe_sub","line":244,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.coe_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.coe_sub\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">coe_sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L239-L240","name":"SubgroupClass.zpow","line":239,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.zpow","doc":"A subgroup of a group inherits an integer power. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.zpow\"><span class=\"name\">SubgroupClass</span>.<span class=\"name\">zpow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#DivInvMonoid\">DivInvMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass\">SubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Pow\">Pow</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L232-L234","name":"AddSubgroupClass.zsmul","line":232,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.zsmul","doc":"An additive subgroup of an `AddGroup` inherits an integer scaling. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.zsmul\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">zsmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SubNegMonoid\">SubNegMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L225-L227","name":"SubgroupClass.div","line":225,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.div","doc":"A subgroup of a group inherits a division "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.div\"><span class=\"name\">SubgroupClass</span>.<span class=\"name\">div</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#DivInvMonoid\">DivInvMonoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass\">SubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Div\">Div</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L224-L224","name":"AddSubgroupClass.sub","line":224,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.sub","doc":"An additive subgroup of an `AddGroup` inherits a subtraction."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.sub\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SubNegMonoid\">SubNegMonoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L224-L224","name":"AddSubgroupClass.sub.proof_1","line":224,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.sub.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.sub.proof_1\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">sub</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SubNegMonoid\">SubNegMonoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L216-L221","name":"SubgroupClass.subset_union","line":216,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.subset_union","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.subset_union\"><span class=\"name\">SubgroupClass</span>.<span class=\"name\">subset_union</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass\">SubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">H</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">K</span></span> <a href=\"./Std/Classes/SetNotation.html#Union.union\">∪</a> <span class=\"fn\">↑<span class=\"fn\">L</span></span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">L</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L215-L215","name":"AddSubgroupClass.subset_union","line":215,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.subset_union","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.subset_union\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">subset_union</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">H</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">K</span></span> <a href=\"./Std/Classes/SetNotation.html#Union.union\">∪</a> <span class=\"fn\">↑<span class=\"fn\">L</span></span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">L</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L215-L215","name":"AddSubgroupClass.subset_union.match_1","line":215,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.subset_union.match_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.subset_union.match_1\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">subset_union</span>.<span class=\"name\">match_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(motive : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ x ∈ <span class=\"fn\">H</span>, <span class=\"fn\"><span class=\"fn\">x</span> ∉ <span class=\"fn\">K</span></span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">∃ x ∈ <span class=\"fn\">H</span>, <span class=\"fn\"><span class=\"fn\">x</span> ∉ <span class=\"fn\">K</span></span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) (<span class=\"fn\">xH</span> : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>) (<span class=\"fn\">xK</span> : <span class=\"fn\"><span class=\"fn\">x</span> ∉ <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">(_ : <span class=\"fn\">∃ x ∈ <span class=\"fn\">H</span>, <span class=\"fn\"><span class=\"fn\">x</span> ∉ <span class=\"fn\">K</span></span></span>)</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L209-L209","name":"AddSubgroupClass.coe_neg","line":209,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.coe_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.coe_neg\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">coe_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L209-L209","name":"SubgroupClass.coe_inv","line":209,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.coe_inv","doc":"**Alias** of `InvMemClass.coe_inv`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.coe_inv\"><span class=\"name\">SubgroupClass</span>.<span class=\"name\">coe_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass\">SubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">x</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L199-L200","name":"InvMemClass.coe_inv","line":199,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#InvMemClass.coe_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#InvMemClass.coe_inv\"><span class=\"name\">InvMemClass</span>.<span class=\"name\">coe_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass\">SubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">x</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L198-L198","name":"NegMemClass.coe_neg","line":198,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#NegMemClass.coe_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#NegMemClass.coe_neg\"><span class=\"name\">NegMemClass</span>.<span class=\"name\">coe_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L192-L194","name":"InvMemClass.inv","line":192,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#InvMemClass.inv","doc":"A subgroup of a group inherits an inverse. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#InvMemClass.inv\"><span class=\"name\">InvMemClass</span>.<span class=\"name\">inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv\">Inv</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#InvMemClass\">InvMemClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv\">Inv</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L191-L191","name":"NegMemClass.neg","line":191,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#NegMemClass.neg","doc":"An additive subgroup of an `AddGroup` inherits an inverse."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#NegMemClass.neg\"><span class=\"name\">NegMemClass</span>.<span class=\"name\">neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#NegMemClass\">NegMemClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L191-L191","name":"NegMemClass.neg.proof_1","line":191,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#NegMemClass.neg.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#NegMemClass.neg.proof_1\"><span class=\"name\">NegMemClass</span>.<span class=\"name\">neg</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#NegMemClass\">NegMemClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L183-L184","name":"mul_mem_cancel_left","line":183,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#mul_mem_cancel_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#mul_mem_cancel_left\"><span class=\"name\">mul_mem_cancel_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass\">SubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L182-L182","name":"add_mem_cancel_left","line":182,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#add_mem_cancel_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#add_mem_cancel_left\"><span class=\"name\">add_mem_cancel_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L177-L178","name":"mul_mem_cancel_right","line":177,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#mul_mem_cancel_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#mul_mem_cancel_right\"><span class=\"name\">mul_mem_cancel_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass\">SubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L176-L176","name":"add_mem_cancel_right","line":176,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#add_mem_cancel_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#add_mem_cancel_right\"><span class=\"name\">add_mem_cancel_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L168-L172","name":"exists_inv_mem_iff_exists_mem","line":168,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#exists_inv_mem_iff_exists_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#exists_inv_mem_iff_exists_mem\"><span class=\"name\">exists_inv_mem_iff_exists_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass\">SubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\">G</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ x ∈ <span class=\"fn\">H</span>, <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\"><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ x ∈ <span class=\"fn\">H</span>, <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L167-L167","name":"exists_neg_mem_iff_exists_mem","line":167,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#exists_neg_mem_iff_exists_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#exists_neg_mem_iff_exists_mem\"><span class=\"name\">exists_neg_mem_iff_exists_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\">G</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ x ∈ <span class=\"fn\">H</span>, <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ x ∈ <span class=\"fn\">H</span>, <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L162-L163","name":"div_mem_comm_iff","line":162,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#div_mem_comm_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#div_mem_comm_iff\"><span class=\"name\">div_mem_comm_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass\">SubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L161-L161","name":"sub_mem_comm_iff","line":161,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#sub_mem_comm_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#sub_mem_comm_iff\"><span class=\"name\">sub_mem_comm_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L149-L155","name":"zpow_mem","line":149,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#zpow_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#zpow_mem\"><span class=\"name\">zpow_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#DivInvMonoid\">DivInvMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hSM : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass\">SubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L148-L148","name":"zsmul_mem","line":148,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#zsmul_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#zsmul_mem\"><span class=\"name\">zsmul_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SubNegMonoid\">SubNegMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hSM : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L148-L148","name":"zsmul_mem.match_1","line":148,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#zsmul_mem.match_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#zsmul_mem.match_1\"><span class=\"name\">zsmul_mem</span>.<span class=\"name\">match_1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(motive : <span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#Int.ofNat\">Int.ofNat</a> <span class=\"fn\">n</span></span>)</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#Int.negSucc\">Int.negSucc</a> <span class=\"fn\">n</span></span>)</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">x</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L143-L144","name":"div_mem","line":143,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#div_mem","doc":"A subgroup is closed under division. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#div_mem\"><span class=\"name\">div_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#DivInvMonoid\">DivInvMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hSM : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass\">SubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L141-L142","name":"sub_mem","line":141,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#sub_mem","doc":"An additive subgroup is closed under subtraction."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#sub_mem\"><span class=\"name\">sub_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SubNegMonoid\">SubNegMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hSM : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L134-L136","name":"abs_mem_iff","line":134,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#abs_mem_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#abs_mem_iff\"><span class=\"name\">abs_mem_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>} [<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#NegMemClass\">NegMemClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>] {<span class=\"fn\">H</span> : <span class=\"fn\">S</span>} {<span class=\"fn\">x_1</span> : <span class=\"fn\">G</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">|<span class=\"fn\">x_1</span>|</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L128-L130","name":"inv_mem_iff","line":128,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#inv_mem_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#inv_mem_iff\"><span class=\"name\">inv_mem_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#InvolutiveInv\">InvolutiveInv</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>} [<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#InvMemClass\">InvMemClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>] {<span class=\"fn\">H</span> : <span class=\"fn\">S</span>} {<span class=\"fn\">x_1</span> : <span class=\"fn\">G</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x_1</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L127-L127","name":"neg_mem_iff","line":127,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#neg_mem_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#neg_mem_iff\"><span class=\"name\">neg_mem_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#InvolutiveNeg\">InvolutiveNeg</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>} [<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#NegMemClass\">NegMemClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>] {<span class=\"fn\">H</span> : <span class=\"fn\">S</span>} {<span class=\"fn\">x_1</span> : <span class=\"fn\">G</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x_1</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L119-L119","name":"AddSubgroupClass.mk","line":119,"kind":"ctor","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass.mk\"><span class=\"name\">AddSubgroupClass</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SubNegMonoid\">SubNegMonoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[toAddSubmonoidClass : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[toNegMemClass : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#NegMemClass\">NegMemClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\">AddSubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L119-L120","name":"AddSubgroupClass","line":119,"kind":"class","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass","doc":"`AddSubgroupClass S G` states `S` is a type of subsets `s ⊆ G` that are\nadditive subgroups of `G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroupClass\"><span class=\"name\">AddSubgroupClass</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(S : <a href=\"./foundational_types.html\">Type</a> u_5)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u_6)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SubNegMonoid\">SubNegMonoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoidClass\"><span class=\"name\">AddSubmonoidClass</span></a></span></span>\n, <span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#NegMemClass\"><span class=\"name\">NegMemClass</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L113-L113","name":"SubgroupClass.mk","line":113,"kind":"ctor","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass.mk\"><span class=\"name\">SubgroupClass</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#DivInvMonoid\">DivInvMonoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[toSubmonoidClass : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#SubmonoidClass\">SubmonoidClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[toInvMemClass : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#InvMemClass\">InvMemClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass\">SubgroupClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L113-L114","name":"SubgroupClass","line":113,"kind":"class","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass","doc":"`SubgroupClass S G` states `S` is a type of subsets `s ⊆ G` that are subgroups of `G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#SubgroupClass\"><span class=\"name\">SubgroupClass</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(S : <a href=\"./foundational_types.html\">Type</a> u_5)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u_6)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#DivInvMonoid\">DivInvMonoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#SubmonoidClass\"><span class=\"name\">SubmonoidClass</span></a></span></span>\n, <span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#InvMemClass\"><span class=\"name\">InvMemClass</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L107-L107","name":"NegMemClass.neg_mem","line":107,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#NegMemClass.neg_mem","doc":"`s` is closed under negation "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#NegMemClass.neg_mem\"><span class=\"name\">NegMemClass</span>.<span class=\"name\">neg_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#NegMemClass\">NegMemClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L105-L105","name":"NegMemClass.mk","line":105,"kind":"ctor","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#NegMemClass.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#NegMemClass.mk\"><span class=\"name\">NegMemClass</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(neg_mem : <span class=\"fn\">∀ {<span class=\"fn\">s</span> : <span class=\"fn\">S</span>} {<span class=\"fn\">x</span> : <span class=\"fn\">G</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#NegMemClass\">NegMemClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L105-L107","name":"NegMemClass","line":105,"kind":"class","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#NegMemClass","doc":"`NegMemClass S G` states `S` is a type of subsets `s ⊆ G` closed under negation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#NegMemClass\"><span class=\"name\">NegMemClass</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(S : <a href=\"./foundational_types.html\">Type</a> u_5)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u_6)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L99-L99","name":"InvMemClass.inv_mem","line":99,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#InvMemClass.inv_mem","doc":"`s` is closed under inverses "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#InvMemClass.inv_mem\"><span class=\"name\">InvMemClass</span>.<span class=\"name\">inv_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv\">Inv</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#InvMemClass\">InvMemClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L97-L97","name":"InvMemClass.mk","line":97,"kind":"ctor","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#InvMemClass.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#InvMemClass.mk\"><span class=\"name\">InvMemClass</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv\">Inv</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(inv_mem : <span class=\"fn\">∀ {<span class=\"fn\">s</span> : <span class=\"fn\">S</span>} {<span class=\"fn\">x</span> : <span class=\"fn\">G</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#InvMemClass\">InvMemClass</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/Basic.lean#L97-L99","name":"InvMemClass","line":97,"kind":"class","docLink":"./Mathlib/GroupTheory/Subgroup/Basic.html#InvMemClass","doc":"`InvMemClass S G` states `S` is a type of subsets `s ⊆ G` closed under inverses. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#InvMemClass\"><span class=\"name\">InvMemClass</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(S : <a href=\"./foundational_types.html\">Type</a> u_5)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u_6)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv\">Inv</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">S</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}