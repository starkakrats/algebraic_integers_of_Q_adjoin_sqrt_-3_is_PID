{"name":"Lean.Parser.Module","instances":[{"typeNames":["Lean.Parser.ModuleParserState"],"name":"Lean.Parser.instInhabitedModuleParserState","className":"Inhabited"}],"imports":["Init","Lean.Message","Lean.Parser.Command"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Parser/Module.lean#L156-L158","name":"Lean.Parser.testParseFile","line":156,"kind":"def","docLink":"./Lean/Parser/Module.html#Lean.Parser.testParseFile","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Module.html#Lean.Parser.testParseFile\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">testParseFile</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fname : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lean.Parser.Module.module</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Parser/Module.lean#L149-L154","name":"Lean.Parser.testParseModule","line":149,"kind":"def","docLink":"./Lean/Parser/Module.html#Lean.Parser.testParseModule","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Module.html#Lean.Parser.testParseModule\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">testParseModule</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fname : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(contents : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lean.Parser.Module.module</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Parser/Module.lean#L136-L146","name":"Lean.Parser.testParseModuleAux.parse","line":136,"kind":"opaque","docLink":"./Lean/Parser/Module.html#Lean.Parser.testParseModuleAux.parse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Module.html#Lean.Parser.testParseModuleAux.parse\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">testParseModuleAux</span>.<span class=\"name\">parse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(inputCtx : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Lean.Parser.InputContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(state : <a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Lean.Parser.ModuleParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(msgs : <a href=\"./Lean/Message.html#Lean.MessageLog\">Lean.MessageLog</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stxs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Parser/Module.lean#L135-L147","name":"Lean.Parser.testParseModuleAux","line":135,"kind":"def","docLink":"./Lean/Parser/Module.html#Lean.Parser.testParseModuleAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Module.html#Lean.Parser.testParseModuleAux\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">testParseModuleAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(inputCtx : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Lean.Parser.InputContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Lean.Parser.ModuleParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(msgs : <a href=\"./Lean/Message.html#Lean.MessageLog\">Lean.MessageLog</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stxs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Parser/Module.lean#L94-L131","name":"Lean.Parser.parseCommand","line":94,"kind":"def","docLink":"./Lean/Parser/Module.html#Lean.Parser.parseCommand","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Module.html#Lean.Parser.parseCommand\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">parseCommand</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(inputCtx : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Lean.Parser.InputContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pmctx : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext\">Lean.Parser.ParserModuleContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mps : <a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Lean.Parser.ModuleParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(messages : <a href=\"./Lean/Message.html#Lean.MessageLog\">Lean.MessageLog</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Lean.Parser.ModuleParserState</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Message.html#Lean.MessageLog\">Lean.MessageLog</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Parser/Module.lean#L91-L92","name":"Lean.Parser.topLevelCommandParserFn","line":91,"kind":"def","docLink":"./Lean/Parser/Module.html#Lean.Parser.topLevelCommandParserFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Module.html#Lean.Parser.topLevelCommandParserFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">topLevelCommandParserFn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Parser/Module.lean#L81-L82","name":"Lean.Parser.isTerminalCommand","line":81,"kind":"def","docLink":"./Lean/Parser/Module.html#Lean.Parser.isTerminalCommand","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Module.html#Lean.Parser.isTerminalCommand\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">isTerminalCommand</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Parser/Module.lean#L64-L75","name":"Lean.Parser.parseHeader","line":64,"kind":"def","docLink":"./Lean/Parser/Module.html#Lean.Parser.parseHeader","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Module.html#Lean.Parser.parseHeader\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">parseHeader</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(inputCtx : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Lean.Parser.InputContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Lean.Parser.ModuleParserState</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Message.html#Lean.MessageLog\">Lean.MessageLog</a></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Parser/Module.lean#L37-L37","name":"Lean.Parser.instInhabitedModuleParserState","line":37,"kind":"instance","docLink":"./Lean/Parser/Module.html#Lean.Parser.instInhabitedModuleParserState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Module.html#Lean.Parser.instInhabitedModuleParserState\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instInhabitedModuleParserState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Lean.Parser.ModuleParserState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Parser/Module.lean#L36-L36","name":"Lean.Parser.ModuleParserState.recovering","line":36,"kind":"def","docLink":"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState.recovering","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState.recovering\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ModuleParserState</span>.<span class=\"name\">recovering</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Lean.Parser.ModuleParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Parser/Module.lean#L35-L35","name":"Lean.Parser.ModuleParserState.pos","line":35,"kind":"def","docLink":"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState.pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState.pos\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ModuleParserState</span>.<span class=\"name\">pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Lean.Parser.ModuleParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Parser/Module.lean#L34-L34","name":"Lean.Parser.ModuleParserState.mk","line":34,"kind":"ctor","docLink":"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ModuleParserState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(recovering : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Lean.Parser.ModuleParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Parser/Module.lean#L34-L37","name":"Lean.Parser.ModuleParserState","line":34,"kind":"structure","docLink":"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ModuleParserState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Parser/Module.lean#L27-L30","name":"Lean.Parser.Module.updateTokens","line":27,"kind":"def","docLink":"./Lean/Parser/Module.html#Lean.Parser.Module.updateTokens","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Module.html#Lean.Parser.Module.updateTokens\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Module</span>.<span class=\"name\">updateTokens</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(tokens : <a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenTable\">Lean.Parser.TokenTable</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenTable\">Lean.Parser.TokenTable</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Parser/Module.lean#L25-L25","name":"Lean.Parser.Module.module","line":25,"kind":"def","docLink":"./Lean/Parser/Module.html#Lean.Parser.Module.module","doc":"Parser for a Lean module. We never actually run this parser but instead use the imperative definitions below that\nreturn the same syntax tree structure, but add error recovery. Still, it is helpful to have a `Parser` definition\nfor it in order to auto-generate helpers such as the pretty printer. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Module.html#Lean.Parser.Module.module\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Module</span>.<span class=\"name\">module</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Parser/Module.lean#L19-L19","name":"Lean.Parser.Module.header","line":19,"kind":"def","docLink":"./Lean/Parser/Module.html#Lean.Parser.Module.header","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Module.html#Lean.Parser.Module.header\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Module</span>.<span class=\"name\">header</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Parser/Module.lean#L18-L18","name":"Lean.Parser.Module.import","line":18,"kind":"def","docLink":"./Lean/Parser/Module.html#Lean.Parser.Module.import","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Module.html#Lean.Parser.Module.import\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Module</span>.<span class=\"name\">import</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Parser/Module.lean#L13-L13","name":"Lean.Parser.Module.prelude","line":13,"kind":"def","docLink":"./Lean/Parser/Module.html#Lean.Parser.Module.prelude","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Module.html#Lean.Parser.Module.prelude\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Module</span>.<span class=\"name\">prelude</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"}]}