{"name":"Mathlib.CategoryTheory.GradedObject.Trifunctor","instances":[{"typeNames":["CategoryTheory.GradedObject.mapObjFun"],"name":"CategoryTheory.GradedObject.instHasMapProdProdObjGradedObjectToQuiverToCategoryStructCategoryOfGradedObjectsGradedObjectToQuiverToCategoryStructCategoryOfGradedObjectsToPrefunctorObjGradedObjectToQuiverToCategoryStructCategoryOfGradedObjectsFunctorToQuiverToCategoryStructCategoryToPrefunctorMapTrifunctorObj","className":"CategoryTheory.Limits.HasColimit"}],"imports":["Init","Mathlib.CategoryTheory.GradedObject.Bifunctor","Mathlib.CategoryTheory.Functor.Trifunctor"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L346-L351","name":"CategoryTheory.GradedObject.mapBifunctorComp₁₂MapObjIso","line":346,"kind":"def","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapBifunctorComp₁₂MapObjIso","doc":"The action on graded objects of a trifunctor obtained by composition of two\nbifunctors can be computed as a composition of the actions of these two bifunctors.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapBifunctorComp₁₂MapObjIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">mapBifunctorComp₁₂MapObjIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₄ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁₂ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_10, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_11, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_12, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_13, u_4}</a>      <span class=\"fn\">C₄</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_14, u_5}</a>      <span class=\"fn\">C₁₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F₁₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">C₁₂</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₂ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₃ : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span> → <span class=\"fn\">J</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ₁₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.BifunctorComp₁₂IndexData\">CategoryTheory.GradedObject.BifunctorComp₁₂IndexData</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₃ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctor\">CategoryTheory.GradedObject.mapBifunctor</a> <span class=\"fn\">F₁₂</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span></span>)</span>.obj <span class=\"fn\">X₁</span></span>)</span>.obj <span class=\"fn\">X₂</span></span>)</span> <span class=\"fn\"><span class=\"fn\">ρ₁₂</span>.p</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctor\">CategoryTheory.GradedObject.mapBifunctor</a> <span class=\"fn\">G</span> <span class=\"fn\"><span class=\"fn\">ρ₁₂</span>.I₁₂</span> <span class=\"fn\">I₃</span></span>)</span>.obj\n        <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctorMapObj\">CategoryTheory.GradedObject.mapBifunctorMapObj</a> <span class=\"fn\">F₁₂</span> <span class=\"fn\"><span class=\"fn\">ρ₁₂</span>.p</span> <span class=\"fn\">X₁</span> <span class=\"fn\">X₂</span></span>)</span></span>)</span>.obj\n    <span class=\"fn\">X₃</span></span>)</span>\n  <span class=\"fn\"><span class=\"fn\">ρ₁₂</span>.q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[H : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.HasGoodTrifunctor₁₂Obj\">CategoryTheory.GradedObject.HasGoodTrifunctor₁₂Obj</a> <span class=\"fn\">F₁₂</span> <span class=\"fn\">G</span> <span class=\"fn\">ρ₁₂</span> <span class=\"fn\">X₁</span> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctor\">CategoryTheory.GradedObject.mapTrifunctor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Trifunctor.html#CategoryTheory.bifunctorComp₁₂\">CategoryTheory.bifunctorComp₁₂</a> <span class=\"fn\">F₁₂</span> <span class=\"fn\">G</span></span>)</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span>)</span>.obj <span class=\"fn\">X₁</span></span>)</span>.obj <span class=\"fn\">X₂</span></span>)</span>.obj <span class=\"fn\">X₃</span></span>)</span>\n  <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapObj\">CategoryTheory.GradedObject.mapTrifunctorMapObj</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Trifunctor.html#CategoryTheory.bifunctorComp₁₂\">CategoryTheory.bifunctorComp₁₂</a> <span class=\"fn\">F₁₂</span> <span class=\"fn\">G</span></span>)</span> <span class=\"fn\">r</span> <span class=\"fn\">X₁</span> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctorMapObj\">CategoryTheory.GradedObject.mapBifunctorMapObj</a> <span class=\"fn\">G</span> <span class=\"fn\"><span class=\"fn\">ρ₁₂</span>.q</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctorMapObj\">CategoryTheory.GradedObject.mapBifunctorMapObj</a> <span class=\"fn\">F₁₂</span> <span class=\"fn\"><span class=\"fn\">ρ₁₂</span>.p</span> <span class=\"fn\">X₁</span> <span class=\"fn\">X₂</span></span>)</span> <span class=\"fn\">X₃</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L338-L340","name":"CategoryTheory.GradedObject.HasGoodTrifunctor₁₂Obj.hasMap","line":338,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.HasGoodTrifunctor₁₂Obj.hasMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.HasGoodTrifunctor₁₂Obj.hasMap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">HasGoodTrifunctor₁₂Obj</span>.<span class=\"name\">hasMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₄ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁₂ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_13, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_12, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_11, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_10, u_4}</a>      <span class=\"fn\">C₄</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_14, u_5}</a>      <span class=\"fn\">C₁₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F₁₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">C₁₂</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₂ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₃ : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span> → <span class=\"fn\">J</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ρ₁₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.BifunctorComp₁₂IndexData\">CategoryTheory.GradedObject.BifunctorComp₁₂IndexData</a> <span class=\"fn\">r</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₃ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctor\">CategoryTheory.GradedObject.mapBifunctor</a> <span class=\"fn\">F₁₂</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span></span>)</span>.obj <span class=\"fn\">X₁</span></span>)</span>.obj <span class=\"fn\">X₂</span></span>)</span> <span class=\"fn\"><span class=\"fn\">ρ₁₂</span>.p</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctor\">CategoryTheory.GradedObject.mapBifunctor</a> <span class=\"fn\">G</span> <span class=\"fn\"><span class=\"fn\">ρ₁₂</span>.I₁₂</span> <span class=\"fn\">I₃</span></span>)</span>.obj\n        <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctorMapObj\">CategoryTheory.GradedObject.mapBifunctorMapObj</a> <span class=\"fn\">F₁₂</span> <span class=\"fn\"><span class=\"fn\">ρ₁₂</span>.p</span> <span class=\"fn\">X₁</span> <span class=\"fn\">X₂</span></span>)</span></span>)</span>.obj\n    <span class=\"fn\">X₃</span></span>)</span>\n  <span class=\"fn\"><span class=\"fn\">ρ₁₂</span>.q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[H : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.HasGoodTrifunctor₁₂Obj\">CategoryTheory.GradedObject.HasGoodTrifunctor₁₂Obj</a> <span class=\"fn\">F₁₂</span> <span class=\"fn\">G</span> <span class=\"fn\">ρ₁₂</span> <span class=\"fn\">X₁</span> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctor\">CategoryTheory.GradedObject.mapTrifunctor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Trifunctor.html#CategoryTheory.bifunctorComp₁₂\">CategoryTheory.bifunctorComp₁₂</a> <span class=\"fn\">F₁₂</span> <span class=\"fn\">G</span></span>)</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span>)</span>.obj <span class=\"fn\">X₁</span></span>)</span>.obj <span class=\"fn\">X₂</span></span>)</span>.obj <span class=\"fn\">X₃</span></span>)</span>\n  <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L299-L334","name":"CategoryTheory.GradedObject.isColimitCofan₃MapBifunctor₁₂BifunctorMapObj","line":299,"kind":"def","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.isColimitCofan₃MapBifunctor₁₂BifunctorMapObj","doc":"The cofan `cofan₃MapBifunctor₁₂BifunctorMapObj` is a colimit, see the induced isomorphism\n`mapBifunctorComp₁₂MapObjIso`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.isColimitCofan₃MapBifunctor₁₂BifunctorMapObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">isColimitCofan₃MapBifunctor₁₂BifunctorMapObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₄ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁₂ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_10, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_11, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_12, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_13, u_4}</a>      <span class=\"fn\">C₄</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_14, u_5}</a>      <span class=\"fn\">C₁₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F₁₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">C₁₂</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₂ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₃ : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span> → <span class=\"fn\">J</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ₁₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.BifunctorComp₁₂IndexData\">CategoryTheory.GradedObject.BifunctorComp₁₂IndexData</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₃ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctor\">CategoryTheory.GradedObject.mapBifunctor</a> <span class=\"fn\">F₁₂</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span></span>)</span>.obj <span class=\"fn\">X₁</span></span>)</span>.obj <span class=\"fn\">X₂</span></span>)</span> <span class=\"fn\"><span class=\"fn\">ρ₁₂</span>.p</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctor\">CategoryTheory.GradedObject.mapBifunctor</a> <span class=\"fn\">G</span> <span class=\"fn\"><span class=\"fn\">ρ₁₂</span>.I₁₂</span> <span class=\"fn\">I₃</span></span>)</span>.obj\n        <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctorMapObj\">CategoryTheory.GradedObject.mapBifunctorMapObj</a> <span class=\"fn\">F₁₂</span> <span class=\"fn\"><span class=\"fn\">ρ₁₂</span>.p</span> <span class=\"fn\">X₁</span> <span class=\"fn\">X₂</span></span>)</span></span>)</span>.obj\n    <span class=\"fn\">X₃</span></span>)</span>\n  <span class=\"fn\"><span class=\"fn\">ρ₁₂</span>.q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[H : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.HasGoodTrifunctor₁₂Obj\">CategoryTheory.GradedObject.HasGoodTrifunctor₁₂Obj</a> <span class=\"fn\">F₁₂</span> <span class=\"fn\">G</span> <span class=\"fn\">ρ₁₂</span> <span class=\"fn\">X₁</span> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">CategoryTheory.Limits.IsColimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.cofan₃MapBifunctor₁₂BifunctorMapObj\">CategoryTheory.GradedObject.cofan₃MapBifunctor₁₂BifunctorMapObj</a> <span class=\"fn\">F₁₂</span> <span class=\"fn\">G</span> <span class=\"fn\">ρ₁₂</span> <span class=\"fn\">X₁</span> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span> <span class=\"fn\">j</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L288-L293","name":"CategoryTheory.GradedObject.cofan₃MapBifunctor₁₂BifunctorMapObj","line":288,"kind":"def","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.cofan₃MapBifunctor₁₂BifunctorMapObj","doc":"The cofan consisting of the inclusions given by `ιMapBifunctor₁₂BifunctorMapObj`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.cofan₃MapBifunctor₁₂BifunctorMapObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">cofan₃MapBifunctor₁₂BifunctorMapObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₄ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁₂ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_10, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_11, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_12, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_13, u_4}</a>      <span class=\"fn\">C₄</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_14, u_5}</a>      <span class=\"fn\">C₁₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F₁₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">C₁₂</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₂ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₃ : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span> → <span class=\"fn\">J</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ₁₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.BifunctorComp₁₂IndexData\">CategoryTheory.GradedObject.BifunctorComp₁₂IndexData</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₃ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctor\">CategoryTheory.GradedObject.mapBifunctor</a> <span class=\"fn\">F₁₂</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span></span>)</span>.obj <span class=\"fn\">X₁</span></span>)</span>.obj <span class=\"fn\">X₂</span></span>)</span> <span class=\"fn\"><span class=\"fn\">ρ₁₂</span>.p</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctor\">CategoryTheory.GradedObject.mapBifunctor</a> <span class=\"fn\">G</span> <span class=\"fn\"><span class=\"fn\">ρ₁₂</span>.I₁₂</span> <span class=\"fn\">I₃</span></span>)</span>.obj\n        <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctorMapObj\">CategoryTheory.GradedObject.mapBifunctorMapObj</a> <span class=\"fn\">F₁₂</span> <span class=\"fn\"><span class=\"fn\">ρ₁₂</span>.p</span> <span class=\"fn\">X₁</span> <span class=\"fn\">X₂</span></span>)</span></span>)</span>.obj\n    <span class=\"fn\">X₃</span></span>)</span>\n  <span class=\"fn\"><span class=\"fn\">ρ₁₂</span>.q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.CofanMapObjFun\">CategoryTheory.GradedObject.CofanMapObjFun</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctor\">CategoryTheory.GradedObject.mapTrifunctor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Trifunctor.html#CategoryTheory.bifunctorComp₁₂\">CategoryTheory.bifunctorComp₁₂</a> <span class=\"fn\">F₁₂</span> <span class=\"fn\">G</span></span>)</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span>)</span>.obj <span class=\"fn\">X₁</span></span>)</span>.obj <span class=\"fn\">X₂</span></span>)</span>.obj <span class=\"fn\">X₃</span></span>)</span>\n  <span class=\"fn\">r</span> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L279-L285","name":"CategoryTheory.GradedObject.ιMapBifunctor₁₂BifunctorMapObj","line":279,"kind":"def","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.ιMapBifunctor₁₂BifunctorMapObj","doc":"The inclusion of `(G.obj ((F₁₂.obj (X₁ i₁)).obj (X₂ i₂))).obj (X₃ i₃)` in\n`mapBifunctorMapObj G ρ₁₂.q (mapBifunctorMapObj F₁₂ ρ₁₂.p X₁ X₂) X₃ j`\nwhen `r (i₁, i₂, i₃) = j`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.ιMapBifunctor₁₂BifunctorMapObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">ιMapBifunctor₁₂BifunctorMapObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₄ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁₂ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_10, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_11, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_12, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_13, u_4}</a>      <span class=\"fn\">C₄</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_14, u_5}</a>      <span class=\"fn\">C₁₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F₁₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">C₁₂</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₂ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₃ : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span> → <span class=\"fn\">J</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ₁₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.BifunctorComp₁₂IndexData\">CategoryTheory.GradedObject.BifunctorComp₁₂IndexData</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₃ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctor\">CategoryTheory.GradedObject.mapBifunctor</a> <span class=\"fn\">F₁₂</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span></span>)</span>.obj <span class=\"fn\">X₁</span></span>)</span>.obj <span class=\"fn\">X₂</span></span>)</span> <span class=\"fn\"><span class=\"fn\">ρ₁₂</span>.p</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctor\">CategoryTheory.GradedObject.mapBifunctor</a> <span class=\"fn\">G</span> <span class=\"fn\"><span class=\"fn\">ρ₁₂</span>.I₁₂</span> <span class=\"fn\">I₃</span></span>)</span>.obj\n        <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctorMapObj\">CategoryTheory.GradedObject.mapBifunctorMapObj</a> <span class=\"fn\">F₁₂</span> <span class=\"fn\"><span class=\"fn\">ρ₁₂</span>.p</span> <span class=\"fn\">X₁</span> <span class=\"fn\">X₂</span></span>)</span></span>)</span>.obj\n    <span class=\"fn\">X₃</span></span>)</span>\n  <span class=\"fn\"><span class=\"fn\">ρ₁₂</span>.q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i₁ : <span class=\"fn\">I₁</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i₂ : <span class=\"fn\">I₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i₃ : <span class=\"fn\">I₃</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">(<span class=\"fn\">i₁</span>, <span class=\"fn\">i₂</span>, <span class=\"fn\">i₃</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F₁₂</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X₁</span> <span class=\"fn\">i₁</span></span>)</span></span>)</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X₂</span> <span class=\"fn\">i₂</span></span>)</span></span>)</span></span>)</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X₃</span> <span class=\"fn\">i₃</span></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctorMapObj\">CategoryTheory.GradedObject.mapBifunctorMapObj</a> <span class=\"fn\">G</span> <span class=\"fn\"><span class=\"fn\">ρ₁₂</span>.q</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Bifunctor.html#CategoryTheory.GradedObject.mapBifunctorMapObj\">CategoryTheory.GradedObject.mapBifunctorMapObj</a> <span class=\"fn\">F₁₂</span> <span class=\"fn\"><span class=\"fn\">ρ₁₂</span>.p</span> <span class=\"fn\">X₁</span> <span class=\"fn\">X₂</span></span>)</span> <span class=\"fn\">X₃</span> <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L268-L271","name":"CategoryTheory.GradedObject.HasGoodTrifunctor₁₂Obj","line":268,"kind":"def","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.HasGoodTrifunctor₁₂Obj","doc":"Given bifunctors `F₁₂ : C₁ ⥤ C₂ ⥤ C₁₂`, `G : C₁₂ ⥤ C₃ ⥤ C₄`, graded objects\n`X₁ : GradedObject I₁ C₁`, `X₂ : GradedObject I₂ C₂`, `X₃ : GradedObject I₃ C₃` and\n`ρ₁₂ : BifunctorComp₁₂IndexData r`, this asserts that for all `i₁₂ : ρ₁₂.I₁₂` and `i₃ : I₃`,\nthe functor `G(-, X₃ i₃)` commutes wich the coproducts of the `F₁₂(X₁ i₁, X₂ i₂)`\nsuch that `ρ₁₂.p ⟨i₁, i₂⟩ = i₁₂`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.HasGoodTrifunctor₁₂Obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">HasGoodTrifunctor₁₂Obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₄ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁₂ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_10, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_11, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_12, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_13, u_4}</a>      <span class=\"fn\">C₄</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_14, u_5}</a>      <span class=\"fn\">C₁₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F₁₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">C₁₂</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₂ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₃ : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span> → <span class=\"fn\">J</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ₁₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.BifunctorComp₁₂IndexData\">CategoryTheory.GradedObject.BifunctorComp₁₂IndexData</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₃ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (max (max (max (max (max u_8 u_15) u_4) u_5) u_13) u_14) u_6 u_7)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L258-L258","name":"CategoryTheory.GradedObject.BifunctorComp₁₂IndexData.hpq","line":258,"kind":"def","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.BifunctorComp₁₂IndexData.hpq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.BifunctorComp₁₂IndexData.hpq\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">BifunctorComp₁₂IndexData</span>.<span class=\"name\">hpq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₂ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₃ : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span> → <span class=\"fn\">J</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.BifunctorComp₁₂IndexData\">CategoryTheory.GradedObject.BifunctorComp₁₂IndexData</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.BifunctorComp₁₂IndexData.q\">CategoryTheory.GradedObject.BifunctorComp₁₂IndexData.q</a> <span class=\"fn\">self</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.BifunctorComp₁₂IndexData.p\">CategoryTheory.GradedObject.BifunctorComp₁₂IndexData.p</a> <span class=\"fn\">self</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span>.1</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span>.2</span>.1</span>)</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span>.2</span>.2</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L257-L257","name":"CategoryTheory.GradedObject.BifunctorComp₁₂IndexData.q","line":257,"kind":"def","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.BifunctorComp₁₂IndexData.q","doc":"a map `I₁₂ × I₃ → J` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.BifunctorComp₁₂IndexData.q\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">BifunctorComp₁₂IndexData</span>.<span class=\"name\">q</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₂ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₃ : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span> → <span class=\"fn\">J</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.BifunctorComp₁₂IndexData\">CategoryTheory.GradedObject.BifunctorComp₁₂IndexData</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.I₁₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span> → <span class=\"fn\">J</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L255-L255","name":"CategoryTheory.GradedObject.BifunctorComp₁₂IndexData.p","line":255,"kind":"def","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.BifunctorComp₁₂IndexData.p","doc":"a map `I₁ × I₂ → I₁₂` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.BifunctorComp₁₂IndexData.p\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">BifunctorComp₁₂IndexData</span>.<span class=\"name\">p</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₂ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₃ : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span> → <span class=\"fn\">J</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.BifunctorComp₁₂IndexData\">CategoryTheory.GradedObject.BifunctorComp₁₂IndexData</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₂</span></span> → <span class=\"fn\"><span class=\"fn\">self</span>.I₁₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L253-L253","name":"CategoryTheory.GradedObject.BifunctorComp₁₂IndexData.I₁₂","line":253,"kind":"def","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.BifunctorComp₁₂IndexData.I₁₂","doc":"an auxiliary type "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.BifunctorComp₁₂IndexData.I₁₂\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">BifunctorComp₁₂IndexData</span>.<span class=\"name\">I₁₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₂ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₃ : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span> → <span class=\"fn\">J</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.BifunctorComp₁₂IndexData\">CategoryTheory.GradedObject.BifunctorComp₁₂IndexData</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_10</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L251-L251","name":"CategoryTheory.GradedObject.BifunctorComp₁₂IndexData.mk","line":251,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.BifunctorComp₁₂IndexData.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.BifunctorComp₁₂IndexData.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">BifunctorComp₁₂IndexData</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₂ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₃ : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span> → <span class=\"fn\">J</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I₁₂ : <a href=\"./foundational_types.html\">Type</a> u_10)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₂</span></span> → <span class=\"fn\">I₁₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(q : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I₁₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span> → <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hpq : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">q</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span>.1</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span>.2</span>.1</span>)</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span>.2</span>.2</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">i</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.BifunctorComp₁₂IndexData\">CategoryTheory.GradedObject.BifunctorComp₁₂IndexData</a> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L251-L258","name":"CategoryTheory.GradedObject.BifunctorComp₁₂IndexData","line":251,"kind":"structure","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.BifunctorComp₁₂IndexData","doc":"Given a map `r : I₁ × I₂ × I₃ → J`, a `BifunctorComp₁₂IndexData r` consists of the data\nof a type `I₁₂`, maps `p : I₁ × I₂ → I₁₂` and `q : I₁₂ × I₃ → J`, such that `r` is obtained\nby composition of `p` and `q`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.BifunctorComp₁₂IndexData\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">BifunctorComp₁₂IndexData</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₂ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₃ : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span> → <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (max (max (max (u_10 + 1) u_6) u_7) u_8) u_9)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L220-L239","name":"CategoryTheory.GradedObject.mapTrifunctorMap","line":220,"kind":"def","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMap","doc":"Given a trifunctor `F : C₁ ⥤ C₂ ⥤ C₃ ⥤ C₄` and a map `p : I₁ × I₂ × I₃ → J`,\nthis is the functor\n`GradedObject I₁ C₁ ⥤ GradedObject I₂ C₂ ⥤ GradedObject I₃ C₃ ⥤ GradedObject J C₄`\nsending `X₁ : GradedObject I₁ C₁`, `X₂ : GradedObject I₂ C₂` and `X₃ : GradedObject I₃ C₃`\nto the `J`-graded object sending `j` to the coproduct of\n`((F.obj (X₁ i₁)).obj (X₂ i₂)).obj (X₃ i₃)` for `p ⟨i₁, i₂, i₃⟩ = j`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">mapTrifunctorMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₄ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_10, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_11, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_12, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_13, u_4}</a>      <span class=\"fn\">C₄</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₂ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₃ : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span> → <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">X₁</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>) (<span class=\"fn\">X₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>)\n  (<span class=\"fn\">X₃</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>),\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctor\">CategoryTheory.GradedObject.mapTrifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span>)</span>.obj <span class=\"fn\">X₁</span></span>)</span>.obj <span class=\"fn\">X₂</span></span>)</span>.obj <span class=\"fn\">X₃</span></span>)</span> <span class=\"fn\">p</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">J</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L219-L219","name":"CategoryTheory.GradedObject.mapTrifunctorMap_map_app_app","line":219,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMap_map_app_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMap_map_app_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">mapTrifunctorMap_map_app_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₄ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_10, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_11, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_12, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_13, u_4}</a>      <span class=\"fn\">C₄</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₂ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₃ : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span> → <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">X₁</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>) (<span class=\"fn\">X₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>)\n  (<span class=\"fn\">X₃</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>),\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctor\">CategoryTheory.GradedObject.mapTrifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span>)</span>.obj <span class=\"fn\">X₁</span></span>)</span>.obj <span class=\"fn\">X₂</span></span>)</span>.obj <span class=\"fn\">X₃</span></span>)</span> <span class=\"fn\">p</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₃ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMap\">CategoryTheory.GradedObject.mapTrifunctorMap</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span></span>)</span>.map <span class=\"fn\">φ</span></span>)</span>.app <span class=\"fn\">X₂</span></span>)</span>.app <span class=\"fn\">X₃</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapMap\">CategoryTheory.GradedObject.mapTrifunctorMapMap</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">φ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X₂</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X₃</span></span>)</span> <span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L219-L219","name":"CategoryTheory.GradedObject.mapTrifunctorMap_obj","line":219,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMap_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMap_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">mapTrifunctorMap_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₄ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_10, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_11, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_12, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_13, u_4}</a>      <span class=\"fn\">C₄</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₂ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₃ : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span> → <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">X₁</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>) (<span class=\"fn\">X₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>)\n  (<span class=\"fn\">X₃</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>),\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctor\">CategoryTheory.GradedObject.mapTrifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span>)</span>.obj <span class=\"fn\">X₁</span></span>)</span>.obj <span class=\"fn\">X₂</span></span>)</span>.obj <span class=\"fn\">X₃</span></span>)</span> <span class=\"fn\">p</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMap\">CategoryTheory.GradedObject.mapTrifunctorMap</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span></span>)</span>.obj <span class=\"fn\">X₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapFunctorObj\">CategoryTheory.GradedObject.mapTrifunctorMapFunctorObj</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">X₁</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L177-L211","name":"CategoryTheory.GradedObject.mapTrifunctorMapFunctorObj","line":177,"kind":"def","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapFunctorObj","doc":"Given a trifunctor `F : C₁ ⥤ C₂ ⥤ C₃ ⥤ C₄`, a map `p : I₁ × I₂ × I₃ → J`, and\ngraded objects `X₁ : GradedObject I₁ C₁`, `X₂ : GradedObject I₂ C₂` and `X₃ : GradedObject I₃ C₃`,\nthis is the `J`-graded object sending `j` to the coproduct of\n`((F.obj (X₁ i₁)).obj (X₂ i₂)).obj (X₃ i₃)` for `p ⟨i₁, i₂, i₃⟩ = j`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapFunctorObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">mapTrifunctorMapFunctorObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₄ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_10, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_11, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_12, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_13, u_4}</a>      <span class=\"fn\">C₄</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₂ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₃ : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span> → <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">X₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>) (<span class=\"fn\">X₃</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>),\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctor\">CategoryTheory.GradedObject.mapTrifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span>)</span>.obj <span class=\"fn\">X₁</span></span>)</span>.obj <span class=\"fn\">X₂</span></span>)</span>.obj <span class=\"fn\">X₃</span></span>)</span> <span class=\"fn\">p</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">J</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L176-L176","name":"CategoryTheory.GradedObject.mapTrifunctorMapFunctorObj_obj_obj","line":176,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapFunctorObj_obj_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapFunctorObj_obj_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">mapTrifunctorMapFunctorObj_obj_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₄ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_10, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_11, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_12, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_13, u_4}</a>      <span class=\"fn\">C₄</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₂ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₃ : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span> → <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">X₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>) (<span class=\"fn\">X₃</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>),\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctor\">CategoryTheory.GradedObject.mapTrifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span>)</span>.obj <span class=\"fn\">X₁</span></span>)</span>.obj <span class=\"fn\">X₂</span></span>)</span>.obj <span class=\"fn\">X₃</span></span>)</span> <span class=\"fn\">p</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₃ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapFunctorObj\">CategoryTheory.GradedObject.mapTrifunctorMapFunctorObj</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">X₁</span></span>)</span>.obj <span class=\"fn\">X₂</span></span>)</span>.obj <span class=\"fn\">X₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapObj\">CategoryTheory.GradedObject.mapTrifunctorMapObj</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">X₁</span> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L176-L176","name":"CategoryTheory.GradedObject.mapTrifunctorMapFunctorObj_map_app","line":176,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapFunctorObj_map_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapFunctorObj_map_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">mapTrifunctorMapFunctorObj_map_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₄ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_10, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_11, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_12, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_13, u_4}</a>      <span class=\"fn\">C₄</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₂ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₃ : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span> → <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">X₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>) (<span class=\"fn\">X₃</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>),\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctor\">CategoryTheory.GradedObject.mapTrifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span>)</span>.obj <span class=\"fn\">X₁</span></span>)</span>.obj <span class=\"fn\">X₂</span></span>)</span>.obj <span class=\"fn\">X₃</span></span>)</span> <span class=\"fn\">p</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">X₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₃ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapFunctorObj\">CategoryTheory.GradedObject.mapTrifunctorMapFunctorObj</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">X₁</span></span>)</span>.map <span class=\"fn\">φ</span></span>)</span>.app <span class=\"fn\">X₃</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapMap\">CategoryTheory.GradedObject.mapTrifunctorMapMap</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X₁</span></span>)</span> <span class=\"fn\">φ</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X₃</span></span>)</span> <span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L176-L176","name":"CategoryTheory.GradedObject.mapTrifunctorMapFunctorObj_obj_map","line":176,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapFunctorObj_obj_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapFunctorObj_obj_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">mapTrifunctorMapFunctorObj_obj_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₄ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_10, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_11, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_12, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_13, u_4}</a>      <span class=\"fn\">C₄</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₂ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₃ : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span> → <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">X₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>) (<span class=\"fn\">X₃</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>),\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctor\">CategoryTheory.GradedObject.mapTrifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span>)</span>.obj <span class=\"fn\">X₁</span></span>)</span>.obj <span class=\"fn\">X₂</span></span>)</span>.obj <span class=\"fn\">X₃</span></span>)</span> <span class=\"fn\">p</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₃ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y₃ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">X₃</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapFunctorObj\">CategoryTheory.GradedObject.mapTrifunctorMapFunctorObj</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">X₁</span></span>)</span>.obj <span class=\"fn\">X₂</span></span>)</span>.map <span class=\"fn\">φ</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapMap\">CategoryTheory.GradedObject.mapTrifunctorMapMap</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X₁</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X₂</span></span>)</span> <span class=\"fn\">φ</span> <span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L168-L170","name":"CategoryTheory.GradedObject.instHasMapProdProdObjGradedObjectToQuiverToCategoryStructCategoryOfGradedObjectsGradedObjectToQuiverToCategoryStructCategoryOfGradedObjectsToPrefunctorObjGradedObjectToQuiverToCategoryStructCategoryOfGradedObjectsFunctorToQuiverToCategoryStructCategoryToPrefunctorMapTrifunctorObj","line":168,"kind":"instance","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.instHasMapProdProdObjGradedObjectToQuiverToCategoryStructCategoryOfGradedObjectsGradedObjectToQuiverToCategoryStructCategoryOfGradedObjectsToPrefunctorObjGradedObjectToQuiverToCategoryStructCategoryOfGradedObjectsFunctorToQuiverToCategoryStructCategoryToPrefunctorMapTrifunctorObj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.instHasMapProdProdObjGradedObjectToQuiverToCategoryStructCategoryOfGradedObjectsGradedObjectToQuiverToCategoryStructCategoryOfGradedObjectsToPrefunctorObjGradedObjectToQuiverToCategoryStructCategoryOfGradedObjectsFunctorToQuiverToCategoryStructCategoryToPrefunctorMapTrifunctorObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">instHasMapProdProdObjGradedObjectToQuiverToCategoryStructCategoryOfGradedObjectsGradedObjectToQuiverToCategoryStructCategoryOfGradedObjectsToPrefunctorObjGradedObjectToQuiverToCategoryStructCategoryOfGradedObjectsFunctorToQuiverToCategoryStructCategoryToPrefunctorMapTrifunctorObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₄ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_10, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_11, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_12, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_13, u_4}</a>      <span class=\"fn\">C₄</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₂ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₃ : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span> → <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₃ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctor\">CategoryTheory.GradedObject.mapTrifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span>)</span>.obj <span class=\"fn\">X₁</span></span>)</span>.obj <span class=\"fn\">X₂</span></span>)</span>.obj <span class=\"fn\">X₃</span></span>)</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorObj\">CategoryTheory.GradedObject.mapTrifunctorObj</a> <span class=\"fn\">F</span> <span class=\"fn\">X₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span>)</span>.obj <span class=\"fn\">X₂</span></span>)</span>.obj <span class=\"fn\">X₃</span></span>)</span> <span class=\"fn\">p</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L157-L166","name":"CategoryTheory.GradedObject.mapTrifunctorMapObj_ext","line":157,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapObj_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapObj_ext\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">mapTrifunctorMapObj_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₄ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_13, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_12, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_11, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_10, u_4}</a>      <span class=\"fn\">C₄</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₂ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₃ : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span> → <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₃ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\">C₄</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctor\">CategoryTheory.GradedObject.mapTrifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span>)</span>.obj <span class=\"fn\">X₁</span></span>)</span>.obj <span class=\"fn\">X₂</span></span>)</span>.obj <span class=\"fn\">X₃</span></span>)</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapObj\">CategoryTheory.GradedObject.mapTrifunctorMapObj</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">X₁</span> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ' : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapObj\">CategoryTheory.GradedObject.mapTrifunctorMapObj</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">X₁</span> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">i₁</span> : <span class=\"fn\">I₁</span>) (<span class=\"fn\">i₂</span> : <span class=\"fn\">I₂</span>) (<span class=\"fn\">i₃</span> : <span class=\"fn\">I₃</span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\">i₁</span>, <span class=\"fn\">i₂</span>, <span class=\"fn\">i₃</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.ιMapTrifunctorMapObj\">CategoryTheory.GradedObject.ιMapTrifunctorMapObj</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">X₁</span> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span> <span class=\"fn\">i₃</span> <span class=\"fn\">j</span> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">φ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.ιMapTrifunctorMapObj\">CategoryTheory.GradedObject.ιMapTrifunctorMapObj</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">X₁</span> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span> <span class=\"fn\">i₃</span> <span class=\"fn\">j</span> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">φ'</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">φ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">φ'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L140-L154","name":"CategoryTheory.GradedObject.ι_mapTrifunctorMapMap","line":140,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.ι_mapTrifunctorMapMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.ι_mapTrifunctorMapMap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">ι_mapTrifunctorMapMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₄ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_10, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_11, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_12, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_13, u_4}</a>      <span class=\"fn\">C₄</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₂ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₃ : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span> → <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f₁ : <span class=\"fn\"><span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y₁</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f₂ : <span class=\"fn\"><span class=\"fn\">X₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₃ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y₃ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f₃ : <span class=\"fn\"><span class=\"fn\">X₃</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y₃</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctor\">CategoryTheory.GradedObject.mapTrifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span>)</span>.obj <span class=\"fn\">X₁</span></span>)</span>.obj <span class=\"fn\">X₂</span></span>)</span>.obj <span class=\"fn\">X₃</span></span>)</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctor\">CategoryTheory.GradedObject.mapTrifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span>)</span>.obj <span class=\"fn\">Y₁</span></span>)</span>.obj <span class=\"fn\">Y₂</span></span>)</span>.obj <span class=\"fn\">Y₃</span></span>)</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i₁ : <span class=\"fn\">I₁</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i₂ : <span class=\"fn\">I₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i₃ : <span class=\"fn\">I₃</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\">i₁</span>, <span class=\"fn\">i₂</span>, <span class=\"fn\">i₃</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.ιMapTrifunctorMapObj\">CategoryTheory.GradedObject.ιMapTrifunctorMapObj</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">X₁</span> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span> <span class=\"fn\">i₃</span> <span class=\"fn\">j</span> <span class=\"fn\">h</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapMap\">CategoryTheory.GradedObject.mapTrifunctorMapMap</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">f₁</span> <span class=\"fn\">f₂</span> <span class=\"fn\">f₃</span> <span class=\"fn\">j</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.map <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f₁</span> <span class=\"fn\">i₁</span></span>)</span></span>)</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X₂</span> <span class=\"fn\">i₂</span></span>)</span></span>)</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X₃</span> <span class=\"fn\">i₃</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Y₁</span> <span class=\"fn\">i₁</span></span>)</span></span>)</span>.map <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f₂</span> <span class=\"fn\">i₂</span></span>)</span></span>)</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X₃</span> <span class=\"fn\">i₃</span></span>)</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Y₁</span> <span class=\"fn\">i₁</span></span>)</span></span>)</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Y₂</span> <span class=\"fn\">i₂</span></span>)</span></span>)</span>.map <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f₃</span> <span class=\"fn\">i₃</span></span>)</span></span>)</span>\n        <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.ιMapTrifunctorMapObj\">CategoryTheory.GradedObject.ιMapTrifunctorMapObj</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">Y₁</span> <span class=\"fn\">Y₂</span> <span class=\"fn\">Y₃</span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span> <span class=\"fn\">i₃</span> <span class=\"fn\">j</span> <span class=\"fn\">h</span></span>)</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L139-L139","name":"CategoryTheory.GradedObject.ι_mapTrifunctorMapMap_assoc","line":139,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.ι_mapTrifunctorMapMap_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.ι_mapTrifunctorMapMap_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">ι_mapTrifunctorMapMap_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₄ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_10, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_11, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_12, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_13, u_4}</a>      <span class=\"fn\">C₄</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₂ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₃ : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span> → <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f₁ : <span class=\"fn\"><span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y₁</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f₂ : <span class=\"fn\"><span class=\"fn\">X₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₃ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y₃ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f₃ : <span class=\"fn\"><span class=\"fn\">X₃</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y₃</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctor\">CategoryTheory.GradedObject.mapTrifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span>)</span>.obj <span class=\"fn\">X₁</span></span>)</span>.obj <span class=\"fn\">X₂</span></span>)</span>.obj <span class=\"fn\">X₃</span></span>)</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctor\">CategoryTheory.GradedObject.mapTrifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span>)</span>.obj <span class=\"fn\">Y₁</span></span>)</span>.obj <span class=\"fn\">Y₂</span></span>)</span>.obj <span class=\"fn\">Y₃</span></span>)</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i₁ : <span class=\"fn\">I₁</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i₂ : <span class=\"fn\">I₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i₃ : <span class=\"fn\">I₃</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\">i₁</span>, <span class=\"fn\">i₂</span>, <span class=\"fn\">i₃</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\">C₄</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapObj\">CategoryTheory.GradedObject.mapTrifunctorMapObj</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">Y₁</span> <span class=\"fn\">Y₂</span> <span class=\"fn\">Y₃</span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.ιMapTrifunctorMapObj\">CategoryTheory.GradedObject.ιMapTrifunctorMapObj</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">X₁</span> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span> <span class=\"fn\">i₃</span> <span class=\"fn\">j</span> <span class=\"fn\">h✝</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapMap\">CategoryTheory.GradedObject.mapTrifunctorMapMap</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">f₁</span> <span class=\"fn\">f₂</span> <span class=\"fn\">f₃</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.map <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f₁</span> <span class=\"fn\">i₁</span></span>)</span></span>)</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X₂</span> <span class=\"fn\">i₂</span></span>)</span></span>)</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X₃</span> <span class=\"fn\">i₃</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Y₁</span> <span class=\"fn\">i₁</span></span>)</span></span>)</span>.map <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f₂</span> <span class=\"fn\">i₂</span></span>)</span></span>)</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X₃</span> <span class=\"fn\">i₃</span></span>)</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Y₁</span> <span class=\"fn\">i₁</span></span>)</span></span>)</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Y₂</span> <span class=\"fn\">i₂</span></span>)</span></span>)</span>.map <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f₃</span> <span class=\"fn\">i₃</span></span>)</span></span>)</span>\n        <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n          <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.ιMapTrifunctorMapObj\">CategoryTheory.GradedObject.ιMapTrifunctorMapObj</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">Y₁</span> <span class=\"fn\">Y₂</span> <span class=\"fn\">Y₃</span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span> <span class=\"fn\">i₃</span> <span class=\"fn\">j</span> <span class=\"fn\">h✝</span></span>)</span> <span class=\"fn\">h</span></span>)</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L129-L137","name":"CategoryTheory.GradedObject.mapTrifunctorMapMap","line":129,"kind":"def","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapMap","doc":"The maps `mapTrifunctorMapObj F p X₁ X₂ X₃ ⟶ mapTrifunctorMapObj F p Y₁ Y₂ Y₃` which\nexpress the functoriality of `mapTrifunctorMapObj`, see `mapTrifunctorMap` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapMap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">mapTrifunctorMapMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₄ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_10, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_11, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_12, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_13, u_4}</a>      <span class=\"fn\">C₄</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₂ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₃ : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span> → <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f₁ : <span class=\"fn\"><span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y₁</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f₂ : <span class=\"fn\"><span class=\"fn\">X₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₃ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y₃ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f₃ : <span class=\"fn\"><span class=\"fn\">X₃</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y₃</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctor\">CategoryTheory.GradedObject.mapTrifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span>)</span>.obj <span class=\"fn\">X₁</span></span>)</span>.obj <span class=\"fn\">X₂</span></span>)</span>.obj <span class=\"fn\">X₃</span></span>)</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctor\">CategoryTheory.GradedObject.mapTrifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span>)</span>.obj <span class=\"fn\">Y₁</span></span>)</span>.obj <span class=\"fn\">Y₂</span></span>)</span>.obj <span class=\"fn\">Y₃</span></span>)</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapObj\">CategoryTheory.GradedObject.mapTrifunctorMapObj</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">X₁</span> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapObj\">CategoryTheory.GradedObject.mapTrifunctorMapObj</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">Y₁</span> <span class=\"fn\">Y₂</span> <span class=\"fn\">Y₃</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L121-L125","name":"CategoryTheory.GradedObject.ιMapTrifunctorMapObj","line":121,"kind":"def","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.ιMapTrifunctorMapObj","doc":"The obvious inclusion\n`((F.obj (X₁ i₁)).obj (X₂ i₂)).obj (X₃ i₃) ⟶ mapTrifunctorMapObj F p X₁ X₂ X₃ j` when\n`p ⟨i₁, i₂, i₃⟩ = j`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.ιMapTrifunctorMapObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">ιMapTrifunctorMapObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₄ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_10, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_11, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_12, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_13, u_4}</a>      <span class=\"fn\">C₄</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₂ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₃ : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span> → <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₃ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i₁ : <span class=\"fn\">I₁</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i₂ : <span class=\"fn\">I₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i₃ : <span class=\"fn\">I₃</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\">i₁</span>, <span class=\"fn\">i₂</span>, <span class=\"fn\">i₃</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctor\">CategoryTheory.GradedObject.mapTrifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span>)</span>.obj <span class=\"fn\">X₁</span></span>)</span>.obj <span class=\"fn\">X₂</span></span>)</span>.obj <span class=\"fn\">X₃</span></span>)</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X₁</span> <span class=\"fn\">i₁</span></span>)</span></span>)</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X₂</span> <span class=\"fn\">i₂</span></span>)</span></span>)</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X₃</span> <span class=\"fn\">i₃</span></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapObj\">CategoryTheory.GradedObject.mapTrifunctorMapObj</a> <span class=\"fn\">F</span> <span class=\"fn\">p</span> <span class=\"fn\">X₁</span> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span> <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L112-L116","name":"CategoryTheory.GradedObject.mapTrifunctorMapObj","line":112,"kind":"def","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapObj","doc":"Given a trifunctor `F : C₁ ⥤ C₂ ⥤ C₃ ⥤ C₃`, graded objects `X₁ : GradedObject I₁ C₁`,\n`X₂ : GradedObject I₂ C₂`, `X₃ : GradedObject I₃ C₃`, and a map `p : I₁ × I₂ × I₃ → J`,\nthis is the `J`-graded object sending `j` to the coproduct of\n`((F.obj (X₁ i₁)).obj (X₂ i₂)).obj (X₃ i₃)` for `p ⟨i₁, i₂, i₃⟩ = k`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">mapTrifunctorMapObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₄ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_10, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_11, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_12, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_13, u_4}</a>      <span class=\"fn\">C₄</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₂ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₃ : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span> → <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₃ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject.HasMap\">CategoryTheory.GradedObject.HasMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctor\">CategoryTheory.GradedObject.mapTrifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span>)</span>.obj <span class=\"fn\">X₁</span></span>)</span>.obj <span class=\"fn\">X₂</span></span>)</span>.obj <span class=\"fn\">X₃</span></span>)</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">J</span> <span class=\"fn\">C₄</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L89-L100","name":"CategoryTheory.GradedObject.mapTrifunctorMapIso","line":89,"kind":"def","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapIso","doc":"The natural isomorphism `mapTrifunctor F I₁ I₂ I₃ ≅ mapTrifunctor F' I₁ I₂ I₃`\ninduced by a natural isomorphism `F ≅ F` of trifunctors. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">mapTrifunctorMapIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₄ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_9, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_10, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_11, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_12, u_4}</a>      <span class=\"fn\">C₄</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F' : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">F'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I₁ : <a href=\"./foundational_types.html\">Type</a> u_6)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I₂ : <a href=\"./foundational_types.html\">Type</a> u_7)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I₃ : <a href=\"./foundational_types.html\">Type</a> u_8)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctor\">CategoryTheory.GradedObject.mapTrifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctor\">CategoryTheory.GradedObject.mapTrifunctor</a> <span class=\"fn\">F'</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L88-L88","name":"CategoryTheory.GradedObject.mapTrifunctorMapIso_inv","line":88,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapIso_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapIso_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">mapTrifunctorMapIso_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₄ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_9, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_10, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_11, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_12, u_4}</a>      <span class=\"fn\">C₄</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F' : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">F'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I₁ : <a href=\"./foundational_types.html\">Type</a> u_6)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I₂ : <a href=\"./foundational_types.html\">Type</a> u_7)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I₃ : <a href=\"./foundational_types.html\">Type</a> u_8)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapIso\">CategoryTheory.GradedObject.mapTrifunctorMapIso</a> <span class=\"fn\">e</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span>)</span>.inv</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapNatTrans\">CategoryTheory.GradedObject.mapTrifunctorMapNatTrans</a> <span class=\"fn\"><span class=\"fn\">e</span>.inv</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L88-L88","name":"CategoryTheory.GradedObject.mapTrifunctorMapIso_hom","line":88,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapIso_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapIso_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">mapTrifunctorMapIso_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₄ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_9, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_10, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_11, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_12, u_4}</a>      <span class=\"fn\">C₄</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F' : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">F'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I₁ : <a href=\"./foundational_types.html\">Type</a> u_6)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I₂ : <a href=\"./foundational_types.html\">Type</a> u_7)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I₃ : <a href=\"./foundational_types.html\">Type</a> u_8)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapIso\">CategoryTheory.GradedObject.mapTrifunctorMapIso</a> <span class=\"fn\">e</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span>)</span>.hom</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapNatTrans\">CategoryTheory.GradedObject.mapTrifunctorMapNatTrans</a> <span class=\"fn\"><span class=\"fn\">e</span>.hom</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L72-L84","name":"CategoryTheory.GradedObject.mapTrifunctorMapNatTrans","line":72,"kind":"def","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapNatTrans","doc":"The natural transformation `mapTrifunctor F I₁ I₂ I₃ ⟶ mapTrifunctor F' I₁ I₂ I₃`\ninduced by a natural transformation `F ⟶ F` of trifunctors. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapNatTrans\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">mapTrifunctorMapNatTrans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₄ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_9, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_10, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_11, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_12, u_4}</a>      <span class=\"fn\">C₄</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F' : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">F'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I₁ : <a href=\"./foundational_types.html\">Type</a> u_6)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I₂ : <a href=\"./foundational_types.html\">Type</a> u_7)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I₃ : <a href=\"./foundational_types.html\">Type</a> u_8)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctor\">CategoryTheory.GradedObject.mapTrifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctor\">CategoryTheory.GradedObject.mapTrifunctor</a> <span class=\"fn\">F'</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L71-L71","name":"CategoryTheory.GradedObject.mapTrifunctorMapNatTrans_app_app_app","line":71,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapNatTrans_app_app_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapNatTrans_app_app_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">mapTrifunctorMapNatTrans_app_app_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₄ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_9, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_10, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_11, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_12, u_4}</a>      <span class=\"fn\">C₄</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F' : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">F'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I₁ : <a href=\"./foundational_types.html\">Type</a> u_6)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I₂ : <a href=\"./foundational_types.html\">Type</a> u_7)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I₃ : <a href=\"./foundational_types.html\">Type</a> u_8)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₃ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorMapNatTrans\">CategoryTheory.GradedObject.mapTrifunctorMapNatTrans</a> <span class=\"fn\">α</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span>)</span>.app <span class=\"fn\">X₁</span></span>)</span>.app <span class=\"fn\">X₂</span></span>)</span>.app <span class=\"fn\">X₃</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X₁</span> <span class=\"fn\"><span class=\"fn\">i</span>.1</span></span>)</span></span>)</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X₂</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span>.2</span>.1</span></span>)</span></span>)</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X₃</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span>.2</span>.2</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L51-L63","name":"CategoryTheory.GradedObject.mapTrifunctor","line":51,"kind":"def","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctor","doc":"Given a trifunctor `F : C₁ ⥤ C₂ ⥤ C₃ ⥤ C₄` and types `I₁`, `I₂`, `I₃`,\nthis is the obvious functor\n`GradedObject I₁ C₁ ⥤ GradedObject I₂ C₂ ⥤ GradedObject I₃ C₃ ⥤ GradedObject (I₁ × I₂ × I₃) C₄`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">mapTrifunctor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₄ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_9, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_10, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_11, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_12, u_4}</a>      <span class=\"fn\">C₄</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I₁ : <a href=\"./foundational_types.html\">Type</a> u_6)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I₂ : <a href=\"./foundational_types.html\">Type</a> u_7)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I₃ : <a href=\"./foundational_types.html\">Type</a> u_8)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span>)</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L50-L50","name":"CategoryTheory.GradedObject.mapTrifunctor_obj","line":50,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctor_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctor_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">mapTrifunctor_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₄ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_9, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_10, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_11, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_12, u_4}</a>      <span class=\"fn\">C₄</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I₁ : <a href=\"./foundational_types.html\">Type</a> u_6)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I₂ : <a href=\"./foundational_types.html\">Type</a> u_7)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I₃ : <a href=\"./foundational_types.html\">Type</a> u_8)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctor\">CategoryTheory.GradedObject.mapTrifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span>)</span>.obj <span class=\"fn\">X₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorObj\">CategoryTheory.GradedObject.mapTrifunctorObj</a> <span class=\"fn\">F</span> <span class=\"fn\">X₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L50-L50","name":"CategoryTheory.GradedObject.mapTrifunctor_map_app_app","line":50,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctor_map_app_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctor_map_app_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">mapTrifunctor_map_app_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₄ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_9, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_10, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_11, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_12, u_4}</a>      <span class=\"fn\">C₄</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I₁ : <a href=\"./foundational_types.html\">Type</a> u_6)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I₂ : <a href=\"./foundational_types.html\">Type</a> u_7)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I₃ : <a href=\"./foundational_types.html\">Type</a> u_8)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₃ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctor\">CategoryTheory.GradedObject.mapTrifunctor</a> <span class=\"fn\">F</span> <span class=\"fn\">I₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span>)</span>.map <span class=\"fn\">φ</span></span>)</span>.app <span class=\"fn\">X₂</span></span>)</span>.app <span class=\"fn\">X₃</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.map <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span>)</span></span>)</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X₂</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.2</span>.1</span></span>)</span></span>)</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X₃</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.2</span>.2</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L38-L44","name":"CategoryTheory.GradedObject.mapTrifunctorObj","line":38,"kind":"def","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorObj","doc":"Auxiliary definition for `mapTrifunctor`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">mapTrifunctorObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₄ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_9, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_10, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_11, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_12, u_4}</a>      <span class=\"fn\">C₄</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I₂ : <a href=\"./foundational_types.html\">Type</a> u_7)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I₃ : <a href=\"./foundational_types.html\">Type</a> u_8)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span>)</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L37-L37","name":"CategoryTheory.GradedObject.mapTrifunctorObj_obj_map","line":37,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorObj_obj_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorObj_obj_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">mapTrifunctorObj_obj_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₄ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_9, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_10, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_11, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_12, u_4}</a>      <span class=\"fn\">C₄</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I₂ : <a href=\"./foundational_types.html\">Type</a> u_7)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I₃ : <a href=\"./foundational_types.html\">Type</a> u_8)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₃ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y₃ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">X₃</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorObj\">CategoryTheory.GradedObject.mapTrifunctorObj</a> <span class=\"fn\">F</span> <span class=\"fn\">X₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span>)</span>.obj <span class=\"fn\">X₂</span></span>)</span>.map <span class=\"fn\">φ</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X₁</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span>)</span></span>)</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X₂</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.2</span>.1</span></span>)</span></span>)</span>.map <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.2</span>.2</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L37-L37","name":"CategoryTheory.GradedObject.mapTrifunctorObj_map_app","line":37,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorObj_map_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorObj_map_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">mapTrifunctorObj_map_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₄ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_9, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_10, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_11, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_12, u_4}</a>      <span class=\"fn\">C₄</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I₂ : <a href=\"./foundational_types.html\">Type</a> u_7)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I₃ : <a href=\"./foundational_types.html\">Type</a> u_8)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">X₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₃ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorObj\">CategoryTheory.GradedObject.mapTrifunctorObj</a> <span class=\"fn\">F</span> <span class=\"fn\">X₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span>)</span>.map <span class=\"fn\">φ</span></span>)</span>.app <span class=\"fn\">X₃</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X₁</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span>)</span></span>)</span>.map <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.2</span>.1</span></span>)</span></span>)</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X₃</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.2</span>.2</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean#L37-L37","name":"CategoryTheory.GradedObject.mapTrifunctorObj_obj_obj","line":37,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorObj_obj_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorObj_obj_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GradedObject</span>.<span class=\"name\">mapTrifunctorObj_obj_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₄ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_9, u_1}</a>      <span class=\"fn\">C₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_10, u_2}</a>      <span class=\"fn\">C₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_11, u_3}</a>      <span class=\"fn\">C₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_12, u_4}</a>      <span class=\"fn\">C₄</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C₃</span> <span class=\"fn\">C₄</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₁</span> <span class=\"fn\">C₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I₂ : <a href=\"./foundational_types.html\">Type</a> u_7)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I₃ : <a href=\"./foundational_types.html\">Type</a> u_8)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₂</span> <span class=\"fn\">C₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₃ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObject\">CategoryTheory.GradedObject</a> <span class=\"fn\">I₃</span> <span class=\"fn\">C₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">I₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">I₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I₃</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject/Trifunctor.html#CategoryTheory.GradedObject.mapTrifunctorObj\">CategoryTheory.GradedObject.mapTrifunctorObj</a> <span class=\"fn\">F</span> <span class=\"fn\">X₁</span> <span class=\"fn\">I₂</span> <span class=\"fn\">I₃</span></span>)</span>.obj <span class=\"fn\">X₂</span></span>)</span>.obj <span class=\"fn\">X₃</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X₁</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span>)</span></span>)</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X₂</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.2</span>.1</span></span>)</span></span>)</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X₃</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.2</span>.2</span></span>)</span></span></span></div></div>"}]}