{"name":"Mathlib.Util.AssertExists","instances":[],"imports":["Init","Lean.Elab.Command"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Util/AssertExists.lean#L34-L55","name":"commandAssert_not_exists_","line":34,"kind":"def","docLink":"./Mathlib/Util/AssertExists.html#commandAssert_not_exists_","doc":"`assert_not_exists n` is a user command that asserts that a declaration named `n` *does not exist*\nin the current import scope.\n\nBe careful to use names (e.g. `Rat`) rather than notations (e.g. `ℚ`).\n\nIt may be used (sparingly!) in mathlib to enforce plans that certain files\nare independent of each other.\n\nIf you encounter an error on an `assert_not_exists` command while developing mathlib,\nit is probably because you have introduced new import dependencies to a file.\n\nIn this case, you should refactor your work\n(for example by creating new files rather than adding imports to existing files).\nYou should *not* delete the `assert_not_exists` statement without careful discussion ahead of time.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/AssertExists.html#commandAssert_not_exists_\"><span class=\"name\">commandAssert_not_exists_</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Util/AssertExists.lean#L24-L32","name":"commandAssert_exists_","line":24,"kind":"def","docLink":"./Mathlib/Util/AssertExists.html#commandAssert_exists_","doc":"`assert_exists n` is a user command that asserts that a declaration named `n` exists\nin the current import scope.\n\nBe careful to use names (e.g. `Rat`) rather than notations (e.g. `ℚ`).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/AssertExists.html#commandAssert_exists_\"><span class=\"name\">commandAssert_exists_</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"}]}