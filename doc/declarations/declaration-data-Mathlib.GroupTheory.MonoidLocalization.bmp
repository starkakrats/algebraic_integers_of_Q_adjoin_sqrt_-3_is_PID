{"name":"Mathlib.GroupTheory.MonoidLocalization","instances":[{"typeNames":["AddLocalization"],"name":"AddLocalization.inhabited","className":"Inhabited"},{"typeNames":["Localization"],"name":"Localization.inhabited","className":"Inhabited"},{"typeNames":["AddLocalization"],"name":"AddLocalization.instAddLocalization","className":"Add"},{"typeNames":["Localization"],"name":"Localization.instMulLocalization","className":"Mul"},{"typeNames":["AddLocalization"],"name":"AddLocalization.instZeroLocalization","className":"Zero"},{"typeNames":["Localization"],"name":"Localization.instOneLocalization","className":"One"},{"typeNames":["AddLocalization"],"name":"AddLocalization.addCommMonoid","className":"AddCommMonoid"},{"typeNames":["Localization"],"name":"Localization.commMonoid","className":"CommMonoid"},{"typeNames":["Localization"],"name":"Localization.instSMulLocalization","className":"SMul"},{"typeNames":["Localization"],"name":"Localization.instSMulCommClassLocalizationInstSMulLocalizationInstSMulLocalization","className":"SMulCommClass"},{"typeNames":["Localization"],"name":"Localization.instIsScalarTowerLocalizationInstSMulLocalizationInstSMulLocalization","className":"IsScalarTower"},{"typeNames":["Localization","Localization"],"name":"Localization.smulCommClass_right","className":"SMulCommClass"},{"typeNames":["Localization","Localization"],"name":"Localization.isScalarTower_right","className":"IsScalarTower"},{"typeNames":["Localization"],"name":"Localization.instIsCentralScalarLocalizationInstSMulLocalizationMulOpposite","className":"IsCentralScalar"},{"typeNames":["Localization"],"name":"Localization.instMulActionLocalization","className":"MulAction"},{"typeNames":["Localization"],"name":"Localization.instMulDistribMulActionLocalizationToMonoidCommMonoid","className":"MulDistribMulAction"},{"typeNames":["Localization"],"name":"Localization.instZeroLocalizationToCommMonoid","className":"Zero"},{"typeNames":["Localization"],"name":"Localization.instCommMonoidWithZeroLocalizationToCommMonoid","className":"CommMonoidWithZero"},{"typeNames":["Eq"],"name":"AddLocalization.decidableEq","className":"Decidable"},{"typeNames":["Eq"],"name":"Localization.decidableEq","className":"Decidable"},{"typeNames":["AddLocalization"],"name":"AddLocalization.le","className":"LE"},{"typeNames":["Localization"],"name":"Localization.le","className":"LE"},{"typeNames":["AddLocalization"],"name":"AddLocalization.lt","className":"LT"},{"typeNames":["Localization"],"name":"Localization.lt","className":"LT"},{"typeNames":["AddLocalization"],"name":"AddLocalization.partialOrder","className":"PartialOrder"},{"typeNames":["Localization"],"name":"Localization.partialOrder","className":"PartialOrder"},{"typeNames":["AddLocalization"],"name":"AddLocalization.orderedAddCancelCommMonoid","className":"OrderedCancelAddCommMonoid"},{"typeNames":["Localization"],"name":"Localization.orderedCancelCommMonoid","className":"OrderedCancelCommMonoid"},{"typeNames":[],"name":"AddLocalization.decidableLE","className":"Decidable"},{"typeNames":[],"name":"Localization.decidableLE","className":"Decidable"},{"typeNames":[],"name":"AddLocalization.decidableLT","className":"Decidable"},{"typeNames":[],"name":"Localization.decidableLT","className":"Decidable"},{"typeNames":["AddLocalization"],"name":"AddLocalization.instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid","className":"LinearOrderedCancelAddCommMonoid"},{"typeNames":["Localization"],"name":"Localization.instLinearOrderedCancelCommMonoidLocalizationToCommMonoidToOrderedCommMonoidToLinearOrderedCommMonoid","className":"LinearOrderedCancelCommMonoid"}],"imports":["Init","Mathlib.Init.Data.Prod","Mathlib.GroupTheory.Congruence","Mathlib.GroupTheory.Submonoid.Membership","Mathlib.Algebra.Group.Units","Mathlib.Algebra.Regular.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2139-L2148","name":"Localization.instLinearOrderedCancelCommMonoidLocalizationToCommMonoidToOrderedCommMonoidToLinearOrderedCommMonoid","line":2139,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.instLinearOrderedCancelCommMonoidLocalizationToCommMonoidToOrderedCommMonoidToLinearOrderedCommMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.instLinearOrderedCancelCommMonoidLocalizationToCommMonoidToOrderedCommMonoidToLinearOrderedCommMonoid\"><span class=\"name\">Localization</span>.<span class=\"name\">instLinearOrderedCancelCommMonoidLocalizationToCommMonoidToOrderedCommMonoidToLinearOrderedCommMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#LinearOrderedCancelCommMonoid\">LinearOrderedCancelCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#LinearOrderedCancelCommMonoid\">LinearOrderedCancelCommMonoid</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">s</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2138-L2138","name":"AddLocalization.instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid.proof_6","line":2138,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid.proof_6","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid.proof_6\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid</span>.<span class=\"name\">proof_6</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#LinearOrderedCancelAddCommMonoid\">LinearOrderedCancelAddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a </span>b : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Min.min\">min</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Min.min\">min</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2138-L2138","name":"AddLocalization.instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid","line":2138,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#LinearOrderedCancelAddCommMonoid\">LinearOrderedCancelAddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#LinearOrderedCancelAddCommMonoid\">LinearOrderedCancelAddCommMonoid</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2138-L2138","name":"AddLocalization.instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid.proof_8","line":2138,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid.proof_8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid.proof_8\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid</span>.<span class=\"name\">proof_8</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#LinearOrderedCancelAddCommMonoid\">LinearOrderedCancelAddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a </span>b : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Ord.html#Ord.compare\">compare</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Ord.html#Ord.compare\">compare</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2138-L2138","name":"AddLocalization.instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid.proof_2","line":2138,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid.proof_2\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#LinearOrderedCancelAddCommMonoid\">LinearOrderedCancelAddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2138-L2138","name":"AddLocalization.instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid.proof_7","line":2138,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid.proof_7","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid.proof_7\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid</span>.<span class=\"name\">proof_7</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#LinearOrderedCancelAddCommMonoid\">LinearOrderedCancelAddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a </span>b : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2138-L2138","name":"AddLocalization.instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid.proof_4","line":2138,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid.proof_4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid.proof_4\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid</span>.<span class=\"name\">proof_4</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#LinearOrderedCancelAddCommMonoid\">LinearOrderedCancelAddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span> → <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2138-L2138","name":"AddLocalization.instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid.proof_1","line":2138,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid.proof_1\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#LinearOrderedCancelAddCommMonoid\">LinearOrderedCancelAddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span></span></span> → <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2138-L2138","name":"AddLocalization.instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid.proof_5","line":2138,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid.proof_5","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid.proof_5\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid</span>.<span class=\"name\">proof_5</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#LinearOrderedCancelAddCommMonoid\">LinearOrderedCancelAddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2138-L2138","name":"AddLocalization.instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid.proof_3","line":2138,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid.proof_3\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">instLinearOrderedAddCancelCommMonoidLocalizationToAddCommMonoidToOrderedAddCommMonoidToLinearOrderedAddCommMonoid</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#LinearOrderedCancelAddCommMonoid\">LinearOrderedCancelAddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span> → <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2129-L2132","name":"Localization.mkOrderEmbedding","line":2129,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mkOrderEmbedding","doc":"An ordered cancellative monoid injects into its localization by sending `a` to `a / b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mkOrderEmbedding\"><span class=\"name\">Localization</span>.<span class=\"name\">mkOrderEmbedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelCommMonoid\">OrderedCancelCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↥<span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderEmbedding\">↪o</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2127-L2127","name":"AddLocalization.mkOrderEmbedding_apply","line":2127,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mkOrderEmbedding_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mkOrderEmbedding_apply\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">mkOrderEmbedding_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelAddCommMonoid\">OrderedCancelAddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↥<span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mkOrderEmbedding\">AddLocalization.mkOrderEmbedding</a> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addMonoidOf\">AddLocalization.addMonoidOf</a> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2127-L2127","name":"Localization.mkOrderEmbedding_apply","line":2127,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mkOrderEmbedding_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mkOrderEmbedding_apply\"><span class=\"name\">Localization</span>.<span class=\"name\">mkOrderEmbedding_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelCommMonoid\">OrderedCancelCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↥<span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mkOrderEmbedding\">Localization.mkOrderEmbedding</a> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.monoidOf\">Localization.monoidOf</a> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2127-L2128","name":"AddLocalization.mkOrderEmbedding","line":2127,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mkOrderEmbedding","doc":"An ordered cancellative monoid injects into its localization by\nsending `a` to `a - b`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mkOrderEmbedding\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">mkOrderEmbedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelAddCommMonoid\">OrderedCancelAddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↥<span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderEmbedding\">↪o</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2127-L2128","name":"AddLocalization.mkOrderEmbedding.proof_2","line":2127,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mkOrderEmbedding.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mkOrderEmbedding.proof_2\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">mkOrderEmbedding</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelAddCommMonoid\">OrderedCancelAddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↥<span class=\"fn\">s</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b✝</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">b</span> <span class=\"fn\">b✝</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2127-L2128","name":"AddLocalization.mkOrderEmbedding.proof_1","line":2127,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mkOrderEmbedding.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mkOrderEmbedding.proof_1\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">mkOrderEmbedding</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelAddCommMonoid\">OrderedCancelAddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↥<span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2120-L2122","name":"Localization.decidableLT","line":2120,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.decidableLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.decidableLT\"><span class=\"name\">Localization</span>.<span class=\"name\">decidableLT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelCommMonoid\">OrderedCancelCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">s</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2119-L2119","name":"AddLocalization.decidableLT","line":2119,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.decidableLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.decidableLT\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">decidableLT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelAddCommMonoid\">OrderedCancelAddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2119-L2119","name":"AddLocalization.decidableLT.proof_1","line":2119,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.decidableLT.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.decidableLT.proof_1\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">decidableLT</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelAddCommMonoid\">OrderedCancelAddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↥<span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d : <span class=\"fn\">↥<span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span>)</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2113-L2115","name":"Localization.decidableLE","line":2113,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.decidableLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.decidableLE\"><span class=\"name\">Localization</span>.<span class=\"name\">decidableLE</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelCommMonoid\">OrderedCancelCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">s</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2112-L2112","name":"AddLocalization.decidableLE","line":2112,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.decidableLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.decidableLE\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">decidableLE</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelAddCommMonoid\">OrderedCancelAddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2112-L2112","name":"AddLocalization.decidableLE.proof_1","line":2112,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.decidableLE.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.decidableLE.proof_1\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">decidableLE</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelAddCommMonoid\">OrderedCancelAddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↥<span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d : <span class=\"fn\">↥<span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span>)</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2099-L2110","name":"Localization.orderedCancelCommMonoid","line":2099,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.orderedCancelCommMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.orderedCancelCommMonoid\"><span class=\"name\">Localization</span>.<span class=\"name\">orderedCancelCommMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelCommMonoid\">OrderedCancelCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelCommMonoid\">OrderedCancelCommMonoid</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">s</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2098-L2098","name":"AddLocalization.orderedAddCancelCommMonoid","line":2098,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.orderedAddCancelCommMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.orderedAddCancelCommMonoid\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">orderedAddCancelCommMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelAddCommMonoid\">OrderedCancelAddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelAddCommMonoid\">OrderedCancelAddCommMonoid</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2098-L2098","name":"AddLocalization.orderedAddCancelCommMonoid.proof_1","line":2098,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.orderedAddCancelCommMonoid.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.orderedAddCancelCommMonoid.proof_1\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">orderedAddCancelCommMonoid</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelAddCommMonoid\">OrderedCancelAddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2098-L2098","name":"AddLocalization.orderedAddCancelCommMonoid.proof_2","line":2098,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.orderedAddCancelCommMonoid.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.orderedAddCancelCommMonoid.proof_2\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">orderedAddCancelCommMonoid</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelAddCommMonoid\">OrderedCancelAddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span> → <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2098-L2098","name":"AddLocalization.orderedAddCancelCommMonoid.proof_4","line":2098,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.orderedAddCancelCommMonoid.proof_4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.orderedAddCancelCommMonoid.proof_4\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">orderedAddCancelCommMonoid</span>.<span class=\"name\">proof_4</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelAddCommMonoid\">OrderedCancelAddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span></span></span> → <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2098-L2098","name":"AddLocalization.orderedAddCancelCommMonoid.proof_3","line":2098,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.orderedAddCancelCommMonoid.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.orderedAddCancelCommMonoid.proof_3\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">orderedAddCancelCommMonoid</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelAddCommMonoid\">OrderedCancelAddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span> → <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2078-L2096","name":"Localization.partialOrder","line":2078,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.partialOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.partialOrder\"><span class=\"name\">Localization</span>.<span class=\"name\">partialOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelCommMonoid\">OrderedCancelCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">s</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2077-L2077","name":"AddLocalization.partialOrder.proof_3","line":2077,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.partialOrder.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.partialOrder.proof_3\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">partialOrder</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelAddCommMonoid\">OrderedCancelAddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2077-L2077","name":"AddLocalization.partialOrder.proof_1","line":2077,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.partialOrder.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.partialOrder.proof_1\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">partialOrder</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelAddCommMonoid\">OrderedCancelAddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2077-L2077","name":"AddLocalization.partialOrder.proof_4","line":2077,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.partialOrder.proof_4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.partialOrder.proof_4\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">partialOrder</span>.<span class=\"name\">proof_4</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelAddCommMonoid\">OrderedCancelAddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span> → <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2077-L2077","name":"AddLocalization.partialOrder","line":2077,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.partialOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.partialOrder\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">partialOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelAddCommMonoid\">OrderedCancelAddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2077-L2077","name":"AddLocalization.partialOrder.proof_2","line":2077,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.partialOrder.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.partialOrder.proof_2\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">partialOrder</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelAddCommMonoid\">OrderedCancelAddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span> → <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2071-L2072","name":"Localization.mk_lt_mk","line":2071,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk_lt_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk_lt_mk\"><span class=\"name\">Localization</span>.<span class=\"name\">mk_lt_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelCommMonoid\">OrderedCancelCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₁ : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b₁ : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₂ : <span class=\"fn\">↥<span class=\"fn\">s</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b₂ : <span class=\"fn\">↥<span class=\"fn\">s</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">b₁</span> <span class=\"fn\">b₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">b₂</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a₁</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b₁</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2070-L2070","name":"AddLocalization.mk_lt_mk","line":2070,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk_lt_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk_lt_mk\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">mk_lt_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelAddCommMonoid\">OrderedCancelAddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₁ : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b₁ : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₂ : <span class=\"fn\">↥<span class=\"fn\">s</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b₂ : <span class=\"fn\">↥<span class=\"fn\">s</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">b₁</span> <span class=\"fn\">b₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">b₂</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a₁</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b₁</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2065-L2066","name":"Localization.mk_le_mk","line":2065,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk_le_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk_le_mk\"><span class=\"name\">Localization</span>.<span class=\"name\">mk_le_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelCommMonoid\">OrderedCancelCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₁ : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b₁ : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₂ : <span class=\"fn\">↥<span class=\"fn\">s</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b₂ : <span class=\"fn\">↥<span class=\"fn\">s</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">b₁</span> <span class=\"fn\">b₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">b₂</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b₁</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2064-L2064","name":"AddLocalization.mk_le_mk","line":2064,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk_le_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk_le_mk\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">mk_le_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelAddCommMonoid\">OrderedCancelAddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₁ : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b₁ : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₂ : <span class=\"fn\">↥<span class=\"fn\">s</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b₂ : <span class=\"fn\">↥<span class=\"fn\">s</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">b₁</span> <span class=\"fn\">b₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">b₂</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b₁</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2052-L2062","name":"Localization.lt","line":2052,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.lt\"><span class=\"name\">Localization</span>.<span class=\"name\">lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelCommMonoid\">OrderedCancelCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">s</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2051-L2051","name":"AddLocalization.lt","line":2051,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.lt\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelAddCommMonoid\">OrderedCancelAddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2051-L2051","name":"AddLocalization.lt.proof_1","line":2051,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.lt.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.lt.proof_1\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">lt</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelAddCommMonoid\">OrderedCancelAddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a₁ : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b₁ : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a₂ : <span class=\"fn\">↥<span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b₂ : <span class=\"fn\">↥<span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c₁ : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d₁ : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c₂ : <span class=\"fn\">↥<span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d₂ : <span class=\"fn\">↥<span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\">AddLocalization.r</a> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a₁</span>, <span class=\"fn\">a₂</span>)</span> <span class=\"fn\">(<span class=\"fn\">b₁</span>, <span class=\"fn\">b₂</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hcd : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\">AddLocalization.r</a> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">c₁</span>, <span class=\"fn\">c₂</span>)</span> <span class=\"fn\">(<span class=\"fn\">d₁</span>, <span class=\"fn\">d₂</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">a₁</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">a₂</span> : <span class=\"fn\">↥<span class=\"fn\">s</span></span>) (<span class=\"fn\">b₁</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">b₂</span> : <span class=\"fn\">↥<span class=\"fn\">s</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">b₂</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a₁</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b₁</span></span></span></span>)</span> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span> <span class=\"fn\">c₁</span> <span class=\"fn\">c₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">a₁</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">a₂</span> : <span class=\"fn\">↥<span class=\"fn\">s</span></span>) (<span class=\"fn\">b₁</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">b₂</span> : <span class=\"fn\">↥<span class=\"fn\">s</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">b₂</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a₁</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b₁</span></span></span></span>)</span> <span class=\"fn\">b₁</span> <span class=\"fn\">b₂</span> <span class=\"fn\">d₁</span> <span class=\"fn\">d₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2039-L2049","name":"Localization.le","line":2039,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.le\"><span class=\"name\">Localization</span>.<span class=\"name\">le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelCommMonoid\">OrderedCancelCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">s</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2038-L2038","name":"AddLocalization.le","line":2038,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.le\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelAddCommMonoid\">OrderedCancelAddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2038-L2038","name":"AddLocalization.le.proof_1","line":2038,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.le.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.le.proof_1\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">le</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelAddCommMonoid\">OrderedCancelAddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a₁ : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b₁ : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a₂ : <span class=\"fn\">↥<span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b₂ : <span class=\"fn\">↥<span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c₁ : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d₁ : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c₂ : <span class=\"fn\">↥<span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d₂ : <span class=\"fn\">↥<span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\">AddLocalization.r</a> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a₁</span>, <span class=\"fn\">a₂</span>)</span> <span class=\"fn\">(<span class=\"fn\">b₁</span>, <span class=\"fn\">b₂</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hcd : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\">AddLocalization.r</a> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">c₁</span>, <span class=\"fn\">c₂</span>)</span> <span class=\"fn\">(<span class=\"fn\">d₁</span>, <span class=\"fn\">d₂</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">a₁</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">a₂</span> : <span class=\"fn\">↥<span class=\"fn\">s</span></span>) (<span class=\"fn\">b₁</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">b₂</span> : <span class=\"fn\">↥<span class=\"fn\">s</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">b₂</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b₁</span></span></span></span>)</span> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span> <span class=\"fn\">c₁</span> <span class=\"fn\">c₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">a₁</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">a₂</span> : <span class=\"fn\">↥<span class=\"fn\">s</span></span>) (<span class=\"fn\">b₁</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">b₂</span> : <span class=\"fn\">↥<span class=\"fn\">s</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">b₂</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b₁</span></span></span></span>)</span> <span class=\"fn\">b₁</span> <span class=\"fn\">b₂</span> <span class=\"fn\">d₁</span> <span class=\"fn\">d₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2021-L2022","name":"Localization.decidableEq","line":2021,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.decidableEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.decidableEq\"><span class=\"name\">Localization</span>.<span class=\"name\">decidableEq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CancelCommMonoid\">CancelCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">s</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2020-L2020","name":"AddLocalization.decidableEq","line":2020,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.decidableEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.decidableEq\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">decidableEq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCancelCommMonoid\">AddCancelCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">s</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2020-L2020","name":"AddLocalization.decidableEq.proof_1","line":2020,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.decidableEq.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.decidableEq.proof_1\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">decidableEq</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCancelCommMonoid\">AddCancelCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↥<span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d : <span class=\"fn\">↥<span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2015-L2016","name":"Localization.mk_eq_mk_iff'","line":2015,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk_eq_mk_iff'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk_eq_mk_iff'\"><span class=\"name\">Localization</span>.<span class=\"name\">mk_eq_mk_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CancelCommMonoid\">CancelCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₁ : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b₁ : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₂ : <span class=\"fn\">↥<span class=\"fn\">s</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b₂ : <span class=\"fn\">↥<span class=\"fn\">s</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">b₁</span> <span class=\"fn\">b₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">b₂</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b₁</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2014-L2014","name":"AddLocalization.mk_eq_mk_iff'","line":2014,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk_eq_mk_iff'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk_eq_mk_iff'\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">mk_eq_mk_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCancelCommMonoid\">AddCancelCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₁ : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b₁ : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₂ : <span class=\"fn\">↥<span class=\"fn\">s</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b₂ : <span class=\"fn\">↥<span class=\"fn\">s</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">b₁</span> <span class=\"fn\">b₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">b₂</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b₁</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2009-L2010","name":"Localization.mk_left_injective","line":2009,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk_left_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk_left_injective\"><span class=\"name\">Localization</span>.<span class=\"name\">mk_left_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CancelCommMonoid\">CancelCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↥<span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L2008-L2008","name":"AddLocalization.mk_left_injective","line":2008,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk_left_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk_left_injective\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">mk_left_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCancelCommMonoid\">AddCancelCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↥<span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1995-L1996","name":"Submonoid.LocalizationWithZeroMap.isLeftRegular_of_le_IsCancelMulZero","line":1995,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationWithZeroMap.isLeftRegular_of_le_IsCancelMulZero","doc":"**Alias** of `Submonoid.LocalizationWithZeroMap.isLeftRegular_of_le_isCancelMulZero`.\n\n---\n\nGiven a Localization map `f : M →*₀ N` for a Submonoid `S ⊆ M`,\nif `M` is a cancellative monoid with zero, and all elements of `S` are\nregular, then N is a cancellative monoid with zero.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationWithZeroMap.isLeftRegular_of_le_IsCancelMulZero\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationWithZeroMap</span>.<span class=\"name\">isLeftRegular_of_le_IsCancelMulZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationWithZeroMap\">Submonoid.LocalizationWithZeroMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#IsCancelMulZero\">IsCancelMulZero</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ ⦃<span class=\"fn\">x</span> : <span class=\"fn\">M</span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Regular/Basic.html#IsRegular\">IsRegular</a> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#IsCancelMulZero\">IsCancelMulZero</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1989-L1993","name":"Submonoid.LocalizationWithZeroMap.isLeftRegular_of_le_isCancelMulZero","line":1989,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationWithZeroMap.isLeftRegular_of_le_isCancelMulZero","doc":"Given a Localization map `f : M →*₀ N` for a Submonoid `S ⊆ M`,\nif `M` is a cancellative monoid with zero, and all elements of `S` are\nregular, then N is a cancellative monoid with zero.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationWithZeroMap.isLeftRegular_of_le_isCancelMulZero\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationWithZeroMap</span>.<span class=\"name\">isLeftRegular_of_le_isCancelMulZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationWithZeroMap\">Submonoid.LocalizationWithZeroMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#IsCancelMulZero\">IsCancelMulZero</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ ⦃<span class=\"fn\">x</span> : <span class=\"fn\">M</span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Regular/Basic.html#IsRegular\">IsRegular</a> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#IsCancelMulZero\">IsCancelMulZero</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1948-L1984","name":"Submonoid.LocalizationWithZeroMap.leftCancelMulZero_of_le_isLeftRegular","line":1948,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationWithZeroMap.leftCancelMulZero_of_le_isLeftRegular","doc":"Given a Localization map `f : M →*₀ N` for a Submonoid `S ⊆ M`,\nif `M` is left cancellative monoid with zero, and all elements of `S` are\nleft regular, then N is a left cancellative monoid with zero. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationWithZeroMap.leftCancelMulZero_of_le_isLeftRegular\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationWithZeroMap</span>.<span class=\"name\">leftCancelMulZero_of_le_isLeftRegular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationWithZeroMap\">Submonoid.LocalizationWithZeroMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#IsLeftCancelMulZero\">IsLeftCancelMulZero</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ ⦃<span class=\"fn\">x</span> : <span class=\"fn\">M</span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Regular/Basic.html#IsLeftRegular\">IsLeftRegular</a> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#IsLeftCancelMulZero\">IsLeftCancelMulZero</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1934-L1942","name":"Submonoid.LocalizationWithZeroMap.lift","line":1934,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationWithZeroMap.lift","doc":"Given a Localization map `f : M →*₀ N` for a Submonoid `S ⊆ M` and a map of\n`CommMonoidWithZero`s `g : M →*₀ P` such that `g y` is invertible for all `y : S`, the\nhomomorphism induced from `N` to `P` sending `z : N` to `g x * (g y)⁻¹`, where `(x, y) : M × S`\nare such that `z = f x * (f y)⁻¹`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationWithZeroMap.lift\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationWithZeroMap</span>.<span class=\"name\">lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationWithZeroMap\">Submonoid.LocalizationWithZeroMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidWithZeroHom\">→*₀</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidWithZeroHom\">→*₀</a> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1924-L1925","name":"Submonoid.LocalizationMap.sec_zero_fst","line":1924,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.sec_zero_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.sec_zero_fst\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">sec_zero_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.sec\">Submonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span></span>)</span>.1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1913-L1914","name":"Localization.liftOn_zero","line":1913,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.liftOn_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.liftOn_zero\"><span class=\"name\">Localization</span>.<span class=\"name\">liftOn_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">S</span></span> → <span class=\"fn\">p</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ {<span class=\"fn\">a </span>c : <span class=\"fn\">M</span>} {<span class=\"fn\">b </span>d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.r\">Localization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a</span>, <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">c</span>, <span class=\"fn\">d</span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.liftOn\">Localization.liftOn</a> <span class=\"fn\">0</span> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1906-L1910","name":"Localization.instCommMonoidWithZeroLocalizationToCommMonoid","line":1906,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.instCommMonoidWithZeroLocalizationToCommMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.instCommMonoidWithZeroLocalizationToCommMonoid\"><span class=\"name\">Localization</span>.<span class=\"name\">instCommMonoidWithZeroLocalizationToCommMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1901-L1904","name":"Localization.mk_zero","line":1901,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk_zero\"><span class=\"name\">Localization</span>.<span class=\"name\">mk_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">0</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1897-L1897","name":"Localization.instZeroLocalizationToCommMonoid","line":1897,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.instZeroLocalizationToCommMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.instZeroLocalizationToCommMonoid\"><span class=\"name\">Localization</span>.<span class=\"name\">instZeroLocalizationToCommMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1890-L1894","name":"Localization.zero","line":1890,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.zero","doc":"The zero element in a Localization is defined as `(0, 1)`.\n\nShould not be confused with `AddLocalization.zero` which is `(0, 0)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.zero\"><span class=\"name\">Localization</span>.<span class=\"name\">zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1890-L1894","name":"Localization.zero_def","line":1890,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.zero_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.zero_def\"><span class=\"name\">Localization</span>.<span class=\"name\">zero_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.zero\">Localization.zero</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1882-L1883","name":"Submonoid.LocalizationWithZeroMap.toMonoidWithZeroHom","line":1882,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationWithZeroMap.toMonoidWithZeroHom","doc":"The monoid with zero hom underlying a `LocalizationMap`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationWithZeroMap.toMonoidWithZeroHom\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationWithZeroMap</span>.<span class=\"name\">toMonoidWithZeroHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationWithZeroMap\">Submonoid.LocalizationWithZeroMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidWithZeroHom\">→*₀</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1872-L1872","name":"Submonoid.LocalizationWithZeroMap.map_zero'","line":1872,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationWithZeroMap.map_zero'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationWithZeroMap.map_zero'\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationWithZeroMap</span>.<span class=\"name\">map_zero'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationWithZeroMap\">Submonoid.LocalizationWithZeroMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#OneHom.toFun\">OneHom.toFun</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">self</span>.toMonoidHom</span></span>)</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1871-L1871","name":"Submonoid.LocalizationWithZeroMap.mk","line":1871,"kind":"ctor","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationWithZeroMap.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationWithZeroMap.mk\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationWithZeroMap</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(toLocalizationMap : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(map_zero' : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#OneHom.toFun\">OneHom.toFun</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">toLocalizationMap</span>.toMonoidHom</span></span>)</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationWithZeroMap\">Submonoid.LocalizationWithZeroMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1871-L1872","name":"Submonoid.LocalizationWithZeroMap","line":1871,"kind":"structure","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationWithZeroMap","doc":"The type of homomorphisms between monoids with zero satisfying the characteristic predicate:\nif `f : M →*₀ N` satisfies this predicate, then `N` is isomorphic to the localization of `M` at\n`S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationWithZeroMap\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationWithZeroMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_1 u_2)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1860-L1864","name":"Submonoid.LocalizationMap.subsingleton","line":1860,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.subsingleton","doc":"If `S` contains `0` then the localization at `S` is trivial. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.subsingleton\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">subsingleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1839-L1841","name":"Localization.Away.mulEquivOfQuotient","line":1839,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.Away.mulEquivOfQuotient","doc":"Given `x : M` and a Localization map `f : M →* N` away from `x`, we get an isomorphism between\nthe Localization of `M` at the Submonoid generated by `x` as a quotient type and `N`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.Away.mulEquivOfQuotient\"><span class=\"name\">Localization</span>.<span class=\"name\">Away</span>.<span class=\"name\">mulEquivOfQuotient</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.AwayMap\">Submonoid.LocalizationMap.AwayMap</a> <span class=\"fn\">x</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.Away\">Localization.Away</a> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1836-L1838","name":"AddLocalization.Away.addEquivOfQuotient","line":1836,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.Away.addEquivOfQuotient","doc":"Given `x : M` and a Localization map `f : M →+ N` away from `x`, we get an isomorphism between\nthe Localization of `M` at the Submonoid generated by `x` as a quotient type and `N`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.Away.addEquivOfQuotient\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">Away</span>.<span class=\"name\">addEquivOfQuotient</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.AwayMap\">AddSubmonoid.LocalizationMap.AwayMap</a> <span class=\"fn\">x</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.Away\">AddLocalization.Away</a> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1830-L1830","name":"Localization.Away.mk_eq_monoidOf_mk'","line":1830,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.Away.mk_eq_monoidOf_mk'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.Away.mk_eq_monoidOf_mk'\"><span class=\"name\">Localization</span>.<span class=\"name\">Away</span>.<span class=\"name\">mk_eq_monoidOf_mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Localization.mk</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.Away.monoidOf\">Localization.Away.monoidOf</a> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1829-L1829","name":"AddLocalization.Away.mk_eq_addMonoidOf_mk'","line":1829,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.Away.mk_eq_addMonoidOf_mk'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.Away.mk_eq_addMonoidOf_mk'\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">Away</span>.<span class=\"name\">mk_eq_addMonoidOf_mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">AddLocalization.mk</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.Away.addMonoidOf\">AddLocalization.Away.addMonoidOf</a> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1823-L1824","name":"Localization.Away.monoidOf","line":1823,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.Away.monoidOf","doc":"Given `x : M`, the natural hom sending `y : M`, `M` a `CommMonoid`, to the equivalence class\nof `(y, 1)` in the Localization of `M` at the Submonoid generated by `x`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.Away.monoidOf\"><span class=\"name\">Localization</span>.<span class=\"name\">Away</span>.<span class=\"name\">monoidOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.AwayMap\">Submonoid.LocalizationMap.AwayMap</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.Away\">Localization.Away</a> <span class=\"fn\">x</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1820-L1822","name":"AddLocalization.Away.addMonoidOf","line":1820,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.Away.addMonoidOf","doc":"Given `x : M`, the natural hom sending `y : M`, `M` an `AddCommMonoid`, to the equivalence\nclass of `(y, 0)` in the Localization of `M` at the Submonoid generated by `x`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.Away.addMonoidOf\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">Away</span>.<span class=\"name\">addMonoidOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.AwayMap\">AddSubmonoid.LocalizationMap.AwayMap</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.Away\">AddLocalization.Away</a> <span class=\"fn\">x</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1813-L1814","name":"Localization.Away.invSelf","line":1813,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.Away.invSelf","doc":"Given `x : M`, `invSelf` is `x⁻¹` in the Localization (as a quotient type) of `M` at the\nSubmonoid generated by `x`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.Away.invSelf\"><span class=\"name\">Localization</span>.<span class=\"name\">Away</span>.<span class=\"name\">invSelf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.Away\">Localization.Away</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1810-L1812","name":"AddLocalization.Away.negSelf","line":1810,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.Away.negSelf","doc":"Given `x : M`, `negSelf` is `-x` in the Localization (as a quotient type) of `M` at the\nSubmonoid generated by `x`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.Away.negSelf\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">Away</span>.<span class=\"name\">negSelf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.Away\">AddLocalization.Away</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1810-L1812","name":"AddLocalization.Away.negSelf.proof_1","line":1810,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.Away.negSelf.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.Away.negSelf.proof_1\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">Away</span>.<span class=\"name\">negSelf</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Membership.html#AddSubmonoid.multiples\">AddSubmonoid.multiples</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1803-L1804","name":"Localization.Away","line":1803,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.Away","doc":"Given `x : M`, the Localization of `M` at the Submonoid generated by `x`, as a quotient. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.Away\"><span class=\"name\">Localization</span>.<span class=\"name\">Away</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1801-L1802","name":"AddLocalization.Away","line":1801,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.Away","doc":"Given `x : M`, the Localization of `M` at the Submonoid generated by `x`, as a quotient."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.Away\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">Away</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1790-L1792","name":"Localization.mulEquivOfQuotient_symm_monoidOf","line":1790,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mulEquivOfQuotient_symm_monoidOf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mulEquivOfQuotient_symm_monoidOf\"><span class=\"name\">Localization</span>.<span class=\"name\">mulEquivOfQuotient_symm_monoidOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.symm\">MulEquiv.symm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mulEquivOfQuotient\">Localization.mulEquivOfQuotient</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.monoidOf\">Localization.monoidOf</a> <span class=\"fn\">S</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1789-L1789","name":"AddLocalization.addEquivOfQuotient_symm_addMonoidOf","line":1789,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addEquivOfQuotient_symm_addMonoidOf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addEquivOfQuotient_symm_addMonoidOf\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">addEquivOfQuotient_symm_addMonoidOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.symm\">AddEquiv.symm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addEquivOfQuotient\">AddLocalization.addEquivOfQuotient</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addMonoidOf\">AddLocalization.addMonoidOf</a> <span class=\"fn\">S</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1784-L1785","name":"Localization.mulEquivOfQuotient_symm_mk","line":1784,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mulEquivOfQuotient_symm_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mulEquivOfQuotient_symm_mk\"><span class=\"name\">Localization</span>.<span class=\"name\">mulEquivOfQuotient_symm_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.symm\">MulEquiv.symm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mulEquivOfQuotient\">Localization.mulEquivOfQuotient</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1783-L1783","name":"AddLocalization.addEquivOfQuotient_symm_mk","line":1783,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addEquivOfQuotient_symm_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addEquivOfQuotient_symm_mk\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">addEquivOfQuotient_symm_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.symm\">AddEquiv.symm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addEquivOfQuotient\">AddLocalization.addEquivOfQuotient</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1777-L1779","name":"Localization.mulEquivOfQuotient_symm_mk'","line":1777,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mulEquivOfQuotient_symm_mk'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mulEquivOfQuotient_symm_mk'\"><span class=\"name\">Localization</span>.<span class=\"name\">mulEquivOfQuotient_symm_mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.symm\">MulEquiv.symm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mulEquivOfQuotient\">Localization.mulEquivOfQuotient</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.monoidOf\">Localization.monoidOf</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1776-L1776","name":"AddLocalization.addEquivOfQuotient_symm_mk'","line":1776,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addEquivOfQuotient_symm_mk'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addEquivOfQuotient_symm_mk'\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">addEquivOfQuotient_symm_mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.symm\">AddEquiv.symm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addEquivOfQuotient\">AddLocalization.addEquivOfQuotient</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addMonoidOf\">AddLocalization.addMonoidOf</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1771-L1772","name":"Localization.mulEquivOfQuotient_monoidOf","line":1771,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mulEquivOfQuotient_monoidOf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mulEquivOfQuotient_monoidOf\"><span class=\"name\">Localization</span>.<span class=\"name\">mulEquivOfQuotient_monoidOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mulEquivOfQuotient\">Localization.mulEquivOfQuotient</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.monoidOf\">Localization.monoidOf</a> <span class=\"fn\">S</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1770-L1770","name":"AddLocalization.addEquivOfQuotient_addMonoidOf","line":1770,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addEquivOfQuotient_addMonoidOf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addEquivOfQuotient_addMonoidOf\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">addEquivOfQuotient_addMonoidOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addEquivOfQuotient\">AddLocalization.addEquivOfQuotient</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addMonoidOf\">AddLocalization.addMonoidOf</a> <span class=\"fn\">S</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1764-L1765","name":"Localization.mulEquivOfQuotient_mk","line":1764,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mulEquivOfQuotient_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mulEquivOfQuotient_mk\"><span class=\"name\">Localization</span>.<span class=\"name\">mulEquivOfQuotient_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mulEquivOfQuotient\">Localization.mulEquivOfQuotient</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1763-L1763","name":"AddLocalization.addEquivOfQuotient_mk","line":1763,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addEquivOfQuotient_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addEquivOfQuotient_mk\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">addEquivOfQuotient_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addEquivOfQuotient\">AddLocalization.addEquivOfQuotient</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1758-L1759","name":"Localization.mulEquivOfQuotient_mk'","line":1758,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mulEquivOfQuotient_mk'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mulEquivOfQuotient_mk'\"><span class=\"name\">Localization</span>.<span class=\"name\">mulEquivOfQuotient_mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mulEquivOfQuotient\">Localization.mulEquivOfQuotient</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.monoidOf\">Localization.monoidOf</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1757-L1757","name":"AddLocalization.addEquivOfQuotient_mk'","line":1757,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addEquivOfQuotient_mk'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addEquivOfQuotient_mk'\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">addEquivOfQuotient_mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addEquivOfQuotient\">AddLocalization.addEquivOfQuotient</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addMonoidOf\">AddLocalization.addMonoidOf</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1752-L1753","name":"Localization.mulEquivOfQuotient_apply","line":1752,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mulEquivOfQuotient_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mulEquivOfQuotient_apply\"><span class=\"name\">Localization</span>.<span class=\"name\">mulEquivOfQuotient_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mulEquivOfQuotient\">Localization.mulEquivOfQuotient</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift\">Submonoid.LocalizationMap.lift</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.monoidOf\">Localization.monoidOf</a> <span class=\"fn\">S</span></span>)</span>\n      <span class=\"fn\">(_ : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>)</span>\n    <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1751-L1751","name":"AddLocalization.addEquivOfQuotient_apply","line":1751,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addEquivOfQuotient_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addEquivOfQuotient_apply\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">addEquivOfQuotient_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addEquivOfQuotient\">AddLocalization.addEquivOfQuotient</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift\">AddSubmonoid.LocalizationMap.lift</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addMonoidOf\">AddLocalization.addMonoidOf</a> <span class=\"fn\">S</span></span>)</span>\n      <span class=\"fn\">(_ : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>)</span>\n    <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1743-L1744","name":"Localization.mulEquivOfQuotient","line":1743,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mulEquivOfQuotient","doc":"Given a Localization map `f : M →* N` for a Submonoid `S`, we get an isomorphism between\nthe Localization of `M` at `S` as a quotient type and `N`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mulEquivOfQuotient\"><span class=\"name\">Localization</span>.<span class=\"name\">mulEquivOfQuotient</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1740-L1742","name":"AddLocalization.addEquivOfQuotient","line":1740,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addEquivOfQuotient","doc":"Given a Localization map `f : M →+ N` for a Submonoid `S`, we get an isomorphism between\nthe Localization of `M` at `S` as a quotient type and `N`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addEquivOfQuotient\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">addEquivOfQuotient</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1730-L1732","name":"Localization.liftOn₂_mk'","line":1730,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.liftOn₂_mk'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.liftOn₂_mk'\"><span class=\"name\">Localization</span>.<span class=\"name\">liftOn₂_mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./foundational_types.html\">Sort</a> u_4}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">S</span></span> → <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">S</span></span> → <span class=\"fn\">p</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ {<span class=\"fn\">a </span>a' : <span class=\"fn\">M</span>} {<span class=\"fn\">b </span>b' : <span class=\"fn\">↥<span class=\"fn\">S</span></span>} {<span class=\"fn\">c </span>c' : <span class=\"fn\">M</span>} {<span class=\"fn\">d </span>d' : <span class=\"fn\">↥<span class=\"fn\">S</span></span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.r\">Localization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a</span>, <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">a'</span>, <span class=\"fn\">b'</span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.r\">Localization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">c</span>, <span class=\"fn\">d</span>)</span> <span class=\"fn\">(<span class=\"fn\">c'</span>, <span class=\"fn\">d'</span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a'</span> <span class=\"fn\">b'</span> <span class=\"fn\">c'</span> <span class=\"fn\">d'</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.liftOn₂\">Localization.liftOn₂</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.monoidOf\">Localization.monoidOf</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.monoidOf\">Localization.monoidOf</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span>)</span> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1729-L1729","name":"AddLocalization.liftOn₂_mk'","line":1729,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.liftOn₂_mk'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.liftOn₂_mk'\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">liftOn₂_mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./foundational_types.html\">Sort</a> u_4}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">S</span></span> → <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">S</span></span> → <span class=\"fn\">p</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ {<span class=\"fn\">a </span>a' : <span class=\"fn\">M</span>} {<span class=\"fn\">b </span>b' : <span class=\"fn\">↥<span class=\"fn\">S</span></span>} {<span class=\"fn\">c </span>c' : <span class=\"fn\">M</span>} {<span class=\"fn\">d </span>d' : <span class=\"fn\">↥<span class=\"fn\">S</span></span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\">AddLocalization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a</span>, <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">a'</span>, <span class=\"fn\">b'</span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\">AddLocalization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">c</span>, <span class=\"fn\">d</span>)</span> <span class=\"fn\">(<span class=\"fn\">c'</span>, <span class=\"fn\">d'</span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a'</span> <span class=\"fn\">b'</span> <span class=\"fn\">c'</span> <span class=\"fn\">d'</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.liftOn₂\">AddLocalization.liftOn₂</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addMonoidOf\">AddLocalization.addMonoidOf</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addMonoidOf\">AddLocalization.addMonoidOf</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span>)</span> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1724-L1725","name":"Localization.liftOn_mk'","line":1724,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.liftOn_mk'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.liftOn_mk'\"><span class=\"name\">Localization</span>.<span class=\"name\">liftOn_mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./foundational_types.html\">Sort</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">S</span></span> → <span class=\"fn\">p</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ {<span class=\"fn\">a </span>c : <span class=\"fn\">M</span>} {<span class=\"fn\">b </span>d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.r\">Localization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a</span>, <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">c</span>, <span class=\"fn\">d</span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.liftOn\">Localization.liftOn</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.monoidOf\">Localization.monoidOf</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1723-L1723","name":"AddLocalization.liftOn_mk'","line":1723,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.liftOn_mk'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.liftOn_mk'\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">liftOn_mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./foundational_types.html\">Sort</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">S</span></span> → <span class=\"fn\">p</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ {<span class=\"fn\">a </span>c : <span class=\"fn\">M</span>} {<span class=\"fn\">b </span>d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\">AddLocalization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a</span>, <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">c</span>, <span class=\"fn\">d</span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.liftOn\">AddLocalization.liftOn</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addMonoidOf\">AddLocalization.addMonoidOf</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1716-L1717","name":"Localization.mk_eq_monoidOf_mk'","line":1716,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk_eq_monoidOf_mk'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk_eq_monoidOf_mk'\"><span class=\"name\">Localization</span>.<span class=\"name\">mk_eq_monoidOf_mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Localization.mk</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.monoidOf\">Localization.monoidOf</a> <span class=\"fn\">S</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1715-L1715","name":"AddLocalization.mk_eq_addMonoidOf_mk'","line":1715,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk_eq_addMonoidOf_mk'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk_eq_addMonoidOf_mk'\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">mk_eq_addMonoidOf_mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">AddLocalization.mk</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addMonoidOf\">AddLocalization.addMonoidOf</a> <span class=\"fn\">S</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1706-L1711","name":"Localization.mk_eq_monoidOf_mk'_apply","line":1706,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk_eq_monoidOf_mk'_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk_eq_monoidOf_mk'_apply\"><span class=\"name\">Localization</span>.<span class=\"name\">mk_eq_monoidOf_mk'_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.monoidOf\">Localization.monoidOf</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1705-L1705","name":"AddLocalization.mk_eq_addMonoidOf_mk'_apply","line":1705,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk_eq_addMonoidOf_mk'_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk_eq_addMonoidOf_mk'_apply\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">mk_eq_addMonoidOf_mk'_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addMonoidOf\">AddLocalization.addMonoidOf</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1701-L1701","name":"Localization.mk_one_eq_monoidOf_mk","line":1701,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk_one_eq_monoidOf_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk_one_eq_monoidOf_mk\"><span class=\"name\">Localization</span>.<span class=\"name\">mk_one_eq_monoidOf_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">x</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.monoidOf\">Localization.monoidOf</a> <span class=\"fn\">S</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1700-L1700","name":"AddLocalization.mk_zero_eq_addMonoidOf_mk","line":1700,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk_zero_eq_addMonoidOf_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk_zero_eq_addMonoidOf_mk\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">mk_zero_eq_addMonoidOf_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addMonoidOf\">AddLocalization.addMonoidOf</a> <span class=\"fn\">S</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1681-L1694","name":"Localization.monoidOf","line":1681,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.monoidOf","doc":"Natural homomorphism sending `x : M`, `M` a `CommMonoid`, to the equivalence class of\n`(x, 1)` in the Localization of `M` at a Submonoid. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.monoidOf\"><span class=\"name\">Localization</span>.<span class=\"name\">monoidOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1678-L1680","name":"AddLocalization.addMonoidOf.proof_2","line":1678,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addMonoidOf.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addMonoidOf.proof_2\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">addMonoidOf</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a>\n    <span class=\"fn\">↑<span class=\"fn\">{ <span class=\"fn\">toZeroHom</span> := <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span></span>, <span class=\"fn\">map_zero'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span> }</span>,\n        <span class=\"fn\">map_add'</span> :=\n          <span class=\"fn\">(_ :\n            <span class=\"fn\">∀ (<span class=\"fn\">x </span>y : <span class=\"fn\">M</span>),\n              <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a>\n                  <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span></span>, <span class=\"fn\">map_zero'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span> }</span>\n                  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                 <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a>\n                    <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span></span>, <span class=\"fn\">map_zero'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span> }</span>\n                    <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>                   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a>\n                    <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span></span>, <span class=\"fn\">map_zero'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span> }</span>\n                    <span class=\"fn\">y</span></span></span></span></span>)</span> }</span></span>\n    <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1678-L1680","name":"AddLocalization.addMonoidOf.proof_3","line":1678,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addMonoidOf.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addMonoidOf.proof_3\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">addMonoidOf</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (x : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>       <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a>\n        <span class=\"fn\">↑<span class=\"fn\">{\n            <span class=\"fn\">toZeroHom</span> :=\n              <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span></span>, <span class=\"fn\">map_zero'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span> }</span>,\n            <span class=\"fn\">map_add'</span> :=\n              <span class=\"fn\">(_ :\n                <span class=\"fn\">∀ (<span class=\"fn\">x </span>y : <span class=\"fn\">M</span>),\n                  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a>\n                      <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span></span>, <span class=\"fn\">map_zero'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span> }</span>\n                      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                     <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a>\n                        <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span></span>,\n                          <span class=\"fn\">map_zero'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span> }</span>\n                        <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>                       <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a>\n                        <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span></span>,\n                          <span class=\"fn\">map_zero'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span> }</span>\n                        <span class=\"fn\">y</span></span></span></span></span>)</span> }</span></span>\n        <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a>\n      <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">{\n          <span class=\"fn\">toZeroHom</span> :=\n            <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span></span>, <span class=\"fn\">map_zero'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span> }</span>,\n          <span class=\"fn\">map_add'</span> :=\n            <span class=\"fn\">(_ :\n              <span class=\"fn\">∀ (<span class=\"fn\">x </span>y : <span class=\"fn\">M</span>),\n                <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a>\n                    <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span></span>, <span class=\"fn\">map_zero'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span> }</span>\n                    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a>\n                      <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span></span>, <span class=\"fn\">map_zero'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span> }</span>\n                      <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>                     <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a>\n                      <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span></span>, <span class=\"fn\">map_zero'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span> }</span>\n                      <span class=\"fn\">y</span></span></span></span></span>)</span> }</span></span>)</span>\n      <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1678-L1680","name":"AddLocalization.addMonoidOf.proof_4","line":1678,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addMonoidOf.proof_4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addMonoidOf.proof_4\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">addMonoidOf</span>.<span class=\"name\">proof_4</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a>\n      <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">{\n          <span class=\"fn\">toZeroHom</span> :=\n            <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span></span>, <span class=\"fn\">map_zero'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span> }</span>,\n          <span class=\"fn\">map_add'</span> :=\n            <span class=\"fn\">(_ :\n              <span class=\"fn\">∀ (<span class=\"fn\">x </span>y : <span class=\"fn\">M</span>),\n                <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a>\n                    <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span></span>, <span class=\"fn\">map_zero'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span> }</span>\n                    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a>\n                      <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span></span>, <span class=\"fn\">map_zero'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span> }</span>\n                      <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>                     <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a>\n                      <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span></span>, <span class=\"fn\">map_zero'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span> }</span>\n                      <span class=\"fn\">y</span></span></span></span></span>)</span> }</span></span>)</span>\n      <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a>\n      <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">{\n          <span class=\"fn\">toZeroHom</span> :=\n            <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span></span>, <span class=\"fn\">map_zero'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span> }</span>,\n          <span class=\"fn\">map_add'</span> :=\n            <span class=\"fn\">(_ :\n              <span class=\"fn\">∀ (<span class=\"fn\">x </span>y : <span class=\"fn\">M</span>),\n                <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a>\n                    <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span></span>, <span class=\"fn\">map_zero'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span> }</span>\n                    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a>\n                      <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span></span>, <span class=\"fn\">map_zero'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span> }</span>\n                      <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>                     <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a>\n                      <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span></span>, <span class=\"fn\">map_zero'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span> }</span>\n                      <span class=\"fn\">y</span></span></span></span></span>)</span> }</span></span>)</span>\n      <span class=\"fn\">y</span></span></span> →\n  <span class=\"fn\">∃ (c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1678-L1680","name":"AddLocalization.addMonoidOf.proof_1","line":1678,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addMonoidOf.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addMonoidOf.proof_1\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">addMonoidOf</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span></span>, <span class=\"fn\">map_zero'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span> }</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span></span>, <span class=\"fn\">map_zero'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span> }</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>     <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span></span>, <span class=\"fn\">map_zero'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span> }</span> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1678-L1680","name":"AddLocalization.addMonoidOf","line":1678,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addMonoidOf","doc":"Natural homomorphism sending `x : M`, `M` an `AddCommMonoid`, to the equivalence class of\n`(x, 0)` in the Localization of `M` at a Submonoid."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addMonoidOf\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">addMonoidOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1654-L1666","name":"Submonoid.LocalizationMap.toMap_injective_iff","line":1654,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap_injective_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap_injective_iff\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">toMap_injective_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ ⦃<span class=\"fn\">x</span> : <span class=\"fn\">M</span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Regular/Basic.html#IsLeftRegular\">IsLeftRegular</a> <span class=\"fn\">x</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1653-L1653","name":"AddSubmonoid.LocalizationMap.toMap_injective_iff","line":1653,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap_injective_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap_injective_iff\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">toMap_injective_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ ⦃<span class=\"fn\">x</span> : <span class=\"fn\">M</span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Regular/Basic.html#IsAddLeftRegular\">IsAddLeftRegular</a> <span class=\"fn\">x</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1647-L1649","name":"Submonoid.LocalizationMap.of_mulEquivOfMulEquiv","line":1647,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.of_mulEquivOfMulEquiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.of_mulEquivOfMulEquiv\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">of_mulEquivOfMulEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#Submonoid.map\">Submonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfLocalizations\">Submonoid.LocalizationMap.ofMulEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfMulEquiv\">Submonoid.LocalizationMap.mulEquivOfMulEquiv</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span> <span class=\"fn\">H</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.comp\">MonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">j</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1646-L1646","name":"AddSubmonoid.LocalizationMap.of_addEquivOfAddEquiv","line":1646,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.of_addEquivOfAddEquiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.of_addEquivOfAddEquiv\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">of_addEquivOfAddEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations\">AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfAddEquiv\">AddSubmonoid.LocalizationMap.addEquivOfAddEquiv</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span> <span class=\"fn\">H</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">j</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1639-L1642","name":"Submonoid.LocalizationMap.of_mulEquivOfMulEquiv_apply","line":1639,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.of_mulEquivOfMulEquiv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.of_mulEquivOfMulEquiv_apply\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">of_mulEquivOfMulEquiv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#Submonoid.map\">Submonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfLocalizations\">Submonoid.LocalizationMap.ofMulEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfMulEquiv\">Submonoid.LocalizationMap.mulEquivOfMulEquiv</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span> <span class=\"fn\">H</span></span>)</span></span>)</span></span>)</span>\n    <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">j</span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1638-L1638","name":"AddSubmonoid.LocalizationMap.of_addEquivOfAddEquiv_apply","line":1638,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.of_addEquivOfAddEquiv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.of_addEquivOfAddEquiv_apply\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">of_addEquivOfAddEquiv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations\">AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations</a> <span class=\"fn\">f</span>\n        <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfAddEquiv\">AddSubmonoid.LocalizationMap.addEquivOfAddEquiv</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span> <span class=\"fn\">H</span></span>)</span></span>)</span></span>)</span>\n    <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">j</span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1631-L1634","name":"Submonoid.LocalizationMap.mulEquivOfMulEquiv_mk'","line":1631,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfMulEquiv_mk'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfMulEquiv_mk'\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mulEquivOfMulEquiv_mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#Submonoid.map\">Submonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfMulEquiv\">Submonoid.LocalizationMap.mulEquivOfMulEquiv</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span> <span class=\"fn\">H</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">j</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\">j</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">j</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span>)</span> }</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1630-L1630","name":"AddSubmonoid.LocalizationMap.addEquivOfAddEquiv_mk'","line":1630,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfAddEquiv_mk'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfAddEquiv_mk'\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">addEquivOfAddEquiv_mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfAddEquiv\">AddSubmonoid.LocalizationMap.addEquivOfAddEquiv</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span> <span class=\"fn\">H</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">j</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\">j</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">j</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span>)</span> }</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1623-L1626","name":"Submonoid.LocalizationMap.mulEquivOfMulEquiv_eq","line":1623,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfMulEquiv_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfMulEquiv_eq\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mulEquivOfMulEquiv_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#Submonoid.map\">Submonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfMulEquiv\">Submonoid.LocalizationMap.mulEquivOfMulEquiv</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span> <span class=\"fn\">H</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">j</span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1622-L1622","name":"AddSubmonoid.LocalizationMap.addEquivOfAddEquiv_eq","line":1622,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfAddEquiv_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfAddEquiv_eq\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">addEquivOfAddEquiv_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfAddEquiv\">AddSubmonoid.LocalizationMap.addEquivOfAddEquiv</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span> <span class=\"fn\">H</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">j</span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1615-L1618","name":"Submonoid.LocalizationMap.mulEquivOfMulEquiv_eq_map","line":1615,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfMulEquiv_eq_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfMulEquiv_eq_map\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mulEquivOfMulEquiv_eq_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#Submonoid.map\">Submonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfMulEquiv\">Submonoid.LocalizationMap.mulEquivOfMulEquiv</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map\">Submonoid.LocalizationMap.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(_ : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span></span>)</span> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1614-L1614","name":"AddSubmonoid.LocalizationMap.addEquivOfAddEquiv_eq_map","line":1614,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfAddEquiv_eq_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfAddEquiv_eq_map\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">addEquivOfAddEquiv_eq_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfAddEquiv\">AddSubmonoid.LocalizationMap.addEquivOfAddEquiv</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map\">AddSubmonoid.LocalizationMap.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(_ : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span></span>)</span> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1607-L1610","name":"Submonoid.LocalizationMap.mulEquivOfMulEquiv_eq_map_apply","line":1607,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfMulEquiv_eq_map_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfMulEquiv_eq_map_apply\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mulEquivOfMulEquiv_eq_map_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#Submonoid.map\">Submonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfMulEquiv\">Submonoid.LocalizationMap.mulEquivOfMulEquiv</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span> <span class=\"fn\">H</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map\">Submonoid.LocalizationMap.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(_ : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span></span>)</span> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1606-L1606","name":"AddSubmonoid.LocalizationMap.addEquivOfAddEquiv_eq_map_apply","line":1606,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfAddEquiv_eq_map_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfAddEquiv_eq_map_apply\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">addEquivOfAddEquiv_eq_map_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfAddEquiv\">AddSubmonoid.LocalizationMap.addEquivOfAddEquiv</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span> <span class=\"fn\">H</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map\">AddSubmonoid.LocalizationMap.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(_ : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span></span>)</span> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1600-L1602","name":"Submonoid.LocalizationMap.mulEquivOfMulEquiv","line":1600,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfMulEquiv","doc":"Given Localization maps `f : M →* N, k : P →* U` for Submonoids `S, T` respectively, an\nisomorphism `j : M ≃* P` such that `j(S) = T` induces an isomorphism of localizations `N ≃* U`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfMulEquiv\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mulEquivOfMulEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#Submonoid.map\">Submonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">Q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1597-L1599","name":"AddSubmonoid.LocalizationMap.addEquivOfAddEquiv","line":1597,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfAddEquiv","doc":"Given Localization maps `f : M →+ N, k : P →+ U` for Submonoids `S, T` respectively, an\nisomorphism `j : M ≃+ P` such that `j(S) = T` induces an isomorphism of localizations `N ≃+ U`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfAddEquiv\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">addEquivOfAddEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">Q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1587-L1591","name":"Submonoid.LocalizationMap.ofMulEquivOfDom_id","line":1587,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfDom_id","doc":"A special case of `f ∘ id = f`, `f` a Localization map. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfDom_id\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofMulEquivOfDom_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfDom\">Submonoid.LocalizationMap.ofMulEquivOfDom</a> <span class=\"fn\">f</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#Submonoid.map\">Submonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.refl\">MulEquiv.refl</a> <span class=\"fn\">M</span></span>)</span></span>)</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">S</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1586-L1586","name":"AddSubmonoid.LocalizationMap.ofAddEquivOfDom_id","line":1586,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom_id","doc":"A special case of `f ∘ id = f`, `f` a Localization map."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom_id\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofAddEquivOfDom_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom\">AddSubmonoid.LocalizationMap.ofAddEquivOfDom</a> <span class=\"fn\">f</span>\n    <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.refl\">AddEquiv.refl</a> <span class=\"fn\">M</span></span>)</span></span>)</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">S</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1586-L1586","name":"AddSubmonoid.LocalizationMap.ofAddEquivOfDom_id.match_1","line":1586,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom_id.match_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom_id.match_1\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofAddEquivOfDom_id</span>.<span class=\"name\">match_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(motive : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.refl\">AddEquiv.refl</a> <span class=\"fn\">M</span></span>)</span></span>)</span> <span class=\"fn\">S</span></span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x_1</span> : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.refl\">AddEquiv.refl</a> <span class=\"fn\">M</span></span>)</span></span>)</span> <span class=\"fn\">S</span></span></span>),\n  <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">w</span> : <span class=\"fn\">M</span>) (<span class=\"fn\">hy</span> : <span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">↑<span class=\"fn\">S</span></span></span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.refl\">AddEquiv.refl</a> <span class=\"fn\">M</span></span>)</span></span>)</span> <span class=\"fn\">w</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span>),\n      <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">(_ : <span class=\"fn\">∃ a ∈ <span class=\"fn\">↑<span class=\"fn\">S</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.refl\">AddEquiv.refl</a> <span class=\"fn\">M</span></span>)</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></span>)</span></span></span>)</span> →\n    <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1580-L1581","name":"Submonoid.LocalizationMap.ofMulEquivOfDom_comp","line":1580,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfDom_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfDom_comp\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofMulEquivOfDom_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#Submonoid.map\">Submonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.symm\">MulEquiv.symm</a> <span class=\"fn\">k</span></span>)</span></span>)</span> <span class=\"fn\">T</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfDom\">Submonoid.LocalizationMap.ofMulEquivOfDom</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">k</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1579-L1579","name":"AddSubmonoid.LocalizationMap.ofAddEquivOfDom_comp","line":1579,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom_comp\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofAddEquivOfDom_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.symm\">AddEquiv.symm</a> <span class=\"fn\">k</span></span>)</span></span>)</span> <span class=\"fn\">T</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom\">AddSubmonoid.LocalizationMap.ofAddEquivOfDom</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">k</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1573-L1575","name":"Submonoid.LocalizationMap.ofMulEquivOfDom_comp_symm","line":1573,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfDom_comp_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfDom_comp_symm\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofMulEquivOfDom_comp_symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#Submonoid.map\">Submonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">T</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfDom\">Submonoid.LocalizationMap.ofMulEquivOfDom</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.symm\">MulEquiv.symm</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1572-L1572","name":"AddSubmonoid.LocalizationMap.ofAddEquivOfDom_comp_symm","line":1572,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom_comp_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom_comp_symm\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofAddEquivOfDom_comp_symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">T</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom\">AddSubmonoid.LocalizationMap.ofAddEquivOfDom</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.symm\">AddEquiv.symm</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1567-L1568","name":"Submonoid.LocalizationMap.ofMulEquivOfDom_eq","line":1567,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfDom_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfDom_eq\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofMulEquivOfDom_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#Submonoid.map\">Submonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">T</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfDom\">Submonoid.LocalizationMap.ofMulEquivOfDom</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.comp\">MonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">k</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1566-L1566","name":"AddSubmonoid.LocalizationMap.ofAddEquivOfDom_eq","line":1566,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom_eq\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofAddEquivOfDom_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">T</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom\">AddSubmonoid.LocalizationMap.ofAddEquivOfDom</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">k</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1561-L1562","name":"Submonoid.LocalizationMap.ofMulEquivOfDom_apply","line":1561,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfDom_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfDom_apply\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofMulEquivOfDom_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#Submonoid.map\">Submonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">T</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfDom\">Submonoid.LocalizationMap.ofMulEquivOfDom</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">k</span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1560-L1560","name":"AddSubmonoid.LocalizationMap.ofAddEquivOfDom_apply","line":1560,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom_apply\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofAddEquivOfDom_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">T</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom\">AddSubmonoid.LocalizationMap.ofAddEquivOfDom</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">k</span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1536-L1556","name":"Submonoid.LocalizationMap.ofMulEquivOfDom","line":1536,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfDom","doc":"Given `CommMonoid`s `M, P` and Submonoids `S ⊆ M, T ⊆ P`, if `f : M →* N` is a Localization\nmap for `S` and `k : P ≃* M` is an isomorphism of `CommMonoid`s such that `k(T) = S`, `f ∘ k`\nis a Localization map for `T`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfDom\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofMulEquivOfDom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#Submonoid.map\">Submonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">T</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1532-L1535","name":"AddSubmonoid.LocalizationMap.ofAddEquivOfDom.match_2","line":1532,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom.match_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom.match_2\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofAddEquivOfDom</span>.<span class=\"name\">match_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(motive : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ (a : <span class=\"fn\">P</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span>.toEquiv</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x_1</span> : <span class=\"fn\">∃ (a : <span class=\"fn\">P</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span>.toEquiv</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></span>),\n  <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">w</span> : <span class=\"fn\">P</span>) (<span class=\"fn\">hw</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span>.toEquiv</span> <span class=\"fn\">w</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span>), <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">(_ : <span class=\"fn\">∃ (a : <span class=\"fn\">P</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span>.toEquiv</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></span>)</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1532-L1535","name":"AddSubmonoid.LocalizationMap.ofAddEquivOfDom.match_3","line":1532,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom.match_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom.match_3\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofAddEquivOfDom</span>.<span class=\"name\">match_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(motive : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ (a : <span class=\"fn\">P</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span>.toEquiv</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x_1</span> : <span class=\"fn\">∃ (a : <span class=\"fn\">P</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span>.toEquiv</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span></span>),\n  <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\">P</span>) (<span class=\"fn\">hv</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span>.toEquiv</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span>), <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">(_ : <span class=\"fn\">∃ (a : <span class=\"fn\">P</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span>.toEquiv</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span></span>)</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1532-L1535","name":"AddSubmonoid.LocalizationMap.ofAddEquivOfDom.proof_3","line":1532,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom.proof_3\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofAddEquivOfDom</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">T</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (x : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">T</span></span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">k</span></span>)</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">k</span></span>)</span></span>)</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1532-L1535","name":"AddSubmonoid.LocalizationMap.ofAddEquivOfDom","line":1532,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom","doc":"Given `AddCommMonoid`s `M, P` and `AddSubmonoid`s `S ⊆ M, T ⊆ P`, if `f : M →* N` is a\nLocalization map for `S` and `k : P ≃+ M` is an isomorphism of `AddCommMonoid`s such that\n`k(T) = S`, `f ∘ k` is a Localization map for `T`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofAddEquivOfDom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">T</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1532-L1535","name":"AddSubmonoid.LocalizationMap.ofAddEquivOfDom.proof_1","line":1532,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom.proof_1\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofAddEquivOfDom</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">T</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.comap\">AddSubmonoid.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">T</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1532-L1535","name":"AddSubmonoid.LocalizationMap.ofAddEquivOfDom.match_5","line":1532,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom.match_5","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom.match_5\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofAddEquivOfDom</span>.<span class=\"name\">match_5</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(motive : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ (c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">y</span></span></span></span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x_1</span> : <span class=\"fn\">∃ (c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">y</span></span></span></span></span>),\n  <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">c</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>) (<span class=\"fn\">hc</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">y</span></span></span></span>),\n      <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">(_ : <span class=\"fn\">∃ (c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">y</span></span></span></span></span>)</span></span></span>)</span> →\n    <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1532-L1535","name":"AddSubmonoid.LocalizationMap.ofAddEquivOfDom.match_4","line":1532,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom.match_4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom.match_4\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofAddEquivOfDom</span>.<span class=\"name\">match_4</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(motive : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ (a : <span class=\"fn\">P</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span>.toEquiv</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">c</span></span></span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">∃ (a : <span class=\"fn\">P</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span>.toEquiv</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">c</span></span></span></span>),\n  <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">d</span> : <span class=\"fn\">P</span>) (<span class=\"fn\">hd</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span>.toEquiv</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">c</span></span></span>), <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">(_ : <span class=\"fn\">∃ (a : <span class=\"fn\">P</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span>.toEquiv</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">c</span></span></span></span>)</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1532-L1535","name":"AddSubmonoid.LocalizationMap.ofAddEquivOfDom.match_1","line":1532,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom.match_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom.match_1\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofAddEquivOfDom</span>.<span class=\"name\">match_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">T</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(motive : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\">k</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span>)</span> }</span></span></span>)</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\">k</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span>)</span> }</span></span></span>)</span></span>),\n  <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">z</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#AddUnits\">AddUnits</a> <span class=\"fn\">N</span></span>) (<span class=\"fn\">hz</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\">k</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span>)</span> }</span></span></span></span>),\n      <span class=\"fn\"><span class=\"fn\">motive</span>\n        <span class=\"fn\">(_ :\n          <span class=\"fn\">∃ (u : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#AddUnits\">AddUnits</a> <span class=\"fn\">N</span></span>),\n            <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\">k</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span>)</span> }</span></span></span></span></span>)</span></span></span>)</span> →\n    <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1532-L1535","name":"AddSubmonoid.LocalizationMap.ofAddEquivOfDom.proof_4","line":1532,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom.proof_4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom.proof_4\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofAddEquivOfDom</span>.<span class=\"name\">proof_4</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">T</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">y</span></span>)</span></span></span> →\n  <span class=\"fn\">∃ (c : <span class=\"fn\">↥<span class=\"fn\">T</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1532-L1535","name":"AddSubmonoid.LocalizationMap.ofAddEquivOfDom.proof_2","line":1532,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfDom.proof_2\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofAddEquivOfDom</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">T</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">k</span></span>)</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1522-L1525","name":"Submonoid.LocalizationMap.ofMulEquivOfLocalizations_comp","line":1522,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfLocalizations_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfLocalizations_comp\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofMulEquivOfLocalizations_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfLocalizations\">Submonoid.LocalizationMap.ofMulEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.trans\">MulEquiv.trans</a> <span class=\"fn\">k</span> <span class=\"fn\">j</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.comp\">MonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">j</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfLocalizations\">Submonoid.LocalizationMap.ofMulEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1521-L1521","name":"AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations_comp","line":1521,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations_comp\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofAddEquivOfLocalizations_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations\">AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.trans\">AddEquiv.trans</a> <span class=\"fn\">k</span> <span class=\"fn\">j</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">j</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations\">AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1516-L1517","name":"Submonoid.LocalizationMap.ofMulEquivOfLocalizations_id","line":1516,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfLocalizations_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfLocalizations_id\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofMulEquivOfLocalizations_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfLocalizations\">Submonoid.LocalizationMap.ofMulEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.refl\">MulEquiv.refl</a> <span class=\"fn\">N</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1515-L1515","name":"AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations_id","line":1515,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations_id\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofAddEquivOfLocalizations_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations\">AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.refl\">AddEquiv.refl</a> <span class=\"fn\">N</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1510-L1511","name":"Submonoid.LocalizationMap.mulEquivOfLocalizations_left_inv_apply","line":1510,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfLocalizations_left_inv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfLocalizations_left_inv_apply\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mulEquivOfLocalizations_left_inv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfLocalizations\">Submonoid.LocalizationMap.mulEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfLocalizations\">Submonoid.LocalizationMap.ofMulEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">k</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1509-L1509","name":"AddSubmonoid.LocalizationMap.addEquivOfLocalizations_left_neg_apply","line":1509,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfLocalizations_left_neg_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfLocalizations_left_neg_apply\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">addEquivOfLocalizations_left_neg_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfLocalizations\">AddSubmonoid.LocalizationMap.addEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations\">AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span></span>)</span></span>)</span>\n    <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">k</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1502-L1504","name":"Submonoid.LocalizationMap.mulEquivOfLocalizations_left_inv","line":1502,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfLocalizations_left_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfLocalizations_left_inv\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mulEquivOfLocalizations_left_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfLocalizations\">Submonoid.LocalizationMap.mulEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfLocalizations\">Submonoid.LocalizationMap.ofMulEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1501-L1501","name":"AddSubmonoid.LocalizationMap.addEquivOfLocalizations_left_neg","line":1501,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfLocalizations_left_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfLocalizations_left_neg\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">addEquivOfLocalizations_left_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfLocalizations\">AddSubmonoid.LocalizationMap.addEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations\">AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1496-L1497","name":"Submonoid.LocalizationMap.mulEquivOfLocalizations_right_inv_apply","line":1496,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfLocalizations_right_inv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfLocalizations_right_inv_apply\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mulEquivOfLocalizations_right_inv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfLocalizations\">Submonoid.LocalizationMap.ofMulEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfLocalizations\">Submonoid.LocalizationMap.mulEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span></span>)</span></span>)</span></span>)</span>\n    <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1495-L1495","name":"AddSubmonoid.LocalizationMap.addEquivOfLocalizations_right_inv_apply","line":1495,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfLocalizations_right_inv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfLocalizations_right_inv_apply\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">addEquivOfLocalizations_right_inv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations\">AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations</a> <span class=\"fn\">f</span>\n        <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfLocalizations\">AddSubmonoid.LocalizationMap.addEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span></span>)</span></span>)</span></span>)</span>\n    <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1488-L1490","name":"Submonoid.LocalizationMap.mulEquivOfLocalizations_right_inv","line":1488,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfLocalizations_right_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfLocalizations_right_inv\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mulEquivOfLocalizations_right_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfLocalizations\">Submonoid.LocalizationMap.ofMulEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfLocalizations\">Submonoid.LocalizationMap.mulEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1487-L1487","name":"AddSubmonoid.LocalizationMap.addEquivOfLocalizations_right_inv","line":1487,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfLocalizations_right_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfLocalizations_right_inv\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">addEquivOfLocalizations_right_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations\">AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfLocalizations\">AddSubmonoid.LocalizationMap.addEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1481-L1483","name":"Submonoid.LocalizationMap.ofMulEquivOfLocalizations_eq_iff_eq","line":1481,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfLocalizations_eq_iff_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfLocalizations_eq_iff_eq\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofMulEquivOfLocalizations_eq_iff_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfLocalizations\">Submonoid.LocalizationMap.ofMulEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.symm\">MulEquiv.symm</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1480-L1480","name":"AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations_eq_iff_eq","line":1480,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations_eq_iff_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations_eq_iff_eq\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofAddEquivOfLocalizations_eq_iff_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations\">AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.symm\">AddEquiv.symm</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1475-L1476","name":"Submonoid.LocalizationMap.symm_comp_ofMulEquivOfLocalizations_apply'","line":1475,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.symm_comp_ofMulEquivOfLocalizations_apply'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.symm_comp_ofMulEquivOfLocalizations_apply'\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">symm_comp_ofMulEquivOfLocalizations_apply'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfLocalizations\">Submonoid.LocalizationMap.ofMulEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.symm\">MulEquiv.symm</a> <span class=\"fn\">k</span></span>)</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1474-L1474","name":"AddSubmonoid.LocalizationMap.symm_comp_ofAddEquivOfLocalizations_apply'","line":1474,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.symm_comp_ofAddEquivOfLocalizations_apply'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.symm_comp_ofAddEquivOfLocalizations_apply'\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">symm_comp_ofAddEquivOfLocalizations_apply'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations\">AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.symm\">AddEquiv.symm</a> <span class=\"fn\">k</span></span>)</span></span>)</span></span>)</span>\n      <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1469-L1470","name":"Submonoid.LocalizationMap.symm_comp_ofMulEquivOfLocalizations_apply","line":1469,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.symm_comp_ofMulEquivOfLocalizations_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.symm_comp_ofMulEquivOfLocalizations_apply\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">symm_comp_ofMulEquivOfLocalizations_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.symm\">MulEquiv.symm</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfLocalizations\">Submonoid.LocalizationMap.ofMulEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1468-L1468","name":"AddSubmonoid.LocalizationMap.symm_comp_ofAddEquivOfLocalizations_apply","line":1468,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.symm_comp_ofAddEquivOfLocalizations_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.symm_comp_ofAddEquivOfLocalizations_apply\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">symm_comp_ofAddEquivOfLocalizations_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.symm\">AddEquiv.symm</a> <span class=\"fn\">k</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations\">AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1463-L1464","name":"Submonoid.LocalizationMap.ofMulEquivOfLocalizations_eq","line":1463,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfLocalizations_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfLocalizations_eq\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofMulEquivOfLocalizations_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfLocalizations\">Submonoid.LocalizationMap.ofMulEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.comp\">MonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.toMonoidHom\">MulEquiv.toMonoidHom</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1462-L1462","name":"AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations_eq","line":1462,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations_eq\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofAddEquivOfLocalizations_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations\">AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1457-L1458","name":"Submonoid.LocalizationMap.ofMulEquivOfLocalizations_apply","line":1457,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfLocalizations_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfLocalizations_apply\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofMulEquivOfLocalizations_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfLocalizations\">Submonoid.LocalizationMap.ofMulEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1456-L1456","name":"AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations_apply","line":1456,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations_apply\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofAddEquivOfLocalizations_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations\">AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1446-L1452","name":"Submonoid.LocalizationMap.ofMulEquivOfLocalizations","line":1446,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfLocalizations","doc":"If `f : M →* N` is a Localization map for a Submonoid `S` and `k : N ≃* P` is an isomorphism\nof `CommMonoid`s, `k ∘ f` is a Localization map for `M` at `S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ofMulEquivOfLocalizations\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofMulEquivOfLocalizations</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1443-L1445","name":"AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations.proof_2","line":1443,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations.proof_2\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofAddEquivOfLocalizations</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (x : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1443-L1445","name":"AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations.match_1","line":1443,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations.match_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations.match_1\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofAddEquivOfLocalizations</span>.<span class=\"name\">match_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(motive : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ (a : <span class=\"fn\">N</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span>.toEquiv</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">v</span></span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">∃ (a : <span class=\"fn\">N</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span>.toEquiv</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">v</span></span></span>),\n  <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">z</span> : <span class=\"fn\">N</span>) (<span class=\"fn\">hz</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span>.toEquiv</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">v</span></span>), <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">(_ : <span class=\"fn\">∃ (a : <span class=\"fn\">N</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span>.toEquiv</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">v</span></span></span>)</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1443-L1445","name":"AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations.proof_3","line":1443,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations.proof_3\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofAddEquivOfLocalizations</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">y</span></span>)</span></span></span> →\n  <span class=\"fn\">∃ (c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1443-L1445","name":"AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations.proof_1","line":1443,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations.proof_1\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofAddEquivOfLocalizations</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.toAddMonoidHom\">AddEquiv.toAddMonoidHom</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1443-L1445","name":"AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations","line":1443,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations","doc":"If `f : M →+ N` is a Localization map for a Submonoid `S` and `k : N ≃+ P` is an isomorphism\nof `AddCommMonoid`s, `k ∘ f` is a Localization map for `M` at `S`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ofAddEquivOfLocalizations\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ofAddEquivOfLocalizations</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1436-L1437","name":"Submonoid.LocalizationMap.mulEquivOfLocalizations_symm_eq_mulEquivOfLocalizations","line":1436,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfLocalizations_symm_eq_mulEquivOfLocalizations","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfLocalizations_symm_eq_mulEquivOfLocalizations\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mulEquivOfLocalizations_symm_eq_mulEquivOfLocalizations</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.symm\">MulEquiv.symm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfLocalizations\">Submonoid.LocalizationMap.mulEquivOfLocalizations</a> <span class=\"fn\">k</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfLocalizations\">Submonoid.LocalizationMap.mulEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1435-L1435","name":"AddSubmonoid.LocalizationMap.addEquivOfLocalizations_symm_eq_addEquivOfLocalizations","line":1435,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfLocalizations_symm_eq_addEquivOfLocalizations","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfLocalizations_symm_eq_addEquivOfLocalizations\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">addEquivOfLocalizations_symm_eq_addEquivOfLocalizations</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.symm\">AddEquiv.symm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfLocalizations\">AddSubmonoid.LocalizationMap.addEquivOfLocalizations</a> <span class=\"fn\">k</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfLocalizations\">AddSubmonoid.LocalizationMap.addEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1430-L1431","name":"Submonoid.LocalizationMap.mulEquivOfLocalizations_symm_apply","line":1430,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfLocalizations_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfLocalizations_symm_apply\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mulEquivOfLocalizations_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv.symm\">MulEquiv.symm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfLocalizations\">Submonoid.LocalizationMap.mulEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift\">Submonoid.LocalizationMap.lift</a> <span class=\"fn\">k</span> <span class=\"fn\">(_ : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1429-L1429","name":"AddSubmonoid.LocalizationMap.addEquivOfLocalizations_symm_apply","line":1429,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfLocalizations_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfLocalizations_symm_apply\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">addEquivOfLocalizations_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.symm\">AddEquiv.symm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfLocalizations\">AddSubmonoid.LocalizationMap.addEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift\">AddSubmonoid.LocalizationMap.lift</a> <span class=\"fn\">k</span> <span class=\"fn\">(_ : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1424-L1425","name":"Submonoid.LocalizationMap.mulEquivOfLocalizations_apply","line":1424,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfLocalizations_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfLocalizations_apply\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mulEquivOfLocalizations_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfLocalizations\">Submonoid.LocalizationMap.mulEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift\">Submonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">(_ : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1423-L1423","name":"AddSubmonoid.LocalizationMap.addEquivOfLocalizations_apply","line":1423,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfLocalizations_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfLocalizations_apply\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">addEquivOfLocalizations_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfLocalizations\">AddSubmonoid.LocalizationMap.addEquivOfLocalizations</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift\">AddSubmonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">(_ : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1414-L1419","name":"Submonoid.LocalizationMap.mulEquivOfLocalizations","line":1414,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfLocalizations","doc":"If `f : M →* N` and `k : M →* P` are Localization maps for a Submonoid `S`, we get an\nisomorphism of `N` and `P`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mulEquivOfLocalizations\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mulEquivOfLocalizations</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1411-L1413","name":"AddSubmonoid.LocalizationMap.addEquivOfLocalizations.proof_1","line":1411,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfLocalizations.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfLocalizations.proof_1\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">addEquivOfLocalizations</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift\">AddSubmonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">(_ : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift\">AddSubmonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">(_ : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift\">AddSubmonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">(_ : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>)</span> <span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1411-L1413","name":"AddSubmonoid.LocalizationMap.addEquivOfLocalizations","line":1411,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfLocalizations","doc":"If `f : M →+ N` and `k : M →+ R` are Localization maps for an AddSubmonoid `S`, we get an\nisomorphism of `N` and `R`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.addEquivOfLocalizations\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">addEquivOfLocalizations</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1389-L1393","name":"AddSubmonoid.LocalizationMap.awayToAwayRight","line":1389,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.awayToAwayRight","doc":"Given `x y : A` and Localization maps `F : A →+ B, G : A →+ C` away from `x` and `x + y`\nrespectively, the homomorphism induced from `B` to `C`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.awayToAwayRight\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">awayToAwayRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">A</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.AwayMap\">AddSubmonoid.LocalizationMap.AwayMap</a> <span class=\"fn\">x</span> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.AwayMap\">AddSubmonoid.LocalizationMap.AwayMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1383-L1384","name":"AddSubmonoid.LocalizationMap.AwayMap.lift_comp","line":1383,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.AwayMap.lift_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.AwayMap.lift_comp\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">AwayMap</span>.<span class=\"name\">lift_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">A</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.AwayMap\">AddSubmonoid.LocalizationMap.AwayMap</a> <span class=\"fn\">x</span> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.AwayMap.lift\">AddSubmonoid.LocalizationMap.AwayMap.lift</a> <span class=\"fn\">x</span> <span class=\"fn\">F</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">F</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1378-L1379","name":"AddSubmonoid.LocalizationMap.AwayMap.lift_eq","line":1378,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.AwayMap.lift_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.AwayMap.lift_eq\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">AwayMap</span>.<span class=\"name\">lift_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">A</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.AwayMap\">AddSubmonoid.LocalizationMap.AwayMap</a> <span class=\"fn\">x</span> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.AwayMap.lift\">AddSubmonoid.LocalizationMap.AwayMap.lift</a> <span class=\"fn\">x</span> <span class=\"fn\">F</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">F</span></span>)</span> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1367-L1374","name":"AddSubmonoid.LocalizationMap.AwayMap.lift","line":1367,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.AwayMap.lift","doc":"Given `x : A`, a localization map `F : A →+ B` away from `x`, and a map of `AddCommMonoid`s\n`g : A →+ C` such that `g x` is invertible, the homomorphism induced from `B` to `C` sending\n`z : B` to `g y - n • g x`, where `y : A, n : ℕ` are such that `z = F y - n • F x`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.AwayMap.lift\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">AwayMap</span>.<span class=\"name\">lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">A</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.AwayMap\">AddSubmonoid.LocalizationMap.AwayMap</a> <span class=\"fn\">x</span> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1360-L1361","name":"AddSubmonoid.LocalizationMap.AwayMap.negSelf","line":1360,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.AwayMap.negSelf","doc":"Given `x : A` and a Localization map `F : A →+ B` away from `x`, `neg_self` is `- (F x)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.AwayMap.negSelf\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">AwayMap</span>.<span class=\"name\">negSelf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">A</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.AwayMap\">AddSubmonoid.LocalizationMap.AwayMap</a> <span class=\"fn\">x</span> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">B</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1337-L1341","name":"Submonoid.LocalizationMap.awayToAwayRight","line":1337,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.awayToAwayRight","doc":"Given `x y : M` and Localization maps `F : M →* N, G : M →* P` away from `x` and `x * y`\nrespectively, the homomorphism induced from `N` to `P`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.awayToAwayRight\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">awayToAwayRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.AwayMap\">Submonoid.LocalizationMap.AwayMap</a> <span class=\"fn\">x</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.AwayMap\">Submonoid.LocalizationMap.AwayMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1331-L1332","name":"Submonoid.LocalizationMap.AwayMap.lift_comp","line":1331,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.AwayMap.lift_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.AwayMap.lift_comp\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">AwayMap</span>.<span class=\"name\">lift_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.AwayMap\">Submonoid.LocalizationMap.AwayMap</a> <span class=\"fn\">x</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.comp\">MonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.AwayMap.lift\">Submonoid.LocalizationMap.AwayMap.lift</a> <span class=\"fn\">x</span> <span class=\"fn\">F</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">F</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1326-L1327","name":"Submonoid.LocalizationMap.AwayMap.lift_eq","line":1326,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.AwayMap.lift_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.AwayMap.lift_eq\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">AwayMap</span>.<span class=\"name\">lift_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.AwayMap\">Submonoid.LocalizationMap.AwayMap</a> <span class=\"fn\">x</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.AwayMap.lift\">Submonoid.LocalizationMap.AwayMap.lift</a> <span class=\"fn\">x</span> <span class=\"fn\">F</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">F</span></span>)</span> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1317-L1322","name":"Submonoid.LocalizationMap.AwayMap.lift","line":1317,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.AwayMap.lift","doc":"Given `x : M`, a Localization map `F : M →* N` away from `x`, and a map of `CommMonoid`s\n`g : M →* P` such that `g x` is invertible, the homomorphism induced from `N` to `P` sending\n`z : N` to `g y * (g x)⁻ⁿ`, where `y : M, n : ℕ` are such that `z = F y * (F x)⁻ⁿ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.AwayMap.lift\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">AwayMap</span>.<span class=\"name\">lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.AwayMap\">Submonoid.LocalizationMap.AwayMap</a> <span class=\"fn\">x</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1311-L1311","name":"Submonoid.LocalizationMap.AwayMap.invSelf","line":1311,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.AwayMap.invSelf","doc":"Given `x : M` and a Localization map `F : M →* N` away from `x`, `invSelf` is `(F x)⁻¹`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.AwayMap.invSelf\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">AwayMap</span>.<span class=\"name\">invSelf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.AwayMap\">Submonoid.LocalizationMap.AwayMap</a> <span class=\"fn\">x</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">N</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1304-L1304","name":"Submonoid.LocalizationMap.AwayMap","line":1304,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.AwayMap","doc":"Given `x : M`, the type of `CommMonoid` homomorphisms `f : M →* N` such that `N`\nis isomorphic to the Localization of `M` at the Submonoid generated by `x`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.AwayMap\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">AwayMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(N' : <a href=\"./foundational_types.html\">Type</a> u_5)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_1 u_5)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1301-L1303","name":"AddSubmonoid.LocalizationMap.AwayMap","line":1301,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.AwayMap","doc":"Given `x : M`, the type of `AddCommMonoid` homomorphisms `f : M →+ N` such that `N`\nis isomorphic to the localization of `M` at the AddSubmonoid generated by `x`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.AwayMap\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">AwayMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(N' : <a href=\"./foundational_types.html\">Type</a> u_5)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_1 u_5)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1283-L1293","name":"Submonoid.LocalizationMap.map_injective_of_injective","line":1283,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map_injective_of_injective","doc":"Given an injective `CommMonoid` homomorphism `g : M →* P`, and a submonoid `S ⊆ M`,\nthe induced monoid homomorphism from the localization of `M` at `S` to the\nlocalization of `P` at `g S`, is injective.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map_injective_of_injective\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">map_injective_of_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#Submonoid.map\">Submonoid.map</a> <span class=\"fn\">g</span> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map\">Submonoid.LocalizationMap.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(_ : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#Submonoid.map\">Submonoid.map</a> <span class=\"fn\">g</span> <span class=\"fn\">S</span></span></span></span>)</span> <span class=\"fn\">k</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1280-L1282","name":"AddSubmonoid.LocalizationMap.map_injective_of_injective.match_1","line":1280,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map_injective_of_injective.match_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map_injective_of_injective.match_1\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">map_injective_of_injective</span>.<span class=\"name\">match_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(motive : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ (z' : <span class=\"fn\">M</span>) (w' : <span class=\"fn\">M</span>) (d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>),\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">d</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">z'</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a>       <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">d</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">w'</span></span></span></span></span>)</span> →\n  <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀\n  (<span class=\"fn\">x</span> :\n    <span class=\"fn\">∃ (z' : <span class=\"fn\">M</span>) (w' : <span class=\"fn\">M</span>) (d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>),\n      <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">d</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">z'</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a>         <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">d</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">w'</span></span></span></span></span>),\n  <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">z' </span>w' : <span class=\"fn\">M</span>) (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)\n      (<span class=\"fn\">hxz</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">z'</span></span></span>)\n      (<span class=\"fn\">hxw</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">w'</span></span></span>),\n      <span class=\"fn\"><span class=\"fn\">motive</span>\n        <span class=\"fn\">(_ :\n          <span class=\"fn\">∃ (z' : <span class=\"fn\">M</span>) (w' : <span class=\"fn\">M</span>) (d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>),\n            <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">d</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">z'</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a>               <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">d</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">w'</span></span></span></span></span>)</span></span></span>)</span> →\n    <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1280-L1282","name":"AddSubmonoid.LocalizationMap.map_injective_of_injective","line":1280,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map_injective_of_injective","doc":"Given an injective `AddCommMonoid` homomorphism `g : M →+ P`, and a\nsubmonoid `S ⊆ M`, the induced monoid homomorphism from the localization of `M` at `S`\nto the localization of `P` at `g S`, is injective. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map_injective_of_injective\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">map_injective_of_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">g</span> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map\">AddSubmonoid.LocalizationMap.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(_ : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddSubmonoid.map\">AddSubmonoid.map</a> <span class=\"fn\">g</span> <span class=\"fn\">S</span></span></span></span>)</span> <span class=\"fn\">k</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1264-L1272","name":"Submonoid.LocalizationMap.map_map","line":1264,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map_map","doc":"If `CommMonoid` homs `g : M →* P, l : P →* A` induce maps of localizations, the composition\nof the induced maps equals the map of localizations induced by `l ∘ g`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map_map\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">map_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">U</span> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hl : <span class=\"fn\">∀ (<span class=\"fn\">w</span> : <span class=\"fn\">↥<span class=\"fn\">T</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span> <span class=\"fn\">↑<span class=\"fn\">w</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">U</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map\">Submonoid.LocalizationMap.map</a> <span class=\"fn\">k</span> <span class=\"fn\">hl</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map\">Submonoid.LocalizationMap.map</a> <span class=\"fn\">f</span> <span class=\"fn\">hy</span> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map\">Submonoid.LocalizationMap.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(_ : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.comp\">MonoidHom.comp</a> <span class=\"fn\">l</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">U</span></span></span>)</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1261-L1263","name":"AddSubmonoid.LocalizationMap.map_map","line":1261,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map_map","doc":"If `AddCommMonoid` homs `g : M →+ P, l : P →+ A` induce maps of localizations, the composition\nof the induced maps equals the map of localizations induced by `l ∘ g`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map_map\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">map_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">U</span> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hl : <span class=\"fn\">∀ (<span class=\"fn\">w</span> : <span class=\"fn\">↥<span class=\"fn\">T</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span> <span class=\"fn\">↑<span class=\"fn\">w</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">U</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map\">AddSubmonoid.LocalizationMap.map</a> <span class=\"fn\">k</span> <span class=\"fn\">hl</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map\">AddSubmonoid.LocalizationMap.map</a> <span class=\"fn\">f</span> <span class=\"fn\">hy</span> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map\">AddSubmonoid.LocalizationMap.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(_ : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">l</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">U</span></span></span>)</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1244-L1255","name":"Submonoid.LocalizationMap.map_comp_map","line":1244,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map_comp_map","doc":"If `CommMonoid` homs `g : M →* P, l : P →* A` induce maps of localizations, the composition\nof the induced maps equals the map of localizations induced by `l ∘ g`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map_comp_map\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">map_comp_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">U</span> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hl : <span class=\"fn\">∀ (<span class=\"fn\">w</span> : <span class=\"fn\">↥<span class=\"fn\">T</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span> <span class=\"fn\">↑<span class=\"fn\">w</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">U</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.comp\">MonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map\">Submonoid.LocalizationMap.map</a> <span class=\"fn\">k</span> <span class=\"fn\">hl</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map\">Submonoid.LocalizationMap.map</a> <span class=\"fn\">f</span> <span class=\"fn\">hy</span> <span class=\"fn\">k</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map\">Submonoid.LocalizationMap.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(_ : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.comp\">MonoidHom.comp</a> <span class=\"fn\">l</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">U</span></span></span>)</span> <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1241-L1243","name":"AddSubmonoid.LocalizationMap.map_comp_map","line":1241,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map_comp_map","doc":"If `AddCommMonoid` homs `g : M →+ P, l : P →+ A` induce maps of localizations, the composition\nof the induced maps equals the map of localizations induced by `l ∘ g`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map_comp_map\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">map_comp_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">U</span> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hl : <span class=\"fn\">∀ (<span class=\"fn\">w</span> : <span class=\"fn\">↥<span class=\"fn\">T</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span> <span class=\"fn\">↑<span class=\"fn\">w</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">U</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map\">AddSubmonoid.LocalizationMap.map</a> <span class=\"fn\">k</span> <span class=\"fn\">hl</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map\">AddSubmonoid.LocalizationMap.map</a> <span class=\"fn\">f</span> <span class=\"fn\">hy</span> <span class=\"fn\">k</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map\">AddSubmonoid.LocalizationMap.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(_ : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">l</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">U</span></span></span>)</span> <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1234-L1235","name":"Submonoid.LocalizationMap.map_id","line":1234,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map_id\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">map_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map\">Submonoid.LocalizationMap.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(_ : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.id\">MonoidHom.id</a> <span class=\"fn\">M</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span></span>)</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1233-L1233","name":"AddSubmonoid.LocalizationMap.map_id","line":1233,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map_id\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">map_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map\">AddSubmonoid.LocalizationMap.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(_ : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.id\">AddMonoidHom.id</a> <span class=\"fn\">M</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span></span>)</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1228-L1229","name":"Submonoid.LocalizationMap.map_mul_left","line":1228,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map_mul_left","doc":"Given Localization maps `f : M →* N, k : P →* Q` for Submonoids `S, T` respectively, if a\n`CommMonoid` homomorphism `g : M →* P` induces a `f.map hy k : N →* Q`, then for all `z : N`,\nwe have `k (g y) * f.map hy k z = k (g x)` where `x : M, y ∈ S` are such that\n`z * f y = f x`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map_mul_left\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">map_mul_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.sec\">Submonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.2</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a>     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map\">Submonoid.LocalizationMap.map</a> <span class=\"fn\">f</span> <span class=\"fn\">hy</span> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">z</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.sec\">Submonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.1</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1223-L1227","name":"AddSubmonoid.LocalizationMap.map_add_left","line":1223,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map_add_left","doc":"Given Localization maps `f : M →+ N, k : P →+ Q` for Submonoids `S, T` respectively if an\n`AddCommMonoid` homomorphism `g : M →+ P` induces a `f.map hy k : N →+ Q`, then for all `z : N`,\nwe have `k (g y) + f.map hy k z = k (g x)` where `x : M, y ∈ S` are such that\n`z + f y = f x`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map_add_left\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">map_add_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.2</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map\">AddSubmonoid.LocalizationMap.map</a> <span class=\"fn\">f</span> <span class=\"fn\">hy</span> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">z</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.1</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1214-L1215","name":"Submonoid.LocalizationMap.map_mul_right","line":1214,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map_mul_right","doc":"Given Localization maps `f : M →* N, k : P →* Q` for Submonoids `S, T` respectively, if a\n`CommMonoid` homomorphism `g : M →* P` induces a `f.map hy k : N →* Q`, then for all `z : N`,\nwe have `f.map hy k z * k (g y) = k (g x)` where `x : M, y ∈ S` are such that\n`z * f y = f x`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map_mul_right\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">map_mul_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map\">Submonoid.LocalizationMap.map</a> <span class=\"fn\">f</span> <span class=\"fn\">hy</span> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a>     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.sec\">Submonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.2</span></span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.sec\">Submonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.1</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1209-L1213","name":"AddSubmonoid.LocalizationMap.map_add_right","line":1209,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map_add_right","doc":"Given Localization maps `f : M →+ N, k : P →+ Q` for Submonoids `S, T` respectively, if an\n`AddCommMonoid` homomorphism `g : M →+ P` induces a `f.map hy k : N →+ Q`, then for all `z : N`,\nwe have `f.map hy k z + k (g y) = k (g x)` where `x : M, y ∈ S` are such that\n`z + f y = f x`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map_add_right\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">map_add_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map\">AddSubmonoid.LocalizationMap.map</a> <span class=\"fn\">f</span> <span class=\"fn\">hy</span> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.2</span></span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.1</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1200-L1201","name":"Submonoid.LocalizationMap.map_spec","line":1200,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map_spec","doc":"Given Localization maps `f : M →* N, k : P →* Q` for Submonoids `S, T` respectively, if a\n`CommMonoid` homomorphism `g : M →* P` induces a `f.map hy k : N →* Q`, then for all `z : N`,\n`u : Q`, we have `f.map hy k z = u ↔ k (g x) = k (g y) * u` where `x : M, y ∈ S` are such that\n`z * f y = f x`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map_spec\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">map_spec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(u : <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map\">Submonoid.LocalizationMap.map</a> <span class=\"fn\">f</span> <span class=\"fn\">hy</span> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">u</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.sec\">Submonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.sec\">Submonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.2</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">u</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1195-L1199","name":"AddSubmonoid.LocalizationMap.map_spec","line":1195,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map_spec","doc":"Given Localization maps `f : M →+ N, k : P →+ Q` for Submonoids `S, T` respectively, if an\n`AddCommMonoid` homomorphism `g : M →+ P` induces a `f.map hy k : N →+ Q`, then for all `z : N`,\n`u : Q`, we have `f.map hy k z = u ↔ k (g x) = k (g y) + u` where `x : M, y ∈ S` are such that\n`z + f y = f x`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map_spec\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">map_spec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(u : <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map\">AddSubmonoid.LocalizationMap.map</a> <span class=\"fn\">f</span> <span class=\"fn\">hy</span> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">u</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.2</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">u</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1183-L1187","name":"Submonoid.LocalizationMap.map_mk'","line":1183,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map_mk'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map_mk'\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">map_mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map\">Submonoid.LocalizationMap.map</a> <span class=\"fn\">f</span> <span class=\"fn\">hy</span> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span>)</span> }</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1182-L1182","name":"AddSubmonoid.LocalizationMap.map_mk'","line":1182,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map_mk'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map_mk'\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">map_mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map\">AddSubmonoid.LocalizationMap.map</a> <span class=\"fn\">f</span> <span class=\"fn\">hy</span> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span>)</span> }</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1177-L1178","name":"Submonoid.LocalizationMap.map_comp","line":1177,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map_comp\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">map_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.comp\">MonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map\">Submonoid.LocalizationMap.map</a> <span class=\"fn\">f</span> <span class=\"fn\">hy</span> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.comp\">MonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1176-L1176","name":"AddSubmonoid.LocalizationMap.map_comp","line":1176,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map_comp\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">map_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map\">AddSubmonoid.LocalizationMap.map</a> <span class=\"fn\">f</span> <span class=\"fn\">hy</span> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1171-L1172","name":"Submonoid.LocalizationMap.map_eq","line":1171,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map_eq\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">map_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map\">Submonoid.LocalizationMap.map</a> <span class=\"fn\">f</span> <span class=\"fn\">hy</span> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1170-L1170","name":"AddSubmonoid.LocalizationMap.map_eq","line":1170,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map_eq\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">map_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map\">AddSubmonoid.LocalizationMap.map</a> <span class=\"fn\">f</span> <span class=\"fn\">hy</span> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1163-L1164","name":"Submonoid.LocalizationMap.map","line":1163,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map","doc":"Given a `CommMonoid` homomorphism `g : M →* P` where for Submonoids `S ⊆ M, T ⊆ P` we have\n`g(S) ⊆ T`, the induced Monoid homomorphism from the Localization of `M` at `S` to the\nLocalization of `P` at `T`: if `f : M →* N` and `k : P →* Q` are Localization maps for `S` and\n`T` respectively, we send `z : N` to `k (g x) * (k (g y))⁻¹`, where `(x, y) : M × S` are such\nthat `z = f x * (f y)⁻¹`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">Q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1157-L1162","name":"AddSubmonoid.LocalizationMap.map","line":1157,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map","doc":"Given an `AddCommMonoid` homomorphism `g : M →+ P` where for Submonoids `S ⊆ M, T ⊆ P` we have\n`g(S) ⊆ T`, the induced AddMonoid homomorphism from the Localization of `M` at `S` to the\nLocalization of `P` at `T`: if `f : M →+ N` and `k : P →+ Q` are Localization maps for `S` and\n`T` respectively, we send `z : N` to `k (g x) - k (g y)`, where `(x, y) : M × S` are such\nthat `z = f x - f y`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">Q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1157-L1162","name":"AddSubmonoid.LocalizationMap.map.proof_1","line":1157,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map.proof_1\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">map</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span>)</span> }</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1132-L1145","name":"Submonoid.LocalizationMap.lift_injective_iff","line":1132,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift_injective_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift_injective_iff\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift_injective_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift\">Submonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">hg</span></span>)</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ (<span class=\"fn\">x </span>y : <span class=\"fn\">M</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">y</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1131-L1131","name":"AddSubmonoid.LocalizationMap.lift_injective_iff","line":1131,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift_injective_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift_injective_iff\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift_injective_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift\">AddSubmonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">hg</span></span>)</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ (<span class=\"fn\">x </span>y : <span class=\"fn\">M</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">y</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1115-L1127","name":"Submonoid.LocalizationMap.lift_surjective_iff","line":1115,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift_surjective_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift_surjective_iff\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift_surjective_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift\">Submonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">hg</span></span>)</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\">P</span>), <span class=\"fn\">∃ (x : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1114-L1114","name":"AddSubmonoid.LocalizationMap.lift_surjective_iff","line":1114,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift_surjective_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift_surjective_iff\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift_surjective_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift\">AddSubmonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">hg</span></span>)</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\">P</span>), <span class=\"fn\">∃ (x : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1095-L1110","name":"Submonoid.LocalizationMap.lift_left_inverse","line":1095,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift_left_inverse","doc":"Given two Localization maps `f : M →* N, k : M →* P` for a Submonoid `S ⊆ M`, the hom\nfrom `P` to `N` induced by `f` is left inverse to the hom from `N` to `P` induced by `k`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift_left_inverse\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift_left_inverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift\">Submonoid.LocalizationMap.lift</a> <span class=\"fn\">k</span> <span class=\"fn\">(_ : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift\">Submonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">(_ : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>)</span> <span class=\"fn\">z</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1092-L1094","name":"AddSubmonoid.LocalizationMap.lift_left_inverse","line":1092,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift_left_inverse","doc":"Given two Localization maps `f : M →+ N, k : M →+ P` for a Submonoid `S ⊆ M`, the hom\nfrom `P` to `N` induced by `f` is left inverse to the hom from `N` to `P` induced by `k`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift_left_inverse\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift_left_inverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift\">AddSubmonoid.LocalizationMap.lift</a> <span class=\"fn\">k</span> <span class=\"fn\">(_ : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift\">AddSubmonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">(_ : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>)</span> <span class=\"fn\">z</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1085-L1086","name":"Submonoid.LocalizationMap.lift_id","line":1085,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift_id\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift\">Submonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">(_ : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1084-L1084","name":"AddSubmonoid.LocalizationMap.lift_id","line":1084,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift_id\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift\">AddSubmonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">(_ : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1076-L1080","name":"Submonoid.LocalizationMap.lift_unique","line":1076,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift_unique","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift_unique\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift_unique</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hj : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">j</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift\">Submonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">hg</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1075-L1075","name":"AddSubmonoid.LocalizationMap.lift_unique","line":1075,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift_unique","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift_unique\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift_unique</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hj : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">j</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift\">AddSubmonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">hg</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1068-L1071","name":"Submonoid.LocalizationMap.epic_of_localizationMap","line":1068,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.epic_of_localizationMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.epic_of_localizationMap\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">epic_of_localizationMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">M</span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.comp\">MonoidHom.comp</a> <span class=\"fn\">j</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.comp\">MonoidHom.comp</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">a</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1067-L1067","name":"AddSubmonoid.LocalizationMap.epic_of_localizationMap","line":1067,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.epic_of_localizationMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.epic_of_localizationMap\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">epic_of_localizationMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">M</span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">j</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">a</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1059-L1063","name":"Submonoid.LocalizationMap.lift_of_comp","line":1059,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift_of_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift_of_comp\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift_of_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift\">Submonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">(_ : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.comp\">MonoidHom.comp</a> <span class=\"fn\">j</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1058-L1058","name":"AddSubmonoid.LocalizationMap.lift_of_comp","line":1058,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift_of_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift_of_comp\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift_of_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift\">AddSubmonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span>\n    <span class=\"fn\">(_ : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">j</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1054-L1054","name":"Submonoid.LocalizationMap.lift_comp","line":1054,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift_comp\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.comp\">MonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift\">Submonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1053-L1053","name":"AddSubmonoid.LocalizationMap.lift_comp","line":1053,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift_comp\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift\">AddSubmonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1047-L1049","name":"Submonoid.LocalizationMap.lift_eq_iff","line":1047,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift_eq_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift_eq_iff\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift_eq_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift\">Submonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift\">Submonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">y</span>.1</span> <span class=\"fn\"><span class=\"fn\">y</span>.2</span></span>)</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.1</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">y</span>.2</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.1</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1046-L1046","name":"AddSubmonoid.LocalizationMap.lift_eq_iff","line":1046,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift_eq_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift_eq_iff\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift_eq_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift\">AddSubmonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift\">AddSubmonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">y</span>.1</span> <span class=\"fn\"><span class=\"fn\">y</span>.2</span></span>)</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">y</span>.2</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1041-L1042","name":"Submonoid.LocalizationMap.lift_eq","line":1041,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift_eq\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift\">Submonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1040-L1040","name":"AddSubmonoid.LocalizationMap.lift_eq","line":1040,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift_eq\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift\">AddSubmonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1035-L1036","name":"Submonoid.LocalizationMap.lift_mul_left","line":1035,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift_mul_left","doc":"Given a Localization map `f : M →* N` for a Submonoid `S ⊆ M`, if a `CommMonoid` map\n`g : M →* P` induces a map `f.lift hg : N →* P` then for all `z : N`, we have\n`g y * f.lift hg z = g x`, where `x : M, y ∈ S` are such that `z * f y = f x`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift_mul_left\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift_mul_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.sec\">Submonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.2</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift\">Submonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\">z</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.sec\">Submonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1031-L1034","name":"AddSubmonoid.LocalizationMap.lift_add_left","line":1031,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift_add_left","doc":"Given a Localization map `f : M →+ N` for a Submonoid `S ⊆ M`, if an `AddCommMonoid` map\n`g : M →+ P` induces a map `f.lift hg : N →+ P` then for all `z : N`, we have\n`g y + f.lift hg z = g x`, where `x : M, y ∈ S` are such that `z + f y = f x`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift_add_left\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift_add_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.2</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift\">AddSubmonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\">z</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1023-L1024","name":"Submonoid.LocalizationMap.lift_mul_right","line":1023,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift_mul_right","doc":"Given a Localization map `f : M →* N` for a Submonoid `S ⊆ M`, if a `CommMonoid` map\n`g : M →* P` induces a map `f.lift hg : N →* P` then for all `z : N`, we have\n`f.lift hg z * g y = g x`, where `x : M, y ∈ S` are such that `z * f y = f x`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift_mul_right\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift_mul_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift\">Submonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.sec\">Submonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.2</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.sec\">Submonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1019-L1022","name":"AddSubmonoid.LocalizationMap.lift_add_right","line":1019,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift_add_right","doc":"Given a Localization map `f : M →+ N` for a Submonoid `S ⊆ M`, if an `AddCommMonoid`\nmap `g : M →+ P` induces a map `f.lift hg : N →+ P` then for all `z : N`, we have\n`f.lift hg z + g y = g x`, where `x : M, y ∈ S` are such that `z + f y = f x`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift_add_right\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift_add_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift\">AddSubmonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.2</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1011-L1012","name":"Submonoid.LocalizationMap.lift_mk'_spec","line":1011,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift_mk'_spec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift_mk'_spec\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift_mk'_spec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift\">Submonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">v</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">v</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1010-L1010","name":"AddSubmonoid.LocalizationMap.lift_mk'_spec","line":1010,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift_mk'_spec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift_mk'_spec\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift_mk'_spec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift\">AddSubmonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">v</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">v</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1005-L1006","name":"Submonoid.LocalizationMap.lift_spec_mul","line":1005,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift_spec_mul","doc":"Given a Localization map `f : M →* N` for a Submonoid `S ⊆ M`, if a `CommMonoid` map\n`g : M →* P` induces a map `f.lift hg : N →* P` then for all `z : N, v w : P`, we have\n`f.lift hg z * w = v ↔ g x * w = g y * v`, where `x : M, y ∈ S` are such that\n`z * f y = f x`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift_spec_mul\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift_spec_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift\">Submonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">w</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">v</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.sec\">Submonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">w</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.sec\">Submonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.2</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">v</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L1000-L1004","name":"AddSubmonoid.LocalizationMap.lift_spec_add","line":1000,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift_spec_add","doc":"Given a Localization map `f : M →+ N` for a Submonoid `S ⊆ M`, if an `AddCommMonoid` map\n`g : M →+ P` induces a map `f.lift hg : N →+ P` then for all\n`z : N, v w : P`, we have `f.lift hg z + w = v ↔ g x + w = g y + v`, where `x : M, y ∈ S` are such\nthat `z + f y = f x`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift_spec_add\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift_spec_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift\">AddSubmonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">w</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">v</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">w</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.2</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">v</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L991-L992","name":"Submonoid.LocalizationMap.lift_spec","line":991,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift_spec","doc":"Given a Localization map `f : M →* N` for a Submonoid `S ⊆ M`, if a `CommMonoid` map\n`g : M →* P` induces a map `f.lift hg : N →* P` then for all `z : N, v : P`, we have\n`f.lift hg z = v ↔ g x = g y * v`, where `x : M, y ∈ S` are such that `z * f y = f x`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift_spec\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift_spec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift\">Submonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">v</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.sec\">Submonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.sec\">Submonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.2</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">v</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L986-L990","name":"AddSubmonoid.LocalizationMap.lift_spec","line":986,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift_spec","doc":"Given a Localization map `f : M →+ N` for a Submonoid `S ⊆ M`, if an\n`AddCommMonoid` map `g : M →+ P` induces a map `f.lift hg : N →+ P` then for all\n`z : N, v : P`, we have `f.lift hg z = v ↔ g x = g y + v`, where `x : M, y ∈ S` are such that\n`z + f y = f x`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift_spec\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift_spec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift\">AddSubmonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">v</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.2</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">v</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L976-L979","name":"Submonoid.LocalizationMap.lift_mk'","line":976,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift_mk'","doc":"Given a Localization map `f : M →* N` for a Submonoid `S ⊆ M` and a map of `CommMonoid`s\n`g : M →* P` such that `g y` is invertible for all `y : S`, the homomorphism induced from\n`N` to `P` maps `f x * (f y)⁻¹` to `g x * (g y)⁻¹` for all `x : M, y ∈ S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift_mk'\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift_mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift\">Submonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Hom.html#IsUnit.liftRight\">IsUnit.liftRight</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#MonoidHom.restrict\">MonoidHom.restrict</a> <span class=\"fn\">g</span> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\">y</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L972-L975","name":"AddSubmonoid.LocalizationMap.lift_mk'","line":972,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift_mk'","doc":"Given a Localization map `f : M →+ N` for a Submonoid `S ⊆ M` and a map of\n`AddCommMonoid`s `g : M →+ P` such that `g y` is invertible for all `y : S`, the homomorphism\ninduced from `N` to `P` maps `f x - f y` to `g x - g y` for all `x : M, y ∈ S`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift_mk'\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift_mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift\">AddSubmonoid.LocalizationMap.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Hom.html#IsAddUnit.liftRight\">IsAddUnit.liftRight</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddMonoidHom.restrict\">AddMonoidHom.restrict</a> <span class=\"fn\">g</span> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\">y</span></span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L957-L965","name":"Submonoid.LocalizationMap.lift","line":957,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift","doc":"Given a Localization map `f : M →* N` for a Submonoid `S ⊆ M` and a map of `CommMonoid`s\n`g : M →* P` such that `g y` is invertible for all `y : S`, the homomorphism induced from\n`N` to `P` sending `z : N` to `g x * (g y)⁻¹`, where `(x, y) : M × S` are such that\n`z = f x * (f y)⁻¹`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.lift\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L952-L956","name":"AddSubmonoid.LocalizationMap.lift.proof_2","line":952,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift.proof_2\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">z</span> : <span class=\"fn\">N</span>) =&gt;\n      <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>         <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Hom.html#IsAddUnit.liftRight\">IsAddUnit.liftRight</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddMonoidHom.restrict\">AddMonoidHom.restrict</a> <span class=\"fn\">g</span> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.2</span></span></span>)</span></span></span></span>)</span>\n    <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L952-L956","name":"AddSubmonoid.LocalizationMap.lift.proof_1","line":952,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift.proof_1\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L952-L956","name":"AddSubmonoid.LocalizationMap.lift.proof_3","line":952,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift.proof_3\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a>\n    <span class=\"fn\">{\n      <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">z</span> : <span class=\"fn\">N</span>) =&gt;\n        <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>           <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Hom.html#IsAddUnit.liftRight\">IsAddUnit.liftRight</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddMonoidHom.restrict\">AddMonoidHom.restrict</a> <span class=\"fn\">g</span> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.2</span></span></span>)</span></span></span></span>,\n      <span class=\"fn\">map_zero'</span> :=\n        <span class=\"fn\">(_ :\n          <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">z</span> : <span class=\"fn\">N</span>) =&gt;\n                <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>                   <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Hom.html#IsAddUnit.liftRight\">IsAddUnit.liftRight</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddMonoidHom.restrict\">AddMonoidHom.restrict</a> <span class=\"fn\">g</span> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.2</span></span></span>)</span></span></span></span>)</span>\n              <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>             <span class=\"fn\">0</span></span>)</span> }</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a>\n      <span class=\"fn\">{\n        <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">z</span> : <span class=\"fn\">N</span>) =&gt;\n          <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>             <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Hom.html#IsAddUnit.liftRight\">IsAddUnit.liftRight</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddMonoidHom.restrict\">AddMonoidHom.restrict</a> <span class=\"fn\">g</span> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.2</span></span></span>)</span></span></span></span>,\n        <span class=\"fn\">map_zero'</span> :=\n          <span class=\"fn\">(_ :\n            <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">z</span> : <span class=\"fn\">N</span>) =&gt;\n                  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>                     <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Hom.html#IsAddUnit.liftRight\">IsAddUnit.liftRight</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddMonoidHom.restrict\">AddMonoidHom.restrict</a> <span class=\"fn\">g</span> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.2</span></span></span>)</span></span></span></span>)</span>\n                <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>               <span class=\"fn\">0</span></span>)</span> }</span>\n      <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>     <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a>\n      <span class=\"fn\">{\n        <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">z</span> : <span class=\"fn\">N</span>) =&gt;\n          <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>             <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Hom.html#IsAddUnit.liftRight\">IsAddUnit.liftRight</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddMonoidHom.restrict\">AddMonoidHom.restrict</a> <span class=\"fn\">g</span> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.2</span></span></span>)</span></span></span></span>,\n        <span class=\"fn\">map_zero'</span> :=\n          <span class=\"fn\">(_ :\n            <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">z</span> : <span class=\"fn\">N</span>) =&gt;\n                  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>                     <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Hom.html#IsAddUnit.liftRight\">IsAddUnit.liftRight</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddMonoidHom.restrict\">AddMonoidHom.restrict</a> <span class=\"fn\">g</span> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">hg</span></span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.2</span></span></span>)</span></span></span></span>)</span>\n                <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>               <span class=\"fn\">0</span></span>)</span> }</span>\n      <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L952-L956","name":"AddSubmonoid.LocalizationMap.lift","line":952,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift","doc":"Given a localization map `f : M →+ N` for a submonoid `S ⊆ M` and a map of\n`AddCommMonoid`s `g : M →+ P` such that `g y` is invertible for all `y : S`, the homomorphism\ninduced from `N` to `P` sending `z : N` to `g x - g y`, where `(x, y) : M × S` are such that\n`z = f x - f y`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.lift\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L940-L942","name":"Submonoid.LocalizationMap.comp_eq_of_eq","line":940,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.comp_eq_of_eq","doc":"Given `CommMonoid`s `M, P`, Localization maps `f : M →* N, k : P →* Q` for Submonoids\n`S, T` respectively, and `g : M →* P` such that `g(S) ⊆ T`, `f x = f y` implies\n`k (g x) = k (g y)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.comp_eq_of_eq\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">comp_eq_of_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">y</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">y</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L936-L939","name":"AddSubmonoid.LocalizationMap.comp_eq_of_eq","line":936,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.comp_eq_of_eq","doc":"Given `AddCommMonoid`s `M, P`, Localization maps `f : M →+ N, k : P →+ Q` for Submonoids\n`S, T` respectively, and `g : M →+ P` such that `g(S) ⊆ T`, `f x = f y`\nimplies `k (g x) = k (g y)`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.comp_eq_of_eq\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">comp_eq_of_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">T</span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">y</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">y</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L925-L929","name":"Submonoid.LocalizationMap.eq_of_eq","line":925,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.eq_of_eq","doc":"Given a Localization map `f : M →* N` for a Submonoid `S ⊆ M` and a map of `CommMonoid`s\n`g : M →* P` such that `g(S) ⊆ Units P`, `f x = f y → g x = g y` for all `x y : M`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.eq_of_eq\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">eq_of_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">y</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L921-L924","name":"AddSubmonoid.LocalizationMap.eq_of_eq","line":921,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.eq_of_eq","doc":"Given a Localization map `f : M →+ N` for a Submonoid `S ⊆ M` and a map of\n`AddCommMonoid`s `g : M →+ P` such that `g(S) ⊆ AddUnits P`, `f x = f y → g x = g y`\nfor all `x y : M`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.eq_of_eq\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">eq_of_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">y</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L911-L913","name":"Submonoid.LocalizationMap.isUnit_comp","line":911,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.isUnit_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.isUnit_comp\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">isUnit_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.comp\">MonoidHom.comp</a> <span class=\"fn\">j</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L910-L910","name":"AddSubmonoid.LocalizationMap.isAddUnit_comp","line":910,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.isAddUnit_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.isAddUnit_comp\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">isAddUnit_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">j</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L905-L906","name":"Submonoid.LocalizationMap.mk'_mul_cancel_left","line":905,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_mul_cancel_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_mul_cancel_left\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_mul_cancel_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L904-L904","name":"AddSubmonoid.LocalizationMap.mk'_add_cancel_left","line":904,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_add_cancel_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_add_cancel_left\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_add_cancel_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L899-L900","name":"Submonoid.LocalizationMap.mk'_mul_cancel_right","line":899,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_mul_cancel_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_mul_cancel_right\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_mul_cancel_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L898-L898","name":"AddSubmonoid.LocalizationMap.mk'_add_cancel_right","line":898,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_add_cancel_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_add_cancel_right\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_add_cancel_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L893-L894","name":"Submonoid.LocalizationMap.mul_mk'_one_eq_mk'","line":893,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mul_mk'_one_eq_mk'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mul_mk'_one_eq_mk'\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mul_mk'_one_eq_mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L892-L892","name":"AddSubmonoid.LocalizationMap.add_mk'_zero_eq_mk'","line":892,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.add_mk'_zero_eq_mk'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.add_mk'_zero_eq_mk'\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">add_mk'_zero_eq_mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L887-L888","name":"Submonoid.LocalizationMap.mk'_mul_eq_mk'_of_mul","line":887,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_mul_eq_mk'_of_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_mul_eq_mk'_of_mul\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_mul_eq_mk'_of_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x₁</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x₂</span></span>)</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L886-L886","name":"AddSubmonoid.LocalizationMap.mk'_add_eq_mk'_of_add","line":886,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_add_eq_mk'_of_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_add_eq_mk'_of_add\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_add_eq_mk'_of_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x₁</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x₂</span></span>)</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L881-L882","name":"Submonoid.LocalizationMap.mul_mk'_eq_mk'_of_mul","line":881,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mul_mk'_eq_mk'_of_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mul_mk'_eq_mk'_of_mul\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mul_mk'_eq_mk'_of_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x₁</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x₂</span></span>)</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L880-L880","name":"AddSubmonoid.LocalizationMap.add_mk'_eq_mk'_of_add","line":880,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.add_mk'_eq_mk'_of_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.add_mk'_eq_mk'_of_add\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">add_mk'_eq_mk'_of_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x₂</span></span>)</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L876-L876","name":"Submonoid.LocalizationMap.mk'_self","line":876,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_self\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">x</span>, <span class=\"fn\">property</span> := <span class=\"fn\">H</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L875-L875","name":"AddSubmonoid.LocalizationMap.mk'_self","line":875,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_self\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">x</span>, <span class=\"fn\">property</span> := <span class=\"fn\">H</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L870-L871","name":"Submonoid.LocalizationMap.mk'_self'","line":870,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_self'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_self'\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_self'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">y</span></span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L869-L869","name":"AddSubmonoid.LocalizationMap.mk'_self'","line":869,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_self'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_self'\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_self'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">y</span></span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L864-L867","name":"Submonoid.LocalizationMap.mk'_eq_of_same","line":864,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_eq_of_same","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_eq_of_same\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_eq_of_same</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">b</span> <span class=\"fn\">d</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L863-L863","name":"AddSubmonoid.LocalizationMap.mk'_eq_of_same","line":863,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_eq_of_same","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_eq_of_same\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_eq_of_same</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">b</span> <span class=\"fn\">d</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L859-L861","name":"Submonoid.LocalizationMap.mk'_cancel","line":859,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_cancel\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">c</span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L858-L858","name":"AddSubmonoid.LocalizationMap.mk'_cancel","line":858,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_cancel\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">c</span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L852-L854","name":"Submonoid.LocalizationMap.mk'_eq_of_eq'","line":852,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_eq_of_eq'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_eq_of_eq'\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_eq_of_eq'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₁ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b₁ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₂ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b₂ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">a₂</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">b₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">b₁</span> <span class=\"fn\">b₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L851-L851","name":"AddSubmonoid.LocalizationMap.mk'_eq_of_eq'","line":851,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_eq_of_eq'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_eq_of_eq'\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_eq_of_eq'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₁ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b₁ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₂ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b₂ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">a₂</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">b₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">b₁</span> <span class=\"fn\">b₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L845-L847","name":"Submonoid.LocalizationMap.mk'_eq_of_eq","line":845,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_eq_of_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_eq_of_eq\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_eq_of_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₁ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b₁ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₂ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b₂ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">b₂</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a₁</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">b₁</span> <span class=\"fn\">b₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L844-L844","name":"AddSubmonoid.LocalizationMap.mk'_eq_of_eq","line":844,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_eq_of_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_eq_of_eq\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_eq_of_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₁ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b₁ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₂ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b₂ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">b₂</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a₁</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">b₁</span> <span class=\"fn\">b₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L838-L840","name":"Submonoid.LocalizationMap.exists_of_sec_mk'","line":838,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.exists_of_sec_mk'","doc":"Given a Localization map `f : M →* N` for a Submonoid `S ⊆ M`, for all `x₁ : M` and `y₁ ∈ S`,\nif `x₂ : M, y₂ ∈ S` are such that `f x₁ * (f y₁)⁻¹ * f y₂ = f x₂`, then there exists `c ∈ S`\nsuch that `x₁ * y₂ * c = x₂ * y₁ * c`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.exists_of_sec_mk'\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">exists_of_sec_mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.sec\">Submonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>)</span>.2</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.sec\">Submonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>)</span>.1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L834-L837","name":"AddSubmonoid.LocalizationMap.exists_of_sec_mk'","line":834,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.exists_of_sec_mk'","doc":"Given a Localization map `f : M →+ N` for a Submonoid `S ⊆ M`, for all `x₁ : M`\nand `y₁ ∈ S`, if `x₂ : M, y₂ ∈ S` are such that `(f x₁ - f y₁) + f y₂ = f x₂`, then there exists\n`c ∈ S` such that `x₁ + y₂ + c = x₂ + y₁ + c`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.exists_of_sec_mk'\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">exists_of_sec_mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>)</span>.2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>)</span>.1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L825-L827","name":"Submonoid.LocalizationMap.mk'_eq_iff_mk'_eq","line":825,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_eq_iff_mk'_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_eq_iff_mk'_eq\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_eq_iff_mk'_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">g</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">g</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L824-L824","name":"AddSubmonoid.LocalizationMap.mk'_eq_iff_mk'_eq","line":824,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_eq_iff_mk'_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_eq_iff_mk'_eq\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_eq_iff_mk'_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">g</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">g</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L819-L820","name":"Submonoid.LocalizationMap.eq_iff_eq","line":819,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.eq_iff_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.eq_iff_eq\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">eq_iff_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L818-L818","name":"AddSubmonoid.LocalizationMap.eq_iff_eq","line":818,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.eq_iff_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.eq_iff_eq\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">eq_iff_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L812-L814","name":"Submonoid.LocalizationMap.eq'","line":812,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.eq'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.eq'\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">eq'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₁ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b₁ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₂ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b₂ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">b₁</span> <span class=\"fn\">b₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.r\">Localization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a₁</span>, <span class=\"fn\">a₂</span>)</span> <span class=\"fn\">(<span class=\"fn\">b₁</span>, <span class=\"fn\">b₂</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L811-L811","name":"AddSubmonoid.LocalizationMap.eq'","line":811,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.eq'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.eq'\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">eq'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₁ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b₁ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₂ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b₂ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">b₁</span> <span class=\"fn\">b₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\">AddLocalization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a₁</span>, <span class=\"fn\">a₂</span>)</span> <span class=\"fn\">(<span class=\"fn\">b₁</span>, <span class=\"fn\">b₂</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L805-L807","name":"Submonoid.LocalizationMap.eq","line":805,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.eq\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₁ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b₁ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₂ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b₂ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">b₁</span> <span class=\"fn\">b₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∃ (c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">b₂</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a₁</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b₁</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L804-L804","name":"AddSubmonoid.LocalizationMap.eq","line":804,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.eq\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₁ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b₁ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₂ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b₂ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">b₁</span> <span class=\"fn\">b₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∃ (c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">b₂</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a₁</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b₁</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L798-L800","name":"Submonoid.LocalizationMap.mk'_eq_iff_eq'","line":798,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_eq_iff_eq'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_eq_iff_eq'\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_eq_iff_eq'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">y₂</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x₂</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">y₁</span></span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L797-L797","name":"AddSubmonoid.LocalizationMap.mk'_eq_iff_eq'","line":797,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_eq_iff_eq'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_eq_iff_eq'\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_eq_iff_eq'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">y₂</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x₂</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">y₁</span></span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L785-L793","name":"Submonoid.LocalizationMap.mk'_eq_iff_eq","line":785,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_eq_iff_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_eq_iff_eq\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_eq_iff_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">y₂</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x₁</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">y₁</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x₂</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L784-L784","name":"AddSubmonoid.LocalizationMap.mk'_eq_iff_eq","line":784,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_eq_iff_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_eq_iff_eq\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_eq_iff_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">y₂</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x₁</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">y₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x₂</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L779-L780","name":"Submonoid.LocalizationMap.mk'_eq_iff_eq_mul","line":779,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_eq_iff_eq_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_eq_iff_eq_mul\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_eq_iff_eq_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L778-L778","name":"AddSubmonoid.LocalizationMap.mk'_eq_iff_eq_add","line":778,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_eq_iff_eq_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_eq_iff_eq_add\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_eq_iff_eq_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L773-L774","name":"Submonoid.LocalizationMap.eq_mk'_iff_mul_eq","line":773,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.eq_mk'_iff_mul_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.eq_mk'_iff_mul_eq\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">eq_mk'_iff_mul_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L772-L772","name":"AddSubmonoid.LocalizationMap.eq_mk'_iff_add_eq","line":772,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.eq_mk'_iff_add_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.eq_mk'_iff_add_eq\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">eq_mk'_iff_add_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L768-L768","name":"Submonoid.LocalizationMap.mk'_spec'","line":768,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_spec'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_spec'\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_spec'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L767-L767","name":"AddSubmonoid.LocalizationMap.mk'_spec'","line":767,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_spec'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_spec'\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_spec'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L762-L763","name":"Submonoid.LocalizationMap.mk'_spec","line":762,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_spec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_spec\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_spec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L761-L761","name":"AddSubmonoid.LocalizationMap.mk'_spec","line":761,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_spec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_spec\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_spec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L756-L757","name":"Submonoid.LocalizationMap.mk'_surjective","line":756,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_surjective\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (x : <span class=\"fn\">M</span>) (y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L755-L755","name":"AddSubmonoid.LocalizationMap.mk'_surjective","line":755,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_surjective\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (x : <span class=\"fn\">M</span>) (y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L750-L751","name":"Submonoid.LocalizationMap.mk'_sec","line":750,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_sec","doc":"Given a localization map `f : M →* N` for a submonoid `S ⊆ M`, for all `z : N` we have that if\n`x : M, y ∈ S` are such that `z * f y = f x`, then `f x * (f y)⁻¹ = z`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_sec\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_sec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.sec\">Submonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.1</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.sec\">Submonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L747-L749","name":"AddSubmonoid.LocalizationMap.mk'_sec","line":747,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_sec","doc":"Given a localization map `f : M →+ N` for a Submonoid `S ⊆ M`, for all `z : N`\nwe have that if `x : M, y ∈ S` are such that `z + f y = f x`, then `f x - f y = z`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_sec\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_sec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.1</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L739-L741","name":"Submonoid.LocalizationMap.mk'_one","line":739,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_one\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L738-L738","name":"AddSubmonoid.LocalizationMap.mk'_zero","line":738,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_zero\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L728-L734","name":"Submonoid.LocalizationMap.mk'_mul","line":728,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'_mul\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₁ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₂ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x₂</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\">Submonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L727-L727","name":"AddSubmonoid.LocalizationMap.mk'_add","line":727,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'_add\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₁ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₂ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x₂</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\">AddSubmonoid.LocalizationMap.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L722-L723","name":"Submonoid.LocalizationMap.mk'","line":722,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'","doc":"Given a localization map `f : M →* N`, the surjection sending `(x, y) : M × S` to\n`f x * (f y)⁻¹`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk'\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">N</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L719-L721","name":"AddSubmonoid.LocalizationMap.mk'.proof_1","line":719,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'.proof_1\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L719-L721","name":"AddSubmonoid.LocalizationMap.mk'","line":719,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'","doc":"Given a localization map `f : M →+ N`, the surjection sending `(x, y) : M × S`\nto `f x - f y`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk'\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">N</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L711-L713","name":"Submonoid.LocalizationMap.map_left_cancel","line":711,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map_left_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map_left_cancel\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">map_left_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">c</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">c</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L710-L710","name":"AddSubmonoid.LocalizationMap.map_left_cancel","line":710,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map_left_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map_left_cancel\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">map_left_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">c</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">c</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L701-L706","name":"Submonoid.LocalizationMap.map_right_cancel","line":701,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map_right_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map_right_cancel\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">map_right_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L700-L700","name":"AddSubmonoid.LocalizationMap.map_right_cancel","line":700,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map_right_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map_right_cancel\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">map_right_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L691-L694","name":"Submonoid.LocalizationMap.inv_unique","line":691,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.inv_unique","doc":"Given a MonoidHom `f : M →* N` and Submonoid `S ⊆ M` such that `f(S) ⊆ Nˣ`, for all\n`y ∈ S`, `(f y)⁻¹` is unique. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.inv_unique\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">inv_unique</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Hom.html#IsUnit.liftRight\">IsUnit.liftRight</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#MonoidHom.restrict\">MonoidHom.restrict</a> <span class=\"fn\">f</span> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">y</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L688-L690","name":"AddSubmonoid.LocalizationMap.neg_unique","line":688,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.neg_unique","doc":"Given an AddMonoidHom `f : M →+ N` and Submonoid `S ⊆ M` such that\n`f(S) ⊆ AddUnits N`, for all `y ∈ S`, `- (f y)` is unique."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.neg_unique\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">neg_unique</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Hom.html#IsAddUnit.liftRight\">IsAddUnit.liftRight</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddMonoidHom.restrict\">AddMonoidHom.restrict</a> <span class=\"fn\">f</span> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">y</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L678-L682","name":"Submonoid.LocalizationMap.inv_inj","line":678,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.inv_inj","doc":"Given a MonoidHom `f : M →* N` and Submonoid `S ⊆ M` such that `f(S) ⊆ Nˣ`, for all\n`y, z ∈ S`, we have `(f y)⁻¹ = (f z)⁻¹ → f y = f z`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.inv_inj\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">inv_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Hom.html#IsUnit.liftRight\">IsUnit.liftRight</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#MonoidHom.restrict\">MonoidHom.restrict</a> <span class=\"fn\">f</span> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">hf</span></span>)</span> <span class=\"fn\">y</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Hom.html#IsUnit.liftRight\">IsUnit.liftRight</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#MonoidHom.restrict\">MonoidHom.restrict</a> <span class=\"fn\">f</span> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">hf</span></span>)</span> <span class=\"fn\">z</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">z</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L675-L677","name":"AddSubmonoid.LocalizationMap.neg_inj","line":675,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.neg_inj","doc":"Given an AddMonoidHom `f : M →+ N` and Submonoid `S ⊆ M` such that\n`f(S) ⊆ AddUnits N`, for all `y, z ∈ S`, we have `- (f y) = - (f z) → f y = f z`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.neg_inj\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">neg_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Hom.html#IsAddUnit.liftRight\">IsAddUnit.liftRight</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddMonoidHom.restrict\">AddMonoidHom.restrict</a> <span class=\"fn\">f</span> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">hf</span></span>)</span> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Hom.html#IsAddUnit.liftRight\">IsAddUnit.liftRight</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddMonoidHom.restrict\">AddMonoidHom.restrict</a> <span class=\"fn\">f</span> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">hf</span></span>)</span> <span class=\"fn\">z</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">z</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L664-L669","name":"Submonoid.LocalizationMap.mul_inv","line":664,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mul_inv","doc":"Given a MonoidHom `f : M →* N` and Submonoid `S ⊆ M` such that\n`f(S) ⊆ Nˣ`, for all `x₁ x₂ : M` and `y₁, y₂ ∈ S`, we have\n`f x₁ * (f y₁)⁻¹ = f x₂ * (f y₂)⁻¹ ↔ f (x₁ * y₂) = f (x₂ * y₁)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mul_inv\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mul_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x₁</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Hom.html#IsUnit.liftRight\">IsUnit.liftRight</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#MonoidHom.restrict\">MonoidHom.restrict</a> <span class=\"fn\">f</span> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">y₁</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x₂</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Hom.html#IsUnit.liftRight\">IsUnit.liftRight</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#MonoidHom.restrict\">MonoidHom.restrict</a> <span class=\"fn\">f</span> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">y₂</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">y₂</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x₂</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">y₁</span></span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L660-L663","name":"AddSubmonoid.LocalizationMap.add_neg","line":660,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.add_neg","doc":"Given an AddMonoidHom `f : M →+ N` and Submonoid `S ⊆ M` such that\n`f(S) ⊆ AddUnits N`, for all `x₁ x₂ : M` and `y₁, y₂ ∈ S`, we have\n`f x₁ - f y₁ = f x₂ - f y₂ ↔ f (x₁ + y₂) = f (x₂ + y₁)`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.add_neg\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">add_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Hom.html#IsAddUnit.liftRight\">IsAddUnit.liftRight</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddMonoidHom.restrict\">AddMonoidHom.restrict</a> <span class=\"fn\">f</span> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">y₁</span></span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x₂</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Hom.html#IsAddUnit.liftRight\">IsAddUnit.liftRight</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddMonoidHom.restrict\">AddMonoidHom.restrict</a> <span class=\"fn\">f</span> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">y₂</span></span></span>)</span></span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">y₂</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x₂</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">y₁</span></span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L651-L653","name":"Submonoid.LocalizationMap.mul_inv_right","line":651,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mul_inv_right","doc":"Given a MonoidHom `f : M →* N` and Submonoid `S ⊆ M` such that `f(S) ⊆ Nˣ`, for all\n`w, z : N` and `y ∈ S`, we have `z = w * (f y)⁻¹ ↔ z * f y = w`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mul_inv_right\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mul_inv_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Hom.html#IsUnit.liftRight\">IsUnit.liftRight</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#MonoidHom.restrict\">MonoidHom.restrict</a> <span class=\"fn\">f</span> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">y</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">w</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L648-L650","name":"AddSubmonoid.LocalizationMap.add_neg_right","line":648,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.add_neg_right","doc":"Given an AddMonoidHom `f : M →+ N` and Submonoid `S ⊆ M` such that\n`f(S) ⊆ AddUnits N`, for all `w, z : N` and `y ∈ S`, we have `z = w - f y ↔ z + f y = w`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.add_neg_right\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">add_neg_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Hom.html#IsAddUnit.liftRight\">IsAddUnit.liftRight</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddMonoidHom.restrict\">AddMonoidHom.restrict</a> <span class=\"fn\">f</span> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">y</span></span></span>)</span></span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">w</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L639-L642","name":"Submonoid.LocalizationMap.mul_inv_left","line":639,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mul_inv_left","doc":"Given a MonoidHom `f : M →* N` and Submonoid `S ⊆ M` such that `f(S) ⊆ Nˣ`, for all\n`w, z : N` and `y ∈ S`, we have `w * (f y)⁻¹ = z ↔ w = f y * z`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mul_inv_left\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mul_inv_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Hom.html#IsUnit.liftRight\">IsUnit.liftRight</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#MonoidHom.restrict\">MonoidHom.restrict</a> <span class=\"fn\">f</span> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">y</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">z</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L636-L638","name":"AddSubmonoid.LocalizationMap.add_neg_left","line":636,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.add_neg_left","doc":"Given an AddMonoidHom `f : M →+ N` and Submonoid `S ⊆ M` such that\n`f(S) ⊆ AddUnits N`, for all `w, z : N` and `y ∈ S`, we have `w - f y = z ↔ w = f y + z`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.add_neg_left\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">add_neg_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Hom.html#IsAddUnit.liftRight\">IsAddUnit.liftRight</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#AddMonoidHom.restrict\">AddMonoidHom.restrict</a> <span class=\"fn\">f</span> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">y</span></span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">z</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L629-L630","name":"Submonoid.LocalizationMap.sec_spec'","line":629,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.sec_spec'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.sec_spec'\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">sec_spec'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.sec\">Submonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.sec\">Submonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.2</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">z</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L628-L628","name":"AddSubmonoid.LocalizationMap.sec_spec'","line":628,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec_spec'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec_spec'\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">sec_spec'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.2</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">z</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L623-L624","name":"Submonoid.LocalizationMap.sec_spec","line":623,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.sec_spec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.sec_spec\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">sec_spec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.sec\">Submonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.2</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.sec\">Submonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L622-L622","name":"AddSubmonoid.LocalizationMap.sec_spec","line":622,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec_spec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec_spec\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">sec_spec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.2</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\">AddSubmonoid.LocalizationMap.sec</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span>.1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L618-L618","name":"Submonoid.LocalizationMap.sec","line":618,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.sec","doc":"Given a localization map `f : M →* N`, a section function sending `z : N` to some\n`(x, y) : M × S` such that `f x * (f y)⁻¹ = z`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.sec\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">sec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L615-L617","name":"AddSubmonoid.LocalizationMap.sec","line":615,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec","doc":"Given a localization map `f : M →+ N`, a section function sending `z : N`\nto some `(x, y) : M × S` such that `f x - f y = z`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.sec\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">sec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L604-L609","name":"Submonoid.LocalizationMap.eq_iff_exists","line":604,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.eq_iff_exists","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.eq_iff_exists\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">eq_iff_exists</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L603-L603","name":"AddSubmonoid.LocalizationMap.eq_iff_exists.match_1","line":603,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.eq_iff_exists.match_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.eq_iff_exists.match_1\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">eq_iff_exists</span>.<span class=\"name\">match_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(motive : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ (c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span></span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x_1</span> : <span class=\"fn\">∃ (c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span></span></span>),\n  <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">c</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span></span>), <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">(_ : <span class=\"fn\">∃ (c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span></span></span>)</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L603-L603","name":"AddSubmonoid.LocalizationMap.eq_iff_exists","line":603,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.eq_iff_exists","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.eq_iff_exists\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">eq_iff_exists</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L593-L601","name":"Submonoid.LocalizationMap.surj₂","line":593,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.surj₂","doc":"Given a localization map `f : M →* N`, and `z w : N`, there exist `z' w' : M` and `d : S`\nsuch that `f z' / f d = z` and `f w' / f d = w`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.surj₂\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">surj₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (z' : <span class=\"fn\">M</span>) (w' : <span class=\"fn\">M</span>) (d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">d</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">z'</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">d</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">w'</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L590-L592","name":"AddSubmonoid.LocalizationMap.surj₂","line":590,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.surj₂","doc":"Given a localization map `f : M →+ N`, and `z w : N`, there exist `z' w' : M` and `d : S`\nsuch that `f z' - f d = z` and `f w' - f d = w`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.surj₂\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">surj₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (z' : <span class=\"fn\">M</span>) (w' : <span class=\"fn\">M</span>) (d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">d</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">z'</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">d</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">w'</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L590-L592","name":"AddSubmonoid.LocalizationMap.surj₂.match_1","line":590,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.surj₂.match_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.surj₂.match_1\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">surj₂</span>.<span class=\"name\">match_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(motive : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ (x : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span></span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">∃ (x : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span></span></span>),\n  <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>) (<span class=\"fn\">ha</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">a</span>.2</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\"><span class=\"fn\">a</span>.1</span></span></span>),\n      <span class=\"fn\"><span class=\"fn\">motive</span>\n        <span class=\"fn\">(_ :\n          <span class=\"fn\">∃ (x : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>),\n            <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span></span></span>)</span></span></span>)</span> →\n    <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L583-L584","name":"Submonoid.LocalizationMap.surj","line":583,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.surj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.surj\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">surj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (x : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L582-L582","name":"AddSubmonoid.LocalizationMap.surj","line":582,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.surj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.surj\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">surj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (x : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L577-L578","name":"Submonoid.LocalizationMap.map_units","line":577,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map_units","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map_units\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">map_units</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L576-L576","name":"AddSubmonoid.LocalizationMap.map_addUnits","line":576,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map_addUnits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map_addUnits\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">map_addUnits</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L571-L572","name":"Submonoid.LocalizationMap.toMap_injective","line":571,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap_injective\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">toMap_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">Submonoid.LocalizationMap.toMap</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L570-L570","name":"AddSubmonoid.LocalizationMap.toMap_injective","line":570,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap_injective\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">toMap_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">AddSubmonoid.LocalizationMap.toMap</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L565-L566","name":"Submonoid.LocalizationMap.ext_iff","line":565,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ext_iff\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">x</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L564-L564","name":"AddSubmonoid.LocalizationMap.ext_iff","line":564,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ext_iff\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">x</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L556-L560","name":"Submonoid.LocalizationMap.ext","line":556,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.ext\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\">Submonoid.LocalizationMap.toMap</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L555-L555","name":"AddSubmonoid.LocalizationMap.ext","line":555,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.ext\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\">AddSubmonoid.LocalizationMap.toMap</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L551-L551","name":"Submonoid.LocalizationMap.toMap","line":551,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap","doc":"Short for `toMonoidHom`; used to apply a localization map as a function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMap\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">toMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L550-L550","name":"AddSubmonoid.LocalizationMap.toMap","line":550,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap","doc":"Short for `toAddMonoidHom`; used to apply a localization map as a function."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toMap\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">toMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L533-L539","name":"MonoidHom.toLocalizationMap","line":533,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#MonoidHom.toLocalizationMap","doc":"Makes a localization map from a `CommMonoid` hom satisfying the characteristic predicate. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#MonoidHom.toLocalizationMap\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">toLocalizationMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H1 : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H2 : <span class=\"fn\">∀ (<span class=\"fn\">z</span> : <span class=\"fn\">N</span>), <span class=\"fn\">∃ (x : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H3 : <span class=\"fn\">∀ (<span class=\"fn\">x </span>y : <span class=\"fn\">M</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span></span> → <span class=\"fn\">∃ (c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L531-L532","name":"AddMonoidHom.toLocalizationMap","line":531,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddMonoidHom.toLocalizationMap","doc":"Makes a localization map from an `AddCommMonoid` hom satisfying the characteristic predicate."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddMonoidHom.toLocalizationMap\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">toLocalizationMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H1 : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H2 : <span class=\"fn\">∀ (<span class=\"fn\">z</span> : <span class=\"fn\">N</span>), <span class=\"fn\">∃ (x : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H3 : <span class=\"fn\">∀ (<span class=\"fn\">x </span>y : <span class=\"fn\">M</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span></span> → <span class=\"fn\">∃ (c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L531-L532","name":"AddMonoidHom.toLocalizationMap.proof_1","line":531,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddMonoidHom.toLocalizationMap.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddMonoidHom.toLocalizationMap.proof_1\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">toLocalizationMap</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L514-L520","name":"Localization.instMulDistribMulActionLocalizationToMonoidCommMonoid","line":514,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.instMulDistribMulActionLocalizationToMonoidCommMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.instMulDistribMulActionLocalizationToMonoidCommMonoid\"><span class=\"name\">Localization</span>.<span class=\"name\">instMulDistribMulActionLocalizationToMonoidCommMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#MulDistribMulAction\">MulDistribMulAction</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#MulDistribMulAction\">MulDistribMulAction</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L502-L512","name":"Localization.instMulActionLocalization","line":502,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.instMulActionLocalization","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.instMulActionLocalization\"><span class=\"name\">Localization</span>.<span class=\"name\">instMulActionLocalization</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction\">MulAction</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction\">MulAction</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L497-L500","name":"Localization.instIsCentralScalarLocalizationInstSMulLocalizationMulOpposite","line":497,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.instIsCentralScalarLocalizationInstSMulLocalizationMulOpposite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.instIsCentralScalarLocalizationInstSMulLocalizationMulOpposite\"><span class=\"name\">Localization</span>.<span class=\"name\">instIsCentralScalarLocalizationInstSMulLocalizationMulOpposite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\"><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite\">ᵐᵒᵖ</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\"><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite\">ᵐᵒᵖ</a></span> <span class=\"fn\">M</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsCentralScalar\">IsCentralScalar</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsCentralScalar\">IsCentralScalar</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L488-L494","name":"Localization.isScalarTower_right","line":488,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.isScalarTower_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.isScalarTower_right\"><span class=\"name\">Localization</span>.<span class=\"name\">isScalarTower_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L478-L485","name":"Localization.smulCommClass_right","line":478,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.smulCommClass_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.smulCommClass_right\"><span class=\"name\">Localization</span>.<span class=\"name\">smulCommClass_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L474-L476","name":"Localization.instIsScalarTowerLocalizationInstSMulLocalizationInstSMulLocalization","line":474,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.instIsScalarTowerLocalizationInstSMulLocalizationInstSMulLocalization","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.instIsScalarTowerLocalizationInstSMulLocalizationInstSMulLocalization\"><span class=\"name\">Localization</span>.<span class=\"name\">instIsScalarTowerLocalizationInstSMulLocalizationInstSMulLocalization</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₁ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₂ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R₁</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R₂</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R₁</span> <span class=\"fn\">M</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R₂</span> <span class=\"fn\">M</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R₁</span> <span class=\"fn\">R₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R₁</span> <span class=\"fn\">R₂</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R₁</span> <span class=\"fn\">R₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L470-L472","name":"Localization.instSMulCommClassLocalizationInstSMulLocalizationInstSMulLocalization","line":470,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.instSMulCommClassLocalizationInstSMulLocalizationInstSMulLocalization","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.instSMulCommClassLocalizationInstSMulLocalizationInstSMulLocalization\"><span class=\"name\">Localization</span>.<span class=\"name\">instSMulCommClassLocalizationInstSMulLocalizationInstSMulLocalization</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₁ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₂ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R₁</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R₂</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R₁</span> <span class=\"fn\">M</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R₂</span> <span class=\"fn\">M</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">R₁</span> <span class=\"fn\">R₂</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">R₁</span> <span class=\"fn\">R₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L463-L467","name":"Localization.smul_mk","line":463,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.smul_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.smul_mk\"><span class=\"name\">Localization</span>.<span class=\"name\">smul_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L460-L461","name":"Localization.instSMulLocalization","line":460,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.instSMulLocalization","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.instSMulLocalization\"><span class=\"name\">Localization</span>.<span class=\"name\">instSMulLocalization</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L442-L457","name":"Localization.smul","line":442,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.smul","doc":"Scalar multiplication in a monoid localization is defined as `c • ⟨a, b⟩ = ⟨c • a, b⟩`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.smul\"><span class=\"name\">Localization</span>.<span class=\"name\">smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L442-L457","name":"Localization.smul_def","line":442,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.smul_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.smul_def\"><span class=\"name\">Localization</span>.<span class=\"name\">smul_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.smul\">Localization.smul</a> <span class=\"fn\">c</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.liftOn\">Localization.liftOn</a> <span class=\"fn\">z</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">M</span>) (<span class=\"fn\">b</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">b</span></span></span>)</span>\n    <span class=\"fn\">(_ :\n      <span class=\"fn\">∀ {<span class=\"fn\">a </span>a' : <span class=\"fn\">M</span>} {<span class=\"fn\">b </span>b' : <span class=\"fn\">↥<span class=\"fn\">S</span></span>},\n        <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.r\">Localization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a</span>, <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">a'</span>, <span class=\"fn\">b'</span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">a'</span></span>)</span> <span class=\"fn\">b'</span></span></span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L431-L434","name":"Localization.mk_self","line":431,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk_self\"><span class=\"name\">Localization</span>.<span class=\"name\">mk_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">a</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L430-L430","name":"AddLocalization.mk_self","line":430,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk_self\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">mk_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">a</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L425-L426","name":"Localization.r_of_eq","line":425,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.r_of_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.r_of_eq\"><span class=\"name\">Localization</span>.<span class=\"name\">r_of_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">y</span>.2</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">y</span>.1</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.r\">Localization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L424-L424","name":"AddLocalization.r_of_eq","line":424,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r_of_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r_of_eq\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">r_of_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">y</span>.2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">y</span>.1</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\">AddLocalization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L420-L420","name":"Localization.one_rel","line":420,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.one_rel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.one_rel\"><span class=\"name\">Localization</span>.<span class=\"name\">one_rel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.r\">Localization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">1</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">y</span></span>, <span class=\"fn\">y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L419-L419","name":"AddLocalization.zero_rel","line":419,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.zero_rel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.zero_rel\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">zero_rel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\">AddLocalization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">0</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">y</span></span>, <span class=\"fn\">y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L413-L415","name":"Localization.induction_on₃","line":413,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.induction_on₃","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.induction_on₃\"><span class=\"name\">Localization</span>.<span class=\"name\">induction_on₃</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ (<span class=\"fn\">x </span>y z : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\"><span class=\"fn\">y</span>.1</span> <span class=\"fn\"><span class=\"fn\">y</span>.2</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\"><span class=\"fn\">z</span>.1</span> <span class=\"fn\"><span class=\"fn\">z</span>.2</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L412-L412","name":"AddLocalization.induction_on₃","line":412,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.induction_on₃","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.induction_on₃\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">induction_on₃</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ (<span class=\"fn\">x </span>y z : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\"><span class=\"fn\">y</span>.1</span> <span class=\"fn\"><span class=\"fn\">y</span>.2</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\"><span class=\"fn\">z</span>.1</span> <span class=\"fn\"><span class=\"fn\">z</span>.2</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L406-L408","name":"Localization.induction_on₂","line":406,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.induction_on₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.induction_on₂\"><span class=\"name\">Localization</span>.<span class=\"name\">induction_on₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ (<span class=\"fn\">x </span>y : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\"><span class=\"fn\">y</span>.1</span> <span class=\"fn\"><span class=\"fn\">y</span>.2</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L405-L405","name":"AddLocalization.induction_on₂","line":405,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.induction_on₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.induction_on₂\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">induction_on₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ (<span class=\"fn\">x </span>y : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\"><span class=\"fn\">y</span>.1</span> <span class=\"fn\"><span class=\"fn\">y</span>.2</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L400-L401","name":"Localization.liftOn₂_mk","line":400,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.liftOn₂_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.liftOn₂_mk\"><span class=\"name\">Localization</span>.<span class=\"name\">liftOn₂_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./foundational_types.html\">Sort</a> u_4}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">S</span></span> → <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">S</span></span> → <span class=\"fn\">p</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ {<span class=\"fn\">a </span>a' : <span class=\"fn\">M</span>} {<span class=\"fn\">b </span>b' : <span class=\"fn\">↥<span class=\"fn\">S</span></span>} {<span class=\"fn\">c </span>c' : <span class=\"fn\">M</span>} {<span class=\"fn\">d </span>d' : <span class=\"fn\">↥<span class=\"fn\">S</span></span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.r\">Localization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a</span>, <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">a'</span>, <span class=\"fn\">b'</span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.r\">Localization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">c</span>, <span class=\"fn\">d</span>)</span> <span class=\"fn\">(<span class=\"fn\">c'</span>, <span class=\"fn\">d'</span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a'</span> <span class=\"fn\">b'</span> <span class=\"fn\">c'</span> <span class=\"fn\">d'</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.liftOn₂\">Localization.liftOn₂</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span>)</span> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L399-L399","name":"AddLocalization.liftOn₂_mk","line":399,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.liftOn₂_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.liftOn₂_mk\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">liftOn₂_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./foundational_types.html\">Sort</a> u_4}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">S</span></span> → <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">S</span></span> → <span class=\"fn\">p</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ {<span class=\"fn\">a </span>a' : <span class=\"fn\">M</span>} {<span class=\"fn\">b </span>b' : <span class=\"fn\">↥<span class=\"fn\">S</span></span>} {<span class=\"fn\">c </span>c' : <span class=\"fn\">M</span>} {<span class=\"fn\">d </span>d' : <span class=\"fn\">↥<span class=\"fn\">S</span></span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\">AddLocalization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a</span>, <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">a'</span>, <span class=\"fn\">b'</span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\">AddLocalization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">c</span>, <span class=\"fn\">d</span>)</span> <span class=\"fn\">(<span class=\"fn\">c'</span>, <span class=\"fn\">d'</span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a'</span> <span class=\"fn\">b'</span> <span class=\"fn\">c'</span> <span class=\"fn\">d'</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.liftOn₂\">AddLocalization.liftOn₂</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span>)</span> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L391-L395","name":"Localization.liftOn₂","line":391,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.liftOn₂","doc":"Non-dependent recursion principle for localizations: given elements `f x y : p`\nfor all `x` and `y`, such that `r S x x'` and `r S y y'` implies `f x y = f x' y'`,\nthen `f` is defined on the whole `Localization S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.liftOn₂\"><span class=\"name\">Localization</span>.<span class=\"name\">liftOn₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./foundational_types.html\">Sort</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">S</span></span> → <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">S</span></span> → <span class=\"fn\">p</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ {<span class=\"fn\">a </span>a' : <span class=\"fn\">M</span>} {<span class=\"fn\">b </span>b' : <span class=\"fn\">↥<span class=\"fn\">S</span></span>} {<span class=\"fn\">c </span>c' : <span class=\"fn\">M</span>} {<span class=\"fn\">d </span>d' : <span class=\"fn\">↥<span class=\"fn\">S</span></span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.r\">Localization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a</span>, <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">a'</span>, <span class=\"fn\">b'</span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.r\">Localization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">c</span>, <span class=\"fn\">d</span>)</span> <span class=\"fn\">(<span class=\"fn\">c'</span>, <span class=\"fn\">d'</span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a'</span> <span class=\"fn\">b'</span> <span class=\"fn\">c'</span> <span class=\"fn\">d'</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">p</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L387-L390","name":"AddLocalization.liftOn₂","line":387,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.liftOn₂","doc":"Non-dependent recursion principle for localizations: given elements `f x y : p`\nfor all `x` and `y`, such that `r S x x'` and `r S y y'` implies `f x y = f x' y'`,\nthen `f` is defined on the whole `Localization S`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.liftOn₂\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">liftOn₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./foundational_types.html\">Sort</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">S</span></span> → <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">S</span></span> → <span class=\"fn\">p</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ {<span class=\"fn\">a </span>a' : <span class=\"fn\">M</span>} {<span class=\"fn\">b </span>b' : <span class=\"fn\">↥<span class=\"fn\">S</span></span>} {<span class=\"fn\">c </span>c' : <span class=\"fn\">M</span>} {<span class=\"fn\">d </span>d' : <span class=\"fn\">↥<span class=\"fn\">S</span></span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\">AddLocalization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a</span>, <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">a'</span>, <span class=\"fn\">b'</span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\">AddLocalization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">c</span>, <span class=\"fn\">d</span>)</span> <span class=\"fn\">(<span class=\"fn\">c'</span>, <span class=\"fn\">d'</span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a'</span> <span class=\"fn\">b'</span> <span class=\"fn\">c'</span> <span class=\"fn\">d'</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">p</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L387-L390","name":"AddLocalization.liftOn₂.proof_2","line":387,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.liftOn₂.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.liftOn₂.proof_2\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">liftOn₂</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./foundational_types.html\">Sort</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">S</span></span> → <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">S</span></span> → <span class=\"fn\">p</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ {<span class=\"fn\">a </span>a' : <span class=\"fn\">M</span>} {<span class=\"fn\">b </span>b' : <span class=\"fn\">↥<span class=\"fn\">S</span></span>} {<span class=\"fn\">c </span>c' : <span class=\"fn\">M</span>} {<span class=\"fn\">d </span>d' : <span class=\"fn\">↥<span class=\"fn\">S</span></span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\">AddLocalization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a</span>, <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">a'</span>, <span class=\"fn\">b'</span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\">AddLocalization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">c</span>, <span class=\"fn\">d</span>)</span> <span class=\"fn\">(<span class=\"fn\">c'</span>, <span class=\"fn\">d'</span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a'</span> <span class=\"fn\">b'</span> <span class=\"fn\">c'</span> <span class=\"fn\">d'</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">a </span>c : <span class=\"fn\">M</span>} {<span class=\"fn\">b </span>d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\">AddLocalization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a</span>, <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">c</span>, <span class=\"fn\">d</span>)</span></span> →\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">M</span>) (<span class=\"fn\">b</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>) =&gt;\n          <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.liftOn\">AddLocalization.liftOn</a> <span class=\"fn\">y</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span>\n            <span class=\"fn\">(_ : <span class=\"fn\">∀ {<span class=\"fn\">a_1 </span>c : <span class=\"fn\">M</span>} {<span class=\"fn\">b_1 </span>d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\">AddLocalization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a_1</span>, <span class=\"fn\">b_1</span>)</span> <span class=\"fn\">(<span class=\"fn\">c</span>, <span class=\"fn\">d</span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">a_1</span> <span class=\"fn\">b_1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></span></span>)</span></span></span>)</span>\n        <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">M</span>) (<span class=\"fn\">b</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>) =&gt;\n          <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.liftOn\">AddLocalization.liftOn</a> <span class=\"fn\">y</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span>\n            <span class=\"fn\">(_ : <span class=\"fn\">∀ {<span class=\"fn\">a_1 </span>c : <span class=\"fn\">M</span>} {<span class=\"fn\">b_1 </span>d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\">AddLocalization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a_1</span>, <span class=\"fn\">b_1</span>)</span> <span class=\"fn\">(<span class=\"fn\">c</span>, <span class=\"fn\">d</span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">a_1</span> <span class=\"fn\">b_1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></span></span>)</span></span></span>)</span>\n        <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L387-L390","name":"AddLocalization.liftOn₂.proof_1","line":387,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.liftOn₂.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.liftOn₂.proof_1\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">liftOn₂</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./foundational_types.html\">Sort</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">S</span></span> → <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">S</span></span> → <span class=\"fn\">p</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ {<span class=\"fn\">a </span>a' : <span class=\"fn\">M</span>} {<span class=\"fn\">b </span>b' : <span class=\"fn\">↥<span class=\"fn\">S</span></span>} {<span class=\"fn\">c </span>c' : <span class=\"fn\">M</span>} {<span class=\"fn\">d </span>d' : <span class=\"fn\">↥<span class=\"fn\">S</span></span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\">AddLocalization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a</span>, <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">a'</span>, <span class=\"fn\">b'</span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\">AddLocalization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">c</span>, <span class=\"fn\">d</span>)</span> <span class=\"fn\">(<span class=\"fn\">c'</span>, <span class=\"fn\">d'</span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a'</span> <span class=\"fn\">b'</span> <span class=\"fn\">c'</span> <span class=\"fn\">d'</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">a_1 </span>c : <span class=\"fn\">M</span>} {<span class=\"fn\">b_1 </span>d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\">AddLocalization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a_1</span>, <span class=\"fn\">b_1</span>)</span> <span class=\"fn\">(<span class=\"fn\">c</span>, <span class=\"fn\">d</span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">a_1</span> <span class=\"fn\">b_1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L387-L390","name":"AddLocalization.liftOn₂.match_1","line":387,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.liftOn₂.match_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.liftOn₂.match_1\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">liftOn₂</span>.<span class=\"name\">match_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(motive : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">fst</span> : <span class=\"fn\">M</span>) (<span class=\"fn\">snd</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">(<span class=\"fn\">fst</span>, <span class=\"fn\">snd</span>)</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L377-L378","name":"Localization.induction_on","line":377,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.induction_on","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.induction_on\"><span class=\"name\">Localization</span>.<span class=\"name\">induction_on</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\"><span class=\"fn\">y</span>.1</span> <span class=\"fn\"><span class=\"fn\">y</span>.2</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L376-L376","name":"AddLocalization.induction_on","line":376,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.induction_on","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.induction_on\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">induction_on</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\"><span class=\"fn\">y</span>.1</span> <span class=\"fn\"><span class=\"fn\">y</span>.2</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L371-L372","name":"Localization.ind","line":371,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.ind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.ind\"><span class=\"name\">Localization</span>.<span class=\"name\">ind</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\"><span class=\"fn\">y</span>.1</span> <span class=\"fn\"><span class=\"fn\">y</span>.2</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L370-L370","name":"AddLocalization.ind","line":370,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.ind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.ind\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">ind</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\"><span class=\"fn\">y</span>.1</span> <span class=\"fn\"><span class=\"fn\">y</span>.2</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L365-L366","name":"Localization.liftOn_mk","line":365,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.liftOn_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.liftOn_mk\"><span class=\"name\">Localization</span>.<span class=\"name\">liftOn_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./foundational_types.html\">Sort</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">S</span></span> → <span class=\"fn\">p</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ {<span class=\"fn\">a </span>c : <span class=\"fn\">M</span>} {<span class=\"fn\">b </span>d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.r\">Localization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a</span>, <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">c</span>, <span class=\"fn\">d</span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.liftOn\">Localization.liftOn</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L364-L364","name":"AddLocalization.liftOn_mk","line":364,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.liftOn_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.liftOn_mk\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">liftOn_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./foundational_types.html\">Sort</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">S</span></span> → <span class=\"fn\">p</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ {<span class=\"fn\">a </span>c : <span class=\"fn\">M</span>} {<span class=\"fn\">b </span>d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\">AddLocalization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a</span>, <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">c</span>, <span class=\"fn\">d</span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.liftOn\">AddLocalization.liftOn</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">f</span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L358-L360","name":"Localization.liftOn","line":358,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.liftOn","doc":"Non-dependent recursion principle for localizations: given elements `f a b : p`\nfor all `a b`, such that `r S (a, b) (c, d)` implies `f a b = f c d`,\nthen `f` is defined on the whole `Localization S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.liftOn\"><span class=\"name\">Localization</span>.<span class=\"name\">liftOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./foundational_types.html\">Sort</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">S</span></span> → <span class=\"fn\">p</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ {<span class=\"fn\">a </span>c : <span class=\"fn\">M</span>} {<span class=\"fn\">b </span>d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.r\">Localization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a</span>, <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">c</span>, <span class=\"fn\">d</span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">p</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L354-L357","name":"AddLocalization.liftOn","line":354,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.liftOn","doc":"Non-dependent recursion principle for `AddLocalization`s: given elements `f a b : p`\nfor all `a b`, such that `r S (a, b) (c, d)` implies `f a b = f c d`,\nthen `f` is defined on the whole `Localization S`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.liftOn\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">liftOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./foundational_types.html\">Sort</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">S</span></span> → <span class=\"fn\">p</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ {<span class=\"fn\">a </span>c : <span class=\"fn\">M</span>} {<span class=\"fn\">b </span>d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\">AddLocalization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a</span>, <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">c</span>, <span class=\"fn\">d</span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">p</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L354-L357","name":"AddLocalization.liftOn.proof_1","line":354,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.liftOn.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.liftOn.proof_1\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">liftOn</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./foundational_types.html\">Sort</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">S</span></span> → <span class=\"fn\">p</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ {<span class=\"fn\">a </span>c : <span class=\"fn\">M</span>} {<span class=\"fn\">b </span>d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\">AddLocalization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a</span>, <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">c</span>, <span class=\"fn\">d</span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">a </span>c : <span class=\"fn\">M</span>} {<span class=\"fn\">b </span>d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>} (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\">AddLocalization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a</span>, <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">c</span>, <span class=\"fn\">d</span>)</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span>)</span> ▸ <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L344-L345","name":"Localization.ndrec_mk","line":344,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.ndrec_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.ndrec_mk\"><span class=\"name\">Localization</span>.<span class=\"name\">ndrec_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span> → <a href=\"./foundational_types.html\">Sort</a> u</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">M</span>) → <span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>) → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ {<span class=\"fn\">a </span>c : <span class=\"fn\">M</span>} {<span class=\"fn\">b </span>d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>} (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.r\">Localization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a</span>, <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">c</span>, <span class=\"fn\">d</span>)</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span>)</span> ▸ <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.rec\">Localization.rec</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L343-L343","name":"AddLocalization.ndrec_mk","line":343,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.ndrec_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.ndrec_mk\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">ndrec_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span> → <a href=\"./foundational_types.html\">Sort</a> u</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">M</span>) → <span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>) → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ {<span class=\"fn\">a </span>c : <span class=\"fn\">M</span>} {<span class=\"fn\">b </span>d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>} (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\">AddLocalization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a</span>, <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">c</span>, <span class=\"fn\">d</span>)</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span>)</span> ▸ <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.rec\">AddLocalization.rec</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L337-L338","name":"Localization.mk_pow","line":337,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk_pow\"><span class=\"name\">Localization</span>.<span class=\"name\">mk_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L336-L336","name":"AddLocalization.mk_nsmul","line":336,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk_nsmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk_nsmul\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">mk_nsmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">b</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L331-L332","name":"Localization.mk_one","line":331,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk_one\"><span class=\"name\">Localization</span>.<span class=\"name\">mk_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">1</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L330-L330","name":"AddLocalization.mk_zero","line":330,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk_zero\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">mk_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L325-L326","name":"Localization.mk_mul","line":325,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk_mul\"><span class=\"name\">Localization</span>.<span class=\"name\">mk_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">d</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L324-L324","name":"AddLocalization.mk_add","line":324,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk_add\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">mk_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">d</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L316-L320","name":"Localization.recOnSubsingleton₂","line":316,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.recOnSubsingleton₂","doc":"Copy of `Quotient.recOnSubsingleton₂` for `Localization` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.recOnSubsingleton₂\"><span class=\"name\">Localization</span>.<span class=\"name\">recOnSubsingleton₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span> → <a href=\"./foundational_types.html\">Sort</a> u</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\">∀ (<span class=\"fn\">a </span>c : <span class=\"fn\">M</span>) (<span class=\"fn\">b </span>d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span>)</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">(<span class=\"fn\">a </span>c : <span class=\"fn\">M</span>) → <span class=\"fn\">(<span class=\"fn\">b </span>d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>) → <span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L315-L315","name":"AddLocalization.recOnSubsingleton₂.proof_1","line":315,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.recOnSubsingleton₂.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.recOnSubsingleton₂.proof_1\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">recOnSubsingleton₂</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span> → <a href=\"./foundational_types.html\">Sort</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\">∀ (<span class=\"fn\">a </span>c : <span class=\"fn\">M</span>) (<span class=\"fn\">b </span>d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span>)</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">⟦<span class=\"fn\">t</span>⟧</span> <span class=\"fn\">⟦<span class=\"fn\">b</span>⟧</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L315-L315","name":"AddLocalization.recOnSubsingleton₂","line":315,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.recOnSubsingleton₂","doc":"Copy of `Quotient.recOnSubsingleton₂` for `AddLocalization`"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.recOnSubsingleton₂\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">recOnSubsingleton₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span> → <a href=\"./foundational_types.html\">Sort</a> u</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\">∀ (<span class=\"fn\">a </span>c : <span class=\"fn\">M</span>) (<span class=\"fn\">b </span>d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span>)</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">(<span class=\"fn\">a </span>c : <span class=\"fn\">M</span>) → <span class=\"fn\">(<span class=\"fn\">b </span>d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>) → <span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L307-L310","name":"Localization.rec","line":307,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.rec","doc":"Dependent recursion principle for `Localizations`: given elements `f a b : p (mk a b)`\nfor all `a b`, such that `r S (a, b) (c, d)` implies `f a b = f c d` (with the correct coercions),\nthen `f` is defined on the whole `Localization S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.rec\"><span class=\"name\">Localization</span>.<span class=\"name\">rec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span> → <a href=\"./foundational_types.html\">Sort</a> u</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">M</span>) → <span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>) → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ {<span class=\"fn\">a </span>c : <span class=\"fn\">M</span>} {<span class=\"fn\">b </span>d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>} (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.r\">Localization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a</span>, <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">c</span>, <span class=\"fn\">d</span>)</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span>)</span> ▸ <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L303-L306","name":"AddLocalization.rec.proof_2","line":303,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.rec.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.rec.proof_2\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">rec</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\"><span class=\"fn\">y</span>.1</span> <span class=\"fn\"><span class=\"fn\">y</span>.2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\"><span class=\"fn\">y</span>.1</span> <span class=\"fn\"><span class=\"fn\">y</span>.2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L303-L306","name":"AddLocalization.rec.proof_3","line":303,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.rec.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.rec.proof_3\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">rec</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span> → <a href=\"./foundational_types.html\">Sort</a> u_2</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">M</span>) → <span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>) → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ {<span class=\"fn\">a </span>c : <span class=\"fn\">M</span>} {<span class=\"fn\">b </span>d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>} (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\">AddLocalization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a</span>, <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">c</span>, <span class=\"fn\">d</span>)</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span>)</span> ▸ <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Core.html#Setoid.r\">Setoid.r</a> <span class=\"fn\">y</span> <span class=\"fn\">z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">Setoid.r</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">Setoid.r</span> <span class=\"fn\">z</span></span></span>)</span> ▸\n    <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\"><span class=\"fn\">y</span>.1</span> <span class=\"fn\"><span class=\"fn\">y</span>.2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\"><span class=\"fn\">y</span>.1</span> <span class=\"fn\"><span class=\"fn\">y</span>.2</span></span></span>)</span> ▸ <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">y</span>.1</span> <span class=\"fn\"><span class=\"fn\">y</span>.2</span></span></span></span>)</span> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\"><span class=\"fn\">y</span>.1</span> <span class=\"fn\"><span class=\"fn\">y</span>.2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\"><span class=\"fn\">y</span>.1</span> <span class=\"fn\"><span class=\"fn\">y</span>.2</span></span></span>)</span> ▸ <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">y</span>.1</span> <span class=\"fn\"><span class=\"fn\">y</span>.2</span></span></span></span>)</span> <span class=\"fn\">z</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L303-L306","name":"AddLocalization.rec.proof_1","line":303,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.rec.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.rec.proof_1\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">rec</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\">AddLocalization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a</span>, <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">c</span>, <span class=\"fn\">d</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L303-L306","name":"AddLocalization.rec","line":303,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.rec","doc":"Dependent recursion principle for `AddLocalizations`: given elements `f a b : p (mk a b)`\nfor all `a b`, such that `r S (a, b) (c, d)` implies `f a b = f c d` (with the correct coercions),\nthen `f` is defined on the whole `AddLocalization S`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.rec\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">rec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span> → <a href=\"./foundational_types.html\">Sort</a> u</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">M</span>) → <span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>) → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ {<span class=\"fn\">a </span>c : <span class=\"fn\">M</span>} {<span class=\"fn\">b </span>d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>} (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\">AddLocalization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a</span>, <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">c</span>, <span class=\"fn\">d</span>)</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span>)</span> ▸ <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L294-L294","name":"Localization.mk_eq_mk_iff","line":294,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk_eq_mk_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk_eq_mk_iff\"><span class=\"name\">Localization</span>.<span class=\"name\">mk_eq_mk_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\">Localization.mk</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.r\">Localization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a</span>, <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">c</span>, <span class=\"fn\">d</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L293-L293","name":"AddLocalization.mk_eq_mk_iff","line":293,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk_eq_mk_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk_eq_mk_iff\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">mk_eq_mk_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">↥<span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\">AddLocalization.mk</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\">AddLocalization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">a</span>, <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">c</span>, <span class=\"fn\">d</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L289-L289","name":"Localization.mk","line":289,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk","doc":"Given a `CommMonoid` `M` and submonoid `S`, `mk` sends `x : M`, `y ∈ S` to the equivalence\nclass of `(x, y)` in the localization of `M` at `S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mk\"><span class=\"name\">Localization</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L286-L288","name":"AddLocalization.mk","line":286,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk","doc":"Given an `AddCommMonoid` `M` and submonoid `S`, `mk` sends `x : M`, `y ∈ S` to\nthe equivalence class of `(x, y)` in the localization of `M` at `S`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.mk\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L265-L280","name":"Localization.commMonoid","line":265,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.commMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.commMonoid\"><span class=\"name\">Localization</span>.<span class=\"name\">commMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L264-L264","name":"AddLocalization.addCommMonoid.proof_1","line":264,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addCommMonoid.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addCommMonoid.proof_1\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">addCommMonoid</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.add\">AddLocalization.add</a> <span class=\"fn\">S</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.add\">AddLocalization.add</a> <span class=\"fn\">S</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.add\">AddLocalization.add</a> <span class=\"fn\">S</span> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.add\">AddLocalization.add</a> <span class=\"fn\">S</span> <span class=\"fn\">y</span> <span class=\"fn\">z</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L264-L264","name":"AddLocalization.addCommMonoid.proof_2","line":264,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addCommMonoid.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addCommMonoid.proof_2\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">addCommMonoid</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.add\">AddLocalization.add</a> <span class=\"fn\">S</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.zero\">AddLocalization.zero</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L264-L264","name":"AddLocalization.addCommMonoid.proof_5","line":264,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addCommMonoid.proof_5","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addCommMonoid.proof_5\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">addCommMonoid</span>.<span class=\"name\">proof_5</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.nsmul\">AddLocalization.nsmul</a> <span class=\"fn\">S</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Nat.succ\">Nat.succ</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.add\">AddLocalization.add</a> <span class=\"fn\">S</span> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.nsmul\">AddLocalization.nsmul</a> <span class=\"fn\">S</span> <span class=\"fn\">n</span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L264-L264","name":"AddLocalization.addCommMonoid.proof_6","line":264,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addCommMonoid.proof_6","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addCommMonoid.proof_6\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">addCommMonoid</span>.<span class=\"name\">proof_6</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.add\">AddLocalization.add</a> <span class=\"fn\">S</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.add\">AddLocalization.add</a> <span class=\"fn\">S</span> <span class=\"fn\">y</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L264-L264","name":"AddLocalization.addCommMonoid","line":264,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addCommMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addCommMonoid\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">addCommMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L264-L264","name":"AddLocalization.addCommMonoid.proof_3","line":264,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addCommMonoid.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addCommMonoid.proof_3\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">addCommMonoid</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.add\">AddLocalization.add</a> <span class=\"fn\">S</span> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.zero\">AddLocalization.zero</a> <span class=\"fn\">S</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L264-L264","name":"AddLocalization.addCommMonoid.proof_4","line":264,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addCommMonoid.proof_4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.addCommMonoid.proof_4\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">addCommMonoid</span>.<span class=\"name\">proof_4</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.nsmul\">AddLocalization.nsmul</a> <span class=\"fn\">S</span> <span class=\"fn\">0</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.zero\">AddLocalization.zero</a> <span class=\"fn\">S</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L255-L259","name":"AddLocalization.nsmul_def","line":255,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.nsmul_def","doc":"Multiplication with a natural in an `AddLocalization` is defined as\n`n • ⟨a, b⟩ = ⟨n • a, n • b⟩`.\n\nThis is a separate `irreducible` def to ensure the elaborator doesn't waste its time\ntrying to unify some huge recursive definition with itself, but unfolded one step less."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.nsmul_def\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">nsmul_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.nsmul\">AddLocalization.nsmul</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">AddMonoid.nsmul</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L255-L259","name":"AddLocalization.nsmul","line":255,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.nsmul","doc":"Multiplication with a natural in an `AddLocalization` is defined as\n`n • ⟨a, b⟩ = ⟨n • a, n • b⟩`.\n\nThis is a separate `irreducible` def to ensure the elaborator doesn't waste its time\ntrying to unify some huge recursive definition with itself, but unfolded one step less."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.nsmul\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">nsmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L250-L260","name":"Localization.npow","line":250,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.npow","doc":"Exponentiation in a `Localization` is defined as `⟨a, b⟩ ^ n = ⟨a ^ n, b ^ n⟩`.\n\nThis is a separate `irreducible` def to ensure the elaborator doesn't waste its time\ntrying to unify some huge recursive definition with itself, but unfolded one step less.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.npow\"><span class=\"name\">Localization</span>.<span class=\"name\">npow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L250-L260","name":"Localization.npow_def","line":250,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.npow_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.npow_def\"><span class=\"name\">Localization</span>.<span class=\"name\">npow_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.npow\">Localization.npow</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Monoid.npow</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L248-L248","name":"Localization.instOneLocalization","line":248,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.instOneLocalization","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.instOneLocalization\"><span class=\"name\">Localization</span>.<span class=\"name\">instOneLocalization</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#One\">One</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L247-L247","name":"AddLocalization.instZeroLocalization","line":247,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.instZeroLocalization","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.instZeroLocalization\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">instZeroLocalization</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L239-L242","name":"AddLocalization.zero_def","line":239,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.zero_def","doc":"The identity element of an `AddLocalization` is defined as `⟨0, 0⟩`.\n\nShould not be confused with the ring localization counterpart `Localization.zero`,\nwhich is defined as `⟨0, 1⟩`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.zero_def\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">zero_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.zero\">AddLocalization.zero</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Zero.zero</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L239-L242","name":"AddLocalization.zero","line":239,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.zero","doc":"The identity element of an `AddLocalization` is defined as `⟨0, 0⟩`.\n\nShould not be confused with the ring localization counterpart `Localization.zero`,\nwhich is defined as `⟨0, 1⟩`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.zero\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L238-L243","name":"Localization.one","line":238,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.one","doc":"The identity element of a `Localization` is defined as `⟨1, 1⟩`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.one\"><span class=\"name\">Localization</span>.<span class=\"name\">one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L238-L243","name":"Localization.one_def","line":238,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.one_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.one_def\"><span class=\"name\">Localization</span>.<span class=\"name\">one_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.one\">Localization.one</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">One.one</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L236-L236","name":"Localization.instMulLocalization","line":236,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.instMulLocalization","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.instMulLocalization\"><span class=\"name\">Localization</span>.<span class=\"name\">instMulLocalization</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L235-L235","name":"AddLocalization.instAddLocalization","line":235,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.instAddLocalization","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.instAddLocalization\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">instAddLocalization</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L227-L229","name":"AddLocalization.add","line":227,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.add","doc":"Addition in an `AddLocalization` is defined as `⟨a, b⟩ + ⟨c, d⟩ = ⟨a + c, b + d⟩`.\nShould not be confused with the ring localization counterpart `Localization.add`, which maps\n`⟨a, b⟩ + ⟨c, d⟩` to `⟨d * a + b * c, b * d⟩`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.add\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L227-L229","name":"AddLocalization.add_def","line":227,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.add_def","doc":"Addition in an `AddLocalization` is defined as `⟨a, b⟩ + ⟨c, d⟩ = ⟨a + c, b + d⟩`.\nShould not be confused with the ring localization counterpart `Localization.add`, which maps\n`⟨a, b⟩ + ⟨c, d⟩` to `⟨d * a + b * c, b * d⟩`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.add_def\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">add_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.add\">AddLocalization.add</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Add.add</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L226-L231","name":"Localization.mul","line":226,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mul","doc":"Multiplication in a `Localization` is defined as `⟨a, b⟩ * ⟨c, d⟩ = ⟨a * c, b * d⟩`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mul\"><span class=\"name\">Localization</span>.<span class=\"name\">mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L226-L231","name":"Localization.mul_def","line":226,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mul_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mul_def\"><span class=\"name\">Localization</span>.<span class=\"name\">mul_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.mul\">Localization.mul</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Mul.mul</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L222-L222","name":"Localization.inhabited","line":222,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.inhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.inhabited\"><span class=\"name\">Localization</span>.<span class=\"name\">inhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">S</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L221-L221","name":"AddLocalization.inhabited","line":221,"kind":"instance","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.inhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.inhabited\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">inhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\">AddLocalization</a> <span class=\"fn\">S</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L215-L215","name":"Localization","line":215,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization","doc":"The localization of a `CommMonoid` at one of its submonoids (as a quotient type). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\"><span class=\"name\">Localization</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L213-L214","name":"AddLocalization","line":213,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization","doc":"The localization of an `AddCommMonoid` at one of its submonoids (as a quotient type)."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization\"><span class=\"name\">AddLocalization</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L205-L206","name":"Localization.r_iff_exists","line":205,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.r_iff_exists","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.r_iff_exists\"><span class=\"name\">Localization</span>.<span class=\"name\">r_iff_exists</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.r\">Localization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">y</span>.2</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">y</span>.1</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L204-L204","name":"AddLocalization.r_iff_exists","line":204,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r_iff_exists","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r_iff_exists\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">r_iff_exists</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\">AddLocalization.r</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">y</span>.2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">y</span>.1</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L191-L198","name":"Localization.r_eq_r'","line":191,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.r_eq_r'","doc":"The congruence relation used to localize a `CommMonoid` at a submonoid can be expressed\nequivalently as an infimum (see `Localization.r`) or explicitly\n(see `Localization.r'`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.r_eq_r'\"><span class=\"name\">Localization</span>.<span class=\"name\">r_eq_r'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.r\">Localization.r</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.r'\">Localization.r'</a> <span class=\"fn\">S</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L187-L190","name":"AddLocalization.r_eq_r'.match_2","line":187,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r_eq_r'.match_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r_eq_r'.match_2\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">r_eq_r'</span>.<span class=\"name\">match_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(q : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(motive : <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r'\">AddLocalization.r'</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">p</span>, <span class=\"fn\">q</span>)</span> <span class=\"fn\">x</span></span> → <a href=\"./foundational_types.html\">Prop</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>) (<span class=\"fn\">x_1</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r'\">AddLocalization.r'</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">p</span>, <span class=\"fn\">q</span>)</span> <span class=\"fn\">x</span></span>),\n  <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>) (<span class=\"fn\">x_2</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r'\">AddLocalization.r'</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">p</span>, <span class=\"fn\">q</span>)</span> <span class=\"fn\">(<span class=\"fn\">x</span>, <span class=\"fn\">y</span>)</span></span>), <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">(<span class=\"fn\">x</span>, <span class=\"fn\">y</span>)</span> <span class=\"fn\">x_2</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">x</span> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L187-L190","name":"AddLocalization.r_eq_r'","line":187,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r_eq_r'","doc":"The additive congruence relation used to localize an `AddCommMonoid` at a submonoid can be\nexpressed equivalently as an infimum (see `AddLocalization.r`) or explicitly\n(see `AddLocalization.r'`)."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r_eq_r'\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">r_eq_r'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\">AddLocalization.r</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r'\">AddLocalization.r'</a> <span class=\"fn\">S</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L187-L190","name":"AddLocalization.r_eq_r'.match_3","line":187,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r_eq_r'.match_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r_eq_r'.match_3\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">r_eq_r'</span>.<span class=\"name\">match_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>) (<span class=\"fn\">motive</span> : <span class=\"fn\">(<span class=\"fn\">x_1</span> : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r'\">AddLocalization.r'</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">x_1</span> <span class=\"fn\">x</span></span> → <a href=\"./foundational_types.html\">Prop</a></span></span>) (<span class=\"fn\">x_1</span> : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>)\n  (<span class=\"fn\">x_2</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r'\">AddLocalization.r'</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">x_1</span> <span class=\"fn\">x</span></span>),\n  <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">p</span> : <span class=\"fn\">M</span>) (<span class=\"fn\">q</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>) (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r'\">AddLocalization.r'</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">p</span>, <span class=\"fn\">q</span>)</span> <span class=\"fn\">x</span></span>), <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">(<span class=\"fn\">p</span>, <span class=\"fn\">q</span>)</span> <span class=\"fn\">x</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">x_1</span> <span class=\"fn\">x_2</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L187-L190","name":"AddLocalization.r_eq_r'.match_1","line":187,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r_eq_r'.match_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r_eq_r'.match_1\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">r_eq_r'</span>.<span class=\"name\">match_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(q : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(motive : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r'\">AddLocalization.r'</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">p</span>, <span class=\"fn\">q</span>)</span> <span class=\"fn\">(<span class=\"fn\">x</span>, <span class=\"fn\">y</span>)</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x_1</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r'\">AddLocalization.r'</a> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">p</span>, <span class=\"fn\">q</span>)</span> <span class=\"fn\">(<span class=\"fn\">x</span>, <span class=\"fn\">y</span>)</span></span>),\n  <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">t</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>) (<span class=\"fn\">ht</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">x</span>, <span class=\"fn\">y</span>)</span>.2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">p</span>, <span class=\"fn\">q</span>)</span>.1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">p</span>, <span class=\"fn\">q</span>)</span>.2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">x</span>, <span class=\"fn\">y</span>)</span>.1</span></span>)</span></span></span>),\n      <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">(_ : <span class=\"fn\">∃ (c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">x</span>, <span class=\"fn\">y</span>)</span>.2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">p</span>, <span class=\"fn\">q</span>)</span>.1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">p</span>, <span class=\"fn\">q</span>)</span>.2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">x</span>, <span class=\"fn\">y</span>)</span>.1</span></span>)</span></span></span></span>)</span></span></span>)</span> →\n    <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L163-L180","name":"Localization.r'","line":163,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.r'","doc":"An alternate form of the congruence relation on `M × S`, `M` a `CommMonoid` and `S` a\nsubmonoid of `M`, whose quotient is the localization of `M` at `S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.r'\"><span class=\"name\">Localization</span>.<span class=\"name\">r'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Congruence.html#Con\">Con</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L160-L162","name":"AddLocalization.r'.proof_2","line":160,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r'.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r'.proof_2\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">r'</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Core.html#Setoid.r\">Setoid.r</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Core.html#Setoid.r\">Setoid.r</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span> → <span class=\"fn\"><a href=\"./Init/Core.html#Setoid.r\">Setoid.r</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">d</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L160-L162","name":"AddLocalization.r'.match_1","line":160,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r'.match_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r'.match_1\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">r'</span>.<span class=\"name\">match_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">x </span>y : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>} (<span class=\"fn\">motive</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ (c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">y</span>.2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">y</span>.1</span></span>)</span></span></span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span>)\n  (<span class=\"fn\">x_1</span> : <span class=\"fn\">∃ (c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">y</span>.2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">y</span>.1</span></span>)</span></span></span></span>),\n  <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">c</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>) (<span class=\"fn\">hc</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">y</span>.2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">y</span>.1</span></span>)</span></span></span>),\n      <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">(_ : <span class=\"fn\">∃ (c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">y</span>.2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">y</span>.1</span></span>)</span></span></span></span>)</span></span></span>)</span> →\n    <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L160-L162","name":"AddLocalization.r'.proof_1","line":160,"kind":"theorem","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r'.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r'.proof_1\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">r'</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Equivalence\">Equivalence</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> b : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>) =&gt; <span class=\"fn\">∃ (c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">b</span>.2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">a</span>.1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">a</span>.2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">b</span>.1</span></span>)</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L160-L162","name":"AddLocalization.r'","line":160,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r'","doc":"An alternate form of the congruence relation on `M × S`, `M` a `CommMonoid` and `S` a\nsubmonoid of `M`, whose quotient is the localization of `M` at `S`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r'\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">r'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Congruence.html#AddCon\">AddCon</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L153-L154","name":"Localization.r","line":153,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.r","doc":"The congruence relation on `M × S`, `M` a `CommMonoid` and `S` a submonoid of `M`, whose\nquotient is the localization of `M` at `S`, defined as the unique congruence relation on\n`M × S` such that for any other congruence relation `s` on `M × S` where for all `y ∈ S`,\n`(1, 1) ∼ (y, y)` under `s`, we have that `(x₁, y₁) ∼ (x₂, y₂)` by `r` implies\n`(x₁, y₁) ∼ (x₂, y₂)` by `s`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.r\"><span class=\"name\">Localization</span>.<span class=\"name\">r</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Congruence.html#Con\">Con</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L147-L152","name":"AddLocalization.r","line":147,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r","doc":"The congruence relation on `M × S`, `M` an `AddCommMonoid` and `S` an `add_submonoid` of `M`,\nwhose quotient is the localization of `M` at `S`, defined as the unique congruence relation on\n`M × S` such that for any other congruence relation `s` on `M × S` where for all `y ∈ S`,\n`(0, 0) ∼ (y, y)` under `s`, we have that `(x₁, y₁) ∼ (x₂, y₂)` by `r` implies\n`(x₁, y₁) ∼ (x₂, y₂)` by `s`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddLocalization.r\"><span class=\"name\">AddLocalization</span>.<span class=\"name\">r</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Congruence.html#AddCon\">AddCon</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L131-L132","name":"Submonoid.LocalizationMap.toMonoidHom","line":131,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMonoidHom","doc":"The monoid hom underlying a `LocalizationMap`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.toMonoidHom\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">toMonoidHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L119-L119","name":"Submonoid.LocalizationMap.exists_of_eq","line":119,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.exists_of_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.exists_of_eq\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">exists_of_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#OneHom.toFun\">OneHom.toFun</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">self</span>.toMonoidHom</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#OneHom.toFun\">OneHom.toFun</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">self</span>.toMonoidHom</span></span>)</span> <span class=\"fn\">y</span></span></span> → <span class=\"fn\">∃ (c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L118-L118","name":"Submonoid.LocalizationMap.surj'","line":118,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.surj'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.surj'\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">surj'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (x : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#OneHom.toFun\">OneHom.toFun</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">self</span>.toMonoidHom</span></span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#OneHom.toFun\">OneHom.toFun</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">self</span>.toMonoidHom</span></span>)</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L117-L117","name":"Submonoid.LocalizationMap.map_units'","line":117,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map_units'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.map_units'\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">map_units'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#OneHom.toFun\">OneHom.toFun</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">self</span>.toMonoidHom</span></span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L116-L116","name":"Submonoid.LocalizationMap.mk","line":116,"kind":"ctor","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap.mk\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(toMonoidHom : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(map_units' : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#OneHom.toFun\">OneHom.toFun</a> <span class=\"fn\">↑<span class=\"fn\">toMonoidHom</span></span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(surj' : <span class=\"fn\">∀ (<span class=\"fn\">z</span> : <span class=\"fn\">N</span>), <span class=\"fn\">∃ (x : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#OneHom.toFun\">OneHom.toFun</a> <span class=\"fn\">↑<span class=\"fn\">toMonoidHom</span></span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#OneHom.toFun\">OneHom.toFun</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">toMonoidHom</span></span>)</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exists_of_eq : <span class=\"fn\">∀ (<span class=\"fn\">x </span>y : <span class=\"fn\">M</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#OneHom.toFun\">OneHom.toFun</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">toMonoidHom</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#OneHom.toFun\">OneHom.toFun</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">toMonoidHom</span></span>)</span> <span class=\"fn\">y</span></span></span> → <span class=\"fn\">∃ (c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\">Submonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L116-L119","name":"Submonoid.LocalizationMap","line":116,"kind":"structure","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap","doc":"The type of monoid homomorphisms satisfying the characteristic predicate: if `f : M →* N`\nsatisfies this predicate, then `N` is isomorphic to the localization of `M` at `S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Submonoid.LocalizationMap\"><span class=\"name\">Submonoid</span>.<span class=\"name\">LocalizationMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\"><span class=\"name\">MonoidHom</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_1 u_2)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L100-L101","name":"AddSubmonoid.LocalizationMap.toAddMonoidHom","line":100,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toAddMonoidHom","doc":"The AddMonoidHom underlying a `LocalizationMap` of `AddCommMonoid`s. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.toAddMonoidHom\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">toAddMonoidHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L93-L93","name":"AddSubmonoid.LocalizationMap.exists_of_eq","line":93,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.exists_of_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.exists_of_eq\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">exists_of_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">self</span>.toAddMonoidHom</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">self</span>.toAddMonoidHom</span></span>)</span> <span class=\"fn\">y</span></span></span> → <span class=\"fn\">∃ (c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L92-L92","name":"AddSubmonoid.LocalizationMap.surj'","line":92,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.surj'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.surj'\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">surj'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (x : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">self</span>.toAddMonoidHom</span></span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">self</span>.toAddMonoidHom</span></span>)</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L91-L91","name":"AddSubmonoid.LocalizationMap.map_add_units'","line":91,"kind":"def","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map_add_units'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.map_add_units'\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">map_add_units'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↥<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">self</span>.toAddMonoidHom</span></span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L90-L90","name":"AddSubmonoid.LocalizationMap.mk","line":90,"kind":"ctor","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap.mk\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(toAddMonoidHom : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(map_add_units' : <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsAddUnit\">IsAddUnit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a> <span class=\"fn\">↑<span class=\"fn\">toAddMonoidHom</span></span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(surj' : <span class=\"fn\">∀ (<span class=\"fn\">z</span> : <span class=\"fn\">N</span>), <span class=\"fn\">∃ (x : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a> <span class=\"fn\">↑<span class=\"fn\">toAddMonoidHom</span></span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">toAddMonoidHom</span></span>)</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exists_of_eq : <span class=\"fn\">∀ (<span class=\"fn\">x </span>y : <span class=\"fn\">M</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">toAddMonoidHom</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#ZeroHom.toFun\">ZeroHom.toFun</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">toAddMonoidHom</span></span>)</span> <span class=\"fn\">y</span></span></span> → <span class=\"fn\">∃ (c : <span class=\"fn\">↥<span class=\"fn\">S</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\">AddSubmonoid.LocalizationMap</a> <span class=\"fn\">S</span> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/MonoidLocalization.lean#L90-L93","name":"AddSubmonoid.LocalizationMap","line":90,"kind":"structure","docLink":"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap","doc":"The type of AddMonoid homomorphisms satisfying the characteristic predicate: if `f : M →+ N`\nsatisfies this predicate, then `N` is isomorphic to the localization of `M` at `S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/MonoidLocalization.html#AddSubmonoid.LocalizationMap\"><span class=\"name\">AddSubmonoid</span>.<span class=\"name\">LocalizationMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Basic.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\"><span class=\"name\">AddMonoidHom</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_1 u_2)</div></div>"}]}