{"name":"Mathlib.NumberTheory.DirichletCharacter.Basic","instances":[{"typeNames":["DirichletCharacter"],"name":"DirichletCharacter.instSubsingletonDirichletCharacterOfNatNatInstOfNatNat","className":"Subsingleton"},{"typeNames":["DirichletCharacter"],"name":"DirichletCharacter.instInhabitedDirichletCharacter","className":"Inhabited"},{"typeNames":["DirichletCharacter"],"name":"DirichletCharacter.instUniqueDirichletCharacterOfNatNatInstOfNatNat","className":"Unique"}],"imports":["Init","Mathlib.Algebra.Periodic","Mathlib.Data.ZMod.Units","Mathlib.NumberTheory.LegendreSymbol.MulCharacter"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L273-L276","name":"DirichletCharacter.Even.eval_neg","line":273,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.Even.eval_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.Even.eval_neg\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">Even</span>.<span class=\"name\">eval_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ψ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">S</span> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hψ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.Even\">DirichletCharacter.Even</a> <span class=\"fn\">ψ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L268-L271","name":"DirichletCharacter.Odd.eval_neg","line":268,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.Odd.eval_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.Odd.eval_neg\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">Odd</span>.<span class=\"name\">eval_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ψ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">S</span> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hψ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.Odd\">DirichletCharacter.Odd</a> <span class=\"fn\">ψ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L264-L266","name":"DirichletCharacter.Even.toUnitHom_eval_neg_one","line":264,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.Even.toUnitHom_eval_neg_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.Even.toUnitHom_eval_neg_one\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">Even</span>.<span class=\"name\">toUnitHom_eval_neg_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ψ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">S</span> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hψ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.Even\">DirichletCharacter.Even</a> <span class=\"fn\">ψ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/MulCharacter.html#MulChar.toUnitHom\">MulChar.toUnitHom</a> <span class=\"fn\">ψ</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L260-L262","name":"DirichletCharacter.Odd.toUnitHom_eval_neg_one","line":260,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.Odd.toUnitHom_eval_neg_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.Odd.toUnitHom_eval_neg_one\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">Odd</span>.<span class=\"name\">toUnitHom_eval_neg_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ψ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">S</span> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hψ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.Odd\">DirichletCharacter.Odd</a> <span class=\"fn\">ψ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/MulCharacter.html#MulChar.toUnitHom\">MulChar.toUnitHom</a> <span class=\"fn\">ψ</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L255-L258","name":"DirichletCharacter.even_or_odd","line":255,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.even_or_odd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.even_or_odd\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">even_or_odd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ψ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">S</span> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#NoZeroDivisors\">NoZeroDivisors</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.Even\">DirichletCharacter.Even</a> <span class=\"fn\">ψ</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.Odd\">DirichletCharacter.Odd</a> <span class=\"fn\">ψ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L253-L253","name":"DirichletCharacter.Even","line":253,"kind":"def","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.Even","doc":"A Dirichlet character is even if its value at -1 is 1. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.Even\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">Even</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ψ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">S</span> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L250-L250","name":"DirichletCharacter.Odd","line":250,"kind":"def","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.Odd","doc":"A Dirichlet character is odd if its value at -1 is -1. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.Odd\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">Odd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ψ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">S</span> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L243-L244","name":"DirichletCharacter.isPrimitive.primitive_mul","line":243,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.isPrimitive.primitive_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.isPrimitive.primitive_mul\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">isPrimitive</span>.<span class=\"name\">primitive_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ψ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.isPrimitive\">DirichletCharacter.isPrimitive</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.primitive_mul\">DirichletCharacter.primitive_mul</a> <span class=\"fn\">χ</span> <span class=\"fn\">ψ</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L238-L240","name":"DirichletCharacter.mul_def","line":238,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.mul_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.mul_def\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">mul_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ψ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">m</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.primitive_mul\">DirichletCharacter.primitive_mul</a> <span class=\"fn\">χ</span> <span class=\"fn\">ψ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.primitiveCharacter\">DirichletCharacter.primitiveCharacter</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.mul\">DirichletCharacter.mul</a> <span class=\"fn\">χ</span> <span class=\"fn\">ψ</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L234-L236","name":"DirichletCharacter.primitive_mul","line":234,"kind":"def","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.primitive_mul","doc":"Primitive character associated to multiplication of Dirichlet characters,\nafter changing both levels to the same "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.primitive_mul\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">primitive_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ₁ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(χ₂ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductor\">DirichletCharacter.conductor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.mul\">DirichletCharacter.mul</a> <span class=\"fn\">χ₁</span> <span class=\"fn\">χ₂</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L227-L230","name":"DirichletCharacter.mul","line":227,"kind":"def","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.mul","doc":"Dirichlet character associated to multiplication of Dirichlet characters,\nafter changing both levels to the same "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.mul\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ₁ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(χ₂ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/Nat/Basic.html#Nat.lcm\">Nat.lcm</a> <span class=\"fn\">n</span> <span class=\"fn\">m</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L219-L223","name":"DirichletCharacter.primitiveCharacter_one","line":219,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.primitiveCharacter_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.primitiveCharacter_one\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">primitiveCharacter_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.primitiveCharacter\">DirichletCharacter.primitiveCharacter</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L212-L217","name":"DirichletCharacter.primitiveCharacter_isPrimitive","line":212,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.primitiveCharacter_isPrimitive","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.primitiveCharacter_isPrimitive\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">primitiveCharacter_isPrimitive</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.isPrimitive\">DirichletCharacter.isPrimitive</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.primitiveCharacter\">DirichletCharacter.primitiveCharacter</a> <span class=\"fn\">χ</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L209-L210","name":"DirichletCharacter.primitiveCharacter","line":209,"kind":"def","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.primitiveCharacter","doc":"The primitive character associated to a Dirichlet character. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.primitiveCharacter\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">primitiveCharacter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductor\">DirichletCharacter.conductor</a> <span class=\"fn\">χ</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L204-L206","name":"DirichletCharacter.conductor_one_dvd","line":204,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductor_one_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductor_one_dvd\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">conductor_one_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductor\">DirichletCharacter.conductor</a> <span class=\"fn\">1</span></span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L201-L202","name":"DirichletCharacter.isPritive_one_level_zero","line":201,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.isPritive_one_level_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.isPritive_one_level_zero\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">isPritive_one_level_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.isPrimitive\">DirichletCharacter.isPrimitive</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L198-L199","name":"DirichletCharacter.isPrimitive_one_level_one","line":198,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.isPrimitive_one_level_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.isPrimitive_one_level_one\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">isPrimitive_one_level_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.isPrimitive\">DirichletCharacter.isPrimitive</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L196-L196","name":"DirichletCharacter.isPrimitive_def","line":196,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.isPrimitive_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.isPrimitive_def\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">isPrimitive_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.isPrimitive\">DirichletCharacter.isPrimitive</a> <span class=\"fn\">χ</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductor\">DirichletCharacter.conductor</a> <span class=\"fn\">χ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L194-L194","name":"DirichletCharacter.isPrimitive","line":194,"kind":"def","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.isPrimitive","doc":"A character is primitive if its level is equal to its conductor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.isPrimitive\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">isPrimitive</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L182-L189","name":"DirichletCharacter.conductor_le_conductor_mem_conductorSet","line":182,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductor_le_conductor_mem_conductorSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductor_le_conductor_mem_conductorSet\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">conductor_le_conductor_mem_conductorSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hd : <span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductorSet\">DirichletCharacter.conductorSet</a> <span class=\"fn\">χ</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductor\">DirichletCharacter.conductor</a> <span class=\"fn\">χ</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>   <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductor\">DirichletCharacter.conductor</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Classical.html#Classical.choose\">Classical.choose</a> <span class=\"fn\">(_ : <span class=\"fn\">∃ (χ₀ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">d</span></span>), <span class=\"fn\"><span class=\"fn\">χ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.changeLevel\">DirichletCharacter.changeLevel</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span></span>)</span></span>)</span> <span class=\"fn\">χ₀</span></span></span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L177-L180","name":"DirichletCharacter.conductor_eq_zero_iff_level_eq_zero","line":177,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductor_eq_zero_iff_level_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductor_eq_zero_iff_level_eq_zero\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">conductor_eq_zero_iff_level_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductor\">DirichletCharacter.conductor</a> <span class=\"fn\">χ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L172-L175","name":"DirichletCharacter.eq_one_iff_conductor_eq_one","line":172,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.eq_one_iff_conductor_eq_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.eq_one_iff_conductor_eq_one\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">eq_one_iff_conductor_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">χ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductor\">DirichletCharacter.conductor</a> <span class=\"fn\">χ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L163-L168","name":"DirichletCharacter.conductor_one","line":163,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductor_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductor_one\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">conductor_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductor\">DirichletCharacter.conductor</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L160-L161","name":"DirichletCharacter.conductor_ne_zero","line":160,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductor_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductor_ne_zero\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">conductor_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductor\">DirichletCharacter.conductor</a> <span class=\"fn\">χ</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L158-L158","name":"DirichletCharacter.factorsThrough_conductor","line":158,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.factorsThrough_conductor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.factorsThrough_conductor\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">factorsThrough_conductor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.FactorsThrough\">DirichletCharacter.FactorsThrough</a> <span class=\"fn\">χ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductor\">DirichletCharacter.conductor</a> <span class=\"fn\">χ</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L156-L156","name":"DirichletCharacter.conductor_dvd_level","line":156,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductor_dvd_level","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductor_dvd_level\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">conductor_dvd_level</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductor\">DirichletCharacter.conductor</a> <span class=\"fn\">χ</span></span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L153-L154","name":"DirichletCharacter.conductor_mem_conductorSet","line":153,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductor_mem_conductorSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductor_mem_conductorSet\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">conductor_mem_conductorSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductor\">DirichletCharacter.conductor</a> <span class=\"fn\">χ</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductorSet\">DirichletCharacter.conductorSet</a> <span class=\"fn\">χ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L151-L151","name":"DirichletCharacter.conductor","line":151,"kind":"def","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductor","doc":"The minimum natural number `n` for which a Dirichlet character is periodic.\nThe Dirichlet character `χ` can then alternatively be reformulated on `ℤ/nℤ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductor\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">conductor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L147-L147","name":"DirichletCharacter.mem_conductorSet_dvd","line":147,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.mem_conductorSet_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.mem_conductorSet_dvd\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">mem_conductorSet_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductorSet\">DirichletCharacter.conductorSet</a> <span class=\"fn\">χ</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L145-L145","name":"DirichletCharacter.level_mem_conductorSet","line":145,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.level_mem_conductorSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.level_mem_conductorSet\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">level_mem_conductorSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductorSet\">DirichletCharacter.conductorSet</a> <span class=\"fn\">χ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L143-L143","name":"DirichletCharacter.mem_conductorSet_iff","line":143,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.mem_conductorSet_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.mem_conductorSet_iff\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">mem_conductorSet_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductorSet\">DirichletCharacter.conductorSet</a> <span class=\"fn\">χ</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.FactorsThrough\">DirichletCharacter.FactorsThrough</a> <span class=\"fn\">χ</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L141-L141","name":"DirichletCharacter.conductorSet","line":141,"kind":"def","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductorSet","doc":"The set of natural numbers for which a Dirichlet character is periodic. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.conductorSet\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">conductorSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L135-L138","name":"DirichletCharacter.factorsThrough_one_iff","line":135,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.factorsThrough_one_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.factorsThrough_one_iff\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">factorsThrough_one_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.FactorsThrough\">DirichletCharacter.FactorsThrough</a> <span class=\"fn\">χ</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">χ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L131-L133","name":"DirichletCharacter.changeLevel_one","line":131,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.changeLevel_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.changeLevel_one\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">changeLevel_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.changeLevel\">DirichletCharacter.changeLevel</a> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L129-L129","name":"DirichletCharacter.instUniqueDirichletCharacterOfNatNatInstOfNatNat","line":129,"kind":"instance","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.instUniqueDirichletCharacterOfNatNatInstOfNatNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.instUniqueDirichletCharacterOfNatNatInstOfNatNat\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">instUniqueDirichletCharacterOfNatNatInstOfNatNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">1</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L127-L127","name":"DirichletCharacter.instInhabitedDirichletCharacter","line":127,"kind":"instance","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.instInhabitedDirichletCharacter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.instInhabitedDirichletCharacter\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">instInhabitedDirichletCharacter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L123-L125","name":"DirichletCharacter.instSubsingletonDirichletCharacterOfNatNatInstOfNatNat","line":123,"kind":"instance","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.instSubsingletonDirichletCharacterOfNatNatInstOfNatNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.instSubsingletonDirichletCharacterOfNatNatInstOfNatNat\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">instSubsingletonDirichletCharacterOfNatNatInstOfNatNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">1</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L119-L121","name":"DirichletCharacter.level_one'","line":119,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.level_one'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.level_one'\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">level_one'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">χ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L115-L117","name":"DirichletCharacter.level_one","line":115,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.level_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.level_one\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">level_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">χ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L111-L111","name":"DirichletCharacter.FactorsThrough.same_level","line":111,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.FactorsThrough.same_level","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.FactorsThrough.same_level\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">FactorsThrough</span>.<span class=\"name\">same_level</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.FactorsThrough\">DirichletCharacter.FactorsThrough</a> <span class=\"fn\">χ</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L108-L109","name":"DirichletCharacter.FactorsThrough.eq_changeLevel","line":108,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.FactorsThrough.eq_changeLevel","doc":"The fact that `χ` factors through `χ₀` of level `d` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.FactorsThrough.eq_changeLevel\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">FactorsThrough</span>.<span class=\"name\">eq_changeLevel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.FactorsThrough\">DirichletCharacter.FactorsThrough</a> <span class=\"fn\">χ</span> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">χ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.changeLevel\">DirichletCharacter.changeLevel</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.FactorsThrough.χ₀\">DirichletCharacter.FactorsThrough.χ₀</a> <span class=\"fn\">χ</span> <span class=\"fn\">h</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L105-L105","name":"DirichletCharacter.FactorsThrough.χ₀","line":105,"kind":"def","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.FactorsThrough.χ₀","doc":"The Dirichlet character at level `d` through which `χ` factors "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.FactorsThrough.χ₀\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">FactorsThrough</span>.<span class=\"name\">χ₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.FactorsThrough\">DirichletCharacter.FactorsThrough</a> <span class=\"fn\">χ</span> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L101-L101","name":"DirichletCharacter.FactorsThrough.dvd","line":101,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.FactorsThrough.dvd","doc":"The fact that `d` divides `n` when `χ` factors through a Dirichlet character at level `d` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.FactorsThrough.dvd\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">FactorsThrough</span>.<span class=\"name\">dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.FactorsThrough\">DirichletCharacter.FactorsThrough</a> <span class=\"fn\">χ</span> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L95-L96","name":"DirichletCharacter.FactorsThrough","line":95,"kind":"def","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.FactorsThrough","doc":"`χ` of level `n` factors through a Dirichlet character `χ₀` of level `d` if `d ∣ n` and\n`χ₀ = χ ∘ (ZMod n → ZMod d)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.FactorsThrough\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">FactorsThrough</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L88-L91","name":"DirichletCharacter.changeLevel_eq_cast_of_dvd","line":88,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.changeLevel_eq_cast_of_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.changeLevel_eq_cast_of_dvd\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">changeLevel_eq_cast_of_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">m</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.changeLevel\">DirichletCharacter.changeLevel</a> <span class=\"fn\">hm</span></span>)</span> <span class=\"fn\">χ</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">a</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L84-L86","name":"DirichletCharacter.changeLevel_trans","line":84,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.changeLevel_trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.changeLevel_trans\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">changeLevel_trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hd : <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.changeLevel\">DirichletCharacter.changeLevel</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">d</span></span>)</span></span>)</span> <span class=\"fn\">χ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.changeLevel\">DirichletCharacter.changeLevel</a> <span class=\"fn\">hd</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.changeLevel\">DirichletCharacter.changeLevel</a> <span class=\"fn\">hm</span></span>)</span> <span class=\"fn\">χ</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L81-L82","name":"DirichletCharacter.changeLevel_self_toUnitHom","line":81,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.changeLevel_self_toUnitHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.changeLevel_self_toUnitHom\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">changeLevel_self_toUnitHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/MulCharacter.html#MulChar.toUnitHom\">MulChar.toUnitHom</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.changeLevel\">DirichletCharacter.changeLevel</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span></span>)</span></span>)</span> <span class=\"fn\">χ</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/MulCharacter.html#MulChar.toUnitHom\">MulChar.toUnitHom</a> <span class=\"fn\">χ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L78-L79","name":"DirichletCharacter.changeLevel_self","line":78,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.changeLevel_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.changeLevel_self\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">changeLevel_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.changeLevel\">DirichletCharacter.changeLevel</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span></span>)</span></span>)</span> <span class=\"fn\">χ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">χ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L73-L75","name":"DirichletCharacter.changeLevel_def'","line":73,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.changeLevel_def'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.changeLevel_def'\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">changeLevel_def'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/MulCharacter.html#MulChar.toUnitHom\">MulChar.toUnitHom</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.changeLevel\">DirichletCharacter.changeLevel</a> <span class=\"fn\">hm</span></span>)</span> <span class=\"fn\">χ</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.comp\">MonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/MulCharacter.html#MulChar.toUnitHom\">MulChar.toUnitHom</a> <span class=\"fn\">χ</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Units.html#ZMod.unitsMap\">ZMod.unitsMap</a> <span class=\"fn\">hm</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L70-L71","name":"DirichletCharacter.changeLevel_def","line":70,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.changeLevel_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.changeLevel_def\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">changeLevel_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.changeLevel\">DirichletCharacter.changeLevel</a> <span class=\"fn\">hm</span></span>)</span> <span class=\"fn\">χ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/MulCharacter.html#MulChar.ofUnitHom\">MulChar.ofUnitHom</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.comp\">MonoidHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/MulCharacter.html#MulChar.toUnitHom\">MulChar.toUnitHom</a> <span class=\"fn\">χ</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Units.html#ZMod.unitsMap\">ZMod.unitsMap</a> <span class=\"fn\">hm</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L64-L68","name":"DirichletCharacter.changeLevel","line":64,"kind":"def","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.changeLevel","doc":"A function that modifies the level of a Dirichlet character to some multiple\nof its original level. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.changeLevel\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">changeLevel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L57-L60","name":"DirichletCharacter.periodic","line":57,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.periodic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.periodic\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">periodic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Periodic.html#Function.Periodic\">Function.Periodic</a> <span class=\"fn\">⇑<span class=\"fn\">χ</span></span> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L55-L55","name":"DirichletCharacter.eval_modulus_sub","line":55,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.eval_modulus_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.eval_modulus_sub\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">eval_modulus_sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L53-L53","name":"DirichletCharacter.toUnitHom_eq_iff","line":53,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.toUnitHom_eq_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.toUnitHom_eq_iff\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">toUnitHom_eq_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ψ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/MulCharacter.html#MulChar.toUnitHom\">MulChar.toUnitHom</a> <span class=\"fn\">χ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/MulCharacter.html#MulChar.toUnitHom\">MulChar.toUnitHom</a> <span class=\"fn\">ψ</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">χ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">ψ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L51-L51","name":"DirichletCharacter.toUnitHom_eq_char'","line":51,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.toUnitHom_eq_char'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter.toUnitHom_eq_char'\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">toUnitHom_eq_char'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/MulCharacter.html#MulChar.toUnitHom\">MulChar.toUnitHom</a> <span class=\"fn\">χ</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit.unit\">IsUnit.unit</a> <span class=\"fn\">ha</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/DirichletCharacter/Basic.lean#L45-L45","name":"DirichletCharacter","line":45,"kind":"def","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter","doc":"The type of Dirichlet characters of level `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\"><span class=\"name\">DirichletCharacter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"}]}