{"name":"Mathlib.Algebra.Homology.DifferentialObject","instances":[],"imports":["Init","Mathlib.Algebra.Homology.HomologicalComplex","Mathlib.CategoryTheory.DifferentialObject"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Homology/DifferentialObject.lean#L149-L155","name":"HomologicalComplex.dgoEquivHomologicalComplex","line":149,"kind":"def","docLink":"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoEquivHomologicalComplex","doc":"The category of differential graded objects in `V` is equivalent\nto the category of homological complexes in `V`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoEquivHomologicalComplex\"><span class=\"name\">HomologicalComplex</span>.<span class=\"name\">dgoEquivHomologicalComplex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a>      <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroMorphisms.html#CategoryTheory.Limits.HasZeroMorphisms\">CategoryTheory.Limits.HasZeroMorphisms</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject\">CategoryTheory.DifferentialObject</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObjectWithShift\">CategoryTheory.GradedObjectWithShift</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex\">HomologicalComplex</a> <span class=\"fn\">V</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up'\">ComplexShape.up'</a> <span class=\"fn\">b</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Homology/DifferentialObject.lean#L148-L148","name":"HomologicalComplex.dgoEquivHomologicalComplex_counitIso","line":148,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoEquivHomologicalComplex_counitIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoEquivHomologicalComplex_counitIso\"><span class=\"name\">HomologicalComplex</span>.<span class=\"name\">dgoEquivHomologicalComplex_counitIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a>      <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroMorphisms.html#CategoryTheory.Limits.HasZeroMorphisms\">CategoryTheory.Limits.HasZeroMorphisms</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoEquivHomologicalComplex\">HomologicalComplex.dgoEquivHomologicalComplex</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span>.counitIso</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoEquivHomologicalComplexCounitIso\">HomologicalComplex.dgoEquivHomologicalComplexCounitIso</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Homology/DifferentialObject.lean#L148-L148","name":"HomologicalComplex.dgoEquivHomologicalComplex_functor","line":148,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoEquivHomologicalComplex_functor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoEquivHomologicalComplex_functor\"><span class=\"name\">HomologicalComplex</span>.<span class=\"name\">dgoEquivHomologicalComplex_functor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a>      <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroMorphisms.html#CategoryTheory.Limits.HasZeroMorphisms\">CategoryTheory.Limits.HasZeroMorphisms</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoEquivHomologicalComplex\">HomologicalComplex.dgoEquivHomologicalComplex</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span>.functor</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoToHomologicalComplex\">HomologicalComplex.dgoToHomologicalComplex</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Homology/DifferentialObject.lean#L148-L148","name":"HomologicalComplex.dgoEquivHomologicalComplex_inverse","line":148,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoEquivHomologicalComplex_inverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoEquivHomologicalComplex_inverse\"><span class=\"name\">HomologicalComplex</span>.<span class=\"name\">dgoEquivHomologicalComplex_inverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a>      <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroMorphisms.html#CategoryTheory.Limits.HasZeroMorphisms\">CategoryTheory.Limits.HasZeroMorphisms</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoEquivHomologicalComplex\">HomologicalComplex.dgoEquivHomologicalComplex</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span>.inverse</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.homologicalComplexToDGO\">HomologicalComplex.homologicalComplexToDGO</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Homology/DifferentialObject.lean#L148-L148","name":"HomologicalComplex.dgoEquivHomologicalComplex_unitIso","line":148,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoEquivHomologicalComplex_unitIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoEquivHomologicalComplex_unitIso\"><span class=\"name\">HomologicalComplex</span>.<span class=\"name\">dgoEquivHomologicalComplex_unitIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a>      <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroMorphisms.html#CategoryTheory.Limits.HasZeroMorphisms\">CategoryTheory.Limits.HasZeroMorphisms</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoEquivHomologicalComplex\">HomologicalComplex.dgoEquivHomologicalComplex</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span>.unitIso</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoEquivHomologicalComplexUnitIso\">HomologicalComplex.dgoEquivHomologicalComplexUnitIso</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Homology/DifferentialObject.lean#L137-L142","name":"HomologicalComplex.dgoEquivHomologicalComplexCounitIso","line":137,"kind":"def","docLink":"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoEquivHomologicalComplexCounitIso","doc":"The counit isomorphism for `dgoEquivHomologicalComplex`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoEquivHomologicalComplexCounitIso\"><span class=\"name\">HomologicalComplex</span>.<span class=\"name\">dgoEquivHomologicalComplexCounitIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a>      <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroMorphisms.html#CategoryTheory.Limits.HasZeroMorphisms\">CategoryTheory.Limits.HasZeroMorphisms</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.homologicalComplexToDGO\">HomologicalComplex.homologicalComplexToDGO</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoToHomologicalComplex\">HomologicalComplex.dgoToHomologicalComplex</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex\">HomologicalComplex</a> <span class=\"fn\">V</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up'\">ComplexShape.up'</a> <span class=\"fn\">b</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Homology/DifferentialObject.lean#L136-L136","name":"HomologicalComplex.dgoEquivHomologicalComplexCounitIso_hom_app_f","line":136,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoEquivHomologicalComplexCounitIso_hom_app_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoEquivHomologicalComplexCounitIso_hom_app_f\"><span class=\"name\">HomologicalComplex</span>.<span class=\"name\">dgoEquivHomologicalComplexCounitIso_hom_app_f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a>      <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroMorphisms.html#CategoryTheory.Limits.HasZeroMorphisms\">CategoryTheory.Limits.HasZeroMorphisms</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex\">HomologicalComplex</a> <span class=\"fn\">V</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up'\">ComplexShape.up'</a> <span class=\"fn\">b</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">HomologicalComplex.Hom.f</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoEquivHomologicalComplexCounitIso\">HomologicalComplex.dgoEquivHomologicalComplexCounitIso</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span>.hom</span>.app <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.X\">HomologicalComplex.X</a> <span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Homology/DifferentialObject.lean#L136-L136","name":"HomologicalComplex.dgoEquivHomologicalComplexCounitIso_inv_app_f","line":136,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoEquivHomologicalComplexCounitIso_inv_app_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoEquivHomologicalComplexCounitIso_inv_app_f\"><span class=\"name\">HomologicalComplex</span>.<span class=\"name\">dgoEquivHomologicalComplexCounitIso_inv_app_f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a>      <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroMorphisms.html#CategoryTheory.Limits.HasZeroMorphisms\">CategoryTheory.Limits.HasZeroMorphisms</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex\">HomologicalComplex</a> <span class=\"fn\">V</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up'\">ComplexShape.up'</a> <span class=\"fn\">b</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">HomologicalComplex.Hom.f</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoEquivHomologicalComplexCounitIso\">HomologicalComplex.dgoEquivHomologicalComplexCounitIso</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span>.inv</span>.app <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.X\">HomologicalComplex.X</a> <span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Homology/DifferentialObject.lean#L126-L131","name":"HomologicalComplex.dgoEquivHomologicalComplexUnitIso","line":126,"kind":"def","docLink":"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoEquivHomologicalComplexUnitIso","doc":"The unit isomorphism for `dgoEquivHomologicalComplex`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoEquivHomologicalComplexUnitIso\"><span class=\"name\">HomologicalComplex</span>.<span class=\"name\">dgoEquivHomologicalComplexUnitIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a>      <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroMorphisms.html#CategoryTheory.Limits.HasZeroMorphisms\">CategoryTheory.Limits.HasZeroMorphisms</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject\">CategoryTheory.DifferentialObject</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObjectWithShift\">CategoryTheory.GradedObjectWithShift</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoToHomologicalComplex\">HomologicalComplex.dgoToHomologicalComplex</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.homologicalComplexToDGO\">HomologicalComplex.homologicalComplexToDGO</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Homology/DifferentialObject.lean#L125-L125","name":"HomologicalComplex.dgoEquivHomologicalComplexUnitIso_hom_app_f","line":125,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoEquivHomologicalComplexUnitIso_hom_app_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoEquivHomologicalComplexUnitIso_hom_app_f\"><span class=\"name\">HomologicalComplex</span>.<span class=\"name\">dgoEquivHomologicalComplexUnitIso_hom_app_f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a>      <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroMorphisms.html#CategoryTheory.Limits.HasZeroMorphisms\">CategoryTheory.Limits.HasZeroMorphisms</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject\">CategoryTheory.DifferentialObject</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObjectWithShift\">CategoryTheory.GradedObjectWithShift</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject.Hom.f\">CategoryTheory.DifferentialObject.Hom.f</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoEquivHomologicalComplexUnitIso\">HomologicalComplex.dgoEquivHomologicalComplexUnitIso</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span>.hom</span>.app <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject.obj\">CategoryTheory.DifferentialObject.obj</a> <span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Homology/DifferentialObject.lean#L125-L125","name":"HomologicalComplex.dgoEquivHomologicalComplexUnitIso_inv_app_f","line":125,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoEquivHomologicalComplexUnitIso_inv_app_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoEquivHomologicalComplexUnitIso_inv_app_f\"><span class=\"name\">HomologicalComplex</span>.<span class=\"name\">dgoEquivHomologicalComplexUnitIso_inv_app_f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a>      <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroMorphisms.html#CategoryTheory.Limits.HasZeroMorphisms\">CategoryTheory.Limits.HasZeroMorphisms</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject\">CategoryTheory.DifferentialObject</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObjectWithShift\">CategoryTheory.GradedObjectWithShift</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject.Hom.f\">CategoryTheory.DifferentialObject.Hom.f</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoEquivHomologicalComplexUnitIso\">HomologicalComplex.dgoEquivHomologicalComplexUnitIso</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span>.inv</span>.app <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject.obj\">CategoryTheory.DifferentialObject.obj</a> <span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Homology/DifferentialObject.lean#L114-L120","name":"HomologicalComplex.homologicalComplexToDGO","line":114,"kind":"def","docLink":"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.homologicalComplexToDGO","doc":"The functor from homological complexes to differential graded objects.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.homologicalComplexToDGO\"><span class=\"name\">HomologicalComplex</span>.<span class=\"name\">homologicalComplexToDGO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a>      <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroMorphisms.html#CategoryTheory.Limits.HasZeroMorphisms\">CategoryTheory.Limits.HasZeroMorphisms</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex\">HomologicalComplex</a> <span class=\"fn\">V</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up'\">ComplexShape.up'</a> <span class=\"fn\">b</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject\">CategoryTheory.DifferentialObject</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObjectWithShift\">CategoryTheory.GradedObjectWithShift</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Homology/DifferentialObject.lean#L113-L113","name":"HomologicalComplex.homologicalComplexToDGO_obj_d","line":113,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.homologicalComplexToDGO_obj_d","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.homologicalComplexToDGO_obj_d\"><span class=\"name\">HomologicalComplex</span>.<span class=\"name\">homologicalComplexToDGO_obj_d</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a>      <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroMorphisms.html#CategoryTheory.Limits.HasZeroMorphisms\">CategoryTheory.Limits.HasZeroMorphisms</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex\">HomologicalComplex</a> <span class=\"fn\">V</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up'\">ComplexShape.up'</a> <span class=\"fn\">b</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject.d\">CategoryTheory.DifferentialObject.d</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.homologicalComplexToDGO\">HomologicalComplex.homologicalComplexToDGO</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span>.obj <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.d\">HomologicalComplex.d</a> <span class=\"fn\">X</span> <span class=\"fn\">i</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">b_1</span> : <span class=\"fn\">β</span>) =&gt; <span class=\"fn\"><span class=\"fn\">b_1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">as</span> := <span class=\"fn\">1</span> }</span>.as</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">b</span></span></span></span>)</span> <span class=\"fn\">i</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Homology/DifferentialObject.lean#L113-L113","name":"HomologicalComplex.homologicalComplexToDGO_obj_obj","line":113,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.homologicalComplexToDGO_obj_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.homologicalComplexToDGO_obj_obj\"><span class=\"name\">HomologicalComplex</span>.<span class=\"name\">homologicalComplexToDGO_obj_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a>      <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroMorphisms.html#CategoryTheory.Limits.HasZeroMorphisms\">CategoryTheory.Limits.HasZeroMorphisms</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex\">HomologicalComplex</a> <span class=\"fn\">V</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up'\">ComplexShape.up'</a> <span class=\"fn\">b</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject.obj\">CategoryTheory.DifferentialObject.obj</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.homologicalComplexToDGO\">HomologicalComplex.homologicalComplexToDGO</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span>.obj <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.X\">HomologicalComplex.X</a> <span class=\"fn\">X</span> <span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Homology/DifferentialObject.lean#L113-L113","name":"HomologicalComplex.homologicalComplexToDGO_map_f","line":113,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.homologicalComplexToDGO_map_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.homologicalComplexToDGO_map_f\"><span class=\"name\">HomologicalComplex</span>.<span class=\"name\">homologicalComplexToDGO_map_f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a>      <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroMorphisms.html#CategoryTheory.Limits.HasZeroMorphisms\">CategoryTheory.Limits.HasZeroMorphisms</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex\">HomologicalComplex</a> <span class=\"fn\">V</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up'\">ComplexShape.up'</a> <span class=\"fn\">b</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex\">HomologicalComplex</a> <span class=\"fn\">V</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up'\">ComplexShape.up'</a> <span class=\"fn\">b</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject.Hom.f\">CategoryTheory.DifferentialObject.Hom.f</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.homologicalComplexToDGO\">HomologicalComplex.homologicalComplexToDGO</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span>.map <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">HomologicalComplex.Hom.f</a> <span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Homology/DifferentialObject.lean#L89-L108","name":"HomologicalComplex.dgoToHomologicalComplex","line":89,"kind":"def","docLink":"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoToHomologicalComplex","doc":"The functor from differential graded objects to homological complexes.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoToHomologicalComplex\"><span class=\"name\">HomologicalComplex</span>.<span class=\"name\">dgoToHomologicalComplex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a>      <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroMorphisms.html#CategoryTheory.Limits.HasZeroMorphisms\">CategoryTheory.Limits.HasZeroMorphisms</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject\">CategoryTheory.DifferentialObject</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObjectWithShift\">CategoryTheory.GradedObjectWithShift</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex\">HomologicalComplex</a> <span class=\"fn\">V</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up'\">ComplexShape.up'</a> <span class=\"fn\">b</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Homology/DifferentialObject.lean#L88-L88","name":"HomologicalComplex.dgoToHomologicalComplex_map_f","line":88,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoToHomologicalComplex_map_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoToHomologicalComplex_map_f\"><span class=\"name\">HomologicalComplex</span>.<span class=\"name\">dgoToHomologicalComplex_map_f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a>      <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroMorphisms.html#CategoryTheory.Limits.HasZeroMorphisms\">CategoryTheory.Limits.HasZeroMorphisms</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject\">CategoryTheory.DifferentialObject</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObjectWithShift\">CategoryTheory.GradedObjectWithShift</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject\">CategoryTheory.DifferentialObject</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObjectWithShift\">CategoryTheory.GradedObjectWithShift</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">HomologicalComplex.Hom.f</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoToHomologicalComplex\">HomologicalComplex.dgoToHomologicalComplex</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span>.map <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject.Hom.f\">CategoryTheory.DifferentialObject.Hom.f</a> <span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Homology/DifferentialObject.lean#L88-L88","name":"HomologicalComplex.dgoToHomologicalComplex_obj_d","line":88,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoToHomologicalComplex_obj_d","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoToHomologicalComplex_obj_d\"><span class=\"name\">HomologicalComplex</span>.<span class=\"name\">dgoToHomologicalComplex_obj_d</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a>      <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroMorphisms.html#CategoryTheory.Limits.HasZeroMorphisms\">CategoryTheory.Limits.HasZeroMorphisms</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject\">CategoryTheory.DifferentialObject</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObjectWithShift\">CategoryTheory.GradedObjectWithShift</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.d\">HomologicalComplex.d</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoToHomologicalComplex\">HomologicalComplex.dgoToHomologicalComplex</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span>.obj <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">if h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j</span></span> then\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject.d\">CategoryTheory.DifferentialObject.d</a> <span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#CategoryTheory.DifferentialObject.objEqToHom\">CategoryTheory.DifferentialObject.objEqToHom</a> <span class=\"fn\">X</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">b</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j</span></span>)</span></span>)</span></span>\n  else <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Homology/DifferentialObject.lean#L88-L88","name":"HomologicalComplex.dgoToHomologicalComplex_obj_X","line":88,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoToHomologicalComplex_obj_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoToHomologicalComplex_obj_X\"><span class=\"name\">HomologicalComplex</span>.<span class=\"name\">dgoToHomologicalComplex_obj_X</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a>      <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroMorphisms.html#CategoryTheory.Limits.HasZeroMorphisms\">CategoryTheory.Limits.HasZeroMorphisms</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject\">CategoryTheory.DifferentialObject</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObjectWithShift\">CategoryTheory.GradedObjectWithShift</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.X\">HomologicalComplex.X</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.dgoToHomologicalComplex\">HomologicalComplex.dgoToHomologicalComplex</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span>.obj <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject.obj\">CategoryTheory.DifferentialObject.obj</a> <span class=\"fn\">X</span> <span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Homology/DifferentialObject.lean#L81-L82","name":"HomologicalComplex.d_eqToHom","line":81,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.d_eqToHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.d_eqToHom\"><span class=\"name\">HomologicalComplex</span>.<span class=\"name\">d_eqToHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a>      <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroMorphisms.html#CategoryTheory.Limits.HasZeroMorphisms\">CategoryTheory.Limits.HasZeroMorphisms</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex\">HomologicalComplex</a> <span class=\"fn\">V</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up'\">ComplexShape.up'</a> <span class=\"fn\">b</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.d\">HomologicalComplex.d</a> <span class=\"fn\">X</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.X\">HomologicalComplex.X</a> <span class=\"fn\">X</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.X\">HomologicalComplex.X</a> <span class=\"fn\">X</span> <span class=\"fn\">z</span></span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.d\">HomologicalComplex.d</a> <span class=\"fn\">X</span> <span class=\"fn\">x</span> <span class=\"fn\">z</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Homology/DifferentialObject.lean#L80-L80","name":"HomologicalComplex.d_eqToHom_assoc","line":80,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.d_eqToHom_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#HomologicalComplex.d_eqToHom_assoc\"><span class=\"name\">HomologicalComplex</span>.<span class=\"name\">d_eqToHom_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a>      <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroMorphisms.html#CategoryTheory.Limits.HasZeroMorphisms\">CategoryTheory.Limits.HasZeroMorphisms</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex\">HomologicalComplex</a> <span class=\"fn\">V</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up'\">ComplexShape.up'</a> <span class=\"fn\">b</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\">V</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.X\">HomologicalComplex.X</a> <span class=\"fn\">X</span> <span class=\"fn\">z</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.d\">HomologicalComplex.d</a> <span class=\"fn\">X</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.X\">HomologicalComplex.X</a> <span class=\"fn\">X</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.X\">HomologicalComplex.X</a> <span class=\"fn\">X</span> <span class=\"fn\">z</span></span></span>)</span></span>)</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.d\">HomologicalComplex.d</a> <span class=\"fn\">X</span> <span class=\"fn\">x</span> <span class=\"fn\">z</span></span>)</span> <span class=\"fn\">h</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Homology/DifferentialObject.lean#L64-L65","name":"CategoryTheory.DifferentialObject.eqToHom_f'","line":64,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/DifferentialObject.html#CategoryTheory.DifferentialObject.eqToHom_f'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#CategoryTheory.DifferentialObject.eqToHom_f'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">DifferentialObject</span>.<span class=\"name\">eqToHom_f'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a>      <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroMorphisms.html#CategoryTheory.Limits.HasZeroMorphisms\">CategoryTheory.Limits.HasZeroMorphisms</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject\">CategoryTheory.DifferentialObject</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObjectWithShift\">CategoryTheory.GradedObjectWithShift</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject\">CategoryTheory.DifferentialObject</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObjectWithShift\">CategoryTheory.GradedObjectWithShift</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#CategoryTheory.DifferentialObject.objEqToHom\">CategoryTheory.DifferentialObject.objEqToHom</a> <span class=\"fn\">X</span> <span class=\"fn\">h</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject.Hom.f\">CategoryTheory.DifferentialObject.Hom.f</a> <span class=\"fn\">f</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject.Hom.f\">CategoryTheory.DifferentialObject.Hom.f</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#CategoryTheory.DifferentialObject.objEqToHom\">CategoryTheory.DifferentialObject.objEqToHom</a> <span class=\"fn\">Y</span> <span class=\"fn\">h</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Homology/DifferentialObject.lean#L63-L63","name":"CategoryTheory.DifferentialObject.eqToHom_f'_assoc","line":63,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/DifferentialObject.html#CategoryTheory.DifferentialObject.eqToHom_f'_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#CategoryTheory.DifferentialObject.eqToHom_f'_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">DifferentialObject</span>.<span class=\"name\">eqToHom_f'_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a>      <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroMorphisms.html#CategoryTheory.Limits.HasZeroMorphisms\">CategoryTheory.Limits.HasZeroMorphisms</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject\">CategoryTheory.DifferentialObject</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObjectWithShift\">CategoryTheory.GradedObjectWithShift</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject\">CategoryTheory.DifferentialObject</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObjectWithShift\">CategoryTheory.GradedObjectWithShift</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\">V</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject.obj\">CategoryTheory.DifferentialObject.obj</a> <span class=\"fn\">Y</span> <span class=\"fn\">y</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#CategoryTheory.DifferentialObject.objEqToHom\">CategoryTheory.DifferentialObject.objEqToHom</a> <span class=\"fn\">X</span> <span class=\"fn\">h✝</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject.Hom.f\">CategoryTheory.DifferentialObject.Hom.f</a> <span class=\"fn\">f</span> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject.Hom.f\">CategoryTheory.DifferentialObject.Hom.f</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#CategoryTheory.DifferentialObject.objEqToHom\">CategoryTheory.DifferentialObject.objEqToHom</a> <span class=\"fn\">Y</span> <span class=\"fn\">h✝</span></span>)</span> <span class=\"fn\">h</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Homology/DifferentialObject.lean#L61-L61","name":"CategoryTheory.DifferentialObject.d_squared_apply","line":61,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/DifferentialObject.html#CategoryTheory.DifferentialObject.d_squared_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#CategoryTheory.DifferentialObject.d_squared_apply\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">DifferentialObject</span>.<span class=\"name\">d_squared_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a>      <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroMorphisms.html#CategoryTheory.Limits.HasZeroMorphisms\">CategoryTheory.Limits.HasZeroMorphisms</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject\">CategoryTheory.DifferentialObject</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObjectWithShift\">CategoryTheory.GradedObjectWithShift</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject.d\">CategoryTheory.DifferentialObject.d</a> <span class=\"fn\">X</span> <span class=\"fn\">x</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject.d\">CategoryTheory.DifferentialObject.d</a> <span class=\"fn\">X</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">b_1</span> : <span class=\"fn\">β</span>) =&gt; <span class=\"fn\"><span class=\"fn\">b_1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">as</span> := <span class=\"fn\">1</span> }</span>.as</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">b</span></span></span></span>)</span> <span class=\"fn\">x</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Homology/DifferentialObject.lean#L60-L60","name":"CategoryTheory.DifferentialObject.d_squared_apply_assoc","line":60,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/DifferentialObject.html#CategoryTheory.DifferentialObject.d_squared_apply_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#CategoryTheory.DifferentialObject.d_squared_apply_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">DifferentialObject</span>.<span class=\"name\">d_squared_apply_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a>      <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroMorphisms.html#CategoryTheory.Limits.HasZeroMorphisms\">CategoryTheory.Limits.HasZeroMorphisms</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject\">CategoryTheory.DifferentialObject</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObjectWithShift\">CategoryTheory.GradedObjectWithShift</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\">V</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObjectWithShift\">CategoryTheory.GradedObjectWithShift</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span> <span class=\"fn\">1</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">X</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">b</span></span></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject.d\">CategoryTheory.DifferentialObject.d</a> <span class=\"fn\">X</span> <span class=\"fn\">x</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject.d\">CategoryTheory.DifferentialObject.d</a> <span class=\"fn\">X</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">b</span></span></span>)</span></span>)</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">0</span> <span class=\"fn\">h</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Homology/DifferentialObject.lean#L56-L57","name":"CategoryTheory.DifferentialObject.objEqToHom_d","line":56,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/DifferentialObject.html#CategoryTheory.DifferentialObject.objEqToHom_d","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#CategoryTheory.DifferentialObject.objEqToHom_d\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">DifferentialObject</span>.<span class=\"name\">objEqToHom_d</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a>      <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroMorphisms.html#CategoryTheory.Limits.HasZeroMorphisms\">CategoryTheory.Limits.HasZeroMorphisms</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject\">CategoryTheory.DifferentialObject</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObjectWithShift\">CategoryTheory.GradedObjectWithShift</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#CategoryTheory.DifferentialObject.objEqToHom\">CategoryTheory.DifferentialObject.objEqToHom</a> <span class=\"fn\">X</span> <span class=\"fn\">h</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject.d\">CategoryTheory.DifferentialObject.d</a> <span class=\"fn\">X</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject.d\">CategoryTheory.DifferentialObject.d</a> <span class=\"fn\">X</span> <span class=\"fn\">x</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#CategoryTheory.DifferentialObject.objEqToHom\">CategoryTheory.DifferentialObject.objEqToHom</a> <span class=\"fn\">X</span>\n      <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">b_1</span> : <span class=\"fn\">β</span>) =&gt; <span class=\"fn\"><span class=\"fn\">b_1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">as</span> := <span class=\"fn\">1</span> }</span>.as</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">b</span></span></span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">b_1</span> : <span class=\"fn\">β</span>) =&gt; <span class=\"fn\"><span class=\"fn\">b_1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">as</span> := <span class=\"fn\">1</span> }</span>.as</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">b</span></span></span></span>)</span> <span class=\"fn\">y</span></span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Homology/DifferentialObject.lean#L55-L55","name":"CategoryTheory.DifferentialObject.objEqToHom_d_assoc","line":55,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/DifferentialObject.html#CategoryTheory.DifferentialObject.objEqToHom_d_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#CategoryTheory.DifferentialObject.objEqToHom_d_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">DifferentialObject</span>.<span class=\"name\">objEqToHom_d_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a>      <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroMorphisms.html#CategoryTheory.Limits.HasZeroMorphisms\">CategoryTheory.Limits.HasZeroMorphisms</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject\">CategoryTheory.DifferentialObject</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObjectWithShift\">CategoryTheory.GradedObjectWithShift</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\">V</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObjectWithShift\">CategoryTheory.GradedObjectWithShift</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span> <span class=\"fn\">1</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">X</span>.obj</span> <span class=\"fn\">y</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#CategoryTheory.DifferentialObject.objEqToHom\">CategoryTheory.DifferentialObject.objEqToHom</a> <span class=\"fn\">X</span> <span class=\"fn\">h✝</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject.d\">CategoryTheory.DifferentialObject.d</a> <span class=\"fn\">X</span> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject.d\">CategoryTheory.DifferentialObject.d</a> <span class=\"fn\">X</span> <span class=\"fn\">x</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#CategoryTheory.DifferentialObject.objEqToHom\">CategoryTheory.DifferentialObject.objEqToHom</a> <span class=\"fn\">X</span>\n        <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">b_1</span> : <span class=\"fn\">β</span>) =&gt; <span class=\"fn\"><span class=\"fn\">b_1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">as</span> := <span class=\"fn\">1</span> }</span>.as</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">b</span></span></span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">b_1</span> : <span class=\"fn\">β</span>) =&gt; <span class=\"fn\"><span class=\"fn\">b_1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">as</span> := <span class=\"fn\">1</span> }</span>.as</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">b</span></span></span></span>)</span> <span class=\"fn\">y</span></span></span>)</span></span>)</span>\n      <span class=\"fn\">h</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Homology/DifferentialObject.lean#L50-L51","name":"CategoryTheory.DifferentialObject.objEqToHom_refl","line":50,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/DifferentialObject.html#CategoryTheory.DifferentialObject.objEqToHom_refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#CategoryTheory.DifferentialObject.objEqToHom_refl\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">DifferentialObject</span>.<span class=\"name\">objEqToHom_refl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a>      <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroMorphisms.html#CategoryTheory.Limits.HasZeroMorphisms\">CategoryTheory.Limits.HasZeroMorphisms</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject\">CategoryTheory.DifferentialObject</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObjectWithShift\">CategoryTheory.GradedObjectWithShift</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#CategoryTheory.DifferentialObject.objEqToHom\">CategoryTheory.DifferentialObject.objEqToHom</a> <span class=\"fn\">X</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject.obj\">CategoryTheory.DifferentialObject.obj</a> <span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Homology/DifferentialObject.lean#L43-L45","name":"CategoryTheory.DifferentialObject.objEqToHom","line":43,"kind":"def","docLink":"./Mathlib/Algebra/Homology/DifferentialObject.html#CategoryTheory.DifferentialObject.objEqToHom","doc":"Since `eqToHom` only preserves the fact that `X.X i = X.X j` but not `i = j`, this definition\nis used to aid the simplifier. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/DifferentialObject.html#CategoryTheory.DifferentialObject.objEqToHom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">DifferentialObject</span>.<span class=\"name\">objEqToHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a>      <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroMorphisms.html#CategoryTheory.Limits.HasZeroMorphisms\">CategoryTheory.Limits.HasZeroMorphisms</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject\">CategoryTheory.DifferentialObject</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GradedObject.html#CategoryTheory.GradedObjectWithShift\">CategoryTheory.GradedObjectWithShift</a> <span class=\"fn\">b</span> <span class=\"fn\">V</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject.obj\">CategoryTheory.DifferentialObject.obj</a> <span class=\"fn\">X</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DifferentialObject.html#CategoryTheory.DifferentialObject.obj\">CategoryTheory.DifferentialObject.obj</a> <span class=\"fn\">X</span> <span class=\"fn\">j</span></span></span></div></div>"}]}