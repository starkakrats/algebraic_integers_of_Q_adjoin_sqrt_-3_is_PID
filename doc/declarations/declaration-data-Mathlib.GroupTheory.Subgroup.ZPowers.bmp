{"name":"Mathlib.GroupTheory.Subgroup.ZPowers","instances":[{"typeNames":[],"name":"Subgroup.decidableMemZPowers","className":"Decidable"},{"typeNames":["Subtype"],"name":"Subgroup.instCountableSubtypeMemSubgroupInstMembershipInstSetLikeSubgroupZpowers","className":"Countable"},{"typeNames":[],"name":"AddSubgroup.decidableMemZMultiples","className":"Decidable"},{"typeNames":["Subtype"],"name":"AddSubgroup.instCountableSubtypeMemAddSubgroupInstMembershipInstSetLikeAddSubgroupZmultiples","className":"Countable"},{"typeNames":["AddSubgroup.zmultiples"],"name":"AddSubgroup.zmultiples_isCommutative","className":"AddSubgroup.IsCommutative"},{"typeNames":["Subgroup.zpowers"],"name":"Subgroup.zpowers_isCommutative","className":"Subgroup.IsCommutative"}],"imports":["Init","Mathlib.Algebra.GroupPower.Lemmas","Mathlib.GroupTheory.Subgroup.Basic","Mathlib.Data.Countable.Basic","Mathlib.Data.Set.Image"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L265-L267","name":"Subgroup.center_eq_infi'","line":265,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.center_eq_infi'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.center_eq_infi'\"><span class=\"name\">Subgroup</span>.<span class=\"name\">center_eq_infi'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hS : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.center\">Subgroup.center</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ (g : <span class=\"fn\">↑<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.centralizer\">Subgroup.centralizer</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L264-L264","name":"AddSubgroup.center_eq_infi'","line":264,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.center_eq_infi'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.center_eq_infi'\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">center_eq_infi'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hS : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.center\">AddSubgroup.center</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ (g : <span class=\"fn\">↑<span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.centralizer\">AddSubgroup.centralizer</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L258-L260","name":"Subgroup.center_eq_iInf","line":258,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.center_eq_iInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.center_eq_iInf\"><span class=\"name\">Subgroup</span>.<span class=\"name\">center_eq_iInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hS : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.center\">Subgroup.center</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ g ∈ <span class=\"fn\">S</span>, <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.centralizer\">Subgroup.centralizer</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">g</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L257-L257","name":"AddSubgroup.center_eq_iInf","line":257,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.center_eq_iInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.center_eq_iInf\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">center_eq_iInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hS : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.center\">AddSubgroup.center</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ g ∈ <span class=\"fn\">S</span>, <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.centralizer\">AddSubgroup.centralizer</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">g</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L247-L253","name":"Subgroup.centralizer_closure","line":247,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.centralizer_closure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.centralizer_closure\"><span class=\"name\">Subgroup</span>.<span class=\"name\">centralizer_closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.centralizer\">Subgroup.centralizer</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">S</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ g ∈ <span class=\"fn\">S</span>, <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.centralizer\">Subgroup.centralizer</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">g</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L246-L246","name":"AddSubgroup.centralizer_closure","line":246,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.centralizer_closure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.centralizer_closure\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">centralizer_closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.centralizer\">AddSubgroup.centralizer</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">S</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ g ∈ <span class=\"fn\">S</span>, <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.centralizer\">AddSubgroup.centralizer</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">g</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L241-L242","name":"Subgroup.zpowers_one_eq_bot","line":241,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers_one_eq_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers_one_eq_bot\"><span class=\"name\">Subgroup</span>.<span class=\"name\">zpowers_one_eq_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L240-L240","name":"AddSubgroup.zmultiples_zero_eq_bot","line":240,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples_zero_eq_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples_zero_eq_bot\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">zmultiples_zero_eq_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L235-L236","name":"Subgroup.zpowers_ne_bot","line":235,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers_ne_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers_ne_bot\"><span class=\"name\">Subgroup</span>.<span class=\"name\">zpowers_ne_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L234-L234","name":"AddSubgroup.zmultiples_ne_bot","line":234,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples_ne_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples_ne_bot\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">zmultiples_ne_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L230-L230","name":"Subgroup.zpowers_eq_bot","line":230,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers_eq_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers_eq_bot\"><span class=\"name\">Subgroup</span>.<span class=\"name\">zpowers_eq_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L229-L229","name":"AddSubgroup.zmultiples_eq_bot","line":229,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples_eq_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples_eq_bot\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">zmultiples_eq_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L224-L224","name":"AddSubgroup.zmultiples_le_of_mem","line":224,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples_le_of_mem","doc":"**Alias** of the reverse direction of `AddSubgroup.zmultiples_le`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples_le_of_mem\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">zmultiples_le_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L221-L221","name":"Subgroup.zpowers_le_of_mem","line":221,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers_le_of_mem","doc":"**Alias** of the reverse direction of `Subgroup.zpowers_le`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers_le_of_mem\"><span class=\"name\">Subgroup</span>.<span class=\"name\">zpowers_le_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L216-L217","name":"Subgroup.zpowers_le","line":216,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers_le\"><span class=\"name\">Subgroup</span>.<span class=\"name\">zpowers_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L215-L215","name":"AddSubgroup.zmultiples_le","line":215,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples_le\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">zmultiples_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L208-L211","name":"Subgroup.zpowers_isCommutative","line":208,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers_isCommutative","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers_isCommutative\"><span class=\"name\">Subgroup</span>.<span class=\"name\">zpowers_isCommutative</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.IsCommutative\">Subgroup.IsCommutative</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">g</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L207-L207","name":"AddSubgroup.zmultiples_isCommutative","line":207,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples_isCommutative","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples_isCommutative\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">zmultiples_isCommutative</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.IsCommutative\">AddSubgroup.IsCommutative</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">g</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L207-L207","name":"AddSubgroup.zmultiples_isCommutative.match_1","line":207,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples_isCommutative.match_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples_isCommutative.match_1\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">zmultiples_isCommutative</span>.<span class=\"name\">match_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(motive : <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">g</span></span>)</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">g</span></span>)</span></span>),\n  <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">val</span> : <span class=\"fn\">G</span>) (<span class=\"fn\">w</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) (<span class=\"fn\">h₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">g</span></span></span>)</span> <span class=\"fn\">w</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">val</span></span>),\n      <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">val</span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\">∃ (y : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">g</span></span></span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">val</span></span></span>)</span> }</span></span></span>)</span> →\n    <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L195-L200","name":"ofAdd_image_zmultiples_eq_zpowers_ofAdd","line":195,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#ofAdd_image_zmultiples_eq_zpowers_ofAdd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#ofAdd_image_zmultiples_eq_zpowers_ofAdd\"><span class=\"name\">ofAdd_image_zmultiples_eq_zpowers_ofAdd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">A</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">Multiplicative.ofAdd</span></span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">x</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Multiplicative.ofAdd</span> <span class=\"fn\">x</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L182-L192","name":"ofMul_image_zpowers_eq_zmultiples_ofMul","line":182,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#ofMul_image_zpowers_eq_zmultiples_ofMul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#ofMul_image_zpowers_eq_zmultiples_ofMul\"><span class=\"name\">ofMul_image_zpowers_eq_zmultiples_ofMul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">Additive.ofMul</span></span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">x</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Additive.ofMul</span> <span class=\"fn\">x</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L178-L180","name":"Int.zmultiples_one","line":178,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Int.zmultiples_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Int.zmultiples_one\"><span class=\"name\">Int</span>.<span class=\"name\">zmultiples_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L173-L174","name":"Int.mem_zmultiples_iff","line":173,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Int.mem_zmultiples_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Int.mem_zmultiples_iff\"><span class=\"name\">Int</span>.<span class=\"name\">mem_zmultiples_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">a</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L167-L169","name":"MonoidHom.map_zpowers","line":167,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#MonoidHom.map_zpowers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#MonoidHom.map_zpowers\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">map_zpowers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L166-L166","name":"AddMonoidHom.map_zmultiples","line":166,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddMonoidHom.map_zmultiples","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddMonoidHom.map_zmultiples\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">map_zmultiples</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L161-L164","name":"Int.range_castAddHom","line":161,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Int.range_castAddHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Int.range_castAddHom\"><span class=\"name\">Int</span>.<span class=\"name\">range_castAddHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Int/Cast/Defs.html#AddGroupWithOne\">AddGroupWithOne</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Int/Cast/Lemmas.html#Int.castAddHom\">Int.castAddHom</a> <span class=\"fn\">A</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L153-L154","name":"AddSubgroup.int_cast_mem_zmultiples_one","line":153,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.int_cast_mem_zmultiples_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.int_cast_mem_zmultiples_one\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">int_cast_mem_zmultiples_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L148-L149","name":"AddSubgroup.int_cast_mul_mem_zmultiples","line":148,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.int_cast_mul_mem_zmultiples","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.int_cast_mul_mem_zmultiples\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">int_cast_mul_mem_zmultiples</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L140-L141","name":"AddSubgroup.instCountableSubtypeMemAddSubgroupInstMembershipInstSetLikeAddSubgroupZmultiples","line":140,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.instCountableSubtypeMemAddSubgroupInstMembershipInstSetLikeAddSubgroupZmultiples","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.instCountableSubtypeMemAddSubgroupInstMembershipInstSetLikeAddSubgroupZmultiples\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">instCountableSubtypeMemAddSubgroupInstMembershipInstSetLikeAddSubgroupZmultiples</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">a</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L137-L137","name":"AddSubgroup.exists_mem_zmultiples","line":137,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.exists_mem_zmultiples","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.exists_mem_zmultiples\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">exists_mem_zmultiples</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\">G</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ g ∈ <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">x</span></span>, <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">g</span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (m : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L134-L134","name":"AddSubgroup.exists_zmultiples","line":134,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.exists_zmultiples","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.exists_zmultiples\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">exists_zmultiples</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">x</span></span>)</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ (g : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">x</span></span>)</span></span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">g</span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∃ (m : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\">∃ (y : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x_1</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span></span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span></span></span>)</span> }</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L130-L130","name":"AddSubgroup.forall_mem_zmultiples","line":130,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.forall_mem_zmultiples","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.forall_mem_zmultiples\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">forall_mem_zmultiples</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\">G</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">g</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">x</span></span>, <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">g</span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L127-L127","name":"AddSubgroup.forall_zmultiples","line":127,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.forall_zmultiples","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.forall_zmultiples\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">forall_zmultiples</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">x</span></span>)</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">g</span> : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">x</span></span>)</span></span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">g</span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ (<span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\">∃ (y : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x_1</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x_1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span></span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span></span></span>)</span> }</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L123-L123","name":"AddSubgroup.nsmul_mem_zmultiples","line":123,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.nsmul_mem_zmultiples","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.nsmul_mem_zmultiples\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">nsmul_mem_zmultiples</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L120-L120","name":"AddSubgroup.zsmul_mem_zmultiples","line":120,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zsmul_mem_zmultiples","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zsmul_mem_zmultiples\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">zsmul_mem_zmultiples</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L117-L117","name":"AddSubgroup.mem_zmultiples_iff","line":117,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.mem_zmultiples_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.mem_zmultiples_iff\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_zmultiples_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">g</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (k : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">h</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L111-L111","name":"AddSubgroup.zmultiples_eq_closure","line":111,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples_eq_closure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples_eq_closure\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">zmultiples_eq_closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure\">AddSubgroup.closure</a> <span class=\"fn\">{<span class=\"fn\">g</span>}</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L108-L108","name":"AddSubgroup.decidableMemZMultiples","line":108,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.decidableMemZMultiples","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.decidableMemZMultiples\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">decidableMemZMultiples</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidablePred\">DecidablePred</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">a</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L106-L106","name":"AddSubgroup.coe_zmultiples","line":106,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.coe_zmultiples","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.coe_zmultiples\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">coe_zmultiples</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">g</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L103-L103","name":"AddSubgroup.mem_zmultiples","line":103,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.mem_zmultiples","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.mem_zmultiples\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">mem_zmultiples</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L97-L98","name":"AddSubgroup.range_zmultiplesHom","line":97,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.range_zmultiplesHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.range_zmultiplesHom\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">range_zmultiplesHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Int/Cast/Lemmas.html#zmultiplesHom\">zmultiplesHom</a> <span class=\"fn\">A</span></span>)</span> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L92-L93","name":"AddSubgroup.zmultiples","line":92,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples","doc":"The subgroup generated by an element. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#AddSubgroup.zmultiples\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">zmultiples</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L84-L85","name":"Subgroup.instCountableSubtypeMemSubgroupInstMembershipInstSetLikeSubgroupZpowers","line":84,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.instCountableSubtypeMemSubgroupInstMembershipInstSetLikeSubgroupZpowers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.instCountableSubtypeMemSubgroupInstMembershipInstSetLikeSubgroupZpowers\"><span class=\"name\">Subgroup</span>.<span class=\"name\">instCountableSubtypeMemSubgroupInstMembershipInstSetLikeSubgroupZpowers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">a</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L80-L81","name":"Subgroup.exists_mem_zpowers","line":80,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.exists_mem_zpowers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.exists_mem_zpowers\"><span class=\"name\">Subgroup</span>.<span class=\"name\">exists_mem_zpowers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\">G</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ g ∈ <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">x</span></span>, <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">g</span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (m : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">m</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L76-L77","name":"Subgroup.forall_mem_zpowers","line":76,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.forall_mem_zpowers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.forall_mem_zpowers\"><span class=\"name\">Subgroup</span>.<span class=\"name\">forall_mem_zpowers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\">G</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">g</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">x</span></span>, <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">g</span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">m</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L72-L73","name":"Subgroup.exists_zpowers","line":72,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.exists_zpowers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.exists_zpowers\"><span class=\"name\">Subgroup</span>.<span class=\"name\">exists_zpowers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">x</span></span>)</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ (g : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">x</span></span>)</span></span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">g</span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∃ (m : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">m</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\">∃ (y : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x_1</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">m</span></span></span></span>)</span> }</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L68-L69","name":"Subgroup.forall_zpowers","line":68,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.forall_zpowers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.forall_zpowers\"><span class=\"name\">Subgroup</span>.<span class=\"name\">forall_zpowers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">x</span></span>)</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">g</span> : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">x</span></span>)</span></span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">g</span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ (<span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">m</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\">∃ (y : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x_1</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">m</span></span></span></span>)</span> }</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L64-L65","name":"Subgroup.npow_mem_zpowers","line":64,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.npow_mem_zpowers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.npow_mem_zpowers\"><span class=\"name\">Subgroup</span>.<span class=\"name\">npow_mem_zpowers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L60-L61","name":"Subgroup.zpow_mem_zpowers","line":60,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpow_mem_zpowers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpow_mem_zpowers\"><span class=\"name\">Subgroup</span>.<span class=\"name\">zpow_mem_zpowers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L56-L57","name":"Subgroup.mem_zpowers_iff","line":56,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.mem_zpowers_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.mem_zpowers_iff\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_zpowers_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">g</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (k : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">h</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L52-L53","name":"Subgroup.range_zpowersHom","line":52,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.range_zpowersHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.range_zpowersHom\"><span class=\"name\">Subgroup</span>.<span class=\"name\">range_zpowersHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.range\">MonoidHom.range</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Int/Cast/Lemmas.html#zpowersHom\">zpowersHom</a> <span class=\"fn\">G</span></span>)</span> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L47-L49","name":"Subgroup.zpowers_eq_closure","line":47,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers_eq_closure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers_eq_closure\"><span class=\"name\">Subgroup</span>.<span class=\"name\">zpowers_eq_closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">{<span class=\"fn\">g</span>}</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L43-L44","name":"Subgroup.decidableMemZPowers","line":43,"kind":"instance","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.decidableMemZPowers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.decidableMemZPowers\"><span class=\"name\">Subgroup</span>.<span class=\"name\">decidableMemZPowers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidablePred\">DecidablePred</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">a</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L39-L40","name":"Subgroup.coe_zpowers","line":39,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.coe_zpowers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.coe_zpowers\"><span class=\"name\">Subgroup</span>.<span class=\"name\">coe_zpowers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">x</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L35-L36","name":"Subgroup.mem_zpowers","line":35,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.mem_zpowers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.mem_zpowers\"><span class=\"name\">Subgroup</span>.<span class=\"name\">mem_zpowers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/Subgroup/ZPowers.lean#L31-L32","name":"Subgroup.zpowers","line":31,"kind":"def","docLink":"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers","doc":"The subgroup generated by an element. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Subgroup/ZPowers.html#Subgroup.zpowers\"><span class=\"name\">Subgroup</span>.<span class=\"name\">zpowers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></div></div>"}]}