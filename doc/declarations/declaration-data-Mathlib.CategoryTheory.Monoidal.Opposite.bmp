{"name":"Mathlib.CategoryTheory.Monoidal.Opposite","instances":[{"typeNames":["CategoryTheory.MonoidalOpposite"],"name":"CategoryTheory.MonoidalOpposite.monoidalOppositeCategory","className":"CategoryTheory.Category"},{"typeNames":["Opposite"],"name":"CategoryTheory.monoidalCategoryOp","className":"CategoryTheory.MonoidalCategory"},{"typeNames":["CategoryTheory.MonoidalOpposite"],"name":"CategoryTheory.monoidalCategoryMop","className":"CategoryTheory.MonoidalCategory"}],"imports":["Init","Mathlib.CategoryTheory.Monoidal.Free.Coherence","Mathlib.Tactic.CategoryTheory.Coherence"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Opposite.lean#L218-L219","name":"CategoryTheory.mop_tensorUnit","line":218,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.mop_tensorUnit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.mop_tensorUnit\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">mop_tensorUnit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u‚ÇÅ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v‚ÇÅ, u‚ÇÅ}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">ùüô_ <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite\">·¥π·µí·µñ</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.mop\">CategoryTheory.MonoidalOpposite.mop</a> <span class=\"fn\">(<span class=\"fn\">ùüô_ <span class=\"fn\">C</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Opposite.lean#L214-L215","name":"CategoryTheory.mop_tensorObj","line":214,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.mop_tensorObj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.mop_tensorObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">mop_tensorObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u‚ÇÅ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v‚ÇÅ, u‚ÇÅ}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite\">·¥π·µí·µñ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite\">·¥π·µí·µñ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategory.tensorObj</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.mop\">CategoryTheory.MonoidalOpposite.mop</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategory.tensorObj</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.unmop\">CategoryTheory.MonoidalOpposite.unmop</a> <span class=\"fn\">Y</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.unmop\">CategoryTheory.MonoidalOpposite.unmop</a> <span class=\"fn\">X</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Opposite.lean#L197-L211","name":"CategoryTheory.monoidalCategoryMop","line":197,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.monoidalCategoryMop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.monoidalCategoryMop\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">monoidalCategoryMop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u‚ÇÅ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v‚ÇÅ, u‚ÇÅ}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite\">·¥π·µí·µñ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Opposite.lean#L193-L194","name":"CategoryTheory.op_tensorUnit","line":193,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.op_tensorUnit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.op_tensorUnit\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">op_tensorUnit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u‚ÇÅ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v‚ÇÅ, u‚ÇÅ}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">ùüô_ <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">·µí·µñ</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\">ùüô_ <span class=\"fn\">C</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Opposite.lean#L189-L190","name":"CategoryTheory.op_tensorObj","line":189,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.op_tensorObj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.op_tensorObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">op_tensorObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u‚ÇÅ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v‚ÇÅ, u‚ÇÅ}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">·µí·µñ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">·µí·µñ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategory.tensorObj</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategory.tensorObj</a> <span class=\"fn\"><span class=\"fn\">X</span>.unop</span> <span class=\"fn\"><span class=\"fn\">Y</span>.unop</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Opposite.lean#L172-L186","name":"CategoryTheory.monoidalCategoryOp","line":172,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.monoidalCategoryOp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.monoidalCategoryOp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">monoidalCategoryOp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u‚ÇÅ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v‚ÇÅ, u‚ÇÅ}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">·µí·µñ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Opposite.lean#L157-L163","name":"CategoryTheory.Iso.mop","line":157,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.Iso.mop","doc":"An isomorphism in `C` gives an isomorphism in `C·¥π·µí·µñ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.Iso.mop\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u‚ÇÅ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v‚ÇÅ, u‚ÇÅ}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">‚âÖ</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.mop\">CategoryTheory.MonoidalOpposite.mop</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">‚âÖ</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.mop\">CategoryTheory.MonoidalOpposite.mop</a> <span class=\"fn\">Y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Opposite.lean#L156-L156","name":"CategoryTheory.Iso.mop_inv","line":156,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.Iso.mop_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.Iso.mop_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mop_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u‚ÇÅ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v‚ÇÅ, u‚ÇÅ}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">‚âÖ</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.Iso.mop\">CategoryTheory.Iso.mop</a> <span class=\"fn\">f</span></span>)</span>.inv</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#Quiver.Hom.mop\">Quiver.Hom.mop</a> <span class=\"fn\"><span class=\"fn\">f</span>.inv</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Opposite.lean#L156-L156","name":"CategoryTheory.Iso.mop_hom","line":156,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.Iso.mop_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.Iso.mop_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mop_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u‚ÇÅ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v‚ÇÅ, u‚ÇÅ}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">‚âÖ</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.Iso.mop\">CategoryTheory.Iso.mop</a> <span class=\"fn\">f</span></span>)</span>.hom</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#Quiver.Hom.mop\">Quiver.Hom.mop</a> <span class=\"fn\"><span class=\"fn\">f</span>.hom</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Opposite.lean#L147-L148","name":"CategoryTheory.mop_id_unmop","line":147,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.mop_id_unmop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.mop_id_unmop\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">mop_id_unmop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u‚ÇÅ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v‚ÇÅ, u‚ÇÅ}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite\">·¥π·µí·µñ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#Quiver.Hom.mop\">Quiver.Hom.mop</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.unmop\">CategoryTheory.MonoidalOpposite.unmop</a> <span class=\"fn\">X</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Opposite.lean#L142-L143","name":"CategoryTheory.unmop_id_mop","line":142,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.unmop_id_mop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.unmop_id_mop\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">unmop_id_mop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u‚ÇÅ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v‚ÇÅ, u‚ÇÅ}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#Quiver.Hom.unmop\">Quiver.Hom.unmop</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.mop\">CategoryTheory.MonoidalOpposite.mop</a> <span class=\"fn\">X</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Opposite.lean#L137-L138","name":"CategoryTheory.unmop_id","line":137,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.unmop_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.unmop_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">unmop_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u‚ÇÅ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v‚ÇÅ, u‚ÇÅ}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite\">·¥π·µí·µñ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#Quiver.Hom.unmop\">Quiver.Hom.unmop</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.unmop\">CategoryTheory.MonoidalOpposite.unmop</a> <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Opposite.lean#L132-L133","name":"CategoryTheory.unmop_comp","line":132,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.unmop_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.unmop_comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">unmop_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u‚ÇÅ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v‚ÇÅ, u‚ÇÅ}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite\">·¥π·µí·µñ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite\">·¥π·µí·µñ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite\">·¥π·µí·µñ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Z</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#Quiver.Hom.unmop\">Quiver.Hom.unmop</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#Quiver.Hom.unmop\">Quiver.Hom.unmop</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#Quiver.Hom.unmop\">Quiver.Hom.unmop</a> <span class=\"fn\">g</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Opposite.lean#L127-L128","name":"CategoryTheory.mop_id","line":127,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.mop_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.mop_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">mop_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u‚ÇÅ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v‚ÇÅ, u‚ÇÅ}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#Quiver.Hom.mop\">Quiver.Hom.mop</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.mop\">CategoryTheory.MonoidalOpposite.mop</a> <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Opposite.lean#L122-L123","name":"CategoryTheory.mop_comp","line":122,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.mop_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.mop_comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">mop_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u‚ÇÅ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v‚ÇÅ, u‚ÇÅ}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Z</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#Quiver.Hom.mop\">Quiver.Hom.mop</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#Quiver.Hom.mop\">Quiver.Hom.mop</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#Quiver.Hom.mop\">Quiver.Hom.mop</a> <span class=\"fn\">g</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Opposite.lean#L117-L118","name":"CategoryTheory.mop_unmop","line":117,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.mop_unmop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.mop_unmop\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">mop_unmop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u‚ÇÅ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v‚ÇÅ, u‚ÇÅ}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite\">·¥π·µí·µñ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite\">·¥π·µí·µñ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#Quiver.Hom.mop\">Quiver.Hom.mop</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#Quiver.Hom.unmop\">Quiver.Hom.unmop</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Opposite.lean#L112-L113","name":"CategoryTheory.unmop_mop","line":112,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.unmop_mop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.unmop_mop\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">unmop_mop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u‚ÇÅ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v‚ÇÅ, u‚ÇÅ}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#Quiver.Hom.unmop\">Quiver.Hom.unmop</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#Quiver.Hom.mop\">Quiver.Hom.mop</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Opposite.lean#L106-L108","name":"CategoryTheory.unmop_inj","line":106,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.unmop_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.unmop_inj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">unmop_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u‚ÇÅ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v‚ÇÅ, u‚ÇÅ}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite\">·¥π·µí·µñ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite\">·¥π·µí·µñ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">Quiver.Hom.unmop</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Opposite.lean#L102-L103","name":"CategoryTheory.mop_inj","line":102,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.mop_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.mop_inj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">mop_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u‚ÇÅ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v‚ÇÅ, u‚ÇÅ}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">Quiver.Hom.mop</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Opposite.lean#L96-L97","name":"Quiver.Hom.unmop","line":96,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Opposite.html#Quiver.Hom.unmop","doc":"We can think of a morphism `f : mop X ‚ü∂ mop Y` as a morphism `X ‚ü∂ Y`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#Quiver.Hom.unmop\"><span class=\"name\">Quiver</span>.<span class=\"name\">Hom</span>.<span class=\"name\">unmop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u‚ÇÅ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v‚ÇÅ, u‚ÇÅ}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite\">·¥π·µí·µñ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite\">·¥π·µí·µñ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.unmop\">CategoryTheory.MonoidalOpposite.unmop</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.unmop\">CategoryTheory.MonoidalOpposite.unmop</a> <span class=\"fn\">Y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Opposite.lean#L91-L92","name":"Quiver.Hom.mop","line":91,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Opposite.html#Quiver.Hom.mop","doc":"The monoidal opposite of a morphism `f : X ‚ü∂ Y` is just `f`, thought of as `mop X ‚ü∂ mop Y`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#Quiver.Hom.mop\"><span class=\"name\">Quiver</span>.<span class=\"name\">Hom</span>.<span class=\"name\">mop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u‚ÇÅ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v‚ÇÅ, u‚ÇÅ}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.mop\">CategoryTheory.MonoidalOpposite.mop</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.mop\">CategoryTheory.MonoidalOpposite.mop</a> <span class=\"fn\">Y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Opposite.lean#L76-L77","name":"CategoryTheory.MonoidalOpposite.monoidalOppositeCategory","line":76,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.monoidalOppositeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.monoidalOppositeCategory\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MonoidalOpposite</span>.<span class=\"name\">monoidalOppositeCategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u‚ÇÅ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v‚ÇÅ, u‚ÇÅ}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v‚ÇÅ, u‚ÇÅ}</a>     <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite\">·¥π·µí·µñ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Opposite.lean#L72-L73","name":"CategoryTheory.MonoidalOpposite.unmop_mop","line":72,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.unmop_mop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.unmop_mop\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MonoidalOpposite</span>.<span class=\"name\">unmop_mop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u‚ÇÅ}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.unmop\">CategoryTheory.MonoidalOpposite.unmop</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.mop\">CategoryTheory.MonoidalOpposite.mop</a> <span class=\"fn\">X</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Opposite.lean#L67-L68","name":"CategoryTheory.MonoidalOpposite.mop_unmop","line":67,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.mop_unmop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.mop_unmop\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MonoidalOpposite</span>.<span class=\"name\">mop_unmop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u‚ÇÅ}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite\">·¥π·µí·µñ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.mop\">CategoryTheory.MonoidalOpposite.mop</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.unmop\">CategoryTheory.MonoidalOpposite.unmop</a> <span class=\"fn\">X</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Opposite.lean#L62-L63","name":"CategoryTheory.MonoidalOpposite.unop_inj_iff","line":62,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.unop_inj_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.unop_inj_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MonoidalOpposite</span>.<span class=\"name\">unop_inj_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u‚ÇÅ}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite\">·¥π·µí·µñ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite\">·¥π·µí·µñ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.unmop\">CategoryTheory.MonoidalOpposite.unmop</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.unmop\">CategoryTheory.MonoidalOpposite.unmop</a> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Opposite.lean#L57-L58","name":"CategoryTheory.MonoidalOpposite.op_inj_iff","line":57,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.op_inj_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.op_inj_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MonoidalOpposite</span>.<span class=\"name\">op_inj_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u‚ÇÅ}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.mop\">CategoryTheory.MonoidalOpposite.mop</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.mop\">CategoryTheory.MonoidalOpposite.mop</a> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Opposite.lean#L52-L53","name":"CategoryTheory.MonoidalOpposite.unop_injective","line":52,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.unop_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.unop_injective\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MonoidalOpposite</span>.<span class=\"name\">unop_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u‚ÇÅ}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">CategoryTheory.MonoidalOpposite.unmop</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Opposite.lean#L48-L49","name":"CategoryTheory.MonoidalOpposite.op_injective","line":48,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.op_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.op_injective\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MonoidalOpposite</span>.<span class=\"name\">op_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u‚ÇÅ}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">CategoryTheory.MonoidalOpposite.mop</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Opposite.lean#L44-L45","name":"CategoryTheory.MonoidalOpposite.unmop","line":44,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.unmop","doc":"Think of an object of `C·¥π·µí·µñ` as an object of `C`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.unmop\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MonoidalOpposite</span>.<span class=\"name\">unmop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u‚ÇÅ}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite\">·¥π·µí·µñ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Opposite.lean#L38-L39","name":"CategoryTheory.MonoidalOpposite.mop","line":38,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.mop","doc":"Think of an object of `C` as an object of `C·¥π·µí·µñ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.mop\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MonoidalOpposite</span>.<span class=\"name\">mop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u‚ÇÅ}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite\">·¥π·µí·µñ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Opposite.lean#L34-L34","name":"CategoryTheory.MonoidalOpposite.¬´term_·¥π·µí·µñ¬ª","line":34,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.¬´term_·¥π·µí·µñ¬ª","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite.¬´term_·¥π·µí·µñ¬ª\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MonoidalOpposite</span>.<span class=\"name\">¬´term_·¥π·µí·µñ¬ª</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Opposite.lean#L28-L29","name":"CategoryTheory.MonoidalOpposite","line":28,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite","doc":"A type synonym for the monoidal opposite. Use the notation `C·¥π·µí·µñ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Opposite.html#CategoryTheory.MonoidalOpposite\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MonoidalOpposite</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u‚ÇÅ)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u‚ÇÅ</div></div>"}]}