{"name":"Mathlib.Geometry.Manifold.Sheaf.Basic","instances":[{"typeNames":["CategoryTheory.Bundled.α"],"name":"TopCat.of.chartedSpace","className":"ChartedSpace"},{"typeNames":["CategoryTheory.Bundled.α"],"name":"TopCat.of.hasGroupoid","className":"HasGroupoid"},{"typeNames":["Prefunctor.obj"],"name":"StructureGroupoid.LocalInvariantProp.sheafHasCoeToFun","className":"CoeFun"}],"imports":["Init","Mathlib.Geometry.Manifold.LocalInvariantProperties","Mathlib.Topology.Sheaves.LocalPredicate"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Geometry/Manifold/Sheaf/Basic.lean#L92-L94","name":"StructureGroupoid.LocalInvariantProp.section_spec","line":92,"kind":"theorem","docLink":"./Mathlib/Geometry/Manifold/Sheaf/Basic.html#StructureGroupoid.LocalInvariantProp.section_spec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Manifold/Sheaf/Basic.html#StructureGroupoid.LocalInvariantProp.section_spec\"><span class=\"name\">StructureGroupoid</span>.<span class=\"name\">LocalInvariantProp</span>.<span class=\"name\">section_spec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">H'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#StructureGroupoid\">StructureGroupoid</a> <span class=\"fn\">H</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#StructureGroupoid\">StructureGroupoid</a> <span class=\"fn\">H'</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> → <span class=\"fn\">H'</span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">H</span></span> → <span class=\"fn\"><span class=\"fn\">H</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">H</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M' : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">H'</span> <span class=\"fn\">M'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hG : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/LocalInvariantProperties.html#StructureGroupoid.LocalInvariantProp\">StructureGroupoid.LocalInvariantProp</a> <span class=\"fn\">G</span> <span class=\"fn\">G'</span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">TopCat.of</a> <span class=\"fn\">M</span></span>)</span></span></span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/Sheaf/Basic.html#StructureGroupoid.LocalInvariantProp.sheaf\">StructureGroupoid.LocalInvariantProp.sheaf</a> <span class=\"fn\">M</span> <span class=\"fn\">M'</span> <span class=\"fn\">hG</span></span>)</span>.val</span>.obj <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/LocalInvariantProperties.html#ChartedSpace.LiftProp\">ChartedSpace.LiftProp</a> <span class=\"fn\">P</span> <span class=\"fn\">↑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Geometry/Manifold/Sheaf/Basic.lean#L87-L89","name":"StructureGroupoid.LocalInvariantProp.sheafHasCoeToFun","line":87,"kind":"instance","docLink":"./Mathlib/Geometry/Manifold/Sheaf/Basic.html#StructureGroupoid.LocalInvariantProp.sheafHasCoeToFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Manifold/Sheaf/Basic.html#StructureGroupoid.LocalInvariantProp.sheafHasCoeToFun\"><span class=\"name\">StructureGroupoid</span>.<span class=\"name\">LocalInvariantProp</span>.<span class=\"name\">sheafHasCoeToFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">H'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#StructureGroupoid\">StructureGroupoid</a> <span class=\"fn\">H</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#StructureGroupoid\">StructureGroupoid</a> <span class=\"fn\">H'</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> → <span class=\"fn\">H'</span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">H</span></span> → <span class=\"fn\"><span class=\"fn\">H</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">H</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M' : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">H'</span> <span class=\"fn\">M'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hG : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/LocalInvariantProperties.html#StructureGroupoid.LocalInvariantProp\">StructureGroupoid.LocalInvariantProp</a> <span class=\"fn\">G</span> <span class=\"fn\">G'</span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">TopCat.of</a> <span class=\"fn\">M</span></span>)</span></span></span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeFun\">CoeFun</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/Sheaf/Basic.html#StructureGroupoid.LocalInvariantProp.sheaf\">StructureGroupoid.LocalInvariantProp.sheaf</a> <span class=\"fn\">M</span> <span class=\"fn\">M'</span> <span class=\"fn\">hG</span></span>)</span>.val</span>.obj <span class=\"fn\">U</span></span>)</span>\n  <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/Sheaf/Basic.html#StructureGroupoid.LocalInvariantProp.sheaf\">StructureGroupoid.LocalInvariantProp.sheaf</a> <span class=\"fn\">M</span> <span class=\"fn\">M'</span> <span class=\"fn\">hG</span></span>)</span>.val</span>.obj <span class=\"fn\">U</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">U</span>.unop</span></span> → <span class=\"fn\">M'</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Geometry/Manifold/Sheaf/Basic.lean#L82-L84","name":"StructureGroupoid.LocalInvariantProp.sheaf","line":82,"kind":"def","docLink":"./Mathlib/Geometry/Manifold/Sheaf/Basic.html#StructureGroupoid.LocalInvariantProp.sheaf","doc":"Let `P` be a `LocalInvariantProp` for functions between spaces with the groupoids `G`, `G'`\nand let `M`, `M'` be charted spaces modelled on the model spaces of those groupoids.  Then there is\na sheaf of types on `M` which, to each open set `U` in `M`, associates the type of bundled\nfunctions from `U` to `M'` satisfying the lift of `P`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Manifold/Sheaf/Basic.html#StructureGroupoid.LocalInvariantProp.sheaf\"><span class=\"name\">StructureGroupoid</span>.<span class=\"name\">LocalInvariantProp</span>.<span class=\"name\">sheaf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">H'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#StructureGroupoid\">StructureGroupoid</a> <span class=\"fn\">H</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#StructureGroupoid\">StructureGroupoid</a> <span class=\"fn\">H'</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> → <span class=\"fn\">H'</span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">H</span></span> → <span class=\"fn\"><span class=\"fn\">H</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">H</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M' : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">H'</span> <span class=\"fn\">M'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hG : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/LocalInvariantProperties.html#StructureGroupoid.LocalInvariantProp\">StructureGroupoid.LocalInvariantProp</a> <span class=\"fn\">G</span> <span class=\"fn\">G'</span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Sheaf.html#TopCat.Sheaf\">TopCat.Sheaf</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">TopCat.of</a> <span class=\"fn\">M</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Geometry/Manifold/Sheaf/Basic.lean#L58-L75","name":"StructureGroupoid.LocalInvariantProp.localPredicate","line":58,"kind":"def","docLink":"./Mathlib/Geometry/Manifold/Sheaf/Basic.html#StructureGroupoid.LocalInvariantProp.localPredicate","doc":"Let `P` be a `LocalInvariantProp` for functions between spaces with the groupoids `G`, `G'`\nand let `M`, `M'` be charted spaces modelled on the model spaces of those groupoids.  Then there is\nan induced `LocalPredicate` on the functions from `M` to `M'`, given by `LiftProp P`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Manifold/Sheaf/Basic.html#StructureGroupoid.LocalInvariantProp.localPredicate\"><span class=\"name\">StructureGroupoid</span>.<span class=\"name\">LocalInvariantProp</span>.<span class=\"name\">localPredicate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">H'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#StructureGroupoid\">StructureGroupoid</a> <span class=\"fn\">H</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#StructureGroupoid\">StructureGroupoid</a> <span class=\"fn\">H'</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> → <span class=\"fn\">H'</span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">H</span></span> → <span class=\"fn\"><span class=\"fn\">H</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">H</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M' : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">H'</span> <span class=\"fn\">M'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hG : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/LocalInvariantProperties.html#StructureGroupoid.LocalInvariantProp\">StructureGroupoid.LocalInvariantProp</a> <span class=\"fn\">G</span> <span class=\"fn\">G'</span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate\">TopCat.LocalPredicate</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">TopCat.of</a> <span class=\"fn\">M</span></span>)</span></span>) =&gt; <span class=\"fn\">M'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Geometry/Manifold/Sheaf/Basic.lean#L50-L51","name":"TopCat.of.hasGroupoid","line":50,"kind":"instance","docLink":"./Mathlib/Geometry/Manifold/Sheaf/Basic.html#TopCat.of.hasGroupoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Manifold/Sheaf/Basic.html#TopCat.of.hasGroupoid\"><span class=\"name\">TopCat</span>.<span class=\"name\">of</span>.<span class=\"name\">hasGroupoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#StructureGroupoid\">StructureGroupoid</a> <span class=\"fn\">H</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">H</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#HasGroupoid\">HasGroupoid</a> <span class=\"fn\">M</span> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#HasGroupoid\">HasGroupoid</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">TopCat.of</a> <span class=\"fn\">M</span></span>)</span></span>)</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Geometry/Manifold/Sheaf/Basic.lean#L45-L46","name":"TopCat.of.chartedSpace","line":45,"kind":"instance","docLink":"./Mathlib/Geometry/Manifold/Sheaf/Basic.html#TopCat.of.chartedSpace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Manifold/Sheaf/Basic.html#TopCat.of.chartedSpace\"><span class=\"name\">TopCat</span>.<span class=\"name\">of</span>.<span class=\"name\">chartedSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">H</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">H</span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">TopCat.of</a> <span class=\"fn\">M</span></span>)</span></span></span></div></div>"}]}