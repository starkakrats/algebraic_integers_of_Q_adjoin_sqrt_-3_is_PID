{"name":"Mathlib.Algebra.Quandle","instances":[{"typeNames":["MulOpposite"],"name":"Rack.oppositeRack","className":"Rack"},{"typeNames":["ShelfHom"],"name":"ShelfHom.instFunLikeShelfHom","className":"DFunLike"},{"typeNames":["ShelfHom"],"name":"ShelfHom.inhabited","className":"Inhabited"},{"typeNames":["MulOpposite"],"name":"Quandle.oppositeQuandle","className":"Quandle"},{"typeNames":["Quandle.Conj"],"name":"Quandle.Conj.quandle","className":"Quandle"},{"typeNames":["Quandle.Dihedral"],"name":"Quandle.instQuandleDihedral","className":"Quandle"},{"typeNames":["Rack.PreEnvelGroup"],"name":"Rack.PreEnvelGroup.inhabited","className":"Inhabited"},{"typeNames":["Rack.PreEnvelGroupRel'"],"name":"Rack.PreEnvelGroupRel'.inhabited","className":"Inhabited"},{"typeNames":["Rack.PreEnvelGroup"],"name":"Rack.PreEnvelGroup.setoid","className":"Setoid"},{"typeNames":["Rack.EnvelGroup"],"name":"Rack.instDivInvMonoidEnvelGroup","className":"DivInvMonoid"},{"typeNames":["Rack.EnvelGroup"],"name":"Rack.instGroupEnvelGroup","className":"Group"},{"typeNames":["Rack.EnvelGroup"],"name":"Rack.EnvelGroup.inhabited","className":"Inhabited"}],"imports":["Init","Mathlib.Algebra.Group.Equiv.Basic","Mathlib.Algebra.Group.Aut","Mathlib.Data.ZMod.Defs","Mathlib.Tactic.Ring"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L801-L803","name":"Rack.envelAction_prop","line":801,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.envelAction_prop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.envelAction_prop\"><span class=\"name\">Rack</span>.<span class=\"name\">envelAction_prop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Rack.envelAction</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup\">Rack.toEnvelGroup</a> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L796-L797","name":"Rack.envelAction","line":796,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Rack.envelAction","doc":"The induced group homomorphism from the enveloping group into bijections of the rack,\nusing `Rack.toConj`. Satisfies the property `envelAction_prop`.\n\nThis gives the rack `R` the structure of an augmented rack over `EnvelGroup R`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.envelAction\"><span class=\"name\">Rack</span>.<span class=\"name\">envelAction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.EnvelGroup\">Rack.EnvelGroup</a> <span class=\"fn\">R</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">R</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L785-L788","name":"Rack.toEnvelGroup.univ_uniq","line":785,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup.univ_uniq","doc":"The homomorphism `toEnvelGroup.map f` is the unique map that fits into the commutative\ntriangle in `toEnvelGroup.univ`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup.univ_uniq\"><span class=\"name\">Rack</span>.<span class=\"name\">toEnvelGroup</span>.<span class=\"name\">univ_uniq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj\">Quandle.Conj</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.EnvelGroup\">Rack.EnvelGroup</a> <span class=\"fn\">R</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.comp\">ShelfHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj.map\">Quandle.Conj.map</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup\">Rack.toEnvelGroup</a> <span class=\"fn\">R</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Rack.toEnvelGroup.map</span> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L777-L779","name":"Rack.toEnvelGroup.univ","line":777,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup.univ","doc":"Given a homomorphism from a rack to a group, it factors through the enveloping group.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup.univ\"><span class=\"name\">Rack</span>.<span class=\"name\">toEnvelGroup</span>.<span class=\"name\">univ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj\">Quandle.Conj</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.comp\">ShelfHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj.map\">Quandle.Conj.map</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Rack.toEnvelGroup.map</span> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup\">Rack.toEnvelGroup</a> <span class=\"fn\">R</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L742-L772","name":"Rack.toEnvelGroup.map","line":742,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup.map","doc":"Given a map from a rack to a group, lift it to being a map from the enveloping group.\nMore precisely, the `EnvelGroup` functor is left adjoint to `Quandle.Conj`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup.map\"><span class=\"name\">Rack</span>.<span class=\"name\">toEnvelGroup</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj\">Quandle.Conj</a> <span class=\"fn\">G</span></span>)</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.EnvelGroup\">Rack.EnvelGroup</a> <span class=\"fn\">R</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L721-L734","name":"Rack.toEnvelGroup.mapAux.well_def","line":721,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup.mapAux.well_def","doc":"Show that `toEnvelGroup.mapAux` sends equivalent expressions to equal terms.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup.mapAux.well_def\"><span class=\"name\">Rack</span>.<span class=\"name\">toEnvelGroup</span>.<span class=\"name\">mapAux</span>.<span class=\"name\">well_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj\">Quandle.Conj</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">Rack.PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup.mapAux\">Rack.toEnvelGroup.mapAux</a> <span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup.mapAux\">Rack.toEnvelGroup.mapAux</a> <span class=\"fn\">f</span> <span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L707-L712","name":"Rack.toEnvelGroup.mapAux","line":707,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup.mapAux","doc":"The preliminary definition of the induced map from the enveloping group.\nSee `toEnvelGroup.map`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup.mapAux\"><span class=\"name\">Rack</span>.<span class=\"name\">toEnvelGroup</span>.<span class=\"name\">mapAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj\">Quandle.Conj</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span> → <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L698-L701","name":"Rack.toEnvelGroup","line":698,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup","doc":"The canonical homomorphism from a rack to its enveloping group.\nSatisfies universal properties given by `toEnvelGroup.map` and `toEnvelGroup.univ`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup\"><span class=\"name\">Rack</span>.<span class=\"name\">toEnvelGroup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj\">Quandle.Conj</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.EnvelGroup\">Rack.EnvelGroup</a> <span class=\"fn\">R</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L691-L692","name":"Rack.EnvelGroup.inhabited","line":691,"kind":"instance","docLink":"./Mathlib/Algebra/Quandle.html#Rack.EnvelGroup.inhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.EnvelGroup.inhabited\"><span class=\"name\">Rack</span>.<span class=\"name\">EnvelGroup</span>.<span class=\"name\">inhabited</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.EnvelGroup\">Rack.EnvelGroup</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L687-L689","name":"Rack.instGroupEnvelGroup","line":687,"kind":"instance","docLink":"./Mathlib/Algebra/Quandle.html#Rack.instGroupEnvelGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.instGroupEnvelGroup\"><span class=\"name\">Rack</span>.<span class=\"name\">instGroupEnvelGroup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.EnvelGroup\">Rack.EnvelGroup</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L673-L685","name":"Rack.instDivInvMonoidEnvelGroup","line":673,"kind":"instance","docLink":"./Mathlib/Algebra/Quandle.html#Rack.instDivInvMonoidEnvelGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.instDivInvMonoidEnvelGroup\"><span class=\"name\">Rack</span>.<span class=\"name\">instDivInvMonoidEnvelGroup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#DivInvMonoid\">DivInvMonoid</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.EnvelGroup\">Rack.EnvelGroup</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L667-L668","name":"Rack.EnvelGroup","line":667,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Rack.EnvelGroup","doc":"The universal enveloping group for the rack R.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.EnvelGroup\"><span class=\"name\">Rack</span>.<span class=\"name\">EnvelGroup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L656-L663","name":"Rack.PreEnvelGroup.setoid","line":656,"kind":"instance","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.setoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.setoid\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroup</span>.<span class=\"name\">setoid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Setoid\">Setoid</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L651-L653","name":"Rack.PreEnvelGroupRel.trans","line":651,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel.trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel.trans\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel</span>.<span class=\"name\">trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel\">Rack.PreEnvelGroupRel</a> <span class=\"fn\">R</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel\">Rack.PreEnvelGroupRel</a> <span class=\"fn\">R</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel\">Rack.PreEnvelGroupRel</a> <span class=\"fn\">R</span> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L645-L647","name":"Rack.PreEnvelGroupRel.symm","line":645,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel.symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel.symm\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel</span>.<span class=\"name\">symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel\">Rack.PreEnvelGroupRel</a> <span class=\"fn\">R</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel\">Rack.PreEnvelGroupRel</a> <span class=\"fn\">R</span> <span class=\"fn\">b</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L639-L641","name":"Rack.PreEnvelGroupRel.refl","line":639,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel.refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel.refl\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel</span>.<span class=\"name\">refl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel\">Rack.PreEnvelGroupRel</a> <span class=\"fn\">R</span> <span class=\"fn\">a</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L634-L635","name":"Rack.PreEnvelGroupRel'.rel","line":634,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.rel","doc":"A quick way to convert a `PreEnvelGroupRel'` to a `PreEnvelGroupRel`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.rel\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel'</span>.<span class=\"name\">rel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">Rack.PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel\">Rack.PreEnvelGroupRel</a> <span class=\"fn\">R</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L629-L629","name":"Rack.PreEnvelGroupRel.rel","line":629,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel.rel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel.rel\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel</span>.<span class=\"name\">rel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">Rack.PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel\">Rack.PreEnvelGroupRel</a> <span class=\"fn\">R</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L628-L629","name":"Rack.PreEnvelGroupRel","line":628,"kind":"inductive","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel","doc":"The `PreEnvelGroupRel` relation as a `Prop`.  Used as the relation for `PreEnvelGroup.setoid`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L620-L622","name":"Rack.PreEnvelGroupRel'.inhabited","line":620,"kind":"instance","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.inhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.inhabited\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel'</span>.<span class=\"name\">inhabited</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">Rack.PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">Rack.PreEnvelGroup.unit</span> <span class=\"fn\">Rack.PreEnvelGroup.unit</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L616-L617","name":"Rack.PreEnvelGroupRel'.act_incl","line":616,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.act_incl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.act_incl\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel'</span>.<span class=\"name\">act_incl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">Rack.PreEnvelGroupRel'</a> <span class=\"fn\">R</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.mul\">Rack.PreEnvelGroup.mul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.mul\">Rack.PreEnvelGroup.mul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.incl\">Rack.PreEnvelGroup.incl</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.incl\">Rack.PreEnvelGroup.incl</a> <span class=\"fn\">y</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.inv\">Rack.PreEnvelGroup.inv</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.incl\">Rack.PreEnvelGroup.incl</a> <span class=\"fn\">x</span></span>)</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.incl\">Rack.PreEnvelGroup.incl</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L615-L615","name":"Rack.PreEnvelGroupRel'.mul_left_inv","line":615,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.mul_left_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.mul_left_inv\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel'</span>.<span class=\"name\">mul_left_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">Rack.PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.mul\">Rack.PreEnvelGroup.mul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.inv\">Rack.PreEnvelGroup.inv</a> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">Rack.PreEnvelGroup.unit</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L614-L614","name":"Rack.PreEnvelGroupRel'.mul_one","line":614,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.mul_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.mul_one\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel'</span>.<span class=\"name\">mul_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">Rack.PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.mul\">Rack.PreEnvelGroup.mul</a> <span class=\"fn\">a</span> <span class=\"fn\">Rack.PreEnvelGroup.unit</span></span>)</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L613-L613","name":"Rack.PreEnvelGroupRel'.one_mul","line":613,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.one_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.one_mul\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel'</span>.<span class=\"name\">one_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">Rack.PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.mul\">Rack.PreEnvelGroup.mul</a> <span class=\"fn\">Rack.PreEnvelGroup.unit</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L612-L612","name":"Rack.PreEnvelGroupRel'.assoc","line":612,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.assoc\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel'</span>.<span class=\"name\">assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">Rack.PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.mul\">Rack.PreEnvelGroup.mul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.mul\">Rack.PreEnvelGroup.mul</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">c</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.mul\">Rack.PreEnvelGroup.mul</a> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.mul\">Rack.PreEnvelGroup.mul</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L610-L611","name":"Rack.PreEnvelGroupRel'.congr_inv","line":610,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.congr_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.congr_inv\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel'</span>.<span class=\"name\">congr_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">Rack.PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">a</span> <span class=\"fn\">a'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">Rack.PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.inv\">Rack.PreEnvelGroup.inv</a> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.inv\">Rack.PreEnvelGroup.inv</a> <span class=\"fn\">a'</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L608-L609","name":"Rack.PreEnvelGroupRel'.congr_mul","line":608,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.congr_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.congr_mul\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel'</span>.<span class=\"name\">congr_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">Rack.PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">a</span> <span class=\"fn\">a'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">Rack.PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">b</span> <span class=\"fn\">b'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">Rack.PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.mul\">Rack.PreEnvelGroup.mul</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.mul\">Rack.PreEnvelGroup.mul</a> <span class=\"fn\">a'</span> <span class=\"fn\">b'</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L606-L607","name":"Rack.PreEnvelGroupRel'.trans","line":606,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.trans\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel'</span>.<span class=\"name\">trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">Rack.PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hbc : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">Rack.PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">Rack.PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L605-L605","name":"Rack.PreEnvelGroupRel'.symm","line":605,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.symm\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel'</span>.<span class=\"name\">symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">Rack.PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">Rack.PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">b</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L604-L604","name":"Rack.PreEnvelGroupRel'.refl","line":604,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.refl\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel'</span>.<span class=\"name\">refl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">Rack.PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">a</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L603-L617","name":"Rack.PreEnvelGroupRel'","line":603,"kind":"inductive","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'","doc":"Relations for the enveloping group. This is a type-valued relation because\n`toEnvelGroup.mapAux.well_def` inducts on it to show `toEnvelGroup.map`\nis well-defined.  The relation `PreEnvelGroupRel` is the `Prop`-valued version,\nwhich is used to define `EnvelGroup` itself.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span> → <a href=\"./foundational_types.html\">Type</a> u</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L592-L593","name":"Rack.PreEnvelGroup.inhabited","line":592,"kind":"instance","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.inhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.inhabited\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroup</span>.<span class=\"name\">inhabited</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L589-L589","name":"Rack.PreEnvelGroup.inv","line":589,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.inv\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroup</span>.<span class=\"name\">inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L588-L588","name":"Rack.PreEnvelGroup.mul","line":588,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.mul\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroup</span>.<span class=\"name\">mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L587-L587","name":"Rack.PreEnvelGroup.incl","line":587,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.incl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.incl\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroup</span>.<span class=\"name\">incl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L586-L586","name":"Rack.PreEnvelGroup.unit","line":586,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.unit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.unit\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroup</span>.<span class=\"name\">unit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">Rack.PreEnvelGroup</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L585-L589","name":"Rack.PreEnvelGroup","line":585,"kind":"inductive","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup","doc":"Free generators of the enveloping group.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L514-L519","name":"Rack.toConj","line":514,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Rack.toConj","doc":"This is the natural rack homomorphism to the conjugation quandle of the group `R ≃ R`\nthat acts on the rack.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.toConj\"><span class=\"name\">Rack</span>.<span class=\"name\">toConj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj\">Quandle.Conj</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">R</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L492-L505","name":"Quandle.instQuandleDihedral","line":492,"kind":"instance","docLink":"./Mathlib/Algebra/Quandle.html#Quandle.instQuandleDihedral","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandle.instQuandleDihedral\"><span class=\"name\">Quandle</span>.<span class=\"name\">instQuandleDihedral</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle\">Quandle</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle.Dihedral\">Quandle.Dihedral</a> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L486-L489","name":"Quandle.dihedralAct.inv","line":486,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Quandle.dihedralAct.inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandle.dihedralAct.inv\"><span class=\"name\">Quandle</span>.<span class=\"name\">dihedralAct</span>.<span class=\"name\">inv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Basic.html#Function.Involutive\">Function.Involutive</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle.dihedralAct\">Quandle.dihedralAct</a> <span class=\"fn\">n</span> <span class=\"fn\">a</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L483-L483","name":"Quandle.dihedralAct","line":483,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Quandle.dihedralAct","doc":"The operation for the dihedral quandle.  It does not need to be an equivalence\nbecause it is an involution (see `dihedralAct.inv`).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandle.dihedralAct\"><span class=\"name\">Quandle</span>.<span class=\"name\">dihedralAct</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L476-L477","name":"Quandle.Dihedral","line":476,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Quandle.Dihedral","doc":"The dihedral quandle. This is the conjugation quandle of the dihedral group restrict to flips.\n\nUsed for Fox n-colorings of knots.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandle.Dihedral\"><span class=\"name\">Quandle</span>.<span class=\"name\">Dihedral</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L461-L464","name":"Quandle.Conj.map","line":461,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Quandle.Conj.map","doc":"`Conj` is functorial\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj.map\"><span class=\"name\">Quandle</span>.<span class=\"name\">Conj</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj\">Quandle.Conj</a> <span class=\"fn\">G</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj\">Quandle.Conj</a> <span class=\"fn\">H</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L454-L456","name":"Quandle.conj_swap","line":454,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Quandle.conj_swap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandle.conj_swap\"><span class=\"name\">Quandle</span>.<span class=\"name\">conj_swap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj\">Quandle.Conj</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj\">Quandle.Conj</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">y</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L449-L451","name":"Quandle.conj_act_eq_conj","line":449,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Quandle.conj_act_eq_conj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandle.conj_act_eq_conj\"><span class=\"name\">Quandle</span>.<span class=\"name\">conj_act_eq_conj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj\">Quandle.Conj</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj\">Quandle.Conj</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L433-L445","name":"Quandle.Conj.quandle","line":433,"kind":"instance","docLink":"./Mathlib/Algebra/Quandle.html#Quandle.Conj.quandle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj.quandle\"><span class=\"name\">Quandle</span>.<span class=\"name\">Conj</span>.<span class=\"name\">quandle</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle\">Quandle</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj\">Quandle.Conj</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L430-L430","name":"Quandle.Conj","line":430,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Quandle.Conj","doc":"The conjugation quandle of a group.  Each element of the group acts by\nthe corresponding inner automorphism.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj\"><span class=\"name\">Quandle</span>.<span class=\"name\">Conj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_2</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L418-L422","name":"Quandle.oppositeQuandle","line":418,"kind":"instance","docLink":"./Mathlib/Algebra/Quandle.html#Quandle.oppositeQuandle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandle.oppositeQuandle\"><span class=\"name\">Quandle</span>.<span class=\"name\">oppositeQuandle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle\">Quandle</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle\">Quandle</a> <span class=\"fn\"><span class=\"fn\">Q</span><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite\">ᵐᵒᵖ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L413-L415","name":"Quandle.fix_inv","line":413,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Quandle.fix_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandle.fix_inv\"><span class=\"name\">Quandle</span>.<span class=\"name\">fix_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle\">Quandle</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">Q</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">Rack.invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L401-L401","name":"Quandle.fix","line":401,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Quandle.fix","doc":"The fixing property of a Quandle "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandle.fix\"><span class=\"name\">Quandle</span>.<span class=\"name\">fix</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle\">Quandle</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L399-L399","name":"Quandle.mk","line":399,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Quandle.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandle.mk\"><span class=\"name\">Quandle</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[toRack : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(fix : <span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle\">Quandle</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L399-L401","name":"Quandle","line":399,"kind":"class","docLink":"./Mathlib/Algebra/Quandle.html#Quandle","doc":"A quandle is a rack such that each automorphism fixes its corresponding element.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandle\"><span class=\"name\">Quandle</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack\"><span class=\"name\">Rack</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L391-L392","name":"ShelfHom.comp_apply","line":391,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#ShelfHom.comp_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.comp_apply\"><span class=\"name\">ShelfHom</span>.<span class=\"name\">comp_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">S₂</span> <span class=\"fn\">S₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">S₁</span> <span class=\"fn\">S₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">S₁</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.comp\">ShelfHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L384-L387","name":"ShelfHom.comp","line":384,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#ShelfHom.comp","doc":"The composition of shelf homomorphisms "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.comp\"><span class=\"name\">ShelfHom</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S₃ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">S₂</span> <span class=\"fn\">S₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">S₁</span> <span class=\"fn\">S₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">S₁</span> <span class=\"fn\">S₃</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L379-L380","name":"ShelfHom.inhabited","line":379,"kind":"instance","docLink":"./Mathlib/Algebra/Quandle.html#ShelfHom.inhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.inhabited\"><span class=\"name\">ShelfHom</span>.<span class=\"name\">inhabited</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(S : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">S</span> <span class=\"fn\">S</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L374-L376","name":"ShelfHom.id","line":374,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#ShelfHom.id","doc":"The identity homomorphism "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.id\"><span class=\"name\">ShelfHom</span>.<span class=\"name\">id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(S : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">S</span> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L369-L370","name":"ShelfHom.map_act","line":369,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#ShelfHom.map_act","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.map_act\"><span class=\"name\">ShelfHom</span>.<span class=\"name\">map_act</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">S₁</span> <span class=\"fn\">S₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">S₁</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">S₁</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L365-L365","name":"ShelfHom.toFun_eq_coe","line":365,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#ShelfHom.toFun_eq_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.toFun_eq_coe\"><span class=\"name\">ShelfHom</span>.<span class=\"name\">toFun_eq_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">S₁</span> <span class=\"fn\">S₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.toFun</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L361-L363","name":"ShelfHom.instFunLikeShelfHom","line":361,"kind":"instance","docLink":"./Mathlib/Algebra/Quandle.html#ShelfHom.instFunLikeShelfHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.instFunLikeShelfHom\"><span class=\"name\">ShelfHom</span>.<span class=\"name\">instFunLikeShelfHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">S₁</span> <span class=\"fn\">S₂</span></span>)</span> <span class=\"fn\">S₁</span> <span class=\"fn\">S₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L350-L352","name":"Rack.assoc_iff_id","line":350,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.assoc_iff_id","doc":"Associative racks are uninteresting.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.assoc_iff_id\"><span class=\"name\">Rack</span>.<span class=\"name\">assoc_iff_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">y</span> <span class=\"fn\">z</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\">z</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L344-L345","name":"Rack.IsAbelian","line":344,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Rack.IsAbelian","doc":"An abelian rack is one for which the mediality axiom holds.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.IsAbelian\"><span class=\"name\">Rack</span>.<span class=\"name\">IsAbelian</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L337-L339","name":"Rack.involutory_invAct_eq_act","line":337,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.involutory_invAct_eq_act","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.involutory_invAct_eq_act\"><span class=\"name\">Rack</span>.<span class=\"name\">involutory_invAct_eq_act</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.IsInvolutory\">Rack.IsInvolutory</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">Rack.invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L333-L334","name":"Rack.IsInvolutory","line":333,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Rack.IsInvolutory","doc":"An involutory rack is one for which `Rack.oppositeRack R x` is an involution for every x.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.IsInvolutory\"><span class=\"name\">Rack</span>.<span class=\"name\">IsInvolutory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L323-L328","name":"Rack.selfApplyEquiv","line":323,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Rack.selfApplyEquiv","doc":"The map `x ↦ x ◃ x` is a bijection.  (This has applications for the\nregular isotopy version of the Reidemeister I move for knot diagrams.)\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.selfApplyEquiv\"><span class=\"name\">Rack</span>.<span class=\"name\">selfApplyEquiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L315-L317","name":"Rack.self_invAct_eq_iff_eq","line":315,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.self_invAct_eq_iff_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.self_invAct_eq_iff_eq\"><span class=\"name\">Rack</span>.<span class=\"name\">self_invAct_eq_iff_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">Rack.invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">Rack.invAct</a> <span class=\"fn\">y</span> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L307-L312","name":"Rack.self_act_eq_iff_eq","line":307,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.self_act_eq_iff_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.self_act_eq_iff_eq\"><span class=\"name\">Rack</span>.<span class=\"name\">self_act_eq_iff_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">y</span> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L302-L304","name":"Rack.self_invAct_act_eq","line":302,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.self_invAct_act_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.self_invAct_act_eq\"><span class=\"name\">Rack</span>.<span class=\"name\">self_invAct_act_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">Rack.invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L294-L298","name":"Rack.self_act_invAct_eq","line":294,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.self_act_invAct_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.self_act_invAct_eq\"><span class=\"name\">Rack</span>.<span class=\"name\">self_act_invAct_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">Rack.invAct</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">Rack.invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L288-L290","name":"Rack.self_invAct_invAct_eq","line":288,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.self_invAct_invAct_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.self_invAct_invAct_eq\"><span class=\"name\">Rack</span>.<span class=\"name\">self_invAct_invAct_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">Rack.invAct</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">Rack.invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">Rack.invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L284-L284","name":"Rack.self_act_act_eq","line":284,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.self_act_act_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.self_act_act_eq\"><span class=\"name\">Rack</span>.<span class=\"name\">self_act_act_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L279-L280","name":"Rack.op_invAct_op_eq","line":279,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.op_invAct_op_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.op_invAct_op_eq\"><span class=\"name\">Rack</span>.<span class=\"name\">op_invAct_op_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">Rack.invAct</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite.op\">MulOpposite.op</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite.op\">MulOpposite.op</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite.op\">MulOpposite.op</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L274-L275","name":"Rack.op_act_op_eq","line":274,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.op_act_op_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.op_act_op_eq\"><span class=\"name\">Rack</span>.<span class=\"name\">op_act_op_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite.op\">MulOpposite.op</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite.op\">MulOpposite.op</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite.op\">MulOpposite.op</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">Rack.invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L258-L270","name":"Rack.oppositeRack","line":258,"kind":"instance","docLink":"./Mathlib/Algebra/Quandle.html#Rack.oppositeRack","doc":"The opposite rack, swapping the roles of `◃` and `◃⁻¹`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.oppositeRack\"><span class=\"name\">Rack</span>.<span class=\"name\">oppositeRack</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\"><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite\">ᵐᵒᵖ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L251-L253","name":"Rack.ad_conj","line":251,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.ad_conj","doc":"The *adjoint action* of a rack on itself is `op'`, and the adjoint\naction of `x ◃ y` is the conjugate of the action of `y` by the action\nof `x`. It is another way to understand the self-distributivity axiom.\n\nThis is used in the natural rack homomorphism `toConj` from `R` to\n`Conj (R ≃ R)` defined by `op'`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.ad_conj\"><span class=\"name\">Rack</span>.<span class=\"name\">ad_conj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.act'\">Rack.act'</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.act'\">Rack.act'</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.act'\">Rack.act'</a> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.act'\">Rack.act'</a> <span class=\"fn\">x</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L239-L241","name":"Rack.self_distrib_inv","line":239,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.self_distrib_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.self_distrib_inv\"><span class=\"name\">Rack</span>.<span class=\"name\">self_distrib_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">Rack.invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">Rack.invAct</a> <span class=\"fn\">y</span> <span class=\"fn\">z</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">Rack.invAct</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">Rack.invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">Rack.invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">z</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L232-L236","name":"Rack.left_cancel_inv","line":232,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.left_cancel_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.left_cancel_inv\"><span class=\"name\">Rack</span>.<span class=\"name\">left_cancel_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y' : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">Rack.invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">Rack.invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">y'</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L225-L229","name":"Rack.left_cancel","line":225,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.left_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.left_cancel\"><span class=\"name\">Rack</span>.<span class=\"name\">left_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y' : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y'</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L221-L222","name":"Rack.act_invAct_eq","line":221,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.act_invAct_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.act_invAct_eq\"><span class=\"name\">Rack</span>.<span class=\"name\">act_invAct_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">Rack.invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L216-L217","name":"Rack.invAct_act_eq","line":216,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.invAct_act_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct_act_eq\"><span class=\"name\">Rack</span>.<span class=\"name\">invAct_act_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">Rack.invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L211-L212","name":"Rack.invAct_apply","line":211,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.invAct_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct_apply\"><span class=\"name\">Rack</span>.<span class=\"name\">invAct_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.act'\">Rack.act'</a> <span class=\"fn\">x</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">Rack.invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L206-L207","name":"Rack.act'_symm_apply","line":206,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.act'_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.act'_symm_apply\"><span class=\"name\">Rack</span>.<span class=\"name\">act'_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.act'\">Rack.act'</a> <span class=\"fn\">x</span></span>)</span>.symm</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">Rack.invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L201-L202","name":"Rack.act'_apply","line":201,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.act'_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.act'_apply\"><span class=\"name\">Rack</span>.<span class=\"name\">act'_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.act'\">Rack.act'</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L193-L197","name":"Rack.act'","line":193,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Rack.act'","doc":"A rack acts on itself by equivalences.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.act'\"><span class=\"name\">Rack</span>.<span class=\"name\">act'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L177-L178","name":"UnitalShelf.assoc","line":177,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#UnitalShelf.assoc","doc":"The associativity of a unital shelf comes for free.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf.assoc\"><span class=\"name\">UnitalShelf</span>.<span class=\"name\">assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf\">UnitalShelf</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">y</span> <span class=\"fn\">z</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L169-L171","name":"UnitalShelf.act_self_act_eq","line":169,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#UnitalShelf.act_self_act_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf.act_self_act_eq\"><span class=\"name\">UnitalShelf</span>.<span class=\"name\">act_self_act_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf\">UnitalShelf</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L166-L166","name":"UnitalShelf.act_idem","line":166,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#UnitalShelf.act_idem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf.act_idem\"><span class=\"name\">UnitalShelf</span>.<span class=\"name\">act_idem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf\">UnitalShelf</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L161-L163","name":"UnitalShelf.act_act_self_eq","line":161,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#UnitalShelf.act_act_self_eq","doc":"A monoid is *graphic* if, for all `x` and `y`, the *graphic identity*\n`(x * y) * x = x * y` holds.  For a unital shelf, this graphic\nidentity holds.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf.act_act_self_eq\"><span class=\"name\">UnitalShelf</span>.<span class=\"name\">act_act_self_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf\">UnitalShelf</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L146-L147","name":"Quandles.«term_→◃_»","line":146,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Quandles.«term_→◃_»","doc":"Shelf Homomorphism"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandles.«term_→◃_»\"><span class=\"name\">Quandles</span>.<span class=\"name\">«term_→◃_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L143-L144","name":"Quandles.«term_◃⁻¹_»","line":143,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Quandles.«term_◃⁻¹_»","doc":"Inverse Action of a Rack"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandles.«term_◃⁻¹_»\"><span class=\"name\">Quandles</span>.<span class=\"name\">«term_◃⁻¹_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L140-L141","name":"Quandles.«term_◃_»","line":140,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Quandles.«term_◃_»","doc":"Action of a Shelf"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandles.«term_◃_»\"><span class=\"name\">Quandles</span>.<span class=\"name\">«term_◃_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L137-L137","name":"Rack.right_inv","line":137,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Rack.right_inv","doc":"Proof of right inverse "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.right_inv\"><span class=\"name\">Rack</span>.<span class=\"name\">right_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">Rack.invAct</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L135-L135","name":"Rack.left_inv","line":135,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Rack.left_inv","doc":"Proof of left inverse "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.left_inv\"><span class=\"name\">Rack</span>.<span class=\"name\">left_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.LeftInverse\">Function.LeftInverse</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">Rack.invAct</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L133-L133","name":"Rack.invAct","line":133,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Rack.invAct","doc":"The inverse actions of the elements "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\"><span class=\"name\">Rack</span>.<span class=\"name\">invAct</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L131-L131","name":"Rack.mk","line":131,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Rack.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.mk\"><span class=\"name\">Rack</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[toShelf : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(invAct : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(left_inv : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.LeftInverse\">Function.LeftInverse</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">invAct</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(right_inv : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">invAct</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L131-L137","name":"Rack","line":131,"kind":"class","docLink":"./Mathlib/Algebra/Quandle.html#Rack","doc":"A *rack* is an automorphic set (a set with an action on itself by\nbijections) that is self-distributive.  It is a shelf such that each\nelement's action is invertible.\n\nThe notations `x ◃ y` and `x ◃⁻¹ y` denote the action and the\ninverse action, respectively, and they are right associative.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack\"><span class=\"name\">Rack</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Shelf\"><span class=\"name\">Shelf</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L119-L119","name":"ShelfHom.map_act'","line":119,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#ShelfHom.map_act'","doc":"The homomorphism property of a Shelf Homomorphism"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.map_act'\"><span class=\"name\">ShelfHom</span>.<span class=\"name\">map_act'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">S₁</span> <span class=\"fn\">S₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">S₁</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">S₁</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.toFun\">ShelfHom.toFun</a> <span class=\"fn\">self</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.toFun\">ShelfHom.toFun</a> <span class=\"fn\">self</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.toFun\">ShelfHom.toFun</a> <span class=\"fn\">self</span> <span class=\"fn\">y</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L117-L117","name":"ShelfHom.toFun","line":117,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#ShelfHom.toFun","doc":"The function under the Shelf Homomorphism "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.toFun\"><span class=\"name\">ShelfHom</span>.<span class=\"name\">toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">S₁</span> <span class=\"fn\">S₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">S₁</span> → <span class=\"fn\">S₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L115-L115","name":"ShelfHom.mk","line":115,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#ShelfHom.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.mk\"><span class=\"name\">ShelfHom</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(toFun : <span class=\"fn\"><span class=\"fn\">S₁</span> → <span class=\"fn\">S₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(map_act' : <span class=\"fn\">∀ {<span class=\"fn\">x </span>y : <span class=\"fn\">S₁</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">toFun</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">toFun</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">toFun</span> <span class=\"fn\">y</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">S₁</span> <span class=\"fn\">S₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L115-L119","name":"ShelfHom","line":115,"kind":"structure","docLink":"./Mathlib/Algebra/Quandle.html#ShelfHom","doc":"The type of homomorphisms between shelves.\nThis is also the notion of rack and quandle homomorphisms.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\"><span class=\"name\">ShelfHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(S₁ : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(S₂ : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_1 u_2)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L114-L114","name":"ShelfHom.ext_iff","line":114,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#ShelfHom.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.ext_iff\"><span class=\"name\">ShelfHom</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₁</span></span>} {<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₂</span></span>} (<span class=\"fn\">x </span>y : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">S₁</span> <span class=\"fn\">S₂</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.toFun</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.toFun</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L114-L114","name":"ShelfHom.ext","line":114,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#ShelfHom.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.ext\"><span class=\"name\">ShelfHom</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S₁ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S₂ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₁</span></span>} {<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₂</span></span>} (<span class=\"fn\">x </span>y : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">S₁</span> <span class=\"fn\">S₂</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.toFun</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.toFun</span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L108-L108","name":"UnitalShelf.act_one","line":108,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#UnitalShelf.act_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf.act_one\"><span class=\"name\">UnitalShelf</span>.<span class=\"name\">act_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf\">UnitalShelf</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">a</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L107-L107","name":"UnitalShelf.one_act","line":107,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#UnitalShelf.one_act","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf.one_act\"><span class=\"name\">UnitalShelf</span>.<span class=\"name\">one_act</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf\">UnitalShelf</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">1</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L106-L106","name":"UnitalShelf.mk","line":106,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#UnitalShelf.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf.mk\"><span class=\"name\">UnitalShelf</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[toShelf : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[toOne : <span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#One\">One</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(one_act : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">1</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(act_one : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">a</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf\">UnitalShelf</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L106-L108","name":"UnitalShelf","line":106,"kind":"class","docLink":"./Mathlib/Algebra/Quandle.html#UnitalShelf","doc":"A *unital shelf* is a shelf equipped with an element `1` such that, for all elements `x`,\nwe have both `x ◃ 1` and `1 ◃ x` equal `x`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf\"><span class=\"name\">UnitalShelf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Shelf\"><span class=\"name\">Shelf</span></a></span></span>\n, <span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/Init/ZeroOne.html#One\"><span class=\"name\">One</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L99-L99","name":"Shelf.self_distrib","line":99,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Shelf.self_distrib","doc":"A verification that `act` is self-distributive"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Shelf.self_distrib\"><span class=\"name\">Shelf</span>.<span class=\"name\">self_distrib</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">y</span> <span class=\"fn\">z</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">z</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L97-L97","name":"Shelf.act","line":97,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Shelf.act","doc":"The action of the `Shelf` over `α`"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\"><span class=\"name\">Shelf</span>.<span class=\"name\">act</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L95-L95","name":"Shelf.mk","line":95,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Shelf.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Shelf.mk\"><span class=\"name\">Shelf</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(act : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(self_distrib : <span class=\"fn\">∀ {<span class=\"fn\">x </span>y z : <span class=\"fn\">α</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">act</span> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">act</span> <span class=\"fn\">y</span> <span class=\"fn\">z</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">act</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">act</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">act</span> <span class=\"fn\">x</span> <span class=\"fn\">z</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Quandle.lean#L95-L99","name":"Shelf","line":95,"kind":"class","docLink":"./Mathlib/Algebra/Quandle.html#Shelf","doc":"A *Shelf* is a structure with a self-distributive binary operation.\nThe binary operation is regarded as a left action of the type on itself.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Shelf\"><span class=\"name\">Shelf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"}]}