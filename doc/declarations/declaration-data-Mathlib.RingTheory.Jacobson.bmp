{"name":"Mathlib.RingTheory.Jacobson","instances":[{"typeNames":[],"name":"Ideal.isJacobson_field","className":"Ideal.IsJacobson"},{"typeNames":["HasQuotient.Quotient"],"name":"Ideal.isJacobson_quotient","className":"Ideal.IsJacobson"},{"typeNames":["Polynomial"],"name":"Ideal.Polynomial.instIsJacobsonPolynomialToSemiringToCommSemiringCommRing","className":"Ideal.IsJacobson"},{"typeNames":["MvPolynomial"],"name":"Ideal.MvPolynomial.isJacobson","className":"Ideal.IsJacobson"}],"imports":["Init","Mathlib.RingTheory.Localization.Away.Basic","Mathlib.RingTheory.Ideal.Over","Mathlib.RingTheory.JacobsonIdeal"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L701-L723","name":"Ideal.MvPolynomial.comp_C_integral_of_surjective_of_jacobson","line":701,"kind":"theorem","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.MvPolynomial.comp_C_integral_of_surjective_of_jacobson","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.MvPolynomial.comp_C_integral_of_surjective_of_jacobson\"><span class=\"name\">Ideal</span>.<span class=\"name\">MvPolynomial</span>.<span class=\"name\">comp_C_integral_of_surjective_of_jacobson</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">σ</span> <span class=\"fn\">R</span></span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure.html#RingHom.IsIntegral\">RingHom.IsIntegral</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom.comp\">RingHom.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">MvPolynomial.C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L692-L697","name":"Ideal.MvPolynomial.quotient_mk_comp_C_isIntegral_of_jacobson","line":692,"kind":"theorem","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.MvPolynomial.quotient_mk_comp_C_isIntegral_of_jacobson","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.MvPolynomial.quotient_mk_comp_C_isIntegral_of_jacobson\"><span class=\"name\">Ideal</span>.<span class=\"name\">MvPolynomial</span>.<span class=\"name\">quotient_mk_comp_C_isIntegral_of_jacobson</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">R</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hP : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.IsMaximal\">Ideal.IsMaximal</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure.html#RingHom.IsIntegral\">RingHom.IsIntegral</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom.comp\">RingHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Quotient.html#Ideal.Quotient.mk\">Ideal.Quotient.mk</a> <span class=\"fn\">P</span></span>)</span> <span class=\"fn\">MvPolynomial.C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L633-L639","name":"Ideal.MvPolynomial.isJacobson","line":633,"kind":"instance","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.MvPolynomial.isJacobson","doc":"General form of the Nullstellensatz for Jacobson rings, since in a Jacobson ring we have\n`Inf {P maximal | P ≥ I} = Inf {P prime | P ≥ I} = I.radical`. Fields are always Jacobson,\nand in that special case this is (most of) the classical Nullstellensatz,\nsince `I(V(I))` is the intersection of maximal ideals containing `I`, which is then `I.radical` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.MvPolynomial.isJacobson\"><span class=\"name\">Ideal</span>.<span class=\"name\">MvPolynomial</span>.<span class=\"name\">isJacobson</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">ι</span> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L621-L626","name":"Ideal.MvPolynomial.isJacobson_MvPolynomial_fin","line":621,"kind":"theorem","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.MvPolynomial.isJacobson_MvPolynomial_fin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.MvPolynomial.isJacobson_MvPolynomial_fin\"><span class=\"name\">Ideal</span>.<span class=\"name\">MvPolynomial</span>.<span class=\"name\">isJacobson_MvPolynomial_fin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[H : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L599-L609","name":"Ideal.Polynomial.comp_C_integral_of_surjective_of_jacobson","line":599,"kind":"theorem","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.Polynomial.comp_C_integral_of_surjective_of_jacobson","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.Polynomial.comp_C_integral_of_surjective_of_jacobson\"><span class=\"name\">Ideal</span>.<span class=\"name\">Polynomial</span>.<span class=\"name\">comp_C_integral_of_surjective_of_jacobson</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure.html#RingHom.IsIntegral\">RingHom.IsIntegral</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom.comp\">RingHom.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">Polynomial.C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L594-L597","name":"Ideal.Polynomial.isMaximal_comap_C_of_isJacobson'","line":594,"kind":"theorem","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.Polynomial.isMaximal_comap_C_of_isJacobson'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.Polynomial.isMaximal_comap_C_of_isJacobson'\"><span class=\"name\">Ideal</span>.<span class=\"name\">Polynomial</span>.<span class=\"name\">isMaximal_comap_C_of_isJacobson'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hP : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.IsMaximal\">Ideal.IsMaximal</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.IsMaximal\">Ideal.IsMaximal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Operations.html#Ideal.comap\">Ideal.comap</a> <span class=\"fn\">Polynomial.C</span> <span class=\"fn\">P</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L587-L590","name":"Ideal.Polynomial.isMaximal_comap_C_of_isJacobson","line":587,"kind":"theorem","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.Polynomial.isMaximal_comap_C_of_isJacobson","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.Polynomial.isMaximal_comap_C_of_isJacobson\"><span class=\"name\">Ideal</span>.<span class=\"name\">Polynomial</span>.<span class=\"name\">isMaximal_comap_C_of_isJacobson</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hP : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.IsMaximal\">Ideal.IsMaximal</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.IsMaximal\">Ideal.IsMaximal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Operations.html#Ideal.comap\">Ideal.comap</a> <span class=\"fn\">Polynomial.C</span> <span class=\"fn\">P</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L562-L583","name":"Ideal.Polynomial.quotient_mk_comp_C_isIntegral_of_jacobson","line":562,"kind":"theorem","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.Polynomial.quotient_mk_comp_C_isIntegral_of_jacobson","doc":"If `R` is a Jacobson ring, and `P` is a maximal ideal of `R[X]`,\nthen `R → R[X]/P` is an integral map. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.Polynomial.quotient_mk_comp_C_isIntegral_of_jacobson\"><span class=\"name\">Ideal</span>.<span class=\"name\">Polynomial</span>.<span class=\"name\">quotient_mk_comp_C_isIntegral_of_jacobson</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hP : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.IsMaximal\">Ideal.IsMaximal</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure.html#RingHom.IsIntegral\">RingHom.IsIntegral</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom.comp\">RingHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Quotient.html#Ideal.Quotient.mk\">Ideal.Quotient.mk</a> <span class=\"fn\">P</span></span>)</span> <span class=\"fn\">Polynomial.C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L480-L521","name":"Ideal.Polynomial.isMaximal_comap_C_of_isMaximal","line":480,"kind":"theorem","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.Polynomial.isMaximal_comap_C_of_isMaximal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.Polynomial.isMaximal_comap_C_of_isMaximal\"><span class=\"name\">Ideal</span>.<span class=\"name\">Polynomial</span>.<span class=\"name\">isMaximal_comap_C_of_isMaximal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hP : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.IsMaximal\">Ideal.IsMaximal</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hP' : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">R</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Polynomial.C</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">P</span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.IsMaximal\">Ideal.IsMaximal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Operations.html#Ideal.comap\">Ideal.comap</a> <span class=\"fn\">Polynomial.C</span> <span class=\"fn\">P</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L469-L470","name":"Ideal.Polynomial.instIsJacobsonPolynomialToSemiringToCommSemiringCommRing","line":469,"kind":"instance","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.Polynomial.instIsJacobsonPolynomialToSemiringToCommSemiringCommRing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.Polynomial.instIsJacobsonPolynomialToSemiringToCommSemiringCommRing\"><span class=\"name\">Ideal</span>.<span class=\"name\">Polynomial</span>.<span class=\"name\">instIsJacobsonPolynomialToSemiringToCommSemiringCommRing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L462-L466","name":"Ideal.Polynomial.isJacobson_polynomial_iff_isJacobson","line":462,"kind":"theorem","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.Polynomial.isJacobson_polynomial_iff_isJacobson","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.Polynomial.isJacobson_polynomial_iff_isJacobson\"><span class=\"name\">Ideal</span>.<span class=\"name\">Polynomial</span>.<span class=\"name\">isJacobson_polynomial_iff_isJacobson</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">R</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L433-L459","name":"Ideal.Polynomial.isJacobson_polynomial_of_isJacobson","line":433,"kind":"theorem","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.Polynomial.isJacobson_polynomial_of_isJacobson","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.Polynomial.isJacobson_polynomial_of_isJacobson\"><span class=\"name\">Ideal</span>.<span class=\"name\">Polynomial</span>.<span class=\"name\">isJacobson_polynomial_of_isJacobson</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hR : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L367-L407","name":"Ideal.Polynomial.jacobson_bot_of_integral_localization","line":367,"kind":"theorem","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.Polynomial.jacobson_bot_of_integral_localization","doc":"If `f : R → S` descends to an integral map in the localization at `x`,\nand `R` is a Jacobson ring, then the intersection of all maximal ideals in `S` is trivial "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.Polynomial.jacobson_bot_of_integral_localization\"><span class=\"name\">Ideal</span>.<span class=\"name\">Polynomial</span>.<span class=\"name\">jacobson_bot_of_integral_localization</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Rₘ : <a href=\"./foundational_types.html\">Type</a> u_6)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Sₘ : <a href=\"./foundational_types.html\">Type</a> u_7)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">Rₘ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">Sₘ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hφ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">φ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">Rₘ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Localization/Away/Basic.html#IsLocalization.Away\">IsLocalization.Away</a> <span class=\"fn\">x</span> <span class=\"fn\">Rₘ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">Sₘ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Localization/Basic.html#IsLocalization\">IsLocalization</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#Submonoid.map\">Submonoid.map</a> <span class=\"fn\">φ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <span class=\"fn\">x</span></span>)</span></span>)</span> <span class=\"fn\">Sₘ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hφ' : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure.html#RingHom.IsIntegral\">RingHom.IsIntegral</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Localization/Basic.html#IsLocalization.map\">IsLocalization.map</a> <span class=\"fn\">Sₘ</span> <span class=\"fn\">φ</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#Submonoid.comap\">Submonoid.comap</a> <span class=\"fn\">φ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#Submonoid.map\">Submonoid.map</a> <span class=\"fn\">φ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <span class=\"fn\">x</span></span>)</span></span>)</span></span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/JacobsonIdeal.html#Ideal.jacobson\">Ideal.jacobson</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L310-L362","name":"Ideal.Polynomial.isIntegral_isLocalization_polynomial_quotient","line":310,"kind":"theorem","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.Polynomial.isIntegral_isLocalization_polynomial_quotient","doc":"If `I` is a prime ideal of `R[X]` and `pX ∈ I` is a non-constant polynomial,\nthen the map `R →+* R[x]/I` descends to an integral map when localizing at `pX.leadingCoeff`.\nIn particular `X` is integral because it satisfies `pX`, and constants are trivially integral,\nso integrality of the entire extension follows by closure under addition and multiplication. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.Polynomial.isIntegral_isLocalization_polynomial_quotient\"><span class=\"name\">Ideal</span>.<span class=\"name\">Polynomial</span>.<span class=\"name\">isIntegral_isLocalization_polynomial_quotient</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Rₘ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Sₘ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">Rₘ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">Sₘ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pX : <span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hpX : <span class=\"fn\"><span class=\"fn\">pX</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Operations.html#Ideal.comap\">Ideal.comap</a> <span class=\"fn\">Polynomial.C</span> <span class=\"fn\">P</span></span></span>)</span> <span class=\"fn\">Rₘ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Localization/Away/Basic.html#IsLocalization.Away\">IsLocalization.Away</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Degree/Definitions.html#Polynomial.leadingCoeff\">Polynomial.leadingCoeff</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Eval.html#Polynomial.map\">Polynomial.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Quotient.html#Ideal.Quotient.mk\">Ideal.Quotient.mk</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Operations.html#Ideal.comap\">Ideal.comap</a> <span class=\"fn\">Polynomial.C</span> <span class=\"fn\">P</span></span>)</span></span>)</span> <span class=\"fn\">pX</span></span>)</span></span>)</span> <span class=\"fn\">Rₘ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">P</span></span>)</span> <span class=\"fn\">Sₘ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Localization/Basic.html#IsLocalization\">IsLocalization</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#Submonoid.map\">Submonoid.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/QuotientOperations.html#Ideal.quotientMap\">Ideal.quotientMap</a> <span class=\"fn\">P</span> <span class=\"fn\">Polynomial.C</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Operations.html#Ideal.comap\">Ideal.comap</a> <span class=\"fn\">Polynomial.C</span> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Operations.html#Ideal.comap\">Ideal.comap</a> <span class=\"fn\">Polynomial.C</span> <span class=\"fn\">P</span></span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Degree/Definitions.html#Polynomial.leadingCoeff\">Polynomial.leadingCoeff</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Eval.html#Polynomial.map\">Polynomial.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Quotient.html#Ideal.Quotient.mk\">Ideal.Quotient.mk</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Operations.html#Ideal.comap\">Ideal.comap</a> <span class=\"fn\">Polynomial.C</span> <span class=\"fn\">P</span></span>)</span></span>)</span> <span class=\"fn\">pX</span></span>)</span></span>)</span></span>)</span></span>)</span>\n  <span class=\"fn\">Sₘ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure.html#RingHom.IsIntegral\">RingHom.IsIntegral</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Localization/Basic.html#IsLocalization.map\">IsLocalization.map</a> <span class=\"fn\">Sₘ</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/QuotientOperations.html#Ideal.quotientMap\">Ideal.quotientMap</a> <span class=\"fn\">P</span> <span class=\"fn\">Polynomial.C</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Operations.html#Ideal.comap\">Ideal.comap</a> <span class=\"fn\">Polynomial.C</span> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Operations.html#Ideal.comap\">Ideal.comap</a> <span class=\"fn\">Polynomial.C</span> <span class=\"fn\">P</span></span></span>)</span></span>)</span>\n    <span class=\"fn\">(_ :\n      <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Degree/Definitions.html#Polynomial.leadingCoeff\">Polynomial.leadingCoeff</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Eval.html#Polynomial.map\">Polynomial.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Quotient.html#Ideal.Quotient.mk\">Ideal.Quotient.mk</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Operations.html#Ideal.comap\">Ideal.comap</a> <span class=\"fn\">Polynomial.C</span> <span class=\"fn\">P</span></span>)</span></span>)</span> <span class=\"fn\">pX</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>         <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#Submonoid.comap\">Submonoid.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/QuotientOperations.html#Ideal.quotientMap\">Ideal.quotientMap</a> <span class=\"fn\">P</span> <span class=\"fn\">Polynomial.C</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Operations.html#Ideal.comap\">Ideal.comap</a> <span class=\"fn\">Polynomial.C</span> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Operations.html#Ideal.comap\">Ideal.comap</a> <span class=\"fn\">Polynomial.C</span> <span class=\"fn\">P</span></span></span>)</span></span>)</span>\n          <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Operations.html#Submonoid.map\">Submonoid.map</a>\n            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/QuotientOperations.html#Ideal.quotientMap\">Ideal.quotientMap</a> <span class=\"fn\">P</span> <span class=\"fn\">Polynomial.C</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Operations.html#Ideal.comap\">Ideal.comap</a> <span class=\"fn\">Polynomial.C</span> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Operations.html#Ideal.comap\">Ideal.comap</a> <span class=\"fn\">Polynomial.C</span> <span class=\"fn\">P</span></span></span>)</span></span>)</span>\n            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a>\n              <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Degree/Definitions.html#Polynomial.leadingCoeff\">Polynomial.leadingCoeff</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Eval.html#Polynomial.map\">Polynomial.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Quotient.html#Ideal.Quotient.mk\">Ideal.Quotient.mk</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Operations.html#Ideal.comap\">Ideal.comap</a> <span class=\"fn\">Polynomial.C</span> <span class=\"fn\">P</span></span>)</span></span>)</span> <span class=\"fn\">pX</span></span>)</span></span>)</span></span>)</span></span>)</span></span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L287-L300","name":"Ideal.Polynomial.mem_closure_X_union_C","line":287,"kind":"theorem","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.Polynomial.mem_closure_X_union_C","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.Polynomial.mem_closure_X_union_C\"><span class=\"name\">Ideal</span>.<span class=\"name\">Polynomial</span>.<span class=\"name\">mem_closure_X_union_C</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Subring/Basic.html#Subring.closure\">Subring.closure</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Classes/SetNotation.html#Insert.insert\">insert</a> <span class=\"fn\">Polynomial.X</span> <span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span> | <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Degree/Definitions.html#Polynomial.degree\">Polynomial.degree</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">0</span></span>}</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L277-L284","name":"Ideal.Polynomial.Subring.mem_closure_image_of","line":277,"kind":"theorem","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.Polynomial.Subring.mem_closure_image_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.Polynomial.Subring.mem_closure_image_of\"><span class=\"name\">Ideal</span>.<span class=\"name\">Polynomial</span>.<span class=\"name\">Subring</span>.<span class=\"name\">mem_closure_image_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">T</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(u : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Subring/Basic.html#Subring.closure\">Subring.closure</a> <span class=\"fn\">u</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Subring/Basic.html#Subring.closure\">Subring.closure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">g</span></span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">u</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L238-L264","name":"Ideal.isJacobson_localization","line":238,"kind":"theorem","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.isJacobson_localization","doc":"If `S` is the localization of the Jacobson ring `R` at the submonoid generated by `y : R`, then\n`S` is Jacobson. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.isJacobson_localization\"><span class=\"name\">Ideal</span>.<span class=\"name\">isJacobson_localization</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Localization/Away/Basic.html#IsLocalization.Away\">IsLocalization.Away</a> <span class=\"fn\">y</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[H : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L224-L233","name":"Ideal.orderIsoOfMaximal","line":224,"kind":"def","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.orderIsoOfMaximal","doc":"If `R` is a Jacobson ring, then maximal ideals in the localization at `y`\ncorrespond to maximal ideals in the original ring `R` that don't contain `y` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.orderIsoOfMaximal\"><span class=\"name\">Ideal</span>.<span class=\"name\">orderIsoOfMaximal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Localization/Away/Basic.html#IsLocalization.Away\">IsLocalization.Away</a> <span class=\"fn\">y</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">S</span></span> // <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.IsMaximal\">Ideal.IsMaximal</a> <span class=\"fn\">p</span></span> }</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">{ <span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span> // <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.IsMaximal\">Ideal.IsMaximal</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">y</span> ∉ <span class=\"fn\">p</span></span></span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L214-L219","name":"Ideal.isMaximal_of_isMaximal_disjoint","line":214,"kind":"theorem","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.isMaximal_of_isMaximal_disjoint","doc":"If `R` is a Jacobson ring, then maximal ideals in the localization at `y`\ncorrespond to maximal ideals in the original ring `R` that don't contain `y`.\nThis lemma gives the correspondence in the particular case of an ideal and its map.\nSee `le_relIso_of_maximal` for the more general statement, and the reverse of this implication "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.isMaximal_of_isMaximal_disjoint\"><span class=\"name\">Ideal</span>.<span class=\"name\">isMaximal_of_isMaximal_disjoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Localization/Away/Basic.html#IsLocalization.Away\">IsLocalization.Away</a> <span class=\"fn\">y</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hI : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.IsMaximal\">Ideal.IsMaximal</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y</span> ∉ <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.IsMaximal\">Ideal.IsMaximal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Operations.html#Ideal.map\">Ideal.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#algebraMap\">algebraMap</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">I</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L179-L205","name":"Ideal.isMaximal_iff_isMaximal_disjoint","line":179,"kind":"theorem","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.isMaximal_iff_isMaximal_disjoint","doc":"If `R` is a Jacobson ring, then maximal ideals in the localization at `y`\ncorrespond to maximal ideals in the original ring `R` that don't contain `y`.\nThis lemma gives the correspondence in the particular case of an ideal and its comap.\nSee `le_relIso_of_maximal` for the more general relation isomorphism "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.isMaximal_iff_isMaximal_disjoint\"><span class=\"name\">Ideal</span>.<span class=\"name\">isMaximal_iff_isMaximal_disjoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Localization/Away/Basic.html#IsLocalization.Away\">IsLocalization.Away</a> <span class=\"fn\">y</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[H : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(J : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.IsMaximal\">Ideal.IsMaximal</a> <span class=\"fn\">J</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.IsMaximal\">Ideal.IsMaximal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Operations.html#Ideal.comap\">Ideal.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#algebraMap\">algebraMap</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">J</span></span>)</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">y</span> ∉ <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Operations.html#Ideal.comap\">Ideal.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#algebraMap\">algebraMap</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">J</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L165-L170","name":"Ideal.disjoint_powers_iff_not_mem","line":165,"kind":"theorem","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.disjoint_powers_iff_not_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.disjoint_powers_iff_not_mem\"><span class=\"name\">Ideal</span>.<span class=\"name\">disjoint_powers_iff_not_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hI : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Operations.html#Ideal.IsRadical\">Ideal.IsRadical</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <span class=\"fn\">y</span></span>)</span></span> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">y</span> ∉ <span class=\"fn\"><span class=\"fn\">I</span>.toAddSubmonoid</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L151-L152","name":"Ideal.isJacobson_of_isIntegral'","line":151,"kind":"theorem","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.isJacobson_of_isIntegral'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.isJacobson_of_isIntegral'\"><span class=\"name\">Ideal</span>.<span class=\"name\">isJacobson_of_isIntegral'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure.html#RingHom.IsIntegral\">RingHom.IsIntegral</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hR : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L132-L148","name":"Ideal.isJacobson_of_isIntegral","line":132,"kind":"theorem","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.isJacobson_of_isIntegral","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.isJacobson_of_isIntegral\"><span class=\"name\">Ideal</span>.<span class=\"name\">isJacobson_of_isIntegral</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hRS : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure.html#Algebra.IsIntegral\">Algebra.IsIntegral</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hR : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L127-L129","name":"Ideal.isJacobson_iso","line":127,"kind":"theorem","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.isJacobson_iso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.isJacobson_iso\"><span class=\"name\">Ideal</span>.<span class=\"name\">isJacobson_iso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Equiv.html#RingEquiv\">≃+*</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">R</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">S</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L120-L124","name":"Ideal.isJacobson_quotient","line":120,"kind":"instance","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.isJacobson_quotient","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.isJacobson_quotient\"><span class=\"name\">Ideal</span>.<span class=\"name\">isJacobson_quotient</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">I</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L108-L117","name":"Ideal.isJacobson_of_surjective","line":108,"kind":"theorem","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.isJacobson_of_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.isJacobson_of_surjective\"><span class=\"name\">Ideal</span>.<span class=\"name\">isJacobson_of_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[H : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ (f : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">S</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L102-L105","name":"Ideal.isJacobson_field","line":102,"kind":"instance","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.isJacobson_field","doc":"Fields have only two ideals, and the condition holds for both of them. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.isJacobson_field\"><span class=\"name\">Ideal</span>.<span class=\"name\">isJacobson_field</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L96-L98","name":"Ideal.radical_eq_jacobson","line":96,"kind":"theorem","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.radical_eq_jacobson","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.radical_eq_jacobson\"><span class=\"name\">Ideal</span>.<span class=\"name\">radical_eq_jacobson</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[H : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Operations.html#Ideal.radical\">Ideal.radical</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/JacobsonIdeal.html#Ideal.jacobson\">Ideal.jacobson</a> <span class=\"fn\">I</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L90-L93","name":"Ideal.isJacobson_iff_sInf_maximal'","line":90,"kind":"theorem","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.isJacobson_iff_sInf_maximal'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.isJacobson_iff_sInf_maximal'\"><span class=\"name\">Ideal</span>.<span class=\"name\">isJacobson_iff_sInf_maximal'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">R</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ {<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>}, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.IsPrime\">Ideal.IsPrime</a> <span class=\"fn\">I</span></span> → <span class=\"fn\">∃ (M : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>)</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">J</span> ∈ <span class=\"fn\">M</span>, <span class=\"fn\">∀ (<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">K</span></span> → <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet.sInf\">sInf</a> <span class=\"fn\">M</span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L84-L87","name":"Ideal.isJacobson_iff_sInf_maximal","line":84,"kind":"theorem","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.isJacobson_iff_sInf_maximal","doc":"A ring `R` is Jacobson if and only if for every prime ideal `I`,\n`I` can be written as the infimum of some collection of maximal ideals.\nAllowing ⊤ in the set `M` of maximal ideals is equivalent, but makes some proofs cleaner. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.isJacobson_iff_sInf_maximal\"><span class=\"name\">Ideal</span>.<span class=\"name\">isJacobson_iff_sInf_maximal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">R</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ {<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>}, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.IsPrime\">Ideal.IsPrime</a> <span class=\"fn\">I</span></span> → <span class=\"fn\">∃ (M : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>)</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">J</span> ∈ <span class=\"fn\">M</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.IsMaximal\">Ideal.IsMaximal</a> <span class=\"fn\">J</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet.sInf\">sInf</a> <span class=\"fn\">M</span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L70-L78","name":"Ideal.isJacobson_iff_prime_eq","line":70,"kind":"theorem","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.isJacobson_iff_prime_eq","doc":"A ring is a Jacobson ring if and only if for all prime ideals `P`,\nthe Jacobson radical of `P` is equal to `P`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.isJacobson_iff_prime_eq\"><span class=\"name\">Ideal</span>.<span class=\"name\">isJacobson_iff_prime_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">R</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.IsPrime\">Ideal.IsPrime</a> <span class=\"fn\">P</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/JacobsonIdeal.html#Ideal.jacobson\">Ideal.jacobson</a> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">P</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L63-L65","name":"Ideal.IsJacobson.out","line":63,"kind":"theorem","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson.out","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson.out\"><span class=\"name\">Ideal</span>.<span class=\"name\">IsJacobson</span>.<span class=\"name\">out</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">R</span></span> → <span class=\"fn\">∀ {<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>}, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Operations.html#Ideal.IsRadical\">Ideal.IsRadical</a> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/JacobsonIdeal.html#Ideal.jacobson\">Ideal.jacobson</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">I</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L58-L60","name":"Ideal.isJacobson_iff","line":58,"kind":"theorem","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.isJacobson_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.isJacobson_iff\"><span class=\"name\">Ideal</span>.<span class=\"name\">isJacobson_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">R</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Operations.html#Ideal.IsRadical\">Ideal.IsRadical</a> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/JacobsonIdeal.html#Ideal.jacobson\">Ideal.jacobson</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">I</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L55-L55","name":"Ideal.IsJacobson.out'","line":55,"kind":"def","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson.out'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson.out'\"><span class=\"name\">Ideal</span>.<span class=\"name\">IsJacobson</span>.<span class=\"name\">out'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Operations.html#Ideal.IsRadical\">Ideal.IsRadical</a> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/JacobsonIdeal.html#Ideal.jacobson\">Ideal.jacobson</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">I</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L54-L54","name":"Ideal.IsJacobson.mk","line":54,"kind":"ctor","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson.mk\"><span class=\"name\">Ideal</span>.<span class=\"name\">IsJacobson</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(out' : <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Operations.html#Ideal.IsRadical\">Ideal.IsRadical</a> <span class=\"fn\">I</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/JacobsonIdeal.html#Ideal.jacobson\">Ideal.jacobson</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">I</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\">Ideal.IsJacobson</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/Jacobson.lean#L54-L55","name":"Ideal.IsJacobson","line":54,"kind":"class","docLink":"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson","doc":"A ring is a Jacobson ring if for every radical ideal `I`,\nthe Jacobson radical of `I` is equal to `I`.\nSee `isJacobson_iff_prime_eq` and `isJacobson_iff_sInf_maximal` for equivalent definitions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Jacobson.html#Ideal.IsJacobson\"><span class=\"name\">Ideal</span>.<span class=\"name\">IsJacobson</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}