{"name":"Mathlib.Topology.Category.Born","instances":[{"typeNames":["Born","_builtin_typeu"],"name":"Born.instCoeSortBornType","className":"CoeSort"},{"typeNames":["CategoryTheory.Bundled.α"],"name":"Born.instBornologyα","className":"Bornology"},{"typeNames":["Born"],"name":"Born.instInhabitedBorn","className":"Inhabited"},{"typeNames":["LocallyBoundedMap"],"name":"Born.instBundledHomTypeBornologyLocallyBoundedMap","className":"CategoryTheory.BundledHom"},{"typeNames":["Born"],"name":"Born.instLargeCategoryBorn","className":"CategoryTheory.Category"},{"typeNames":["Born"],"name":"Born.instConcreteCategoryBornInstLargeCategoryBorn","className":"CategoryTheory.ConcreteCategory"}],"imports":["Init","Mathlib.CategoryTheory.ConcreteCategory.BundledHom","Mathlib.Topology.Bornology.Hom"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Born.lean#L53-L54","name":"Born.instConcreteCategoryBornInstLargeCategoryBorn","line":53,"kind":"instance","docLink":"./Mathlib/Topology/Category/Born.html#Born.instConcreteCategoryBornInstLargeCategoryBorn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Born.html#Born.instConcreteCategoryBornInstLargeCategoryBorn\"><span class=\"name\">Born</span>.<span class=\"name\">instConcreteCategoryBornInstLargeCategoryBorn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/Topology/Category/Born.html#Born\">Born</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Born.lean#L50-L51","name":"Born.instLargeCategoryBorn","line":50,"kind":"instance","docLink":"./Mathlib/Topology/Category/Born.html#Born.instLargeCategoryBorn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Born.html#Born.instLargeCategoryBorn\"><span class=\"name\">Born</span>.<span class=\"name\">instLargeCategoryBorn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <a href=\"./Mathlib/Topology/Category/Born.html#Born\">Born</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Born.lean#L45-L48","name":"Born.instBundledHomTypeBornologyLocallyBoundedMap","line":45,"kind":"instance","docLink":"./Mathlib/Topology/Category/Born.html#Born.instBundledHomTypeBornologyLocallyBoundedMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Born.html#Born.instBundledHomTypeBornologyLocallyBoundedMap\"><span class=\"name\">Born</span>.<span class=\"name\">instBundledHomTypeBornologyLocallyBoundedMap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom\">CategoryTheory.BundledHom</a> <a href=\"./Mathlib/Topology/Bornology/Hom.html#LocallyBoundedMap\">LocallyBoundedMap</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Born.lean#L42-L43","name":"Born.instInhabitedBorn","line":42,"kind":"instance","docLink":"./Mathlib/Topology/Category/Born.html#Born.instInhabitedBorn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Born.html#Born.instInhabitedBorn\"><span class=\"name\">Born</span>.<span class=\"name\">instInhabitedBorn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Topology/Category/Born.html#Born\">Born</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Born.lean#L37-L38","name":"Born.of","line":37,"kind":"def","docLink":"./Mathlib/Topology/Category/Born.html#Born.of","doc":"Construct a bundled `Born` from a `Bornology`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Born.html#Born.of\"><span class=\"name\">Born</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Bornology/Basic.html#Bornology\">Bornology</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/Born.html#Born\">Born</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Born.lean#L33-L34","name":"Born.instBornologyα","line":33,"kind":"instance","docLink":"./Mathlib/Topology/Category/Born.html#Born.instBornologyα","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Born.html#Born.instBornologyα\"><span class=\"name\">Born</span>.<span class=\"name\">instBornologyα</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Topology/Category/Born.html#Born\">Born</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Bornology/Basic.html#Bornology\">Bornology</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Born.lean#L30-L31","name":"Born.instCoeSortBornType","line":30,"kind":"instance","docLink":"./Mathlib/Topology/Category/Born.html#Born.instCoeSortBornType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Born.html#Born.instCoeSortBornType\"><span class=\"name\">Born</span>.<span class=\"name\">instCoeSortBornType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/Topology/Category/Born.html#Born\">Born</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u_1)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Born.lean#L23-L24","name":"Born","line":23,"kind":"def","docLink":"./Mathlib/Topology/Category/Born.html#Born","doc":"The category of bornologies. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Born.html#Born\"><span class=\"name\">Born</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u_1 + 1)</div></div>"}]}