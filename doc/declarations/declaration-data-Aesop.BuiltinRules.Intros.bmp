{"name":"Aesop.BuiltinRules.Intros","instances":[],"imports":["Init","Aesop.Frontend.Attribute","Std.Tactic.OpenPrivate"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/BuiltinRules/Intros.lean#L33-L56","name":"Aesop.BuiltinRules.intros","line":33,"kind":"def","docLink":"./Aesop/BuiltinRules/Intros.html#Aesop.BuiltinRules.intros","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/BuiltinRules/Intros.html#Aesop.BuiltinRules.intros\"><span class=\"name\">Aesop</span>.<span class=\"name\">BuiltinRules</span>.<span class=\"name\">intros</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTac\">Aesop.RuleTac</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/BuiltinRules/Intros.lean#L22-L30","name":"Aesop.BuiltinRules.introsUnfolding.run","line":22,"kind":"opaque","docLink":"./Aesop/BuiltinRules/Intros.html#Aesop.BuiltinRules.introsUnfolding.run","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/BuiltinRules/Intros.html#Aesop.BuiltinRules.introsUnfolding.run\"><span class=\"name\">Aesop</span>.<span class=\"name\">BuiltinRules</span>.<span class=\"name\">introsUnfolding</span>.<span class=\"name\">run</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvars : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/BuiltinRules/Intros.lean#L19-L30","name":"Aesop.BuiltinRules.introsUnfolding","line":19,"kind":"def","docLink":"./Aesop/BuiltinRules/Intros.html#Aesop.BuiltinRules.introsUnfolding","doc":"Introduce as many binders as possible while unfolding definitions with the\nambient transparency. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/BuiltinRules/Intros.html#Aesop.BuiltinRules.introsUnfolding\"><span class=\"name\">Aesop</span>.<span class=\"name\">BuiltinRules</span>.<span class=\"name\">introsUnfolding</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span>)</span></span></div></div>"}]}