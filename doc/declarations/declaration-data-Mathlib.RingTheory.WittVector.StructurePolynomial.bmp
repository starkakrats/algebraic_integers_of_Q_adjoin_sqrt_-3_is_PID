{"name":"Mathlib.RingTheory.WittVector.StructurePolynomial","instances":[],"imports":["Init","Mathlib.FieldTheory.Finite.Polynomial","Mathlib.NumberTheory.Basic","Mathlib.RingTheory.WittVector.WittPolynomial"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/WittVector/StructurePolynomial.lean#L405-L409","name":"wittStructureInt_vars","line":405,"kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureInt_vars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureInt_vars\"><span class=\"name\">wittStructureInt_vars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{idx : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Φ : <span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">idx</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Variables.html#MvPolynomial.vars\">MvPolynomial.vars</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureInt\">wittStructureInt</a> <span class=\"fn\">p</span> <span class=\"fn\">Φ</span> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">Finset.univ</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset.range\">Finset.range</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/WittVector/StructurePolynomial.lean#L389-L400","name":"wittStructureRat_vars","line":389,"kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureRat_vars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureRat_vars\"><span class=\"name\">wittStructureRat_vars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{idx : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Φ : <span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">idx</span> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Variables.html#MvPolynomial.vars\">MvPolynomial.vars</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureRat\">wittStructureRat</a> <span class=\"fn\">p</span> <span class=\"fn\">Φ</span> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">Finset.univ</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset.range\">Finset.range</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/WittVector/StructurePolynomial.lean#L377-L382","name":"constantCoeff_wittStructureInt","line":377,"kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#constantCoeff_wittStructureInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#constantCoeff_wittStructureInt\"><span class=\"name\">constantCoeff_wittStructureInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{idx : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Φ : <span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">idx</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">MvPolynomial.constantCoeff</span> <span class=\"fn\">Φ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">MvPolynomial.constantCoeff</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureInt\">wittStructureInt</a> <span class=\"fn\">p</span> <span class=\"fn\">Φ</span> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/WittVector/StructurePolynomial.lean#L369-L374","name":"constantCoeff_wittStructureInt_zero","line":369,"kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#constantCoeff_wittStructureInt_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#constantCoeff_wittStructureInt_zero\"><span class=\"name\">constantCoeff_wittStructureInt_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{idx : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Φ : <span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">idx</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">MvPolynomial.constantCoeff</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureInt\">wittStructureInt</a> <span class=\"fn\">p</span> <span class=\"fn\">Φ</span> <span class=\"fn\">0</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">MvPolynomial.constantCoeff</span> <span class=\"fn\">Φ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/WittVector/StructurePolynomial.lean#L361-L365","name":"constantCoeff_wittStructureRat","line":361,"kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#constantCoeff_wittStructureRat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#constantCoeff_wittStructureRat\"><span class=\"name\">constantCoeff_wittStructureRat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{idx : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Φ : <span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">idx</span> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">MvPolynomial.constantCoeff</span> <span class=\"fn\">Φ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">MvPolynomial.constantCoeff</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureRat\">wittStructureRat</a> <span class=\"fn\">p</span> <span class=\"fn\">Φ</span> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/WittVector/StructurePolynomial.lean#L354-L358","name":"constantCoeff_wittStructureRat_zero","line":354,"kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#constantCoeff_wittStructureRat_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#constantCoeff_wittStructureRat_zero\"><span class=\"name\">constantCoeff_wittStructureRat_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{idx : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Φ : <span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">idx</span> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">MvPolynomial.constantCoeff</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureRat\">wittStructureRat</a> <span class=\"fn\">p</span> <span class=\"fn\">Φ</span> <span class=\"fn\">0</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">MvPolynomial.constantCoeff</span> <span class=\"fn\">Φ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/WittVector/StructurePolynomial.lean#L345-L350","name":"wittStructureInt_rename","line":345,"kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureInt_rename","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureInt_rename\"><span class=\"name\">wittStructureInt_rename</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{idx : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Φ : <span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">idx</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">idx</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureInt\">wittStructureInt</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Rename.html#MvPolynomial.rename\">MvPolynomial.rename</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">Φ</span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Rename.html#MvPolynomial.rename\">MvPolynomial.rename</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Prod.map\">Prod.map</a> <span class=\"fn\">f</span> <span class=\"fn\">id</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureInt\">wittStructureInt</a> <span class=\"fn\">p</span> <span class=\"fn\">Φ</span> <span class=\"fn\">n</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/WittVector/StructurePolynomial.lean#L335-L342","name":"witt_structure_prop","line":335,"kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#witt_structure_prop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#witt_structure_prop\"><span class=\"name\">witt_structure_prop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{idx : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Φ : <span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">idx</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial.aeval\">MvPolynomial.aeval</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial.map\">MvPolynomial.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Int/Cast/Lemmas.html#Int.castRingHom\">Int.castRingHom</a> <span class=\"fn\">R</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureInt\">wittStructureInt</a> <span class=\"fn\">p</span> <span class=\"fn\">Φ</span> <span class=\"fn\">i</span></span>)</span></span></span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/WittPolynomial.html#wittPolynomial\">wittPolynomial</a> <span class=\"fn\">p</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial.aeval\">MvPolynomial.aeval</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">idx</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Rename.html#MvPolynomial.rename\">MvPolynomial.rename</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Prod.mk\">Prod.mk</a> <span class=\"fn\">i</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/WittPolynomial.html#wittPolynomial\">wittPolynomial</a> <span class=\"fn\">p</span> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span></span></span>)</span> <span class=\"fn\">Φ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/WittVector/StructurePolynomial.lean#L328-L332","name":"wittStructureInt_existsUnique","line":328,"kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureInt_existsUnique","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureInt_existsUnique\"><span class=\"name\">wittStructureInt_existsUnique</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{idx : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Φ : <span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">idx</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃! (<span class=\"fn\">φ</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></span>),\n  <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>),\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Monad.html#MvPolynomial.bind₁\">MvPolynomial.bind₁</a> <span class=\"fn\">φ</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/WittPolynomial.html#wittPolynomial\">wittPolynomial</a> <span class=\"fn\">p</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Monad.html#MvPolynomial.bind₁\">MvPolynomial.bind₁</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">idx</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Rename.html#MvPolynomial.rename\">MvPolynomial.rename</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Prod.mk\">Prod.mk</a> <span class=\"fn\">i</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/WittPolynomial.html#wittPolynomial\">wittPolynomial</a> <span class=\"fn\">p</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">n</span></span>)</span></span></span></span>)</span> <span class=\"fn\">Φ</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/WittVector/StructurePolynomial.lean#L310-L325","name":"eq_wittStructureInt","line":310,"kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#eq_wittStructureInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#eq_wittStructureInt\"><span class=\"name\">eq_wittStructureInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{idx : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Φ : <span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">idx</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Monad.html#MvPolynomial.bind₁\">MvPolynomial.bind₁</a> <span class=\"fn\">φ</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/WittPolynomial.html#wittPolynomial\">wittPolynomial</a> <span class=\"fn\">p</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Monad.html#MvPolynomial.bind₁\">MvPolynomial.bind₁</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">idx</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Rename.html#MvPolynomial.rename\">MvPolynomial.rename</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Prod.mk\">Prod.mk</a> <span class=\"fn\">i</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/WittPolynomial.html#wittPolynomial\">wittPolynomial</a> <span class=\"fn\">p</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">n</span></span>)</span></span></span></span>)</span> <span class=\"fn\">Φ</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">φ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureInt\">wittStructureInt</a> <span class=\"fn\">p</span> <span class=\"fn\">Φ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/WittVector/StructurePolynomial.lean#L301-L307","name":"wittStructureInt_prop","line":301,"kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureInt_prop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureInt_prop\"><span class=\"name\">wittStructureInt_prop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{idx : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Φ : <span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">idx</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Monad.html#MvPolynomial.bind₁\">MvPolynomial.bind₁</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureInt\">wittStructureInt</a> <span class=\"fn\">p</span> <span class=\"fn\">Φ</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/WittPolynomial.html#wittPolynomial\">wittPolynomial</a> <span class=\"fn\">p</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Monad.html#MvPolynomial.bind₁\">MvPolynomial.bind₁</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">idx</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Rename.html#MvPolynomial.rename\">MvPolynomial.rename</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Prod.mk\">Prod.mk</a> <span class=\"fn\">i</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/WittPolynomial.html#wittPolynomial\">wittPolynomial</a> <span class=\"fn\">p</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">n</span></span>)</span></span></span></span>)</span> <span class=\"fn\">Φ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/WittVector/StructurePolynomial.lean#L274-L298","name":"map_wittStructureInt","line":274,"kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#map_wittStructureInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#map_wittStructureInt\"><span class=\"name\">map_wittStructureInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{idx : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Φ : <span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">idx</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial.map\">MvPolynomial.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Int/Cast/Lemmas.html#Int.castRingHom\">Int.castRingHom</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureInt\">wittStructureInt</a> <span class=\"fn\">p</span> <span class=\"fn\">Φ</span> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureRat\">wittStructureRat</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial.map\">MvPolynomial.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Int/Cast/Lemmas.html#Int.castRingHom\">Int.castRingHom</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span></span>)</span> <span class=\"fn\">Φ</span></span>)</span> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/WittVector/StructurePolynomial.lean#L229-L267","name":"C_p_pow_dvd_bind₁_rename_wittPolynomial_sub_sum","line":229,"kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#C_p_pow_dvd_bind₁_rename_wittPolynomial_sub_sum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#C_p_pow_dvd_bind₁_rename_wittPolynomial_sub_sum\"><span class=\"name\">C_p_pow_dvd_bind₁_rename_wittPolynomial_sub_sum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{idx : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Φ : <span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">idx</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(IH : <span class=\"fn\">∀ <span class=\"fn\">m</span> &lt; <span class=\"fn\">n</span>,\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial.map\">MvPolynomial.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Int/Cast/Lemmas.html#Int.castRingHom\">Int.castRingHom</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureInt\">wittStructureInt</a> <span class=\"fn\">p</span> <span class=\"fn\">Φ</span> <span class=\"fn\">m</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureRat\">wittStructureRat</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial.map\">MvPolynomial.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Int/Cast/Lemmas.html#Int.castRingHom\">Int.castRingHom</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span></span>)</span> <span class=\"fn\">Φ</span></span>)</span> <span class=\"fn\">m</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">MvPolynomial.C</span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></span></span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Monad.html#MvPolynomial.bind₁\">MvPolynomial.bind₁</a> <span class=\"fn\">fun (<span class=\"fn\">b</span> : <span class=\"fn\">idx</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Rename.html#MvPolynomial.rename\">MvPolynomial.rename</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">(<span class=\"fn\">b</span>, <span class=\"fn\">i</span>)</span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/WittPolynomial.html#wittPolynomial\">wittPolynomial</a> <span class=\"fn\">p</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">n</span></span>)</span></span></span></span>)</span> <span class=\"fn\">Φ</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a>     <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">MvPolynomial.C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureInt\">wittStructureInt</a> <span class=\"fn\">p</span> <span class=\"fn\">Φ</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">i</span></span>)</span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/WittVector/StructurePolynomial.lean#L209-L226","name":"bind₁_rename_expand_wittPolynomial","line":209,"kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#bind₁_rename_expand_wittPolynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#bind₁_rename_expand_wittPolynomial\"><span class=\"name\">bind₁_rename_expand_wittPolynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{idx : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Φ : <span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">idx</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(IH : <span class=\"fn\">∀ <span class=\"fn\">m</span> &lt; <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>,\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial.map\">MvPolynomial.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Int/Cast/Lemmas.html#Int.castRingHom\">Int.castRingHom</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureInt\">wittStructureInt</a> <span class=\"fn\">p</span> <span class=\"fn\">Φ</span> <span class=\"fn\">m</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureRat\">wittStructureRat</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial.map\">MvPolynomial.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Int/Cast/Lemmas.html#Int.castRingHom\">Int.castRingHom</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span></span>)</span> <span class=\"fn\">Φ</span></span>)</span> <span class=\"fn\">m</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Monad.html#MvPolynomial.bind₁\">MvPolynomial.bind₁</a> <span class=\"fn\">fun (<span class=\"fn\">b</span> : <span class=\"fn\">idx</span>) =&gt;\n      <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Rename.html#MvPolynomial.rename\">MvPolynomial.rename</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">(<span class=\"fn\">b</span>, <span class=\"fn\">i</span>)</span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Expand.html#MvPolynomial.expand\">MvPolynomial.expand</a> <span class=\"fn\">p</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/WittPolynomial.html#wittPolynomial\">wittPolynomial</a> <span class=\"fn\">p</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">n</span></span>)</span></span>)</span></span></span></span>)</span>\n    <span class=\"fn\">Φ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Monad.html#MvPolynomial.bind₁\">MvPolynomial.bind₁</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Expand.html#MvPolynomial.expand\">MvPolynomial.expand</a> <span class=\"fn\">p</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureInt\">wittStructureInt</a> <span class=\"fn\">p</span> <span class=\"fn\">Φ</span> <span class=\"fn\">i</span></span>)</span></span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/WittPolynomial.html#wittPolynomial\">wittPolynomial</a> <span class=\"fn\">p</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">n</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/WittVector/StructurePolynomial.lean#L203-L204","name":"wittStructureInt","line":203,"kind":"def","docLink":"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureInt","doc":"`wittStructureInt Φ` is a family of polynomials `ℕ → MvPolynomial (idx × ℕ) ℤ`\nthat are uniquely characterised by the property that\n```\nbind₁ (wittStructureInt p Φ) (wittPolynomial p ℤ n) =\nbind₁ (fun i ↦ (rename (prod.mk i) (wittPolynomial p ℤ n))) Φ\n```\nIn other words: evaluating the `n`-th Witt polynomial on the family `wittStructureInt Φ`\nis the same as evaluating `Φ` on the (appropriately renamed) `n`-th Witt polynomials.\n\nSee `wittStructureInt_prop` for this property,\nand `wittStructureInt_existsUnique` for the fact that `wittStructureInt`\ngives the unique family of polynomials with this property. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureInt\"><span class=\"name\">wittStructureInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{idx : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Φ : <span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">idx</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/WittVector/StructurePolynomial.lean#L179-L188","name":"wittStructureRat_rec","line":179,"kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureRat_rec","doc":"Write `wittStructureRat p φ n` in terms of `wittStructureRat p φ i` for `i < n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureRat_rec\"><span class=\"name\">wittStructureRat_rec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{idx : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Φ : <span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">idx</span> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureRat\">wittStructureRat</a> <span class=\"fn\">p</span> <span class=\"fn\">Φ</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">MvPolynomial.C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a>     <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Monad.html#MvPolynomial.bind₁\">MvPolynomial.bind₁</a> <span class=\"fn\">fun (<span class=\"fn\">b</span> : <span class=\"fn\">idx</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Rename.html#MvPolynomial.rename\">MvPolynomial.rename</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">(<span class=\"fn\">b</span>, <span class=\"fn\">i</span>)</span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/WittPolynomial.html#wittPolynomial\">wittPolynomial</a> <span class=\"fn\">p</span> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">n</span></span>)</span></span></span></span>)</span> <span class=\"fn\">Φ</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a>       <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">MvPolynomial.C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureRat\">wittStructureRat</a> <span class=\"fn\">p</span> <span class=\"fn\">Φ</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">i</span></span>)</span></span></span></span></span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/WittVector/StructurePolynomial.lean#L164-L175","name":"wittStructureRat_rec_aux","line":164,"kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureRat_rec_aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureRat_rec_aux\"><span class=\"name\">wittStructureRat_rec_aux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{idx : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Φ : <span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">idx</span> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureRat\">wittStructureRat</a> <span class=\"fn\">p</span> <span class=\"fn\">Φ</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">MvPolynomial.C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Monad.html#MvPolynomial.bind₁\">MvPolynomial.bind₁</a> <span class=\"fn\">fun (<span class=\"fn\">b</span> : <span class=\"fn\">idx</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Rename.html#MvPolynomial.rename\">MvPolynomial.rename</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">(<span class=\"fn\">b</span>, <span class=\"fn\">i</span>)</span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/WittPolynomial.html#wittPolynomial\">wittPolynomial</a> <span class=\"fn\">p</span> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">n</span></span>)</span></span></span></span>)</span> <span class=\"fn\">Φ</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a>     <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">MvPolynomial.C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureRat\">wittStructureRat</a> <span class=\"fn\">p</span> <span class=\"fn\">Φ</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">i</span></span>)</span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/WittVector/StructurePolynomial.lean#L151-L161","name":"wittStructureRat_existsUnique","line":151,"kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureRat_existsUnique","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureRat_existsUnique\"><span class=\"name\">wittStructureRat_existsUnique</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{idx : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Φ : <span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">idx</span> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃! (<span class=\"fn\">φ</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span></span>),\n  <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>),\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Monad.html#MvPolynomial.bind₁\">MvPolynomial.bind₁</a> <span class=\"fn\">φ</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/WittPolynomial.html#wittPolynomial\">wittPolynomial</a> <span class=\"fn\">p</span> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Monad.html#MvPolynomial.bind₁\">MvPolynomial.bind₁</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">idx</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Rename.html#MvPolynomial.rename\">MvPolynomial.rename</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Prod.mk\">Prod.mk</a> <span class=\"fn\">i</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/WittPolynomial.html#wittPolynomial\">wittPolynomial</a> <span class=\"fn\">p</span> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">n</span></span>)</span></span></span></span>)</span> <span class=\"fn\">Φ</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/WittVector/StructurePolynomial.lean#L140-L148","name":"wittStructureRat_prop","line":140,"kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureRat_prop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureRat_prop\"><span class=\"name\">wittStructureRat_prop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{idx : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Φ : <span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">idx</span> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Monad.html#MvPolynomial.bind₁\">MvPolynomial.bind₁</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureRat\">wittStructureRat</a> <span class=\"fn\">p</span> <span class=\"fn\">Φ</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/WittPolynomial.html#wittPolynomial\">wittPolynomial</a> <span class=\"fn\">p</span> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Monad.html#MvPolynomial.bind₁\">MvPolynomial.bind₁</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">idx</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Rename.html#MvPolynomial.rename\">MvPolynomial.rename</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Prod.mk\">Prod.mk</a> <span class=\"fn\">i</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/WittPolynomial.html#wittPolynomial\">wittPolynomial</a> <span class=\"fn\">p</span> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">n</span></span>)</span></span></span></span>)</span> <span class=\"fn\">Φ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/WittVector/StructurePolynomial.lean#L136-L137","name":"wittStructureRat","line":136,"kind":"def","docLink":"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureRat","doc":"`wittStructureRat Φ` is a family of polynomials `ℕ → MvPolynomial (idx × ℕ) ℚ`\nthat are uniquely characterised by the property that\n```\nbind₁ (wittStructureRat p Φ) (wittPolynomial p ℚ n) =\nbind₁ (fun i ↦ (rename (prod.mk i) (wittPolynomial p ℚ n))) Φ\n```\nIn other words: evaluating the `n`-th Witt polynomial on the family `wittStructureRat Φ`\nis the same as evaluating `Φ` on the (appropriately renamed) `n`-th Witt polynomials.\n\nSee `wittStructureRat_prop` for this property,\nand `wittStructureRat_existsUnique` for the fact that `wittStructureRat`\ngives the unique family of polynomials with this property.\n\nThese polynomials turn out to have integral coefficients,\nbut it requires some effort to show this.\nSee `wittStructureInt` for the version with integral coefficients,\nand `map_wittStructureInt` for the fact that it is equal to `wittStructureRat`\nwhen mapped to polynomials over the rationals. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#wittStructureRat\"><span class=\"name\">wittStructureRat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{idx : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Φ : <span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">idx</span> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/WittVector/StructurePolynomial.lean#L116-L116","name":"Witt.termW_1","line":116,"kind":"def","docLink":"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#Witt.termW_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#Witt.termW_1\"><span class=\"name\">Witt</span>.<span class=\"name\">termW_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/WittVector/StructurePolynomial.lean#L112-L112","name":"Witt.termW__1","line":112,"kind":"def","docLink":"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#Witt.termW__1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/StructurePolynomial.html#Witt.termW__1\"><span class=\"name\">Witt</span>.<span class=\"name\">termW__1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"}]}