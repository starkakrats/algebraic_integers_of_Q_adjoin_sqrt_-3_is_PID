{"name":"Mathlib.Topology.Sheaves.Sheafify","instances":[],"imports":["Init","Mathlib.Topology.Sheaves.LocalPredicate","Mathlib.Topology.Sheaves.Stalks"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Sheaves/Sheafify.lean#L126-L127","name":"TopCat.Presheaf.sheafifyStalkIso","line":126,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/Sheafify.html#TopCat.Presheaf.sheafifyStalkIso","doc":"The isomorphism between a stalk of the sheafification and the original stalk.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/Sheafify.html#TopCat.Presheaf.sheafifyStalkIso\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">sheafifyStalkIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Presheaf.html#TopCat.Presheaf\">TopCat.Presheaf</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> v)</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Stalks.html#TopCat.Presheaf.stalk\">TopCat.Presheaf.stalk</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Sheaf.html#TopCat.Sheaf.presheaf\">TopCat.Sheaf.presheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Sheafify.html#TopCat.Presheaf.sheafify\">TopCat.Presheaf.sheafify</a> <span class=\"fn\">F</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Stalks.html#TopCat.Presheaf.stalk\">TopCat.Presheaf.stalk</a> <span class=\"fn\">F</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Sheaves/Sheafify.lean#L100-L121","name":"TopCat.Presheaf.stalkToFiber_injective","line":100,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/Sheafify.html#TopCat.Presheaf.stalkToFiber_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/Sheafify.html#TopCat.Presheaf.stalkToFiber_injective\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">stalkToFiber_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Presheaf.html#TopCat.Presheaf\">TopCat.Presheaf</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> v)</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Sheafify.html#TopCat.Presheaf.stalkToFiber\">TopCat.Presheaf.stalkToFiber</a> <span class=\"fn\">F</span> <span class=\"fn\">x</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Sheaves/Sheafify.lean#L90-L97","name":"TopCat.Presheaf.stalkToFiber_surjective","line":90,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/Sheafify.html#TopCat.Presheaf.stalkToFiber_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/Sheafify.html#TopCat.Presheaf.stalkToFiber_surjective\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">stalkToFiber_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Presheaf.html#TopCat.Presheaf\">TopCat.Presheaf</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> v)</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Sheafify.html#TopCat.Presheaf.stalkToFiber\">TopCat.Presheaf.stalkToFiber</a> <span class=\"fn\">F</span> <span class=\"fn\">x</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Sheaves/Sheafify.lean#L86-L87","name":"TopCat.Presheaf.stalkToFiber","line":86,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/Sheafify.html#TopCat.Presheaf.stalkToFiber","doc":"The natural morphism from the stalk of the sheafification to the original stalk.\nIn `sheafifyStalkIso` we show this is an isomorphism.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/Sheafify.html#TopCat.Presheaf.stalkToFiber\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">stalkToFiber</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Presheaf.html#TopCat.Presheaf\">TopCat.Presheaf</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> v)</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Stalks.html#TopCat.Presheaf.stalk\">TopCat.Presheaf.stalk</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Sheaf.html#TopCat.Sheaf.presheaf\">TopCat.Sheaf.presheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Sheafify.html#TopCat.Presheaf.sheafify\">TopCat.Presheaf.sheafify</a> <span class=\"fn\">F</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Stalks.html#TopCat.Presheaf.stalk\">TopCat.Presheaf.stalk</a> <span class=\"fn\">F</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Sheaves/Sheafify.lean#L74-L80","name":"TopCat.Presheaf.toSheafify","line":74,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/Sheafify.html#TopCat.Presheaf.toSheafify","doc":"The morphism from a presheaf to its sheafification,\nsending each section to its germs.\n(This forms the unit of the adjunction.)\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/Sheafify.html#TopCat.Presheaf.toSheafify\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">toSheafify</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Presheaf.html#TopCat.Presheaf\">TopCat.Presheaf</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> v)</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Sheafify.html#TopCat.Presheaf.sheafify\">TopCat.Presheaf.sheafify</a> <span class=\"fn\">F</span></span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Sheaves/Sheafify.lean#L66-L67","name":"TopCat.Presheaf.sheafify","line":66,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/Sheafify.html#TopCat.Presheaf.sheafify","doc":"The sheafification of a `Type` valued presheaf, defined as the functions into the stalks which\nare locally equal to germs.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/Sheafify.html#TopCat.Presheaf.sheafify\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">sheafify</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Presheaf.html#TopCat.Presheaf\">TopCat.Presheaf</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> v)</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Sheaf.html#TopCat.Sheaf\">TopCat.Sheaf</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> v)</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Sheaves/Sheafify.lean#L57-L58","name":"TopCat.Presheaf.Sheafify.isLocallyGerm","line":57,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/Sheafify.html#TopCat.Presheaf.Sheafify.isLocallyGerm","doc":"The local predicate on functions into the stalks,\nasserting that the function is locally equal to a germ.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/Sheafify.html#TopCat.Presheaf.Sheafify.isLocallyGerm\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">Sheafify</span>.<span class=\"name\">isLocallyGerm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Presheaf.html#TopCat.Presheaf\">TopCat.Presheaf</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> v)</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate\">TopCat.LocalPredicate</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">X</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Stalks.html#TopCat.Presheaf.stalk\">TopCat.Presheaf.stalk</a> <span class=\"fn\">F</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Sheaves/Sheafify.lean#L49-L51","name":"TopCat.Presheaf.Sheafify.isGerm","line":49,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/Sheafify.html#TopCat.Presheaf.Sheafify.isGerm","doc":"The prelocal predicate on functions into the stalks, asserting that the function is equal to a germ.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/Sheafify.html#TopCat.Presheaf.Sheafify.isGerm\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">Sheafify</span>.<span class=\"name\">isGerm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Presheaf.html#TopCat.Presheaf\">TopCat.Presheaf</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> v)</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate\">TopCat.PrelocalPredicate</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">X</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Stalks.html#TopCat.Presheaf.stalk\">TopCat.Presheaf.stalk</a> <span class=\"fn\">F</span> <span class=\"fn\">x</span></span></span></span></div></div>"}]}