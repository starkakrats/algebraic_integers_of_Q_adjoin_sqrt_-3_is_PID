{"name":"Mathlib.CategoryTheory.Limits.Shapes.WidePullbacks","instances":[{"typeNames":["CategoryTheory.Limits.WidePullbackShape"],"name":"CategoryTheory.Limits.instInhabitedWidePullbackShape","className":"Inhabited"},{"typeNames":["CategoryTheory.Limits.WidePushoutShape"],"name":"CategoryTheory.Limits.instInhabitedWidePushoutShape","className":"Inhabited"},{"typeNames":["Eq"],"name":"CategoryTheory.Limits.WidePullbackShape.instDecidableEqHom","className":"Decidable"},{"typeNames":["CategoryTheory.Limits.WidePullbackShape"],"name":"CategoryTheory.Limits.WidePullbackShape.struct","className":"CategoryTheory.CategoryStruct"},{"typeNames":["CategoryTheory.Limits.WidePullbackShape.Hom"],"name":"CategoryTheory.Limits.WidePullbackShape.Hom.inhabited","className":"Inhabited"},{"typeNames":["Quiver.Hom"],"name":"CategoryTheory.Limits.WidePullbackShape.subsingleton_hom","className":"Subsingleton"},{"typeNames":["CategoryTheory.Limits.WidePullbackShape"],"name":"CategoryTheory.Limits.WidePullbackShape.category","className":"CategoryTheory.Category"},{"typeNames":["Eq"],"name":"CategoryTheory.Limits.WidePushoutShape.instDecidableEqHom","className":"Decidable"},{"typeNames":["CategoryTheory.Limits.WidePushoutShape"],"name":"CategoryTheory.Limits.WidePushoutShape.struct","className":"CategoryTheory.CategoryStruct"},{"typeNames":["CategoryTheory.Limits.WidePushoutShape.Hom"],"name":"CategoryTheory.Limits.WidePushoutShape.Hom.inhabited","className":"Inhabited"},{"typeNames":["Quiver.Hom"],"name":"CategoryTheory.Limits.WidePushoutShape.subsingleton_hom","className":"Subsingleton"},{"typeNames":["CategoryTheory.Limits.WidePushoutShape"],"name":"CategoryTheory.Limits.WidePushoutShape.category","className":"CategoryTheory.Category"}],"imports":["Init","Mathlib.CategoryTheory.Limits.HasLimits","Mathlib.CategoryTheory.Thin"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L580-L581","name":"CategoryTheory.Limits.hasWidePullbacks_shrink","line":580,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.hasWidePullbacks_shrink","doc":"If a category has wide pullbacks on a higher universe level it also has wide pullbacks\non a lower universe level. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.hasWidePullbacks_shrink\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">hasWidePullbacks_shrink</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePullbacks\">CategoryTheory.Limits.HasWidePullbacks</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePullbacks\">CategoryTheory.Limits.HasWidePullbacks</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L575-L576","name":"CategoryTheory.Limits.hasWidePushouts_shrink","line":575,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.hasWidePushouts_shrink","doc":"If a category has wide pushouts on a higher universe level it also has wide pushouts\non a lower universe level. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.hasWidePushouts_shrink\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">hasWidePushouts_shrink</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePushouts\">CategoryTheory.Limits.HasWidePushouts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePushouts\">CategoryTheory.Limits.HasWidePushouts</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L566-L570","name":"CategoryTheory.Limits.widePullbackShapeOpEquiv","line":566,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeOpEquiv","doc":"The duality equivalence `(WidePullbackShape J)ᵒᵖ ≌ WidePushoutShape J` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeOpEquiv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">widePullbackShapeOpEquiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L565-L565","name":"CategoryTheory.Limits.widePullbackShapeOpEquiv_functor","line":565,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeOpEquiv_functor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeOpEquiv_functor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">widePullbackShapeOpEquiv_functor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeOpEquiv\">CategoryTheory.Limits.widePullbackShapeOpEquiv</a> <span class=\"fn\">J</span></span>)</span>.functor</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeUnop\">CategoryTheory.Limits.widePullbackShapeUnop</a> <span class=\"fn\">J</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L565-L565","name":"CategoryTheory.Limits.widePullbackShapeOpEquiv_inverse","line":565,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeOpEquiv_inverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeOpEquiv_inverse\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">widePullbackShapeOpEquiv_inverse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeOpEquiv\">CategoryTheory.Limits.widePullbackShapeOpEquiv</a> <span class=\"fn\">J</span></span>)</span>.inverse</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeOp\">CategoryTheory.Limits.widePushoutShapeOp</a> <span class=\"fn\">J</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L565-L565","name":"CategoryTheory.Limits.widePullbackShapeOpEquiv_counitIso","line":565,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeOpEquiv_counitIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeOpEquiv_counitIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">widePullbackShapeOpEquiv_counitIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeOpEquiv\">CategoryTheory.Limits.widePullbackShapeOpEquiv</a> <span class=\"fn\">J</span></span>)</span>.counitIso</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeUnopOp\">CategoryTheory.Limits.widePushoutShapeUnopOp</a> <span class=\"fn\">J</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L565-L565","name":"CategoryTheory.Limits.widePullbackShapeOpEquiv_unitIso","line":565,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeOpEquiv_unitIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeOpEquiv_unitIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">widePullbackShapeOpEquiv_unitIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeOpEquiv\">CategoryTheory.Limits.widePullbackShapeOpEquiv</a> <span class=\"fn\">J</span></span>)</span>.unitIso</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeOpUnop\">CategoryTheory.Limits.widePullbackShapeOpUnop</a> <span class=\"fn\">J</span></span>)</span>.symm</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L557-L561","name":"CategoryTheory.Limits.widePushoutShapeOpEquiv","line":557,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeOpEquiv","doc":"The duality equivalence `(WidePushoutShape J)ᵒᵖ ≌ WidePullbackShape J` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeOpEquiv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">widePushoutShapeOpEquiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L556-L556","name":"CategoryTheory.Limits.widePushoutShapeOpEquiv_inverse","line":556,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeOpEquiv_inverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeOpEquiv_inverse\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">widePushoutShapeOpEquiv_inverse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeOpEquiv\">CategoryTheory.Limits.widePushoutShapeOpEquiv</a> <span class=\"fn\">J</span></span>)</span>.inverse</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeOp\">CategoryTheory.Limits.widePullbackShapeOp</a> <span class=\"fn\">J</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L556-L556","name":"CategoryTheory.Limits.widePushoutShapeOpEquiv_unitIso","line":556,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeOpEquiv_unitIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeOpEquiv_unitIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">widePushoutShapeOpEquiv_unitIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeOpEquiv\">CategoryTheory.Limits.widePushoutShapeOpEquiv</a> <span class=\"fn\">J</span></span>)</span>.unitIso</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeOpUnop\">CategoryTheory.Limits.widePushoutShapeOpUnop</a> <span class=\"fn\">J</span></span>)</span>.symm</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L556-L556","name":"CategoryTheory.Limits.widePushoutShapeOpEquiv_counitIso","line":556,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeOpEquiv_counitIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeOpEquiv_counitIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">widePushoutShapeOpEquiv_counitIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeOpEquiv\">CategoryTheory.Limits.widePushoutShapeOpEquiv</a> <span class=\"fn\">J</span></span>)</span>.counitIso</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeUnopOp\">CategoryTheory.Limits.widePullbackShapeUnopOp</a> <span class=\"fn\">J</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L556-L556","name":"CategoryTheory.Limits.widePushoutShapeOpEquiv_functor","line":556,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeOpEquiv_functor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeOpEquiv_functor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">widePushoutShapeOpEquiv_functor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeOpEquiv\">CategoryTheory.Limits.widePushoutShapeOpEquiv</a> <span class=\"fn\">J</span></span>)</span>.functor</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeUnop\">CategoryTheory.Limits.widePushoutShapeUnop</a> <span class=\"fn\">J</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L551-L552","name":"CategoryTheory.Limits.widePullbackShapeUnopOp","line":551,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeUnopOp","doc":"The counit isomorphism of the equivalence\n`widePushoutShapeOpEquiv : (WidePushoutShape J)ᵒᵖ ≌ WidePullbackShape J` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeUnopOp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">widePullbackShapeUnopOp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeOp\">CategoryTheory.Limits.widePullbackShapeOp</a> <span class=\"fn\">J</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeUnop\">CategoryTheory.Limits.widePushoutShapeUnop</a> <span class=\"fn\">J</span></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L545-L546","name":"CategoryTheory.Limits.widePullbackShapeOpUnop","line":545,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeOpUnop","doc":"The inverse of the unit isomorphism of the equivalence\n`widePullbackShapeOpEquiv : (WidePullbackShape J)ᵒᵖ ≌ WidePushoutShape J` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeOpUnop\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">widePullbackShapeOpUnop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeUnop\">CategoryTheory.Limits.widePullbackShapeUnop</a> <span class=\"fn\">J</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeOp\">CategoryTheory.Limits.widePushoutShapeOp</a> <span class=\"fn\">J</span></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L539-L540","name":"CategoryTheory.Limits.widePushoutShapeUnopOp","line":539,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeUnopOp","doc":"The counit isomorphism of the equivalence\n`widePullbackShapeOpEquiv : (WidePullbackShape J)ᵒᵖ ≌ WidePushoutShape J` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeUnopOp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">widePushoutShapeUnopOp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeOp\">CategoryTheory.Limits.widePushoutShapeOp</a> <span class=\"fn\">J</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeUnop\">CategoryTheory.Limits.widePullbackShapeUnop</a> <span class=\"fn\">J</span></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L533-L534","name":"CategoryTheory.Limits.widePushoutShapeOpUnop","line":533,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeOpUnop","doc":"The inverse of the unit isomorphism of the equivalence\n`widePushoutShapeOpEquiv : (WidePushoutShape J)ᵒᵖ ≌ WidePullbackShape J` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeOpUnop\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">widePushoutShapeOpUnop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeUnop\">CategoryTheory.Limits.widePushoutShapeUnop</a> <span class=\"fn\">J</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeOp\">CategoryTheory.Limits.widePullbackShapeOp</a> <span class=\"fn\">J</span></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L527-L528","name":"CategoryTheory.Limits.widePushoutShapeUnop","line":527,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeUnop","doc":"The obvious functor `(WidePushoutShape J)ᵒᵖ ⥤ WidePullbackShape J` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeUnop\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">widePushoutShapeUnop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L526-L526","name":"CategoryTheory.Limits.widePushoutShapeUnop_map","line":526,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeUnop_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeUnop_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">widePushoutShapeUnop_map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeUnop\">CategoryTheory.Limits.widePushoutShapeUnop</a> <span class=\"fn\">J</span></span>)</span>.map <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeOpMap\">CategoryTheory.Limits.widePushoutShapeOpMap</a> <span class=\"fn\">J</span> <span class=\"fn\"><span class=\"fn\">Y</span>.unop</span> <span class=\"fn\"><span class=\"fn\">X</span>.unop</span> <span class=\"fn\"><span class=\"fn\">f</span>.unop</span></span>)</span>.unop</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L526-L526","name":"CategoryTheory.Limits.widePushoutShapeUnop_obj","line":526,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeUnop_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeUnop_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">widePushoutShapeUnop_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeUnop\">CategoryTheory.Limits.widePushoutShapeUnop</a> <span class=\"fn\">J</span></span>)</span>.obj <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span>.unop</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L521-L522","name":"CategoryTheory.Limits.widePullbackShapeUnop","line":521,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeUnop","doc":"The obvious functor `(WidePullbackShape J)ᵒᵖ ⥤ WidePushoutShape J`"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeUnop\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">widePullbackShapeUnop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L520-L520","name":"CategoryTheory.Limits.widePullbackShapeUnop_obj","line":520,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeUnop_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeUnop_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">widePullbackShapeUnop_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeUnop\">CategoryTheory.Limits.widePullbackShapeUnop</a> <span class=\"fn\">J</span></span>)</span>.obj <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span>.unop</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L520-L520","name":"CategoryTheory.Limits.widePullbackShapeUnop_map","line":520,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeUnop_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeUnop_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">widePullbackShapeUnop_map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeUnop\">CategoryTheory.Limits.widePullbackShapeUnop</a> <span class=\"fn\">J</span></span>)</span>.map <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeOpMap\">CategoryTheory.Limits.widePullbackShapeOpMap</a> <span class=\"fn\">J</span> <span class=\"fn\"><span class=\"fn\">Y</span>.unop</span> <span class=\"fn\"><span class=\"fn\">X</span>.unop</span> <span class=\"fn\"><span class=\"fn\">f</span>.unop</span></span>)</span>.unop</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L514-L516","name":"CategoryTheory.Limits.widePushoutShapeOp","line":514,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeOp","doc":"The obvious functor `WidePushoutShape J ⥤ (WidePullbackShape J)ᵒᵖ` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeOp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">widePushoutShapeOp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L513-L513","name":"CategoryTheory.Limits.widePushoutShapeOp_map","line":513,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeOp_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeOp_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">widePushoutShapeOp_map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeOp\">CategoryTheory.Limits.widePushoutShapeOp</a> <span class=\"fn\">J</span></span>)</span>.map <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeOpMap\">CategoryTheory.Limits.widePushoutShapeOpMap</a> <span class=\"fn\">J</span> <span class=\"fn\">X</span> <span class=\"fn\">Y</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L513-L513","name":"CategoryTheory.Limits.widePushoutShapeOp_obj","line":513,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeOp_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeOp_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">widePushoutShapeOp_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeOp\">CategoryTheory.Limits.widePushoutShapeOp</a> <span class=\"fn\">J</span></span>)</span>.obj <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L505-L509","name":"CategoryTheory.Limits.widePushoutShapeOpMap","line":505,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeOpMap","doc":"The action on morphisms of the obvious functor\n`widePushoutShapeOp : WidePushoutShape J ⥤ (WidePullbackShape J)ᵒᵖ` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushoutShapeOpMap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">widePushoutShapeOpMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span> → <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Y</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L498-L500","name":"CategoryTheory.Limits.widePullbackShapeOp","line":498,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeOp","doc":"The obvious functor `WidePullbackShape J ⥤ (WidePushoutShape J)ᵒᵖ` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeOp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">widePullbackShapeOp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L497-L497","name":"CategoryTheory.Limits.widePullbackShapeOp_map","line":497,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeOp_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeOp_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">widePullbackShapeOp_map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeOp\">CategoryTheory.Limits.widePullbackShapeOp</a> <span class=\"fn\">J</span></span>)</span>.map <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeOpMap\">CategoryTheory.Limits.widePullbackShapeOpMap</a> <span class=\"fn\">J</span> <span class=\"fn\">X₁</span> <span class=\"fn\">X₂</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L497-L497","name":"CategoryTheory.Limits.widePullbackShapeOp_obj","line":497,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeOp_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeOp_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">widePullbackShapeOp_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeOp\">CategoryTheory.Limits.widePullbackShapeOp</a> <span class=\"fn\">J</span></span>)</span>.obj <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L489-L493","name":"CategoryTheory.Limits.widePullbackShapeOpMap","line":489,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeOpMap","doc":"The action on morphisms of the obvious functor\n`WidePullbackShape_op : WidePullbackShape J ⥤ (WidePushoutShape J)ᵒᵖ`"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullbackShapeOpMap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">widePullbackShapeOpMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span> → <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Y</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L474-L480","name":"CategoryTheory.Limits.WidePushout.hom_ext","line":474,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.hom_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.hom_ext\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePushout</span>.<span class=\"name\">hom_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₂, u_1}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePushout\">CategoryTheory.Limits.HasWidePushout</a> <span class=\"fn\">B</span> <span class=\"fn\">objs</span> <span class=\"fn\">arrows</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g1 : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushout\">CategoryTheory.Limits.widePushout</a> <span class=\"fn\">B</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span>)</span> <span class=\"fn\">arrows</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g2 : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushout\">CategoryTheory.Limits.widePushout</a> <span class=\"fn\">B</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span>)</span> <span class=\"fn\">arrows</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>),\n    <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.ι\">CategoryTheory.Limits.WidePushout.ι</a> <span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">g1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.ι\">CategoryTheory.Limits.WidePushout.ι</a> <span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">g2</span></span></span></span>)</span> →\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.head\">CategoryTheory.Limits.WidePushout.head</a> <span class=\"fn\">arrows</span></span>)</span> <span class=\"fn\">g1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.head\">CategoryTheory.Limits.WidePushout.head</a> <span class=\"fn\">arrows</span></span>)</span> <span class=\"fn\">g2</span></span></span> →\n    <span class=\"fn\"><span class=\"fn\">g1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g2</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L463-L470","name":"CategoryTheory.Limits.WidePushout.hom_eq_desc","line":463,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.hom_eq_desc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.hom_eq_desc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePushout</span>.<span class=\"name\">hom_eq_desc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₂, u_1}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePushout\">CategoryTheory.Limits.HasWidePushout</a> <span class=\"fn\">B</span> <span class=\"fn\">objs</span> <span class=\"fn\">arrows</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushout\">CategoryTheory.Limits.widePushout</a> <span class=\"fn\">B</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span>)</span> <span class=\"fn\">arrows</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.desc\">CategoryTheory.Limits.WidePushout.desc</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.head\">CategoryTheory.Limits.WidePushout.head</a> <span class=\"fn\">arrows</span></span>)</span> <span class=\"fn\">g</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.ι\">CategoryTheory.Limits.WidePushout.ι</a> <span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">g</span></span></span>)</span>\n    <span class=\"fn\">(_ :\n      <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>),\n        <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span>\n            <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.ι\">CategoryTheory.Limits.WidePushout.ι</a> <span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">g</span></span></span>)</span> <span class=\"fn\">j</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>           <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.head\">CategoryTheory.Limits.WidePushout.head</a> <span class=\"fn\">arrows</span></span>)</span> <span class=\"fn\">g</span></span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L452-L460","name":"CategoryTheory.Limits.WidePushout.eq_desc_of_comp_eq","line":452,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.eq_desc_of_comp_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.eq_desc_of_comp_eq\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePushout</span>.<span class=\"name\">eq_desc_of_comp_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₂, u_1}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePushout\">CategoryTheory.Limits.HasWidePushout</a> <span class=\"fn\">B</span> <span class=\"fn\">objs</span> <span class=\"fn\">arrows</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fs : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">fs</span> <span class=\"fn\">j</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushout\">CategoryTheory.Limits.widePushout</a> <span class=\"fn\">B</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span>)</span> <span class=\"fn\">arrows</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.ι\">CategoryTheory.Limits.WidePushout.ι</a> <span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">fs</span> <span class=\"fn\">j</span></span></span></span>)</span> →\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.head\">CategoryTheory.Limits.WidePushout.head</a> <span class=\"fn\">arrows</span></span>)</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span> →\n    <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.desc\">CategoryTheory.Limits.WidePushout.desc</a> <span class=\"fn\">f</span> <span class=\"fn\">fs</span> <span class=\"fn\">w</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L448-L449","name":"CategoryTheory.Limits.WidePushout.head_desc","line":448,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.head_desc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.head_desc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePushout</span>.<span class=\"name\">head_desc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₂, u_1}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePushout\">CategoryTheory.Limits.HasWidePushout</a> <span class=\"fn\">B</span> <span class=\"fn\">objs</span> <span class=\"fn\">arrows</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fs : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">fs</span> <span class=\"fn\">j</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.head\">CategoryTheory.Limits.WidePushout.head</a> <span class=\"fn\">arrows</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.desc\">CategoryTheory.Limits.WidePushout.desc</a> <span class=\"fn\">f</span> <span class=\"fn\">fs</span> <span class=\"fn\">w</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L447-L447","name":"CategoryTheory.Limits.WidePushout.head_desc_assoc","line":447,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.head_desc_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.head_desc_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePushout</span>.<span class=\"name\">head_desc_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₂, u_1}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePushout\">CategoryTheory.Limits.HasWidePushout</a> <span class=\"fn\">B</span> <span class=\"fn\">objs</span> <span class=\"fn\">arrows</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fs : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">fs</span> <span class=\"fn\">j</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.head\">CategoryTheory.Limits.WidePushout.head</a> <span class=\"fn\">arrows</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.desc\">CategoryTheory.Limits.WidePushout.desc</a> <span class=\"fn\">f</span> <span class=\"fn\">fs</span> <span class=\"fn\">w</span></span>)</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">h</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L442-L443","name":"CategoryTheory.Limits.WidePushout.ι_desc","line":442,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.ι_desc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.ι_desc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePushout</span>.<span class=\"name\">ι_desc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₂, u_1}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePushout\">CategoryTheory.Limits.HasWidePushout</a> <span class=\"fn\">B</span> <span class=\"fn\">objs</span> <span class=\"fn\">arrows</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fs : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">fs</span> <span class=\"fn\">j</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.ι\">CategoryTheory.Limits.WidePushout.ι</a> <span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.desc\">CategoryTheory.Limits.WidePushout.desc</a> <span class=\"fn\">f</span> <span class=\"fn\">fs</span> <span class=\"fn\">w</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">fs</span> <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L441-L441","name":"CategoryTheory.Limits.WidePushout.ι_desc_assoc","line":441,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.ι_desc_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.ι_desc_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePushout</span>.<span class=\"name\">ι_desc_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₂, u_1}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePushout\">CategoryTheory.Limits.HasWidePushout</a> <span class=\"fn\">B</span> <span class=\"fn\">objs</span> <span class=\"fn\">arrows</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fs : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">fs</span> <span class=\"fn\">j</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.ι\">CategoryTheory.Limits.WidePushout.ι</a> <span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.desc\">CategoryTheory.Limits.WidePushout.desc</a> <span class=\"fn\">f</span> <span class=\"fn\">fs</span> <span class=\"fn\">w</span></span>)</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">fs</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">h</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L431-L433","name":"CategoryTheory.Limits.WidePushout.desc","line":431,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.desc","doc":"Descend a collection of morphisms to a morphism from the pushout. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.desc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePushout</span>.<span class=\"name\">desc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₂, u_1}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePushout\">CategoryTheory.Limits.HasWidePushout</a> <span class=\"fn\">B</span> <span class=\"fn\">objs</span> <span class=\"fn\">arrows</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fs : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">fs</span> <span class=\"fn\">j</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushout\">CategoryTheory.Limits.widePushout</a> <span class=\"fn\">B</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span>)</span> <span class=\"fn\">arrows</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L421-L422","name":"CategoryTheory.Limits.WidePushout.arrow_ι","line":421,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.arrow_ι","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.arrow_ι\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePushout</span>.<span class=\"name\">arrow_ι</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₂, u_1}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePushout\">CategoryTheory.Limits.HasWidePushout</a> <span class=\"fn\">B</span> <span class=\"fn\">objs</span> <span class=\"fn\">arrows</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.ι\">CategoryTheory.Limits.WidePushout.ι</a> <span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.head\">CategoryTheory.Limits.WidePushout.head</a> <span class=\"fn\">arrows</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L420-L420","name":"CategoryTheory.Limits.WidePushout.arrow_ι_assoc","line":420,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.arrow_ι_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.arrow_ι_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePushout</span>.<span class=\"name\">arrow_ι_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₂, u_1}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePushout\">CategoryTheory.Limits.HasWidePushout</a> <span class=\"fn\">B</span> <span class=\"fn\">objs</span> <span class=\"fn\">arrows</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushout\">CategoryTheory.Limits.widePushout</a> <span class=\"fn\">B</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span>)</span> <span class=\"fn\">arrows</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.ι\">CategoryTheory.Limits.WidePushout.ι</a> <span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.head\">CategoryTheory.Limits.WidePushout.head</a> <span class=\"fn\">arrows</span></span>)</span> <span class=\"fn\">h</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L416-L417","name":"CategoryTheory.Limits.WidePushout.head","line":416,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.head","doc":"The unique map from the head to the pushout. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.head\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePushout</span>.<span class=\"name\">head</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₂, u_1}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePushout\">CategoryTheory.Limits.HasWidePushout</a> <span class=\"fn\">B</span> <span class=\"fn\">objs</span> <span class=\"fn\">arrows</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushout\">CategoryTheory.Limits.widePushout</a> <span class=\"fn\">B</span> <span class=\"fn\">objs</span> <span class=\"fn\">arrows</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L411-L412","name":"CategoryTheory.Limits.WidePushout.ι","line":411,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.ι","doc":"The `j`-th inclusion to the pushout. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushout.ι\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePushout</span>.<span class=\"name\">ι</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₂, u_1}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePushout\">CategoryTheory.Limits.HasWidePushout</a> <span class=\"fn\">B</span> <span class=\"fn\">objs</span> <span class=\"fn\">arrows</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushout\">CategoryTheory.Limits.widePushout</a> <span class=\"fn\">B</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span>)</span> <span class=\"fn\">arrows</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L393-L399","name":"CategoryTheory.Limits.WidePullback.hom_ext","line":393,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.hom_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.hom_ext\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePullback</span>.<span class=\"name\">hom_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₂, u_1}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePullback\">CategoryTheory.Limits.HasWidePullback</a> <span class=\"fn\">B</span> <span class=\"fn\">objs</span> <span class=\"fn\">arrows</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g1 : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullback\">CategoryTheory.Limits.widePullback</a> <span class=\"fn\">B</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span>)</span> <span class=\"fn\">arrows</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g2 : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullback\">CategoryTheory.Limits.widePullback</a> <span class=\"fn\">B</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span>)</span> <span class=\"fn\">arrows</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>),\n    <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">g1</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.π\">CategoryTheory.Limits.WidePullback.π</a> <span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">g2</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.π\">CategoryTheory.Limits.WidePullback.π</a> <span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span></span></span></span>)</span> →\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">g1</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.base\">CategoryTheory.Limits.WidePullback.base</a> <span class=\"fn\">arrows</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">g2</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.base\">CategoryTheory.Limits.WidePullback.base</a> <span class=\"fn\">arrows</span></span>)</span></span></span> →\n    <span class=\"fn\"><span class=\"fn\">g1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g2</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L385-L389","name":"CategoryTheory.Limits.WidePullback.hom_eq_lift","line":385,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.hom_eq_lift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.hom_eq_lift\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePullback</span>.<span class=\"name\">hom_eq_lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₂, u_1}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePullback\">CategoryTheory.Limits.HasWidePullback</a> <span class=\"fn\">B</span> <span class=\"fn\">objs</span> <span class=\"fn\">arrows</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullback\">CategoryTheory.Limits.widePullback</a> <span class=\"fn\">B</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span>)</span> <span class=\"fn\">arrows</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.lift\">CategoryTheory.Limits.WidePullback.lift</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.base\">CategoryTheory.Limits.WidePullback.base</a> <span class=\"fn\">arrows</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.π\">CategoryTheory.Limits.WidePullback.π</a> <span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span></span></span>)</span>\n    <span class=\"fn\">(_ :\n      <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>),\n        <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.π\">CategoryTheory.Limits.WidePullback.π</a> <span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>           <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.base\">CategoryTheory.Limits.WidePullback.base</a> <span class=\"fn\">arrows</span></span>)</span></span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L374-L382","name":"CategoryTheory.Limits.WidePullback.eq_lift_of_comp_eq","line":374,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.eq_lift_of_comp_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.eq_lift_of_comp_eq\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePullback</span>.<span class=\"name\">eq_lift_of_comp_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₂, u_1}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePullback\">CategoryTheory.Limits.HasWidePullback</a> <span class=\"fn\">B</span> <span class=\"fn\">objs</span> <span class=\"fn\">arrows</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fs : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">fs</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullback\">CategoryTheory.Limits.widePullback</a> <span class=\"fn\">B</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span>)</span> <span class=\"fn\">arrows</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.π\">CategoryTheory.Limits.WidePullback.π</a> <span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">fs</span> <span class=\"fn\">j</span></span></span></span>)</span> →\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.base\">CategoryTheory.Limits.WidePullback.base</a> <span class=\"fn\">arrows</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span> →\n    <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.lift\">CategoryTheory.Limits.WidePullback.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">fs</span> <span class=\"fn\">w</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L370-L371","name":"CategoryTheory.Limits.WidePullback.lift_base","line":370,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.lift_base","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.lift_base\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePullback</span>.<span class=\"name\">lift_base</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₂, u_1}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePullback\">CategoryTheory.Limits.HasWidePullback</a> <span class=\"fn\">B</span> <span class=\"fn\">objs</span> <span class=\"fn\">arrows</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fs : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">fs</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.lift\">CategoryTheory.Limits.WidePullback.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">fs</span> <span class=\"fn\">w</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.base\">CategoryTheory.Limits.WidePullback.base</a> <span class=\"fn\">arrows</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L369-L369","name":"CategoryTheory.Limits.WidePullback.lift_base_assoc","line":369,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.lift_base_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.lift_base_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePullback</span>.<span class=\"name\">lift_base_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₂, u_1}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePullback\">CategoryTheory.Limits.HasWidePullback</a> <span class=\"fn\">B</span> <span class=\"fn\">objs</span> <span class=\"fn\">arrows</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fs : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">fs</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.lift\">CategoryTheory.Limits.WidePullback.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">fs</span> <span class=\"fn\">w</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.base\">CategoryTheory.Limits.WidePullback.base</a> <span class=\"fn\">arrows</span></span>)</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">h</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L364-L365","name":"CategoryTheory.Limits.WidePullback.lift_π","line":364,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.lift_π","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.lift_π\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePullback</span>.<span class=\"name\">lift_π</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₂, u_1}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePullback\">CategoryTheory.Limits.HasWidePullback</a> <span class=\"fn\">B</span> <span class=\"fn\">objs</span> <span class=\"fn\">arrows</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fs : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">fs</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.lift\">CategoryTheory.Limits.WidePullback.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">fs</span> <span class=\"fn\">w</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.π\">CategoryTheory.Limits.WidePullback.π</a> <span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">fs</span> <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L363-L363","name":"CategoryTheory.Limits.WidePullback.lift_π_assoc","line":363,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.lift_π_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.lift_π_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePullback</span>.<span class=\"name\">lift_π_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₂, u_1}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePullback\">CategoryTheory.Limits.HasWidePullback</a> <span class=\"fn\">B</span> <span class=\"fn\">objs</span> <span class=\"fn\">arrows</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fs : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">fs</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.lift\">CategoryTheory.Limits.WidePullback.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">fs</span> <span class=\"fn\">w</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.π\">CategoryTheory.Limits.WidePullback.π</a> <span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">fs</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">h</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L353-L355","name":"CategoryTheory.Limits.WidePullback.lift","line":353,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.lift","doc":"Lift a collection of morphisms to a morphism to the pullback. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.lift\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePullback</span>.<span class=\"name\">lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₂, u_1}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePullback\">CategoryTheory.Limits.HasWidePullback</a> <span class=\"fn\">B</span> <span class=\"fn\">objs</span> <span class=\"fn\">arrows</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fs : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">fs</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullback\">CategoryTheory.Limits.widePullback</a> <span class=\"fn\">B</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span>)</span> <span class=\"fn\">arrows</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L346-L347","name":"CategoryTheory.Limits.WidePullback.π_arrow","line":346,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.π_arrow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.π_arrow\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePullback</span>.<span class=\"name\">π_arrow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₂, u_1}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePullback\">CategoryTheory.Limits.HasWidePullback</a> <span class=\"fn\">B</span> <span class=\"fn\">objs</span> <span class=\"fn\">arrows</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.π\">CategoryTheory.Limits.WidePullback.π</a> <span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.base\">CategoryTheory.Limits.WidePullback.base</a> <span class=\"fn\">arrows</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L345-L345","name":"CategoryTheory.Limits.WidePullback.π_arrow_assoc","line":345,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.π_arrow_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.π_arrow_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePullback</span>.<span class=\"name\">π_arrow_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₂, u_1}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePullback\">CategoryTheory.Limits.HasWidePullback</a> <span class=\"fn\">B</span> <span class=\"fn\">objs</span> <span class=\"fn\">arrows</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.π\">CategoryTheory.Limits.WidePullback.π</a> <span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.base\">CategoryTheory.Limits.WidePullback.base</a> <span class=\"fn\">arrows</span></span>)</span> <span class=\"fn\">h</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L341-L342","name":"CategoryTheory.Limits.WidePullback.base","line":341,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.base","doc":"The unique map to the base from the pullback. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.base\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePullback</span>.<span class=\"name\">base</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₂, u_1}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePullback\">CategoryTheory.Limits.HasWidePullback</a> <span class=\"fn\">B</span> <span class=\"fn\">objs</span> <span class=\"fn\">arrows</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullback\">CategoryTheory.Limits.widePullback</a> <span class=\"fn\">B</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span>)</span> <span class=\"fn\">arrows</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L335-L336","name":"CategoryTheory.Limits.WidePullback.π","line":335,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.π","doc":"The `j`-th projection from the pullback. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullback.π\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePullback</span>.<span class=\"name\">π</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₂, u_1}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePullback\">CategoryTheory.Limits.HasWidePullback</a> <span class=\"fn\">B</span> <span class=\"fn\">objs</span> <span class=\"fn\">arrows</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullback\">CategoryTheory.Limits.widePullback</a> <span class=\"fn\">B</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span>)</span> <span class=\"fn\">arrows</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L321-L323","name":"CategoryTheory.Limits.widePushout","line":321,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushout","doc":"A choice of wide pushout. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePushout\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">widePushout</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePushout\">CategoryTheory.Limits.HasWidePushout</a> <span class=\"fn\">B</span> <span class=\"fn\">objs</span> <span class=\"fn\">arrows</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L315-L317","name":"CategoryTheory.Limits.widePullback","line":315,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullback","doc":"A choice of wide pullback. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.widePullback\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">widePullback</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePullback\">CategoryTheory.Limits.HasWidePullback</a> <span class=\"fn\">B</span> <span class=\"fn\">objs</span> <span class=\"fn\">arrows</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L310-L311","name":"CategoryTheory.Limits.HasWidePushout","line":310,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePushout","doc":"`HasWidePushout B objs arrows` means that `wideSpan B objs arrows` has a colimit. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePushout\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">HasWidePushout</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L305-L306","name":"CategoryTheory.Limits.HasWidePullback","line":305,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePullback","doc":"`HasWidePullback B objs arrows` means that `wideCospan B objs arrows` has a limit. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePullback\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">HasWidePullback</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L298-L299","name":"CategoryTheory.Limits.HasWidePushouts","line":298,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePushouts","doc":"`HasWidePushouts` represents a choice of wide pushout for every collection of morphisms "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePushouts\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">HasWidePushouts</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L293-L294","name":"CategoryTheory.Limits.HasWidePullbacks","line":293,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePullbacks","doc":"`HasWidePullbacks` represents a choice of wide pullback for every collection of morphisms "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePullbacks\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">HasWidePullbacks</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L283-L286","name":"CategoryTheory.Limits.WidePushoutShape.uliftEquivalence","line":283,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.uliftEquivalence","doc":"Lifting universe and morphism levels preserves wide pushout diagrams. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.uliftEquivalence\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePushoutShape</span>.<span class=\"name\">uliftEquivalence</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/ULift.html#CategoryTheory.ULiftHom\">CategoryTheory.ULiftHom</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{w', w}</a>    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>)</span></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{w', w}</a>    <span class=\"fn\">J</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L271-L280","name":"CategoryTheory.Limits.WidePushoutShape.equivalenceOfEquiv","line":271,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.equivalenceOfEquiv","doc":"Wide pushout diagrams of equivalent index types are equivalent. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.equivalenceOfEquiv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePushoutShape</span>.<span class=\"name\">equivalenceOfEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(J' : <a href=\"./foundational_types.html\">Type</a> w')</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">J</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">J'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L258-L267","name":"CategoryTheory.Limits.WidePushoutShape.mkCocone","line":258,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.mkCocone","doc":"Construct a cocone over a wide span. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.mkCocone\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePushoutShape</span>.<span class=\"name\">mkCocone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>)</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">none</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ι : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">j</span></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.map <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.Hom.init\">CategoryTheory.Limits.WidePushoutShape.Hom.init</a> <span class=\"fn\">j</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> <span class=\"fn\">j</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone\">CategoryTheory.Limits.Cocone</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L257-L257","name":"CategoryTheory.Limits.WidePushoutShape.mkCocone_pt","line":257,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.mkCocone_pt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.mkCocone_pt\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePushoutShape</span>.<span class=\"name\">mkCocone_pt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>)</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">none</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ι : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">j</span></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.map <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.Hom.init\">CategoryTheory.Limits.WidePushoutShape.Hom.init</a> <span class=\"fn\">j</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> <span class=\"fn\">j</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.mkCocone\">CategoryTheory.Limits.WidePushoutShape.mkCocone</a> <span class=\"fn\">f</span> <span class=\"fn\">ι</span> <span class=\"fn\">w</span></span>)</span>.pt</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L257-L257","name":"CategoryTheory.Limits.WidePushoutShape.mkCocone_ι_app","line":257,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.mkCocone_ι_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.mkCocone_ι_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePushoutShape</span>.<span class=\"name\">mkCocone_ι_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>)</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">none</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ι : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">j</span></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.map <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.Hom.init\">CategoryTheory.Limits.WidePushoutShape.Hom.init</a> <span class=\"fn\">j</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> <span class=\"fn\">j</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.mkCocone\">CategoryTheory.Limits.WidePushoutShape.mkCocone</a> <span class=\"fn\">f</span> <span class=\"fn\">ι</span> <span class=\"fn\">w</span></span>)</span>.ι</span>.app <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">match <span class=\"fn\">j</span> with\n  | <span class=\"fn\">none</span> =&gt; <span class=\"fn\">f</span>\n  | <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">j</span></span> =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.none\">ι</a> <span class=\"fn\">j</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L251-L253","name":"CategoryTheory.Limits.WidePushoutShape.diagramIsoWideSpan","line":251,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.diagramIsoWideSpan","doc":"Every diagram is naturally isomorphic (actually, equal) to a `wideSpan` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.diagramIsoWideSpan\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePushoutShape</span>.<span class=\"name\">diagramIsoWideSpan</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>)</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.wideSpan\">CategoryTheory.Limits.WidePushoutShape.wideSpan</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">none</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">j</span></span>)</span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt;\n    <span class=\"fn\"><span class=\"fn\">F</span>.map <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.Hom.init\">CategoryTheory.Limits.WidePushoutShape.Hom.init</a> <span class=\"fn\">j</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L237-L247","name":"CategoryTheory.Limits.WidePushoutShape.wideSpan","line":237,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.wideSpan","doc":"Construct a functor out of the wide pushout shape given a J-indexed collection of arrows from a\nfixed object.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.wideSpan\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePushoutShape</span>.<span class=\"name\">wideSpan</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>)</span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L236-L236","name":"CategoryTheory.Limits.WidePushoutShape.wideSpan_obj","line":236,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.wideSpan_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.wideSpan_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePushoutShape</span>.<span class=\"name\">wideSpan_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.wideSpan\">CategoryTheory.Limits.WidePushoutShape.wideSpan</a> <span class=\"fn\">B</span> <span class=\"fn\">objs</span> <span class=\"fn\">arrows</span></span>)</span>.obj <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.casesOn\">Option.casesOn</a> <span class=\"fn\">j</span> <span class=\"fn\">B</span> <span class=\"fn\">objs</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L236-L236","name":"CategoryTheory.Limits.WidePushoutShape.wideSpan_map","line":236,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.wideSpan_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.wideSpan_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePushoutShape</span>.<span class=\"name\">wideSpan_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.wideSpan\">CategoryTheory.Limits.WidePushoutShape.wideSpan</a> <span class=\"fn\">B</span> <span class=\"fn\">objs</span> <span class=\"fn\">arrows</span></span>)</span>.map <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.Hom.casesOn\">CategoryTheory.Limits.WidePushoutShape.Hom.casesOn</a> (motive :=\n      <span class=\"fn\">fun (<span class=\"fn\">a</span> a_1 : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>) (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.Hom\">CategoryTheory.Limits.WidePushoutShape.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">a_1</span></span>) =&gt;\n      <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span> →\n        <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a_1</span></span> →\n          <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">t</span></span> →\n            <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.casesOn\">Option.casesOn</a> <span class=\"fn\">j</span> <span class=\"fn\">B</span> <span class=\"fn\">objs</span></span></span>)</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a>               <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.casesOn\">Option.casesOn</a> <span class=\"fn\">j</span> <span class=\"fn\">B</span> <span class=\"fn\">objs</span></span></span>)</span> <span class=\"fn\">Y</span></span></span>)</span></span></span></span></span>)\n      <span class=\"fn\">f</span>\n      <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">X_1</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X_1</span></span>) =&gt;\n        <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun (<span class=\"fn\">X_2</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>) =&gt;\n          <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X_2</span></span> →\n            <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.Hom.id\">CategoryTheory.Limits.WidePushoutShape.Hom.id</a> <span class=\"fn\">X_2</span></span>)</span></span> →\n              <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.casesOn\">Option.casesOn</a> <span class=\"fn\">j</span> <span class=\"fn\">B</span> <span class=\"fn\">objs</span></span></span>)</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a>                 <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.casesOn\">Option.casesOn</a> <span class=\"fn\">j</span> <span class=\"fn\">B</span> <span class=\"fn\">objs</span></span></span>)</span> <span class=\"fn\">Y</span></span></span>)</span></span></span></span>)\n          <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></span>) =&gt;\n            <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun {<span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>} =&gt;\n              <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) →\n                <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.Hom.id\">CategoryTheory.Limits.WidePushoutShape.Hom.id</a> <span class=\"fn\">X</span></span>)</span></span> →\n                  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.casesOn\">Option.casesOn</a> <span class=\"fn\">j</span> <span class=\"fn\">B</span> <span class=\"fn\">objs</span></span></span>)</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a>                     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.casesOn\">Option.casesOn</a> <span class=\"fn\">j</span> <span class=\"fn\">B</span> <span class=\"fn\">objs</span></span></span>)</span> <span class=\"fn\">Y</span></span></span>)</span></span></span></span>)\n              <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span></span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.Hom.id\">CategoryTheory.Limits.WidePushoutShape.Hom.id</a> <span class=\"fn\">X</span></span>)</span></span>) =&gt;\n                <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a>\n                  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.casesOn\">Option.casesOn</a> <span class=\"fn\">j</span> <span class=\"fn\">B</span> <span class=\"fn\">objs</span></span></span>)</span> <span class=\"fn\">X</span></span>)</span></span></span>)</span>\n              <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">f</span></span></span>)</span>\n          <span class=\"fn\">h</span></span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">none</span></span>) =&gt;\n        <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun {<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>} =&gt;\n          <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) →\n            <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">j</span></span></span> →\n              <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.Hom.init\">CategoryTheory.Limits.WidePushoutShape.Hom.init</a> <span class=\"fn\">j</span></span>)</span></span> →\n                <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.casesOn\">Option.casesOn</a> <span class=\"fn\">j</span> <span class=\"fn\">B</span> <span class=\"fn\">objs</span></span></span>)</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a>                   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.casesOn\">Option.casesOn</a> <span class=\"fn\">j</span> <span class=\"fn\">B</span> <span class=\"fn\">objs</span></span></span>)</span> <span class=\"fn\">Y</span></span></span>)</span></span></span></span></span>)\n          <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">none</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">j</span></span></span>) =&gt;\n            <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun {<span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>} =&gt;\n              <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">none</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) →\n                <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.Hom.init\">CategoryTheory.Limits.WidePushoutShape.Hom.init</a> <span class=\"fn\">j</span></span>)</span></span> →\n                  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.casesOn\">Option.casesOn</a> <span class=\"fn\">j</span> <span class=\"fn\">B</span> <span class=\"fn\">objs</span></span></span>)</span> <span class=\"fn\">none</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a>                     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.casesOn\">Option.casesOn</a> <span class=\"fn\">j</span> <span class=\"fn\">B</span> <span class=\"fn\">objs</span></span></span>)</span> <span class=\"fn\">Y</span></span></span>)</span></span></span></span>)\n              <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">none</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">j</span></span></span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.Hom.init\">CategoryTheory.Limits.WidePushoutShape.Hom.init</a> <span class=\"fn\">j</span></span>)</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span></span>)</span>\n              <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">f</span></span></span>)</span>\n          <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">none</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">f</span></span></span>)</span>\n      <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">f</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L223-L224","name":"CategoryTheory.Limits.WidePushoutShape.hom_id","line":223,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.hom_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.hom_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePushoutShape</span>.<span class=\"name\">hom_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.Hom.id\">CategoryTheory.Limits.WidePushoutShape.Hom.id</a> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L218-L219","name":"CategoryTheory.Limits.WidePushoutShape.category","line":218,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.category","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.category\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePushoutShape</span>.<span class=\"name\">category</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L211-L215","name":"CategoryTheory.Limits.WidePushoutShape.subsingleton_hom","line":211,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.subsingleton_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.subsingleton_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePushoutShape</span>.<span class=\"name\">subsingleton_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.IsThin\">Quiver.IsThin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L204-L207","name":"CategoryTheory.Limits.WidePushoutShape.evalCasesBash'","line":204,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.evalCasesBash'","doc":"An aesop tactic for bulk cases on morphisms in `WidePushoutShape` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.evalCasesBash'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePushoutShape</span>.<span class=\"name\">evalCasesBash'</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM\">Lean.Elab.Tactic.TacticM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L197-L198","name":"CategoryTheory.Limits.WidePushoutShape.Hom.inhabited","line":197,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.Hom.inhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.Hom.inhabited\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePushoutShape</span>.<span class=\"name\">Hom</span>.<span class=\"name\">inhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.Hom\">CategoryTheory.Limits.WidePushoutShape.Hom</a> <span class=\"fn\">none</span> <span class=\"fn\">none</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L187-L194","name":"CategoryTheory.Limits.WidePushoutShape.struct","line":187,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.struct","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.struct\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePushoutShape</span>.<span class=\"name\">struct</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct\">CategoryTheory.CategoryStruct.{w, w}</a>    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L180-L180","name":"CategoryTheory.Limits.WidePushoutShape.instDecidableEqHom","line":180,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.instDecidableEqHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.instDecidableEqHom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePushoutShape</span>.<span class=\"name\">instDecidableEqHom</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1} →\n  <span class=\"fn\">{<span class=\"fn\">a </span>a_1 : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>} →\n    <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">J</span></span>] → <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.Hom\">CategoryTheory.Limits.WidePushoutShape.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">a_1</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L179-L179","name":"CategoryTheory.Limits.WidePushoutShape.Hom.init","line":179,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.Hom.init","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.Hom.init\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePushoutShape</span>.<span class=\"name\">Hom</span>.<span class=\"name\">init</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.Hom\">CategoryTheory.Limits.WidePushoutShape.Hom</a> <span class=\"fn\">none</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">j</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L178-L178","name":"CategoryTheory.Limits.WidePushoutShape.Hom.id","line":178,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.Hom.id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.Hom.id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePushoutShape</span>.<span class=\"name\">Hom</span>.<span class=\"name\">id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.Hom\">CategoryTheory.Limits.WidePushoutShape.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L177-L180","name":"CategoryTheory.Limits.WidePushoutShape.Hom","line":177,"kind":"inductive","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.Hom","doc":"The type of arrows for the shape indexing a wide pushout. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape.Hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePushoutShape</span>.<span class=\"name\">Hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span> → <a href=\"./foundational_types.html\">Type</a> w</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L164-L167","name":"CategoryTheory.Limits.WidePullbackShape.uliftEquivalence","line":164,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.uliftEquivalence","doc":"Lifting universe and morphism levels preserves wide pullback diagrams. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.uliftEquivalence\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePullbackShape</span>.<span class=\"name\">uliftEquivalence</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/ULift.html#CategoryTheory.ULiftHom\">CategoryTheory.ULiftHom</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{w', w}</a>    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>)</span></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{w', w}</a>    <span class=\"fn\">J</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L151-L160","name":"CategoryTheory.Limits.WidePullbackShape.equivalenceOfEquiv","line":151,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.equivalenceOfEquiv","doc":"Wide pullback diagrams of equivalent index types are equivalent. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.equivalenceOfEquiv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePullbackShape</span>.<span class=\"name\">equivalenceOfEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(J' : <a href=\"./foundational_types.html\">Type</a> w')</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">J</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">J'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L138-L147","name":"CategoryTheory.Limits.WidePullbackShape.mkCone","line":138,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.mkCone","doc":"Construct a cone over a wide cospan. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.mkCone\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePullbackShape</span>.<span class=\"name\">mkCone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>)</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">none</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(π : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">j</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.map <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.Hom.term\">CategoryTheory.Limits.WidePullbackShape.Hom.term</a> <span class=\"fn\">j</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone\">CategoryTheory.Limits.Cone</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L137-L137","name":"CategoryTheory.Limits.WidePullbackShape.mkCone_pt","line":137,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.mkCone_pt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.mkCone_pt\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePullbackShape</span>.<span class=\"name\">mkCone_pt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>)</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">none</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(π : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">j</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.map <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.Hom.term\">CategoryTheory.Limits.WidePullbackShape.Hom.term</a> <span class=\"fn\">j</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.mkCone\">CategoryTheory.Limits.WidePullbackShape.mkCone</a> <span class=\"fn\">f</span> <span class=\"fn\">π</span> <span class=\"fn\">w</span></span>)</span>.pt</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L137-L137","name":"CategoryTheory.Limits.WidePullbackShape.mkCone_π_app","line":137,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.mkCone_π_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.mkCone_π_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePullbackShape</span>.<span class=\"name\">mkCone_π_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>)</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">none</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(π : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">j</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.map <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.Hom.term\">CategoryTheory.Limits.WidePullbackShape.Hom.term</a> <span class=\"fn\">j</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.mkCone\">CategoryTheory.Limits.WidePullbackShape.mkCone</a> <span class=\"fn\">f</span> <span class=\"fn\">π</span> <span class=\"fn\">w</span></span>)</span>.π</span>.app <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">match <span class=\"fn\">j</span> with\n  | <span class=\"fn\">none</span> =&gt; <span class=\"fn\">f</span>\n  | <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">j</span></span> =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.none\">π</a> <span class=\"fn\">j</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L131-L133","name":"CategoryTheory.Limits.WidePullbackShape.diagramIsoWideCospan","line":131,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.diagramIsoWideCospan","doc":"Every diagram is naturally isomorphic (actually, equal) to a `wideCospan` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.diagramIsoWideCospan\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePullbackShape</span>.<span class=\"name\">diagramIsoWideCospan</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>)</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.wideCospan\">CategoryTheory.Limits.WidePullbackShape.wideCospan</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">none</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">j</span></span>)</span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt;\n    <span class=\"fn\"><span class=\"fn\">F</span>.map <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.Hom.term\">CategoryTheory.Limits.WidePullbackShape.Hom.term</a> <span class=\"fn\">j</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L122-L127","name":"CategoryTheory.Limits.WidePullbackShape.wideCospan","line":122,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.wideCospan","doc":"Construct a functor out of the wide pullback shape given a J-indexed collection of arrows to a\nfixed object.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.wideCospan\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePullbackShape</span>.<span class=\"name\">wideCospan</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>)</span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L121-L121","name":"CategoryTheory.Limits.WidePullbackShape.wideCospan_obj","line":121,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.wideCospan_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.wideCospan_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePullbackShape</span>.<span class=\"name\">wideCospan_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.wideCospan\">CategoryTheory.Limits.WidePullbackShape.wideCospan</a> <span class=\"fn\">B</span> <span class=\"fn\">objs</span> <span class=\"fn\">arrows</span></span>)</span>.obj <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.casesOn\">Option.casesOn</a> <span class=\"fn\">j</span> <span class=\"fn\">B</span> <span class=\"fn\">objs</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L121-L121","name":"CategoryTheory.Limits.WidePullbackShape.wideCospan_map","line":121,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.wideCospan_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.wideCospan_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePullbackShape</span>.<span class=\"name\">wideCospan_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(objs : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(arrows : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">objs</span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.wideCospan\">CategoryTheory.Limits.WidePullbackShape.wideCospan</a> <span class=\"fn\">B</span> <span class=\"fn\">objs</span> <span class=\"fn\">arrows</span></span>)</span>.map <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.Hom.casesOn\">CategoryTheory.Limits.WidePullbackShape.Hom.casesOn</a> (motive :=\n      <span class=\"fn\">fun (<span class=\"fn\">a</span> a_1 : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>) (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.Hom\">CategoryTheory.Limits.WidePullbackShape.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">a_1</span></span>) =&gt;\n      <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span> →\n        <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a_1</span></span> →\n          <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">t</span></span> →\n            <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.casesOn\">Option.casesOn</a> <span class=\"fn\">j</span> <span class=\"fn\">B</span> <span class=\"fn\">objs</span></span></span>)</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a>               <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.casesOn\">Option.casesOn</a> <span class=\"fn\">j</span> <span class=\"fn\">B</span> <span class=\"fn\">objs</span></span></span>)</span> <span class=\"fn\">Y</span></span></span>)</span></span></span></span></span>)\n      <span class=\"fn\">f</span>\n      <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">X_1</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X_1</span></span>) =&gt;\n        <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun (<span class=\"fn\">X_2</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>) =&gt;\n          <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X_2</span></span> →\n            <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.Hom.id\">CategoryTheory.Limits.WidePullbackShape.Hom.id</a> <span class=\"fn\">X_2</span></span>)</span></span> →\n              <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.casesOn\">Option.casesOn</a> <span class=\"fn\">j</span> <span class=\"fn\">B</span> <span class=\"fn\">objs</span></span></span>)</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a>                 <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.casesOn\">Option.casesOn</a> <span class=\"fn\">j</span> <span class=\"fn\">B</span> <span class=\"fn\">objs</span></span></span>)</span> <span class=\"fn\">Y</span></span></span>)</span></span></span></span>)\n          <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></span>) =&gt;\n            <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun {<span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>} =&gt;\n              <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) →\n                <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.Hom.id\">CategoryTheory.Limits.WidePullbackShape.Hom.id</a> <span class=\"fn\">X</span></span>)</span></span> →\n                  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.casesOn\">Option.casesOn</a> <span class=\"fn\">j</span> <span class=\"fn\">B</span> <span class=\"fn\">objs</span></span></span>)</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a>                     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.casesOn\">Option.casesOn</a> <span class=\"fn\">j</span> <span class=\"fn\">B</span> <span class=\"fn\">objs</span></span></span>)</span> <span class=\"fn\">Y</span></span></span>)</span></span></span></span>)\n              <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span></span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.Hom.id\">CategoryTheory.Limits.WidePullbackShape.Hom.id</a> <span class=\"fn\">X</span></span>)</span></span>) =&gt;\n                <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a>\n                  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.casesOn\">Option.casesOn</a> <span class=\"fn\">j</span> <span class=\"fn\">B</span> <span class=\"fn\">objs</span></span></span>)</span> <span class=\"fn\">X</span></span>)</span></span></span>)</span>\n              <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">f</span></span></span>)</span>\n          <span class=\"fn\">h</span></span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">j</span></span></span>) =&gt;\n        <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun {<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>} =&gt;\n          <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) →\n            <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">none</span></span> →\n              <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.Hom.term\">CategoryTheory.Limits.WidePullbackShape.Hom.term</a> <span class=\"fn\">j</span></span>)</span></span> →\n                <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.casesOn\">Option.casesOn</a> <span class=\"fn\">j</span> <span class=\"fn\">B</span> <span class=\"fn\">objs</span></span></span>)</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a>                   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.casesOn\">Option.casesOn</a> <span class=\"fn\">j</span> <span class=\"fn\">B</span> <span class=\"fn\">objs</span></span></span>)</span> <span class=\"fn\">Y</span></span></span>)</span></span></span></span></span>)\n          <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">none</span></span>) =&gt;\n            <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun {<span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>} =&gt;\n              <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) →\n                <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.Hom.term\">CategoryTheory.Limits.WidePullbackShape.Hom.term</a> <span class=\"fn\">j</span></span>)</span></span> →\n                  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.casesOn\">Option.casesOn</a> <span class=\"fn\">j</span> <span class=\"fn\">B</span> <span class=\"fn\">objs</span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">j</span></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a>                     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.casesOn\">Option.casesOn</a> <span class=\"fn\">j</span> <span class=\"fn\">B</span> <span class=\"fn\">objs</span></span></span>)</span> <span class=\"fn\">Y</span></span></span>)</span></span></span></span>)\n              <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">none</span></span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.Hom.term\">CategoryTheory.Limits.WidePullbackShape.Hom.term</a> <span class=\"fn\">j</span></span>)</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">arrows</span> <span class=\"fn\">j</span></span></span>)</span>\n              <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">none</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">f</span></span></span>)</span>\n          <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">f</span></span></span>)</span>\n      <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">f</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L107-L108","name":"CategoryTheory.Limits.WidePullbackShape.hom_id","line":107,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.hom_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.hom_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePullbackShape</span>.<span class=\"name\">hom_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.Hom.id\">CategoryTheory.Limits.WidePullbackShape.Hom.id</a> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L102-L103","name":"CategoryTheory.Limits.WidePullbackShape.category","line":102,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.category","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.category\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePullbackShape</span>.<span class=\"name\">category</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L95-L99","name":"CategoryTheory.Limits.WidePullbackShape.subsingleton_hom","line":95,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.subsingleton_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.subsingleton_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePullbackShape</span>.<span class=\"name\">subsingleton_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.IsThin\">Quiver.IsThin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L88-L91","name":"CategoryTheory.Limits.WidePullbackShape.evalCasesBash","line":88,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.evalCasesBash","doc":"An aesop tactic for bulk cases on morphisms in `WidePushoutShape` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.evalCasesBash\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePullbackShape</span>.<span class=\"name\">evalCasesBash</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM\">Lean.Elab.Tactic.TacticM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L80-L81","name":"CategoryTheory.Limits.WidePullbackShape.Hom.inhabited","line":80,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.Hom.inhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.Hom.inhabited\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePullbackShape</span>.<span class=\"name\">Hom</span>.<span class=\"name\">inhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.Hom\">CategoryTheory.Limits.WidePullbackShape.Hom</a> <span class=\"fn\">none</span> <span class=\"fn\">none</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L70-L77","name":"CategoryTheory.Limits.WidePullbackShape.struct","line":70,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.struct","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.struct\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePullbackShape</span>.<span class=\"name\">struct</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct\">CategoryTheory.CategoryStruct.{w, w}</a>    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L63-L63","name":"CategoryTheory.Limits.WidePullbackShape.instDecidableEqHom","line":63,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.instDecidableEqHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.instDecidableEqHom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePullbackShape</span>.<span class=\"name\">instDecidableEqHom</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1} →\n  <span class=\"fn\">{<span class=\"fn\">a </span>a_1 : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>} →\n    <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">J</span></span>] → <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.Hom\">CategoryTheory.Limits.WidePullbackShape.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">a_1</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L62-L62","name":"CategoryTheory.Limits.WidePullbackShape.Hom.term","line":62,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.Hom.term","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.Hom.term\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePullbackShape</span>.<span class=\"name\">Hom</span>.<span class=\"name\">term</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.Hom\">CategoryTheory.Limits.WidePullbackShape.Hom</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">none</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L61-L61","name":"CategoryTheory.Limits.WidePullbackShape.Hom.id","line":61,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.Hom.id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.Hom.id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePullbackShape</span>.<span class=\"name\">Hom</span>.<span class=\"name\">id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.Hom\">CategoryTheory.Limits.WidePullbackShape.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L60-L63","name":"CategoryTheory.Limits.WidePullbackShape.Hom","line":60,"kind":"inductive","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.Hom","doc":"The type of arrows for the shape indexing a wide pullback. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape.Hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePullbackShape</span>.<span class=\"name\">Hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span> → <a href=\"./foundational_types.html\">Type</a> w</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L52-L53","name":"CategoryTheory.Limits.instInhabitedWidePushoutShape","line":52,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.instInhabitedWidePushoutShape","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.instInhabitedWidePushoutShape\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">instInhabitedWidePushoutShape</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L49-L49","name":"CategoryTheory.Limits.WidePushoutShape","line":49,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape","doc":"A wide pushout shape for any type `J` can be written simply as `Option J`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePushoutShape</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> w</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L45-L46","name":"CategoryTheory.Limits.instInhabitedWidePullbackShape","line":45,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.instInhabitedWidePullbackShape","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.instInhabitedWidePullbackShape\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">instInhabitedWidePullbackShape</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean#L41-L41","name":"CategoryTheory.Limits.WidePullbackShape","line":41,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape","doc":"A wide pullback shape for any type `J` can be written simply as `Option J`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WidePullbackShape</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> w</div></div>"}]}