{"name":"Mathlib.SetTheory.Ordinal.NaturalOps","instances":[{"typeNames":["NatOrdinal"],"name":"NatOrdinal.linearOrder","className":"LinearOrder"},{"typeNames":["NatOrdinal"],"name":"NatOrdinal.succOrder","className":"SuccOrder"},{"typeNames":["NatOrdinal"],"name":"NatOrdinal.instWellFoundedLTNatOrdinalToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLatticeLinearOrder","className":"IsWellFounded"},{"typeNames":["NatOrdinal"],"name":"NatOrdinal.instIsWellOrderNatOrdinalLtToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLatticeLinearOrder","className":"IsWellOrder"},{"typeNames":["NatOrdinal"],"name":"NatOrdinal.instAddNatOrdinal","className":"Add"},{"typeNames":["NatOrdinal","NatOrdinal"],"name":"NatOrdinal.add_covariantClass_lt","className":"CovariantClass"},{"typeNames":["NatOrdinal","NatOrdinal"],"name":"NatOrdinal.add_covariantClass_le","className":"CovariantClass"},{"typeNames":["NatOrdinal","NatOrdinal"],"name":"NatOrdinal.add_contravariantClass_le","className":"ContravariantClass"},{"typeNames":["NatOrdinal"],"name":"NatOrdinal.orderedCancelAddCommMonoid","className":"OrderedCancelAddCommMonoid"},{"typeNames":["NatOrdinal"],"name":"NatOrdinal.addMonoidWithOne","className":"AddMonoidWithOne"},{"typeNames":["NatOrdinal"],"name":"instMulNatOrdinal","className":"Mul"},{"typeNames":["NatOrdinal"],"name":"instOrderedCommSemiringNatOrdinal","className":"OrderedCommSemiring"}],"imports":["Init","Mathlib.SetTheory.Ordinal.Arithmetic","Mathlib.Tactic.Abel"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L823-L833","name":"NatOrdinal.mul_le_nmul","line":823,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.mul_le_nmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.mul_le_nmul\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">mul_le_nmul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L813-L814","name":"Ordinal.add_one_nmul","line":813,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.add_one_nmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.add_one_nmul\"><span class=\"name\">Ordinal</span>.<span class=\"name\">add_one_nmul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L809-L810","name":"Ordinal.nmul_add_one","line":809,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_add_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_add_one\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_add_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L806-L806","name":"Ordinal.succ_nmul","line":806,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.succ_nmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.succ_nmul\"><span class=\"name\">Ordinal</span>.<span class=\"name\">succ_nmul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L803-L803","name":"Ordinal.nmul_succ","line":803,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_succ\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L799-L800","name":"Ordinal.nadd_one_nmul","line":799,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_one_nmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_one_nmul\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_one_nmul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L795-L796","name":"Ordinal.nmul_nadd_one","line":795,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_nadd_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_nadd_one\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_nadd_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">b</span> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L791-L792","name":"Ordinal.nmul_eq_mul","line":791,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_eq_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_eq_mul\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_eq_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">NatOrdinal.toOrdinal</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">Ordinal.toNatOrdinal</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">Ordinal.toNatOrdinal</a> <span class=\"fn\">b</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L772-L787","name":"instOrderedCommSemiringNatOrdinal","line":772,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#instOrderedCommSemiringNatOrdinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#instOrderedCommSemiringNatOrdinal\"><span class=\"name\">instOrderedCommSemiringNatOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#OrderedCommSemiring\">OrderedCommSemiring</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L767-L768","name":"instMulNatOrdinal","line":767,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#instMulNatOrdinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#instMulNatOrdinal\"><span class=\"name\">instMulNatOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L741-L760","name":"Ordinal.nmul_assoc","line":741,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_assoc\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L733-L738","name":"Ordinal.nmul_le_iff₃'","line":733,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_le_iff₃'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_le_iff₃'\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_le_iff₃'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">d</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ <span class=\"fn\">a'</span> &lt; <span class=\"fn\">a</span>,\n    <span class=\"fn\">∀ <span class=\"fn\">b'</span> &lt; <span class=\"fn\">b</span>,\n      <span class=\"fn\">∀ <span class=\"fn\">c'</span> &lt; <span class=\"fn\">c</span>,\n        <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a>\n            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b'</span> <span class=\"fn\">c</span></span>)</span></span>)</span></span>)</span>\n              <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b</span> <span class=\"fn\">c'</span></span>)</span></span>)</span></span>)</span>\n            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b'</span> <span class=\"fn\">c'</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a>           <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a>\n            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">d</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b'</span> <span class=\"fn\">c</span></span>)</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b</span> <span class=\"fn\">c'</span></span>)</span></span>)</span></span>)</span>\n            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b'</span> <span class=\"fn\">c'</span></span>)</span></span>)</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L722-L730","name":"Ordinal.lt_nmul_iff₃'","line":722,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.lt_nmul_iff₃'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.lt_nmul_iff₃'\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lt_nmul_iff₃'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∃ a' &lt; <span class=\"fn\">a</span>,\n    <span class=\"fn\">∃ b' &lt; <span class=\"fn\">b</span>,\n      <span class=\"fn\">∃ c' &lt; <span class=\"fn\">c</span>,\n        <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a>\n            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">d</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b'</span> <span class=\"fn\">c</span></span>)</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b</span> <span class=\"fn\">c'</span></span>)</span></span>)</span></span>)</span>\n            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b'</span> <span class=\"fn\">c'</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>           <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a>\n            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b'</span> <span class=\"fn\">c</span></span>)</span></span>)</span></span>)</span>\n              <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b</span> <span class=\"fn\">c'</span></span>)</span></span>)</span></span>)</span>\n            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b'</span> <span class=\"fn\">c'</span></span>)</span></span>)</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L714-L719","name":"Ordinal.nmul_le_iff₃","line":714,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_le_iff₃","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_le_iff₃\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_le_iff₃</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">d</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ <span class=\"fn\">a'</span> &lt; <span class=\"fn\">a</span>,\n    <span class=\"fn\">∀ <span class=\"fn\">b'</span> &lt; <span class=\"fn\">b</span>,\n      <span class=\"fn\">∀ <span class=\"fn\">c'</span> &lt; <span class=\"fn\">c</span>,\n        <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a>\n            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b'</span></span>)</span> <span class=\"fn\">c</span></span>)</span></span>)</span>\n              <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">c'</span></span>)</span></span>)</span>\n            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">b'</span></span>)</span> <span class=\"fn\">c'</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a>           <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a>\n            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">d</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">b'</span></span>)</span> <span class=\"fn\">c</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">c'</span></span>)</span></span>)</span>\n            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b'</span></span>)</span> <span class=\"fn\">c'</span></span>)</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L691-L711","name":"Ordinal.lt_nmul_iff₃","line":691,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.lt_nmul_iff₃","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.lt_nmul_iff₃\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lt_nmul_iff₃</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">c</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∃ a' &lt; <span class=\"fn\">a</span>,\n    <span class=\"fn\">∃ b' &lt; <span class=\"fn\">b</span>,\n      <span class=\"fn\">∃ c' &lt; <span class=\"fn\">c</span>,\n        <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a>\n            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">d</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">b'</span></span>)</span> <span class=\"fn\">c</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">c'</span></span>)</span></span>)</span>\n            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b'</span></span>)</span> <span class=\"fn\">c'</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>           <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a>\n            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b'</span></span>)</span> <span class=\"fn\">c</span></span>)</span></span>)</span>\n              <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">c'</span></span>)</span></span>)</span>\n            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">b'</span></span>)</span> <span class=\"fn\">c'</span></span>)</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L683-L688","name":"Ordinal.nmul_nadd_le₃'","line":683,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_nadd_le₃'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_nadd_le₃'\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_nadd_le₃'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a' : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b' : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c' : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">b'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><span class=\"fn\">c'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b'</span> <span class=\"fn\">c</span></span>)</span></span>)</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b</span> <span class=\"fn\">c'</span></span>)</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b'</span> <span class=\"fn\">c'</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>   <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b'</span> <span class=\"fn\">c</span></span>)</span></span>)</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b</span> <span class=\"fn\">c'</span></span>)</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b'</span> <span class=\"fn\">c'</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L675-L680","name":"Ordinal.nmul_nadd_lt₃'","line":675,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_nadd_lt₃'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_nadd_lt₃'\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_nadd_lt₃'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a' : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b' : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c' : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">b'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><span class=\"fn\">c'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b'</span> <span class=\"fn\">c</span></span>)</span></span>)</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b</span> <span class=\"fn\">c'</span></span>)</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b'</span> <span class=\"fn\">c'</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a>   <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b'</span> <span class=\"fn\">c</span></span>)</span></span>)</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b</span> <span class=\"fn\">c'</span></span>)</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b'</span> <span class=\"fn\">c'</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L669-L672","name":"Ordinal.nmul_nadd_le₃","line":669,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_nadd_le₃","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_nadd_le₃\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_nadd_le₃</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a' : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b' : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c' : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">b'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><span class=\"fn\">c'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b'</span></span>)</span> <span class=\"fn\">c</span></span>)</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">c'</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">b'</span></span>)</span> <span class=\"fn\">c'</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>   <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">b'</span></span>)</span> <span class=\"fn\">c</span></span>)</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">c'</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b'</span></span>)</span> <span class=\"fn\">c'</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L663-L666","name":"Ordinal.nmul_nadd_lt₃","line":663,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_nadd_lt₃","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_nadd_lt₃\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_nadd_lt₃</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a' : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b' : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c' : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">b'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><span class=\"fn\">c'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b'</span></span>)</span> <span class=\"fn\">c</span></span>)</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">c'</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">b'</span></span>)</span> <span class=\"fn\">c'</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a>   <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">b'</span></span>)</span> <span class=\"fn\">c</span></span>)</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">c'</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b'</span></span>)</span> <span class=\"fn\">c'</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L659-L660","name":"Ordinal.nadd_nmul","line":659,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_nmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_nmul\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_nmul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L616-L656","name":"Ordinal.nmul_nadd","line":616,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_nadd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_nadd\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_nadd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L611-L613","name":"Ordinal.nmul_le_nmul_of_nonneg_right","line":611,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_le_nmul_of_nonneg_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_le_nmul_of_nonneg_right\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_le_nmul_of_nonneg_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L605-L608","name":"Ordinal.nmul_le_nmul_of_nonneg_left","line":605,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_le_nmul_of_nonneg_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_le_nmul_of_nonneg_left\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_le_nmul_of_nonneg_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">c</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">c</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L601-L602","name":"Ordinal.nmul_lt_nmul_of_pos_right","line":601,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_lt_nmul_of_pos_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_lt_nmul_of_pos_right\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_lt_nmul_of_pos_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L597-L598","name":"Ordinal.nmul_lt_nmul_of_pos_left","line":597,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_lt_nmul_of_pos_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_lt_nmul_of_pos_left\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_lt_nmul_of_pos_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">c</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">c</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L594-L594","name":"Ordinal.one_nmul","line":594,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.one_nmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.one_nmul\"><span class=\"name\">Ordinal</span>.<span class=\"name\">one_nmul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">1</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L577-L590","name":"Ordinal.nmul_one","line":577,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_one\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L573-L573","name":"Ordinal.zero_nmul","line":573,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.zero_nmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.zero_nmul\"><span class=\"name\">Ordinal</span>.<span class=\"name\">zero_nmul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">0</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L567-L569","name":"Ordinal.nmul_zero","line":567,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L553-L563","name":"Ordinal.nmul_comm","line":553,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_comm\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_comm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">b</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L549-L550","name":"Ordinal.nmul_le_iff","line":549,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_le_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_le_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_le_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ <span class=\"fn\">a'</span> &lt; <span class=\"fn\">a</span>, <span class=\"fn\">∀ <span class=\"fn\">b'</span> &lt; <span class=\"fn\">b</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b'</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">c</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">b'</span></span>)</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L540-L546","name":"Ordinal.lt_nmul_iff","line":540,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.lt_nmul_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.lt_nmul_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lt_nmul_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∃ a' &lt; <span class=\"fn\">a</span>, <span class=\"fn\">∃ b' &lt; <span class=\"fn\">b</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">c</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">b'</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b'</span></span>)</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L531-L537","name":"Ordinal.nmul_nadd_le","line":531,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_nadd_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_nadd_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_nadd_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a' : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b' : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">b'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b'</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">b'</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L525-L528","name":"Ordinal.nmul_nadd_lt","line":525,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_nadd_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_nadd_lt\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_nadd_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a' : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b' : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">b'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b'</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">b'</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L520-L522","name":"Ordinal.nmul_nonempty","line":520,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_nonempty","doc":"The set in the definition of `nmul` is nonempty. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_nonempty\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_nonempty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a>\n  <span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> |\n    <span class=\"fn\">∀ <span class=\"fn\">a'</span> &lt; <span class=\"fn\">a</span>, <span class=\"fn\">∀ <span class=\"fn\">b'</span> &lt; <span class=\"fn\">b</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b'</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">c</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">b'</span></span>)</span></span></span></span></span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L515-L516","name":"Ordinal.nmul_def","line":515,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_def\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet.sInf\">sInf</a>\n    <span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> |\n      <span class=\"fn\">∀ <span class=\"fn\">a'</span> &lt; <span class=\"fn\">a</span>, <span class=\"fn\">∀ <span class=\"fn\">b'</span> &lt; <span class=\"fn\">b</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a</span> <span class=\"fn\">b'</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">c</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">Ordinal.nmul</a> <span class=\"fn\">a'</span> <span class=\"fn\">b'</span></span>)</span></span></span></span></span>}</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L507-L508","name":"Ordinal.nadd_right_comm","line":507,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_right_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_right_comm\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_right_comm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L503-L504","name":"Ordinal.nadd_left_comm","line":503,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_left_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_left_comm\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_left_comm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">b</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L499-L500","name":"Ordinal.le_nadd_right","line":499,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.le_nadd_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.le_nadd_right\"><span class=\"name\">Ordinal</span>.<span class=\"name\">le_nadd_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L496-L496","name":"Ordinal.le_self_nadd","line":496,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.le_self_nadd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.le_self_nadd\"><span class=\"name\">Ordinal</span>.<span class=\"name\">le_self_nadd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L492-L493","name":"Ordinal.le_nadd_left","line":492,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.le_nadd_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.le_nadd_left\"><span class=\"name\">Ordinal</span>.<span class=\"name\">le_nadd_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L489-L489","name":"Ordinal.le_nadd_self","line":489,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.le_nadd_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.le_nadd_self\"><span class=\"name\">Ordinal</span>.<span class=\"name\">le_nadd_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">b</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L485-L486","name":"Ordinal.nadd_right_cancel_iff","line":485,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_right_cancel_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_right_cancel_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_right_cancel_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">b</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">c</span> <span class=\"fn\">a</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L481-L482","name":"Ordinal.nadd_left_cancel_iff","line":481,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_left_cancel_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_left_cancel_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_left_cancel_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L477-L478","name":"Ordinal.nadd_right_cancel","line":477,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_right_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_right_cancel\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_right_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">c</span> <span class=\"fn\">b</span></span></span> → <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L473-L474","name":"Ordinal.nadd_left_cancel","line":473,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_left_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_left_cancel\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_left_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span></span> → <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L469-L470","name":"Ordinal.nadd_lt_nadd_of_le_of_lt","line":469,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_lt_nadd_of_le_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_lt_nadd_of_le_of_lt\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_lt_nadd_of_le_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">d</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">b</span> <span class=\"fn\">d</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L465-L466","name":"Ordinal.nadd_lt_nadd_of_lt_of_le","line":465,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_lt_nadd_of_lt_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_lt_nadd_of_lt_of_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_lt_nadd_of_lt_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">d</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">b</span> <span class=\"fn\">d</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L461-L462","name":"Ordinal.nadd_lt_nadd","line":461,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_lt_nadd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_lt_nadd\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_lt_nadd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">d</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">b</span> <span class=\"fn\">d</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L457-L458","name":"Ordinal.nadd_le_nadd","line":457,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_le_nadd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_le_nadd\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_le_nadd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">d</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">b</span> <span class=\"fn\">d</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L453-L454","name":"Ordinal.nadd_le_nadd_iff_right","line":453,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_le_nadd_iff_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_le_nadd_iff_right\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_le_nadd_iff_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">b</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">c</span> <span class=\"fn\">a</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L449-L450","name":"Ordinal.nadd_le_nadd_iff_left","line":449,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_le_nadd_iff_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_le_nadd_iff_left\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_le_nadd_iff_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L445-L446","name":"Ordinal.nadd_lt_nadd_iff_right","line":445,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_lt_nadd_iff_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_lt_nadd_iff_right\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_lt_nadd_iff_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">b</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">c</span> <span class=\"fn\">a</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L441-L442","name":"Ordinal.nadd_lt_nadd_iff_left","line":441,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_lt_nadd_iff_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_lt_nadd_iff_left\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_lt_nadd_iff_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L437-L438","name":"Ordinal.le_of_nadd_le_nadd_right","line":437,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.le_of_nadd_le_nadd_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.le_of_nadd_le_nadd_right\"><span class=\"name\">Ordinal</span>.<span class=\"name\">le_of_nadd_le_nadd_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">b</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">c</span> <span class=\"fn\">a</span></span></span> → <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L433-L434","name":"Ordinal.le_of_nadd_le_nadd_left","line":433,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.le_of_nadd_le_nadd_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.le_of_nadd_le_nadd_left\"><span class=\"name\">Ordinal</span>.<span class=\"name\">le_of_nadd_le_nadd_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span></span> → <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L429-L430","name":"Ordinal.lt_of_nadd_lt_nadd_right","line":429,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.lt_of_nadd_lt_nadd_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.lt_of_nadd_lt_nadd_right\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lt_of_nadd_lt_nadd_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">b</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">c</span> <span class=\"fn\">a</span></span></span> → <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L425-L426","name":"Ordinal.lt_of_nadd_lt_nadd_left","line":425,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.lt_of_nadd_lt_nadd_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.lt_of_nadd_lt_nadd_left\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lt_of_nadd_lt_nadd_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span></span> → <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L420-L422","name":"Ordinal.toNatOrdinal_cast_nat","line":420,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_cast_nat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_cast_nat\"><span class=\"name\">Ordinal</span>.<span class=\"name\">toNatOrdinal_cast_nat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">Ordinal.toNatOrdinal</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L415-L416","name":"Ordinal.nadd_eq_add","line":415,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_eq_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_eq_add\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_eq_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">NatOrdinal.toOrdinal</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">Ordinal.toNatOrdinal</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">Ordinal.toNatOrdinal</a> <span class=\"fn\">b</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L400-L404","name":"NatOrdinal.toOrdinal_cast_nat","line":400,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_cast_nat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_cast_nat\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">toOrdinal_cast_nat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">NatOrdinal.toOrdinal</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L395-L396","name":"NatOrdinal.add_one_eq_succ","line":395,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.add_one_eq_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.add_one_eq_succ\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">add_one_eq_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L391-L392","name":"NatOrdinal.addMonoidWithOne","line":391,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.addMonoidWithOne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.addMonoidWithOne\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">addMonoidWithOne</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#AddMonoidWithOne\">AddMonoidWithOne</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L380-L389","name":"NatOrdinal.orderedCancelAddCommMonoid","line":380,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.orderedCancelAddCommMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.orderedCancelAddCommMonoid\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">orderedCancelAddCommMonoid</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelAddCommMonoid\">OrderedCancelAddCommMonoid</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L373-L377","name":"NatOrdinal.add_contravariantClass_le","line":373,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.add_contravariantClass_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.add_contravariantClass_le\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">add_contravariantClass_le</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass\">ContravariantClass</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L369-L370","name":"NatOrdinal.add_covariantClass_le","line":369,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.add_covariantClass_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.add_covariantClass_le\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">add_covariantClass_le</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L365-L366","name":"NatOrdinal.add_covariantClass_lt","line":365,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.add_covariantClass_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.add_covariantClass_lt\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">add_covariantClass_lt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L362-L363","name":"NatOrdinal.instAddNatOrdinal","line":362,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instAddNatOrdinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instAddNatOrdinal\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">instAddNatOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L346-L353","name":"Ordinal.add_le_nadd","line":346,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.add_le_nadd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.add_le_nadd\"><span class=\"name\">Ordinal</span>.<span class=\"name\">add_le_nadd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L343-L343","name":"Ordinal.nat_nadd","line":343,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nat_nadd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nat_nadd\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nat_nadd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">n</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L336-L339","name":"Ordinal.nadd_nat","line":336,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_nat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_nat\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_nat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L332-L332","name":"Ordinal.succ_nadd","line":332,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.succ_nadd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.succ_nadd\"><span class=\"name\">Ordinal</span>.<span class=\"name\">succ_nadd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L329-L329","name":"Ordinal.nadd_succ","line":329,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_succ\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L326-L326","name":"Ordinal.one_nadd","line":326,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.one_nadd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.one_nadd\"><span class=\"name\">Ordinal</span>.<span class=\"name\">one_nadd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">1</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L318-L322","name":"Ordinal.nadd_one","line":318,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_one\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L314-L314","name":"Ordinal.zero_nadd","line":314,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.zero_nadd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.zero_nadd\"><span class=\"name\">Ordinal</span>.<span class=\"name\">zero_nadd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">0</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L305-L310","name":"Ordinal.nadd_zero","line":305,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L294-L299","name":"Ordinal.nadd_assoc","line":294,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_assoc\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L277-L291","name":"Ordinal.blsub_nadd_of_mono","line":277,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.blsub_nadd_of_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.blsub_nadd_of_mono\"><span class=\"name\">Ordinal</span>.<span class=\"name\">blsub_nadd_of_mono</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>     </span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ {<span class=\"fn\">i </span>j : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>} (<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span>) (<span class=\"fn\">hj</span> : <span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">j</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">j</span> <span class=\"fn\">hj</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.blsub\">Ordinal.blsub</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.blsub\">Ordinal.blsub</a> <span class=\"fn\">a</span> <span class=\"fn\">fun (<span class=\"fn\">a'</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) (<span class=\"fn\">ha'</span> : <span class=\"fn\"><span class=\"fn\">a'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></span>) =&gt;\n      <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a'</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a'</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span>)</span></span></span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.blsub\">Ordinal.blsub</a> <span class=\"fn\">b</span> <span class=\"fn\">fun (<span class=\"fn\">b'</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) (<span class=\"fn\">hb'</span> : <span class=\"fn\"><span class=\"fn\">b'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>) =&gt;\n      <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">b'</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">b'</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span>)</span></span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L269-L274","name":"Ordinal.nadd_comm","line":269,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_comm\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_comm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">b</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L261-L264","name":"Ordinal.nadd_le_nadd_right","line":261,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_le_nadd_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_le_nadd_right\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_le_nadd_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">b</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">c</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L255-L258","name":"Ordinal.nadd_le_nadd_left","line":255,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_le_nadd_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_le_nadd_left\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_le_nadd_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L251-L252","name":"Ordinal.nadd_lt_nadd_right","line":251,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_lt_nadd_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_lt_nadd_right\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_lt_nadd_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">b</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">c</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L247-L248","name":"Ordinal.nadd_lt_nadd_left","line":247,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_lt_nadd_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_lt_nadd_left\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_lt_nadd_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L242-L244","name":"Ordinal.nadd_le_iff","line":242,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_le_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_le_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_le_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">b'</span> &lt; <span class=\"fn\">b</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">b'</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ <span class=\"fn\">c'</span> &lt; <span class=\"fn\">c</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">b</span> <span class=\"fn\">c'</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L237-L239","name":"Ordinal.lt_nadd_iff","line":237,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.lt_nadd_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.lt_nadd_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lt_nadd_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ b' &lt; <span class=\"fn\">b</span>, <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">b'</span> <span class=\"fn\">c</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">∃ c' &lt; <span class=\"fn\">c</span>, <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">b</span> <span class=\"fn\">c'</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L232-L234","name":"Ordinal.nadd_def","line":232,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_def\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.blsub\">Ordinal.blsub</a> <span class=\"fn\">a</span> <span class=\"fn\">fun (<span class=\"fn\">a'</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">a'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a'</span> <span class=\"fn\">b</span></span></span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.blsub\">Ordinal.blsub</a> <span class=\"fn\">b</span> <span class=\"fn\">fun (<span class=\"fn\">b'</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">b'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">Ordinal.nadd</a> <span class=\"fn\">a</span> <span class=\"fn\">b'</span></span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L227-L228","name":"NaturalOps.«term_⨳_»","line":227,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NaturalOps.«term_⨳_»","doc":"Natural multiplication on ordinals `a ⨳ b`, also known as the Hessenberg product, is recursively\ndefined as the least ordinal such that `a ⨳ b + a' ⨳ b'` is greater than `a' ⨳ b + a ⨳ b'` for all\n`a' < a` and `b < b'`. In contrast to normal ordinal multiplication, it is commutative and\ndistributive (over natural addition).\n\nNatural multiplication can equivalently be characterized as the ordinal resulting from multiplying\nthe Cantor normal forms of `a` and `b` as if they were polynomials in `ω`. Addition of exponents is\ndone via natural addition. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NaturalOps.«term_⨳_»\"><span class=\"name\">NaturalOps</span>.<span class=\"name\">«term_⨳_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L222-L224","name":"Ordinal.nmul","line":222,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul","doc":"Natural multiplication on ordinals `a ⨳ b`, also known as the Hessenberg product, is recursively\ndefined as the least ordinal such that `a ⨳ b + a' ⨳ b'` is greater than `a' ⨳ b + a ⨳ b'` for all\n`a' < a` and `b < b'`. In contrast to normal ordinal multiplication, it is commutative and\ndistributive (over natural addition).\n\nNatural multiplication can equivalently be characterized as the ordinal resulting from multiplying\nthe Cantor normal forms of `a` and `b` as if they were polynomials in `ω`. Addition of exponents is\ndone via natural addition. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L209-L210","name":"NaturalOps.«term_♯_»","line":209,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NaturalOps.«term_♯_»","doc":"Natural addition on ordinals `a ♯ b`, also known as the Hessenberg sum, is recursively defined\nas the least ordinal greater than `a' ♯ b` and `a ♯ b'` for all `a' < a` and `b' < b`. In contrast\nto normal ordinal addition, it is commutative.\n\nNatural addition can equivalently be characterized as the ordinal resulting from adding up\ncorresponding coefficients in the Cantor normal forms of `a` and `b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NaturalOps.«term_♯_»\"><span class=\"name\">NaturalOps</span>.<span class=\"name\">«term_♯_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L203-L206","name":"Ordinal.nadd","line":203,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd","doc":"Natural addition on ordinals `a ♯ b`, also known as the Hessenberg sum, is recursively defined\nas the least ordinal greater than `a' ♯ b` and `a ♯ b'` for all `a' < a` and `b' < b`. In contrast\nto normal ordinal addition, it is commutative.\n\nNatural addition can equivalently be characterized as the ordinal resulting from adding up\ncorresponding coefficients in the Cantor normal forms of `a` and `b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L189-L191","name":"Ordinal.toNatOrdinal_min","line":189,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_min","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_min\"><span class=\"name\">Ordinal</span>.<span class=\"name\">toNatOrdinal_min</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">Ordinal.toNatOrdinal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Min.min\">min</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Min.min\">min</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">Ordinal.toNatOrdinal</a> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">Ordinal.toNatOrdinal</a> <span class=\"fn\">b</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L183-L185","name":"Ordinal.toNatOrdinal_max","line":183,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_max","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_max\"><span class=\"name\">Ordinal</span>.<span class=\"name\">toNatOrdinal_max</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">Ordinal.toNatOrdinal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">Ordinal.toNatOrdinal</a> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">Ordinal.toNatOrdinal</a> <span class=\"fn\">b</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L178-L179","name":"Ordinal.toNatOrdinal_eq_one","line":178,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_eq_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_eq_one\"><span class=\"name\">Ordinal</span>.<span class=\"name\">toNatOrdinal_eq_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">Ordinal.toNatOrdinal</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L173-L174","name":"Ordinal.toNatOrdinal_eq_zero","line":173,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_eq_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">toNatOrdinal_eq_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">Ordinal.toNatOrdinal</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L168-L169","name":"Ordinal.toNatOrdinal_one","line":168,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_one\"><span class=\"name\">Ordinal</span>.<span class=\"name\">toNatOrdinal_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">Ordinal.toNatOrdinal</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L163-L164","name":"Ordinal.toNatOrdinal_zero","line":163,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">toNatOrdinal_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">Ordinal.toNatOrdinal</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L158-L159","name":"Ordinal.toNatOrdinal_toOrdinal","line":158,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_toOrdinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_toOrdinal\"><span class=\"name\">Ordinal</span>.<span class=\"name\">toNatOrdinal_toOrdinal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">NatOrdinal.toOrdinal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">Ordinal.toNatOrdinal</a> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L153-L154","name":"Ordinal.toNatOrdinal_symm_eq","line":153,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_symm_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_symm_eq\"><span class=\"name\">Ordinal</span>.<span class=\"name\">toNatOrdinal_symm_eq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso.symm\">OrderIso.symm</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">Ordinal.toNatOrdinal</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">NatOrdinal.toOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L142-L143","name":"NatOrdinal.induction","line":142,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.induction","doc":"`Ordinal.induction` but for `NatOrdinal`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.induction\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">induction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">j</span> : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">k</span> &lt; <span class=\"fn\">j</span>, <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">k</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">j</span></span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L137-L138","name":"NatOrdinal.rec","line":137,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.rec","doc":"A recursor for `NatOrdinal`. Use as `induction x using NatOrdinal.rec`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.rec\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">rec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a> → <a href=\"./foundational_types.html\">Sort</a> u_1</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>) → <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">Ordinal.toNatOrdinal</a> <span class=\"fn\">a</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L132-L133","name":"NatOrdinal.succ_def","line":132,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.succ_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.succ_def\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">succ_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">Ordinal.toNatOrdinal</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">NatOrdinal.toOrdinal</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L128-L129","name":"NatOrdinal.toOrdinal_min","line":128,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_min","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_min\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">toOrdinal_min</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">NatOrdinal.toOrdinal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Min.min\">min</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Min.min\">min</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">NatOrdinal.toOrdinal</a> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">NatOrdinal.toOrdinal</a> <span class=\"fn\">b</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L123-L124","name":"NatOrdinal.toOrdinal_max","line":123,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_max","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_max\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">toOrdinal_max</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">NatOrdinal.toOrdinal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">NatOrdinal.toOrdinal</a> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">NatOrdinal.toOrdinal</a> <span class=\"fn\">b</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L118-L119","name":"NatOrdinal.toOrdinal_eq_one","line":118,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_eq_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_eq_one\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">toOrdinal_eq_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">NatOrdinal.toOrdinal</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L113-L114","name":"NatOrdinal.toOrdinal_eq_zero","line":113,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_eq_zero\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">toOrdinal_eq_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">NatOrdinal.toOrdinal</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L108-L109","name":"NatOrdinal.toOrdinal_one","line":108,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_one\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">toOrdinal_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">NatOrdinal.toOrdinal</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L103-L104","name":"NatOrdinal.toOrdinal_zero","line":103,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_zero\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">toOrdinal_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">NatOrdinal.toOrdinal</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L99-L100","name":"NatOrdinal.instIsWellOrderNatOrdinalLtToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLatticeLinearOrder","line":99,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instIsWellOrderNatOrdinalLtToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLatticeLinearOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instIsWellOrderNatOrdinalLtToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLatticeLinearOrder\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">instIsWellOrderNatOrdinalLtToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLatticeLinearOrder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#IsWellOrder\">IsWellOrder</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L96-L97","name":"NatOrdinal.instWellFoundedLTNatOrdinalToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLatticeLinearOrder","line":96,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instWellFoundedLTNatOrdinalToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLatticeLinearOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instWellFoundedLTNatOrdinalToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLatticeLinearOrder\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">instWellFoundedLTNatOrdinalToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLatticeLinearOrder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#WellFoundedLT\">WellFoundedLT</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L92-L93","name":"NatOrdinal.lt_wf","line":92,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.lt_wf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.lt_wf\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">lt_wf</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/WF.html#WellFounded\">WellFounded</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L88-L89","name":"NatOrdinal.toOrdinal_toNatOrdinal","line":88,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_toNatOrdinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_toNatOrdinal\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">toOrdinal_toNatOrdinal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">Ordinal.toNatOrdinal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">NatOrdinal.toOrdinal</a> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L82-L83","name":"NatOrdinal.toOrdinal_symm_eq","line":82,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_symm_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_symm_eq\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">toOrdinal_symm_eq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso.symm\">OrderIso.symm</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">NatOrdinal.toOrdinal</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">Ordinal.toNatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L73-L74","name":"NatOrdinal.toOrdinal","line":73,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal","doc":"The identity function between `NatOrdinal` and `Ordinal`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">toOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L67-L68","name":"Ordinal.toNatOrdinal","line":67,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal","doc":"The identity function between `Ordinal` and `NatOrdinal`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\"><span class=\"name\">Ordinal</span>.<span class=\"name\">toNatOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L63-L63","name":"NatOrdinal.succOrder","line":63,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.succOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.succOrder\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">succOrder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#SuccOrder\">SuccOrder</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L61-L61","name":"NatOrdinal.linearOrder","line":61,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.linearOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.linearOrder\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">linearOrder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L56-L58","name":"NatOrdinal","line":56,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal","doc":"A type synonym for ordinals with natural addition and multiplication. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\"><span class=\"name\">NatOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u_1 + 1)</div></div>"}]}