{"name":"Mathlib.FieldTheory.IsAlgClosed.AlgebraicClosure","instances":[{"typeNames":["AlgebraicClosure.maxIdeal"],"name":"AlgebraicClosure.maxIdeal.isMaximal","className":"Ideal.IsMaximal"},{"typeNames":["AlgebraicClosure.AdjoinMonic"],"name":"AlgebraicClosure.AdjoinMonic.field","className":"Field"},{"typeNames":["AlgebraicClosure.AdjoinMonic"],"name":"AlgebraicClosure.AdjoinMonic.inhabited","className":"Inhabited"},{"typeNames":["AlgebraicClosure.AdjoinMonic"],"name":"AlgebraicClosure.AdjoinMonic.algebra","className":"Algebra"},{"typeNames":["AlgebraicClosure.Step"],"name":"AlgebraicClosure.Step.field","className":"Field"},{"typeNames":["AlgebraicClosure.Step"],"name":"AlgebraicClosure.Step.inhabited","className":"Inhabited"},{"typeNames":["AlgebraicClosure.Step","AlgebraicClosure.Step"],"name":"AlgebraicClosure.Step.algebraSucc","className":"Algebra"},{"typeNames":["AlgebraicClosure.Step"],"name":"AlgebraicClosure.Step.algebra","className":"Algebra"},{"typeNames":["AlgebraicClosure.Step","AlgebraicClosure.Step"],"name":"AlgebraicClosure.Step.scalar_tower","className":"IsScalarTower"},{"typeNames":["AlgebraicClosure.Step"],"name":"AlgebraicClosure.toStepOfLE.directedSystem","className":"DirectedSystem"},{"typeNames":["AlgebraicClosureAux"],"name":"AlgebraicClosureAux.instInhabitedAlgebraicClosureAux","className":"Inhabited"},{"typeNames":["AlgebraicClosure"],"name":"AlgebraicClosure.commRing","className":"CommRing"},{"typeNames":["AlgebraicClosure"],"name":"AlgebraicClosure.inhabited","className":"Inhabited"},{"typeNames":["AlgebraicClosure"],"name":"AlgebraicClosure.instSMulAlgebraicClosure","className":"SMul"},{"typeNames":["AlgebraicClosure"],"name":"AlgebraicClosure.instAlgebra","className":"Algebra"},{"typeNames":["AlgebraicClosure"],"name":"AlgebraicClosure.instIsScalarTowerAlgebraicClosureToSMulToSemiringInstSMulAlgebraicClosureToDistribSMulToMonoidToMonoidWithZeroToAddMonoidToAddMonoidWithOneToAddGroupWithOneToRingToDivisionRingToDistribMulActionToAddCommMonoidToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingToCommRingToEuclideanDomainToModuleToSemiringToDivisionSemiringToSemifieldRightInstSMulAlgebraicClosureToDistribSMulToMonoidToMonoidWithZeroToSemiringToDistribMulActionToModuleRight","className":"IsScalarTower"},{"typeNames":["AlgebraicClosure"],"name":"AlgebraicClosure.instFieldAlgebraicClosure","className":"Field"},{"typeNames":["AlgebraicClosure"],"name":"AlgebraicClosure.isAlgClosed","className":"IsAlgClosed"},{"typeNames":["AlgebraicClosure"],"name":"AlgebraicClosure.instIsAlgClosureAlgebraicClosureToCommRingToEuclideanDomainInstFieldAlgebraicClosureInstAlgebraToCommSemiringIdNoZeroSMulDivisorsToSemiringToDivisionSemiringToSemifieldToAddCommMonoidToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingCommRingToModuleToCommSemiringOf_divisionRingToDivisionRingToAddCommGroupToRingTo_noZeroDivisorsIsDomain","className":"IsAlgClosure"},{"typeNames":["AlgebraicClosure"],"name":"AlgebraicClosure.instCharZeroAlgebraicClosureToAddMonoidWithOneToAddGroupWithOneToRingToDivisionRingInstFieldAlgebraicClosure","className":"CharZero"},{"typeNames":["AlgebraicClosure"],"name":"AlgebraicClosure.instCharPAlgebraicClosureToAddMonoidWithOneToAddGroupWithOneToRingToDivisionRingInstFieldAlgebraicClosure","className":"CharP"}],"imports":["Init","Mathlib.Algebra.DirectLimit","Mathlib.Algebra.CharP.Algebra","Mathlib.FieldTheory.IsAlgClosed.Basic","Mathlib.FieldTheory.SplittingField.Construction"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L467-L468","name":"AlgebraicClosure.instCharPAlgebraicClosureToAddMonoidWithOneToAddGroupWithOneToRingToDivisionRingInstFieldAlgebraicClosure","line":467,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instCharPAlgebraicClosureToAddMonoidWithOneToAddGroupWithOneToRingToDivisionRingInstFieldAlgebraicClosure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instCharPAlgebraicClosureToAddMonoidWithOneToAddGroupWithOneToRingToDivisionRingInstFieldAlgebraicClosure\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">instCharPAlgebraicClosureToAddMonoidWithOneToAddGroupWithOneToRingToDivisionRingInstFieldAlgebraicClosure</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharP/Basic.html#CharP\">CharP</a> <span class=\"fn\">k</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CharP/Basic.html#CharP\">CharP</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure\">AlgebraicClosure</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">p</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L464-L465","name":"AlgebraicClosure.instCharZeroAlgebraicClosureToAddMonoidWithOneToAddGroupWithOneToRingToDivisionRingInstFieldAlgebraicClosure","line":464,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instCharZeroAlgebraicClosureToAddMonoidWithOneToAddGroupWithOneToRingToDivisionRingInstFieldAlgebraicClosure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instCharZeroAlgebraicClosureToAddMonoidWithOneToAddGroupWithOneToRingToDivisionRingInstFieldAlgebraicClosure\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">instCharZeroAlgebraicClosureToAddMonoidWithOneToAddGroupWithOneToRingToDivisionRingInstFieldAlgebraicClosure</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure\">AlgebraicClosure</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L460-L461","name":"AlgebraicClosure.isAlgebraic","line":460,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.isAlgebraic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.isAlgebraic\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">isAlgebraic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Algebraic.html#Algebra.IsAlgebraic\">Algebra.IsAlgebraic</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure\">AlgebraicClosure</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L455-L458","name":"AlgebraicClosure.instIsAlgClosureAlgebraicClosureToCommRingToEuclideanDomainInstFieldAlgebraicClosureInstAlgebraToCommSemiringIdNoZeroSMulDivisorsToSemiringToDivisionSemiringToSemifieldToAddCommMonoidToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingCommRingToModuleToCommSemiringOf_divisionRingToDivisionRingToAddCommGroupToRingTo_noZeroDivisorsIsDomain","line":455,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instIsAlgClosureAlgebraicClosureToCommRingToEuclideanDomainInstFieldAlgebraicClosureInstAlgebraToCommSemiringIdNoZeroSMulDivisorsToSemiringToDivisionSemiringToSemifieldToAddCommMonoidToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingCommRingToModuleToCommSemiringOf_divisionRingToDivisionRingToAddCommGroupToRingTo_noZeroDivisorsIsDomain","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instIsAlgClosureAlgebraicClosureToCommRingToEuclideanDomainInstFieldAlgebraicClosureInstAlgebraToCommSemiringIdNoZeroSMulDivisorsToSemiringToDivisionSemiringToSemifieldToAddCommMonoidToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingCommRingToModuleToCommSemiringOf_divisionRingToDivisionRingToAddCommGroupToRingTo_noZeroDivisorsIsDomain\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">instIsAlgClosureAlgebraicClosureToCommRingToEuclideanDomainInstFieldAlgebraicClosureInstAlgebraToCommSemiringIdNoZeroSMulDivisorsToSemiringToDivisionSemiringToSemifieldToAddCommMonoidToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingCommRingToModuleToCommSemiringOf_divisionRingToDivisionRingToAddCommGroupToRingTo_noZeroDivisorsIsDomain</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/Basic.html#IsAlgClosure\">IsAlgClosure</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure\">AlgebraicClosure</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L451-L452","name":"AlgebraicClosure.isAlgClosed","line":451,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.isAlgClosed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.isAlgClosed\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">isAlgClosed</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/Basic.html#IsAlgClosed\">IsAlgClosed</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure\">AlgebraicClosure</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L429-L449","name":"AlgebraicClosure.instFieldAlgebraicClosure","line":429,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instFieldAlgebraicClosure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instFieldAlgebraicClosure\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">instFieldAlgebraicClosure</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure\">AlgebraicClosure</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L422-L426","name":"AlgebraicClosure.algEquivAlgebraicClosureAux","line":422,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.algEquivAlgebraicClosureAux","doc":"The equivalence between `AlgebraicClosure` and `AlgebraicClosureAux`, which we use to transfer\nproperties of `AlgebraicClosureAux` to `AlgebraicClosure` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.algEquivAlgebraicClosureAux\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">algEquivAlgebraicClosureAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure\">AlgebraicClosure</a> <span class=\"fn\">k</span></span> <a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">≃ₐ[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">]</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux\">AlgebraicClosureAux</a> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L416-L418","name":"AlgebraicClosure.instIsScalarTowerAlgebraicClosureToSMulToSemiringInstSMulAlgebraicClosureToDistribSMulToMonoidToMonoidWithZeroToAddMonoidToAddMonoidWithOneToAddGroupWithOneToRingToDivisionRingToDistribMulActionToAddCommMonoidToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingToCommRingToEuclideanDomainToModuleToSemiringToDivisionSemiringToSemifieldRightInstSMulAlgebraicClosureToDistribSMulToMonoidToMonoidWithZeroToSemiringToDistribMulActionToModuleRight","line":416,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instIsScalarTowerAlgebraicClosureToSMulToSemiringInstSMulAlgebraicClosureToDistribSMulToMonoidToMonoidWithZeroToAddMonoidToAddMonoidWithOneToAddGroupWithOneToRingToDivisionRingToDistribMulActionToAddCommMonoidToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingToCommRingToEuclideanDomainToModuleToSemiringToDivisionSemiringToSemifieldRightInstSMulAlgebraicClosureToDistribSMulToMonoidToMonoidWithZeroToSemiringToDistribMulActionToModuleRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instIsScalarTowerAlgebraicClosureToSMulToSemiringInstSMulAlgebraicClosureToDistribSMulToMonoidToMonoidWithZeroToAddMonoidToAddMonoidWithOneToAddGroupWithOneToRingToDivisionRingToDistribMulActionToAddCommMonoidToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingToCommRingToEuclideanDomainToModuleToSemiringToDivisionSemiringToSemifieldRightInstSMulAlgebraicClosureToDistribSMulToMonoidToMonoidWithZeroToSemiringToDistribMulActionToModuleRight\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">instIsScalarTowerAlgebraicClosureToSMulToSemiringInstSMulAlgebraicClosureToDistribSMulToMonoidToMonoidWithZeroToAddMonoidToAddMonoidWithOneToAddGroupWithOneToRingToDivisionRingToDistribMulActionToAddCommMonoidToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingToCommRingToEuclideanDomainToModuleToSemiringToDivisionSemiringToSemifieldRightInstSMulAlgebraicClosureToDistribSMulToMonoidToMonoidWithZeroToSemiringToDistribMulActionToModuleRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure\">AlgebraicClosure</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L413-L414","name":"AlgebraicClosure.instAlgebra","line":413,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instAlgebra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instAlgebra\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">instAlgebra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure\">AlgebraicClosure</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L410-L411","name":"AlgebraicClosure.instSMulAlgebraicClosure","line":410,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instSMulAlgebraicClosure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instSMulAlgebraicClosure\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">instSMulAlgebraicClosure</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribSMul\">DistribSMul</a> <span class=\"fn\">S</span> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">S</span> <span class=\"fn\">k</span> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">S</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure\">AlgebraicClosure</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L407-L408","name":"AlgebraicClosure.inhabited","line":407,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.inhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.inhabited\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">inhabited</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure\">AlgebraicClosure</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L404-L405","name":"AlgebraicClosure.commRing","line":404,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.commRing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.commRing\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">commRing</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure\">AlgebraicClosure</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L398-L400","name":"AlgebraicClosure","line":398,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure","doc":"The canonical algebraic closure of a field, the direct limit of adding roots to the field for\neach polynomial over the field. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure\"><span class=\"name\">AlgebraicClosure</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L388-L389","name":"AlgebraicClosureAux.isAlgClosure","line":388,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.isAlgClosure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.isAlgClosure\"><span class=\"name\">AlgebraicClosureAux</span>.<span class=\"name\">isAlgClosure</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/Basic.html#IsAlgClosure\">IsAlgClosure</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux\">AlgebraicClosureAux</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L383-L386","name":"AlgebraicClosureAux.isAlgebraic","line":383,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.isAlgebraic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.isAlgebraic\"><span class=\"name\">AlgebraicClosureAux</span>.<span class=\"name\">isAlgebraic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Algebraic.html#Algebra.IsAlgebraic\">Algebra.IsAlgebraic</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux\">AlgebraicClosureAux</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L371-L380","name":"AlgebraicClosureAux.ofStepHom","line":371,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.ofStepHom","doc":"Canonical algebra embedding from the `n`th step to the algebraic closure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.ofStepHom\"><span class=\"name\">AlgebraicClosureAux</span>.<span class=\"name\">ofStepHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux\">AlgebraicClosureAux</a> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L365-L366","name":"AlgebraicClosureAux.instAlgebra","line":365,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.instAlgebra","doc":"`AlgebraicClosureAux k` is a `k`-`Algebra` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.instAlgebra\"><span class=\"name\">AlgebraicClosureAux</span>.<span class=\"name\">instAlgebra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux\">AlgebraicClosureAux</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L361-L362","name":"AlgebraicClosureAux.instIsAlgClosed","line":361,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.instIsAlgClosed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.instIsAlgClosed\"><span class=\"name\">AlgebraicClosureAux</span>.<span class=\"name\">instIsAlgClosed</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/Basic.html#IsAlgClosed\">IsAlgClosed</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux\">AlgebraicClosureAux</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L349-L358","name":"AlgebraicClosureAux.exists_root","line":349,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.exists_root","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.exists_root\"><span class=\"name\">AlgebraicClosureAux</span>.<span class=\"name\">exists_root</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux\">AlgebraicClosureAux</a> <span class=\"fn\">k</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hfm : <span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Degree/Definitions.html#Polynomial.Monic\">Polynomial.Monic</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hfi : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (x : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux\">AlgebraicClosureAux</a> <span class=\"fn\">k</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L345-L346","name":"AlgebraicClosureAux.exists_ofStep","line":345,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.exists_ofStep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.exists_ofStep\"><span class=\"name\">AlgebraicClosureAux</span>.<span class=\"name\">exists_ofStep</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux\">AlgebraicClosureAux</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (x : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.ofStep\">AlgebraicClosureAux.ofStep</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L327-L336","name":"AlgebraicClosureAux.ofStep_succ","line":327,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.ofStep_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.ofStep_succ\"><span class=\"name\">AlgebraicClosureAux</span>.<span class=\"name\">ofStep_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom.comp\">RingHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.ofStep\">AlgebraicClosureAux.ofStep</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toStepSucc\">AlgebraicClosure.toStepSucc</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.ofStep\">AlgebraicClosureAux.ofStep</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L321-L322","name":"AlgebraicClosureAux.ofStep","line":321,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.ofStep","doc":"The canonical ring embedding from the `n`th step to the algebraic closure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.ofStep\"><span class=\"name\">AlgebraicClosureAux</span>.<span class=\"name\">ofStep</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux\">AlgebraicClosureAux</a> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L317-L318","name":"AlgebraicClosureAux.instInhabitedAlgebraicClosureAux","line":317,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.instInhabitedAlgebraicClosureAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.instInhabitedAlgebraicClosureAux\"><span class=\"name\">AlgebraicClosureAux</span>.<span class=\"name\">instInhabitedAlgebraicClosureAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux\">AlgebraicClosureAux</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L314-L315","name":"AlgebraicClosureAux.field","line":314,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.field","doc":"`AlgebraicClosureAux k` is a `Field` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.field\"><span class=\"name\">AlgebraicClosureAux</span>.<span class=\"name\">field</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux\">AlgebraicClosureAux</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L305-L306","name":"AlgebraicClosureAux","line":305,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux","doc":"Auxiliary construction for `AlgebraicClosure`. Although `AlgebraicClosureAux` does define\nthe algebraic closure of a field, it is redefined at `AlgebraicClosure` in order to make sure\ncertain instance diamonds commute by definition.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux\"><span class=\"name\">AlgebraicClosureAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L295-L296","name":"AlgebraicClosure.toStepOfLE.directedSystem","line":295,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toStepOfLE.directedSystem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toStepOfLE.directedSystem\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">toStepOfLE</span>.<span class=\"name\">directedSystem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/DirectLimit.html#DirectedSystem\">DirectedSystem</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> j : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">j</span></span>) =&gt; <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toStepOfLE\">AlgebraicClosure.toStepOfLE</a> <span class=\"fn\">k</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">h</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L272-L292","name":"AlgebraicClosure.Step.isIntegral","line":272,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step.isIntegral","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step.isIntegral\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">Step</span>.<span class=\"name\">isIntegral</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure.html#IsIntegral\">IsIntegral</a> <span class=\"fn\">k</span> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L257-L259","name":"AlgebraicClosure.Step.scalar_tower","line":257,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step.scalar_tower","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step.scalar_tower\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">Step</span>.<span class=\"name\">scalar_tower</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L253-L254","name":"AlgebraicClosure.Step.algebra","line":253,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step.algebra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step.algebra\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">Step</span>.<span class=\"name\">algebra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L248-L250","name":"AlgebraicClosure.coe_toStepOfLE","line":248,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.coe_toStepOfLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.coe_toStepOfLE\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">coe_toStepOfLE</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toStepOfLE\">AlgebraicClosure.toStepOfLE</a> <span class=\"fn\">k</span> <span class=\"fn\">m</span> <span class=\"fn\">n</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">m</span></span>) =&gt;\n  <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Defs.html#Nat.leRecOn\">Nat.leRecOn</a> <span class=\"fn\">h</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toStepSucc\">AlgebraicClosure.toStepSucc</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span>)</span></span></span>)</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L219-L244","name":"AlgebraicClosure.toStepOfLE","line":219,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toStepOfLE","doc":"The canonical ring homomorphism to a step with a greater index. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toStepOfLE\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">toStepOfLE</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">m</span></span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L197-L203","name":"AlgebraicClosure.toStepSucc.exists_root","line":197,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toStepSucc.exists_root","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toStepSucc.exists_root\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">toStepSucc</span>.<span class=\"name\">exists_root</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hfm : <span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Degree/Definitions.html#Polynomial.Monic\">Polynomial.Monic</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hfi : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (x : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Eval.html#Polynomial.eval₂\">Polynomial.eval₂</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toStepSucc\">AlgebraicClosure.toStepSucc</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L193-L194","name":"AlgebraicClosure.Step.algebraSucc","line":193,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step.algebraSucc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step.algebraSucc\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">Step</span>.<span class=\"name\">algebraSucc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L189-L190","name":"AlgebraicClosure.toStepSucc","line":189,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toStepSucc","doc":"The canonical ring homomorphism to the next step. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toStepSucc\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">toStepSucc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L184-L185","name":"AlgebraicClosure.toStepZero","line":184,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toStepZero","doc":"The canonical inclusion to the `0`th step. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toStepZero\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">toStepZero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L179-L180","name":"AlgebraicClosure.Step.inhabited","line":179,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step.inhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step.inhabited\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">Step</span>.<span class=\"name\">inhabited</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L177-L177","name":"AlgebraicClosure.Step.succ","line":177,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step.succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step.succ\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">Step</span>.<span class=\"name\">succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic\">AlgebraicClosure.AdjoinMonic</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L172-L173","name":"AlgebraicClosure.Step.field","line":172,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step.field","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step.field\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">Step</span>.<span class=\"name\">field</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L170-L170","name":"AlgebraicClosure.Step.zero","line":170,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step.zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step.zero\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">Step</span>.<span class=\"name\">zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L165-L166","name":"AlgebraicClosure.Step","line":165,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step","doc":"The `n`th step of constructing `AlgebraicClosure`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">Step</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L160-L161","name":"AlgebraicClosure.stepAux","line":160,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.stepAux","doc":"The `n`th step of constructing `AlgebraicClosure`, together with its `Field` instance. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.stepAux\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">stepAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u) × <span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L151-L156","name":"AlgebraicClosure.AdjoinMonic.exists_root","line":151,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic.exists_root","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic.exists_root\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">AdjoinMonic</span>.<span class=\"name\">exists_root</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hfm : <span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Degree/Definitions.html#Polynomial.Monic\">Polynomial.Monic</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hfi : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (x : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic\">AlgebraicClosure.AdjoinMonic</a> <span class=\"fn\">k</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Eval.html#Polynomial.eval₂\">Polynomial.eval₂</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toAdjoinMonic\">AlgebraicClosure.toAdjoinMonic</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L138-L148","name":"AlgebraicClosure.AdjoinMonic.isIntegral","line":138,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic.isIntegral","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic.isIntegral\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">AdjoinMonic</span>.<span class=\"name\">isIntegral</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic\">AlgebraicClosure.AdjoinMonic</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure.html#IsIntegral\">IsIntegral</a> <span class=\"fn\">k</span> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L134-L135","name":"AlgebraicClosure.AdjoinMonic.algebraMap","line":134,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic.algebraMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic.algebraMap\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">AdjoinMonic</span>.<span class=\"name\">algebraMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#algebraMap\">algebraMap</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic\">AlgebraicClosure.AdjoinMonic</a> <span class=\"fn\">k</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom.comp\">RingHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Quotient.html#Ideal.Quotient.mk\">Ideal.Quotient.mk</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.maxIdeal\">AlgebraicClosure.maxIdeal</a> <span class=\"fn\">k</span></span>)</span></span>)</span> <span class=\"fn\">MvPolynomial.C</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L129-L130","name":"AlgebraicClosure.AdjoinMonic.algebra","line":129,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic.algebra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic.algebra\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">AdjoinMonic</span>.<span class=\"name\">algebra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic\">AlgebraicClosure.AdjoinMonic</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L125-L126","name":"AlgebraicClosure.toAdjoinMonic","line":125,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toAdjoinMonic","doc":"The canonical ring homomorphism to `AdjoinMonic k`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toAdjoinMonic\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">toAdjoinMonic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic\">AlgebraicClosure.AdjoinMonic</a> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L120-L121","name":"AlgebraicClosure.AdjoinMonic.inhabited","line":120,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic.inhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic.inhabited\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">AdjoinMonic</span>.<span class=\"name\">inhabited</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic\">AlgebraicClosure.AdjoinMonic</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L116-L117","name":"AlgebraicClosure.AdjoinMonic.field","line":116,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic.field","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic.field\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">AdjoinMonic</span>.<span class=\"name\">field</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic\">AlgebraicClosure.AdjoinMonic</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L112-L113","name":"AlgebraicClosure.AdjoinMonic","line":112,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic","doc":"The first step of constructing `AlgebraicClosure`: adjoin a root of all monic polynomials "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">AdjoinMonic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L107-L108","name":"AlgebraicClosure.le_maxIdeal","line":107,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.le_maxIdeal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.le_maxIdeal\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">le_maxIdeal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.spanEval\">AlgebraicClosure.spanEval</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.maxIdeal\">AlgebraicClosure.maxIdeal</a> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L103-L104","name":"AlgebraicClosure.maxIdeal.isMaximal","line":103,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.maxIdeal.isMaximal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.maxIdeal.isMaximal\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">maxIdeal</span>.<span class=\"name\">isMaximal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.IsMaximal\">Ideal.IsMaximal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.maxIdeal\">AlgebraicClosure.maxIdeal</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L99-L100","name":"AlgebraicClosure.maxIdeal","line":99,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.maxIdeal","doc":"A random maximal ideal that contains `spanEval k` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.maxIdeal\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">maxIdeal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.MonicIrreducible\">AlgebraicClosure.MonicIrreducible</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L86-L95","name":"AlgebraicClosure.spanEval_ne_top","line":86,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.spanEval_ne_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.spanEval_ne_top\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">spanEval_ne_top</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.spanEval\">AlgebraicClosure.spanEval</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L78-L82","name":"AlgebraicClosure.toSplittingField_evalXSelf","line":78,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toSplittingField_evalXSelf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toSplittingField_evalXSelf\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">toSplittingField_evalXSelf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.MonicIrreducible\">AlgebraicClosure.MonicIrreducible</a> <span class=\"fn\">k</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.MonicIrreducible\">AlgebraicClosure.MonicIrreducible</a> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toSplittingField\">AlgebraicClosure.toSplittingField</a> <span class=\"fn\">k</span> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.evalXSelf\">AlgebraicClosure.evalXSelf</a> <span class=\"fn\">k</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L67-L75","name":"AlgebraicClosure.toSplittingField","line":67,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toSplittingField","doc":"Given a finset of monic irreducible polynomials, construct an algebra homomorphism to the\nsplitting field of the product of the polynomials sending each indeterminate `x_f` represented by\nthe polynomial `f` in the finset to a root of `f`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toSplittingField\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">toSplittingField</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.MonicIrreducible\">AlgebraicClosure.MonicIrreducible</a> <span class=\"fn\">k</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.MonicIrreducible\">AlgebraicClosure.MonicIrreducible</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">k</span></span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a>   <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/SplittingField/Construction.html#Polynomial.SplittingField\">Polynomial.SplittingField</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">s</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.MonicIrreducible\">AlgebraicClosure.MonicIrreducible</a> <span class=\"fn\">k</span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L60-L61","name":"AlgebraicClosure.spanEval","line":60,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.spanEval","doc":"The span of `f(x_f)` across monic irreducible polynomials `f` where `x_f` is an\nindeterminate. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.spanEval\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">spanEval</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.MonicIrreducible\">AlgebraicClosure.MonicIrreducible</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L53-L54","name":"AlgebraicClosure.evalXSelf","line":53,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.evalXSelf","doc":"Sends a monic irreducible polynomial `f` to `f(x_f)` where `x_f` is a formal indeterminate. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.evalXSelf\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">evalXSelf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.MonicIrreducible\">AlgebraicClosure.MonicIrreducible</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.MonicIrreducible\">AlgebraicClosure.MonicIrreducible</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L48-L49","name":"AlgebraicClosure.MonicIrreducible","line":48,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.MonicIrreducible","doc":"The subtype of monic irreducible polynomials "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.MonicIrreducible\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">MonicIrreducible</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"}]}