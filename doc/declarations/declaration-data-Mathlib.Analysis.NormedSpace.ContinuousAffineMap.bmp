{"name":"Mathlib.Analysis.NormedSpace.ContinuousAffineMap","instances":[{"typeNames":["ContinuousAffineMap"],"name":"ContinuousAffineMap.hasNorm","className":"Norm"},{"typeNames":["ContinuousAffineMap"],"name":"ContinuousAffineMap.instNormedAddCommGroupContinuousAffineMapToRingToNormedRingToNormedCommRingToNormedFieldToAddCommGroupToModuleToSeminormedAddCommGroupToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToAddTorsorToNormedAddTorsorToAddCommGroupToModuleToSeminormedAddCommGroupToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToAddTorsorToNormedAddTorsor","className":"NormedAddCommGroup"},{"typeNames":["ContinuousAffineMap"],"name":"ContinuousAffineMap.instNormedSpaceContinuousAffineMapToRingToNormedRingToNormedCommRingToNormedFieldToAddCommGroupToModuleToSeminormedAddCommGroupToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToAddTorsorToNormedAddTorsorToAddCommGroupToModuleToSeminormedAddCommGroupToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToAddTorsorToNormedAddTorsorToSeminormedAddCommGroupInstNormedAddCommGroupContinuousAffineMapToRingToNormedRingToNormedCommRingToNormedFieldToAddCommGroupToModuleToSeminormedAddCommGroupToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToAddTorsorToNormedAddTorsorToAddCommGroupToModuleToSeminormedAddCommGroupToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToAddTorsorToNormedAddTorsor","className":"NormedSpace"}],"imports":["Init","Mathlib.Topology.Algebra.ContinuousAffineMap","Mathlib.Analysis.NormedSpace.AffineIsometry","Mathlib.Analysis.NormedSpace.OperatorNorm"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/NormedSpace/ContinuousAffineMap.lean#L278-L280","name":"ContinuousAffineMap.toConstProdContinuousLinearMap_snd","line":278,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.toConstProdContinuousLinearMap_snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.toConstProdContinuousLinearMap_snd\"><span class=\"name\">ContinuousAffineMap</span>.<span class=\"name\">toConstProdContinuousLinearMap_snd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ùïú : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(W : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">ùïú</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">‚ÜíA[</a><span class=\"fn\">ùïú</span><a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">]</a> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.toConstProdContinuousLinearMap\">ContinuousAffineMap.toConstProdContinuousLinearMap</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>)</span> <span class=\"fn\">f</span></span>)</span>.2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear\">ContinuousAffineMap.contLinear</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/NormedSpace/ContinuousAffineMap.lean#L272-L274","name":"ContinuousAffineMap.toConstProdContinuousLinearMap_fst","line":272,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.toConstProdContinuousLinearMap_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.toConstProdContinuousLinearMap_fst\"><span class=\"name\">ContinuousAffineMap</span>.<span class=\"name\">toConstProdContinuousLinearMap_fst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ùïú : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(W : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">ùïú</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">‚ÜíA[</a><span class=\"fn\">ùïú</span><a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">]</a> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.toConstProdContinuousLinearMap\">ContinuousAffineMap.toConstProdContinuousLinearMap</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>)</span> <span class=\"fn\">f</span></span>)</span>.1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/NormedSpace/ContinuousAffineMap.lean#L256-L268","name":"ContinuousAffineMap.toConstProdContinuousLinearMap","line":256,"kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.toConstProdContinuousLinearMap","doc":"The space of affine maps between two normed spaces is linearly isometric to the product of the\ncodomain with the space of linear maps, by taking the value of the affine map at `(0 : V)` and the\nlinear part. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.toConstProdContinuousLinearMap\"><span class=\"name\">ContinuousAffineMap</span>.<span class=\"name\">toConstProdContinuousLinearMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ùïú : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(W : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">ùïú</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">‚ÜíA[</a><span class=\"fn\">ùïú</span><a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">]</a> <span class=\"fn\">W</span></span>)</span> <a href=\"./Mathlib/Analysis/NormedSpace/LinearIsometry.html#LinearIsometryEquiv\">‚âÉ‚Çó·µ¢[</a><span class=\"fn\">ùïú</span><a href=\"./Mathlib/Analysis/NormedSpace/LinearIsometry.html#LinearIsometryEquiv\">]</a> <span class=\"fn\"><span class=\"fn\">W</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">‚ÜíL[</a><span class=\"fn\">ùïú</span><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">W</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/NormedSpace/ContinuousAffineMap.lean#L231-L247","name":"ContinuousAffineMap.norm_comp_le","line":231,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.norm_comp_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.norm_comp_le\"><span class=\"name\">ContinuousAffineMap</span>.<span class=\"name\">norm_comp_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïú : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W‚ÇÇ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">W‚ÇÇ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">ùïú</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">W‚ÇÇ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">‚ÜíA[</a><span class=\"fn\">ùïú</span><a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">]</a> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">W‚ÇÇ</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">‚ÜíA[</a><span class=\"fn\">ùïú</span><a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">]</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap.comp\">ContinuousAffineMap.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a><span class=\"fn\">f</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a><span class=\"fn\">g</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/NormedSpace/ContinuousAffineMap.lean#L223-L229","name":"ContinuousAffineMap.instNormedSpaceContinuousAffineMapToRingToNormedRingToNormedCommRingToNormedFieldToAddCommGroupToModuleToSeminormedAddCommGroupToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToAddTorsorToNormedAddTorsorToAddCommGroupToModuleToSeminormedAddCommGroupToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToAddTorsorToNormedAddTorsorToSeminormedAddCommGroupInstNormedAddCommGroupContinuousAffineMapToRingToNormedRingToNormedCommRingToNormedFieldToAddCommGroupToModuleToSeminormedAddCommGroupToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToAddTorsorToNormedAddTorsorToAddCommGroupToModuleToSeminormedAddCommGroupToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToAddTorsorToNormedAddTorsor","line":223,"kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.instNormedSpaceContinuousAffineMapToRingToNormedRingToNormedCommRingToNormedFieldToAddCommGroupToModuleToSeminormedAddCommGroupToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToAddTorsorToNormedAddTorsorToAddCommGroupToModuleToSeminormedAddCommGroupToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToAddTorsorToNormedAddTorsorToSeminormedAddCommGroupInstNormedAddCommGroupContinuousAffineMapToRingToNormedRingToNormedCommRingToNormedFieldToAddCommGroupToModuleToSeminormedAddCommGroupToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToAddTorsorToNormedAddTorsorToAddCommGroupToModuleToSeminormedAddCommGroupToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToAddTorsorToNormedAddTorsor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.instNormedSpaceContinuousAffineMapToRingToNormedRingToNormedCommRingToNormedFieldToAddCommGroupToModuleToSeminormedAddCommGroupToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToAddTorsorToNormedAddTorsorToAddCommGroupToModuleToSeminormedAddCommGroupToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToAddTorsorToNormedAddTorsorToSeminormedAddCommGroupInstNormedAddCommGroupContinuousAffineMapToRingToNormedRingToNormedCommRingToNormedFieldToAddCommGroupToModuleToSeminormedAddCommGroupToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToAddTorsorToNormedAddTorsorToAddCommGroupToModuleToSeminormedAddCommGroupToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToAddTorsorToNormedAddTorsor\"><span class=\"name\">ContinuousAffineMap</span>.<span class=\"name\">instNormedSpaceContinuousAffineMapToRingToNormedRingToNormedCommRingToNormedFieldToAddCommGroupToModuleToSeminormedAddCommGroupToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToAddTorsorToNormedAddTorsorToAddCommGroupToModuleToSeminormedAddCommGroupToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToAddTorsorToNormedAddTorsorToSeminormedAddCommGroupInstNormedAddCommGroupContinuousAffineMapToRingToNormedRingToNormedCommRingToNormedFieldToAddCommGroupToModuleToSeminormedAddCommGroupToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToAddTorsorToNormedAddTorsorToAddCommGroupToModuleToSeminormedAddCommGroupToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToAddTorsorToNormedAddTorsor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïú : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">ùïú</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">‚ÜíA[</a><span class=\"fn\">ùïú</span><a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">]</a> <span class=\"fn\">W</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/NormedSpace/ContinuousAffineMap.lean#L190-L221","name":"ContinuousAffineMap.instNormedAddCommGroupContinuousAffineMapToRingToNormedRingToNormedCommRingToNormedFieldToAddCommGroupToModuleToSeminormedAddCommGroupToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToAddTorsorToNormedAddTorsorToAddCommGroupToModuleToSeminormedAddCommGroupToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToAddTorsorToNormedAddTorsor","line":190,"kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.instNormedAddCommGroupContinuousAffineMapToRingToNormedRingToNormedCommRingToNormedFieldToAddCommGroupToModuleToSeminormedAddCommGroupToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToAddTorsorToNormedAddTorsorToAddCommGroupToModuleToSeminormedAddCommGroupToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToAddTorsorToNormedAddTorsor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.instNormedAddCommGroupContinuousAffineMapToRingToNormedRingToNormedCommRingToNormedFieldToAddCommGroupToModuleToSeminormedAddCommGroupToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToAddTorsorToNormedAddTorsorToAddCommGroupToModuleToSeminormedAddCommGroupToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToAddTorsorToNormedAddTorsor\"><span class=\"name\">ContinuousAffineMap</span>.<span class=\"name\">instNormedAddCommGroupContinuousAffineMapToRingToNormedRingToNormedCommRingToNormedFieldToAddCommGroupToModuleToSeminormedAddCommGroupToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToAddTorsorToNormedAddTorsorToAddCommGroupToModuleToSeminormedAddCommGroupToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToAddTorsorToNormedAddTorsor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïú : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">ùïú</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">‚ÜíA[</a><span class=\"fn\">ùïú</span><a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">]</a> <span class=\"fn\">W</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/NormedSpace/ContinuousAffineMap.lean#L182-L186","name":"ContinuousAffineMap.norm_eq","line":182,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.norm_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.norm_eq\"><span class=\"name\">ContinuousAffineMap</span>.<span class=\"name\">norm_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïú : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">ùïú</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">‚ÜíA[</a><span class=\"fn\">ùïú</span><a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">]</a> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a><span class=\"fn\">f</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear\">ContinuousAffineMap.contLinear</a> <span class=\"fn\">f</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/NormedSpace/ContinuousAffineMap.lean#L177-L178","name":"ContinuousAffineMap.norm_image_zero_le","line":177,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.norm_image_zero_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.norm_image_zero_le\"><span class=\"name\">ContinuousAffineMap</span>.<span class=\"name\">norm_image_zero_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïú : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">ùïú</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">‚ÜíA[</a><span class=\"fn\">ùïú</span><a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">]</a> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a><span class=\"fn\">f</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/NormedSpace/ContinuousAffineMap.lean#L173-L174","name":"ContinuousAffineMap.norm_contLinear_le","line":173,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.norm_contLinear_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.norm_contLinear_le\"><span class=\"name\">ContinuousAffineMap</span>.<span class=\"name\">norm_contLinear_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïú : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">ùïú</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">‚ÜíA[</a><span class=\"fn\">ùïú</span><a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">]</a> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear\">ContinuousAffineMap.contLinear</a> <span class=\"fn\">f</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a><span class=\"fn\">f</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/NormedSpace/ContinuousAffineMap.lean#L169-L170","name":"ContinuousAffineMap.norm_def","line":169,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.norm_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.norm_def\"><span class=\"name\">ContinuousAffineMap</span>.<span class=\"name\">norm_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïú : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">ùïú</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">‚ÜíA[</a><span class=\"fn\">ùïú</span><a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">]</a> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a><span class=\"fn\">f</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a></span> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear\">ContinuousAffineMap.contLinear</a> <span class=\"fn\">f</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/NormedSpace/ContinuousAffineMap.lean#L165-L166","name":"ContinuousAffineMap.hasNorm","line":165,"kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.hasNorm","doc":"Note that unlike the operator norm for linear maps, this norm is _not_ submultiplicative:\nwe do _not_ necessarily have `‚Äñf.comp g‚Äñ ‚â§ ‚Äñf‚Äñ * ‚Äñg‚Äñ`. See `norm_comp_le` for what we can say. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.hasNorm\"><span class=\"name\">ContinuousAffineMap</span>.<span class=\"name\">hasNorm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïú : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">ùïú</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm\">Norm</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">‚ÜíA[</a><span class=\"fn\">ùïú</span><a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">]</a> <span class=\"fn\">W</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/NormedSpace/ContinuousAffineMap.lean#L153-L156","name":"ContinuousAffineMap.decomp","line":153,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.decomp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.decomp\"><span class=\"name\">ContinuousAffineMap</span>.<span class=\"name\">decomp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">‚ÜíA[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">]</a> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">‚áë<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">‚áë<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear\">ContinuousAffineMap.contLinear</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Function.const\">Function.const</a> <span class=\"fn\">V</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/NormedSpace/ContinuousAffineMap.lean#L149-L150","name":"ContinuousAffineMap.smul_contLinear","line":149,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.smul_contLinear","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.smul_contLinear\"><span class=\"name\">ContinuousAffineMap</span>.<span class=\"name\">smul_contLinear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">‚ÜíA[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">]</a> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear\">ContinuousAffineMap.contLinear</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear\">ContinuousAffineMap.contLinear</a> <span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/NormedSpace/ContinuousAffineMap.lean#L144-L145","name":"ContinuousAffineMap.neg_contLinear","line":144,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.neg_contLinear","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.neg_contLinear\"><span class=\"name\">ContinuousAffineMap</span>.<span class=\"name\">neg_contLinear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">‚ÜíA[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">]</a> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear\">ContinuousAffineMap.contLinear</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear\">ContinuousAffineMap.contLinear</a> <span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/NormedSpace/ContinuousAffineMap.lean#L139-L140","name":"ContinuousAffineMap.sub_contLinear","line":139,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.sub_contLinear","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.sub_contLinear\"><span class=\"name\">ContinuousAffineMap</span>.<span class=\"name\">sub_contLinear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">‚ÜíA[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">]</a> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">‚ÜíA[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">]</a> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear\">ContinuousAffineMap.contLinear</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear\">ContinuousAffineMap.contLinear</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear\">ContinuousAffineMap.contLinear</a> <span class=\"fn\">g</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/NormedSpace/ContinuousAffineMap.lean#L134-L135","name":"ContinuousAffineMap.add_contLinear","line":134,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.add_contLinear","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.add_contLinear\"><span class=\"name\">ContinuousAffineMap</span>.<span class=\"name\">add_contLinear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">‚ÜíA[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">]</a> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">‚ÜíA[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">]</a> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear\">ContinuousAffineMap.contLinear</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear\">ContinuousAffineMap.contLinear</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear\">ContinuousAffineMap.contLinear</a> <span class=\"fn\">g</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/NormedSpace/ContinuousAffineMap.lean#L129-L130","name":"ContinuousAffineMap.zero_contLinear","line":129,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.zero_contLinear","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.zero_contLinear\"><span class=\"name\">ContinuousAffineMap</span>.<span class=\"name\">zero_contLinear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear\">ContinuousAffineMap.contLinear</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/NormedSpace/ContinuousAffineMap.lean#L123-L125","name":"ContinuousAffineMap.to_affine_map_contLinear","line":123,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.to_affine_map_contLinear","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.to_affine_map_contLinear\"><span class=\"name\">ContinuousAffineMap</span>.<span class=\"name\">to_affine_map_contLinear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">‚ÜíL[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear\">ContinuousAffineMap.contLinear</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousLinearMap.toContinuousAffineMap\">ContinuousLinearMap.toContinuousAffineMap</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/NormedSpace/ContinuousAffineMap.lean#L107-L119","name":"ContinuousAffineMap.contLinear_eq_zero_iff_exists_const","line":107,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear_eq_zero_iff_exists_const","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear_eq_zero_iff_exists_const\"><span class=\"name\">ContinuousAffineMap</span>.<span class=\"name\">contLinear_eq_zero_iff_exists_const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">W</span> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">‚ÜíA[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">]</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear\">ContinuousAffineMap.contLinear</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÉ (q : <span class=\"fn\">Q</span>), <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap.const\">ContinuousAffineMap.const</a> <span class=\"fn\">R</span> <span class=\"fn\">P</span> <span class=\"fn\">q</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/NormedSpace/ContinuousAffineMap.lean#L103-L104","name":"ContinuousAffineMap.const_contLinear","line":103,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.const_contLinear","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.const_contLinear\"><span class=\"name\">ContinuousAffineMap</span>.<span class=\"name\">const_contLinear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">W</span> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(q : <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear\">ContinuousAffineMap.contLinear</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap.const\">ContinuousAffineMap.const</a> <span class=\"fn\">R</span> <span class=\"fn\">P</span> <span class=\"fn\">q</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/NormedSpace/ContinuousAffineMap.lean#L98-L99","name":"ContinuousAffineMap.contLinear_map_vsub","line":98,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear_map_vsub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear_map_vsub\"><span class=\"name\">ContinuousAffineMap</span>.<span class=\"name\">contLinear_map_vsub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">W</span> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">‚ÜíA[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">]</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p‚ÇÅ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p‚ÇÇ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear\">ContinuousAffineMap.contLinear</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p‚ÇÅ</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-·µ•</a> <span class=\"fn\">p‚ÇÇ</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">p‚ÇÅ</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-·µ•</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">p‚ÇÇ</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/NormedSpace/ContinuousAffineMap.lean#L93-L94","name":"ContinuousAffineMap.map_vadd","line":93,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.map_vadd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.map_vadd\"><span class=\"name\">ContinuousAffineMap</span>.<span class=\"name\">map_vadd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">W</span> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">‚ÜíA[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">]</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\">V</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+·µ•</a> <span class=\"fn\">p</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear\">ContinuousAffineMap.contLinear</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">v</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+·µ•</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/NormedSpace/ContinuousAffineMap.lean#L87-L89","name":"ContinuousAffineMap.comp_contLinear","line":87,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.comp_contLinear","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.comp_contLinear\"><span class=\"name\">ContinuousAffineMap</span>.<span class=\"name\">comp_contLinear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W‚ÇÇ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q‚ÇÇ : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">W</span> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">W‚ÇÇ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">Q‚ÇÇ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">W‚ÇÇ</span> <span class=\"fn\">Q‚ÇÇ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">W‚ÇÇ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">‚ÜíA[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">]</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Q</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">‚ÜíA[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">]</a> <span class=\"fn\">Q‚ÇÇ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear\">ContinuousAffineMap.contLinear</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap.comp\">ContinuousAffineMap.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap.comp\">ContinuousLinearMap.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear\">ContinuousAffineMap.contLinear</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear\">ContinuousAffineMap.contLinear</a> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/NormedSpace/ContinuousAffineMap.lean#L81-L83","name":"ContinuousAffineMap.coe_linear_eq_coe_contLinear","line":81,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.coe_linear_eq_coe_contLinear","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.coe_linear_eq_coe_contLinear\"><span class=\"name\">ContinuousAffineMap</span>.<span class=\"name\">coe_linear_eq_coe_contLinear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">W</span> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">‚ÜíA[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">]</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">‚áë<span class=\"fn\"><span class=\"fn\">f</span>.linear</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">‚áë<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear\">ContinuousAffineMap.contLinear</a> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/NormedSpace/ContinuousAffineMap.lean#L76-L78","name":"ContinuousAffineMap.coe_mk_const_linear_eq_linear","line":76,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.coe_mk_const_linear_eq_linear","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.coe_mk_const_linear_eq_linear\"><span class=\"name\">ContinuousAffineMap</span>.<span class=\"name\">coe_mk_const_linear_eq_linear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">W</span> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/LinearAlgebra/AffineSpace/AffineMap.html#AffineMap\">‚Üí·µÉ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/LinearAlgebra/AffineSpace/AffineMap.html#AffineMap\">]</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#Continuous\">Continuous</a> <span class=\"fn\"><span class=\"fn\">f</span>.toFun</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">‚áë<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear\">ContinuousAffineMap.contLinear</a> <span class=\"fn\">{ <span class=\"fn\">toAffineMap</span> := <span class=\"fn\">f</span>, <span class=\"fn\">cont</span> := <span class=\"fn\">h</span> }</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">‚áë<span class=\"fn\"><span class=\"fn\">f</span>.linear</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/NormedSpace/ContinuousAffineMap.lean#L71-L72","name":"ContinuousAffineMap.coe_contLinear_eq_linear","line":71,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.coe_contLinear_eq_linear","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.coe_contLinear_eq_linear\"><span class=\"name\">ContinuousAffineMap</span>.<span class=\"name\">coe_contLinear_eq_linear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">W</span> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">‚ÜíA[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">]</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear\">ContinuousAffineMap.contLinear</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span>.linear</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/NormedSpace/ContinuousAffineMap.lean#L66-L67","name":"ContinuousAffineMap.coe_contLinear","line":66,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.coe_contLinear","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.coe_contLinear\"><span class=\"name\">ContinuousAffineMap</span>.<span class=\"name\">coe_contLinear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">W</span> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">‚ÜíA[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">]</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">‚áë<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear\">ContinuousAffineMap.contLinear</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">‚áë<span class=\"fn\"><span class=\"fn\">f</span>.linear</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/NormedSpace/ContinuousAffineMap.lean#L59-L62","name":"ContinuousAffineMap.contLinear","line":59,"kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear","doc":"The linear map underlying a continuous affine map is continuous. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/ContinuousAffineMap.html#ContinuousAffineMap.contLinear\"><span class=\"name\">ContinuousAffineMap</span>.<span class=\"name\">contLinear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">W</span> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">R</span> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">‚ÜíA[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap\">]</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">‚ÜíL[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">W</span></span></div></div>"}]}