{"name":"Mathlib.LinearAlgebra.Coevaluation","instances":[],"imports":["Init","Mathlib.LinearAlgebra.Contraction"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/Coevaluation.lean#L82-L96","name":"contractLeft_assoc_coevaluation'","line":82,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Coevaluation.html#contractLeft_assoc_coevaluation'","doc":"This lemma corresponds to one of the coherence laws for duals in rigid categories, see\n`CategoryTheory.Monoidal.Rigid`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/Coevaluation.html#contractLeft_assoc_coevaluation'\"><span class=\"name\">contractLeft_assoc_coevaluation'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional.html#FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.lTensor\">LinearMap.lTensor</a> <span class=\"fn\">V</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Contraction.html#contractLeft\">contractLeft</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>)</span></span> ∘ₗ\n    <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.assoc\">TensorProduct.assoc</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dual.html#Module.Dual\">Module.Dual</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>)</span> <span class=\"fn\">V</span></span>)</span></span> ∘ₗ <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.rTensor\">LinearMap.rTensor</a> <span class=\"fn\">V</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Coevaluation.html#coevaluation\">coevaluation</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>)</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Equiv.html#LinearEquiv.symm\">LinearEquiv.symm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.rid\">TensorProduct.rid</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>)</span></span>)</span></span> ∘ₗ <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.lid\">TensorProduct.lid</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/Coevaluation.lean#L62-L77","name":"contractLeft_assoc_coevaluation","line":62,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Coevaluation.html#contractLeft_assoc_coevaluation","doc":"This lemma corresponds to one of the coherence laws for duals in rigid categories, see\n`CategoryTheory.Monoidal.Rigid`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/Coevaluation.html#contractLeft_assoc_coevaluation\"><span class=\"name\">contractLeft_assoc_coevaluation</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional.html#FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.rTensor\">LinearMap.rTensor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dual.html#Module.Dual\">Module.Dual</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Contraction.html#contractLeft\">contractLeft</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>)</span></span> ∘ₗ\n    <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Equiv.html#LinearEquiv.symm\">LinearEquiv.symm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.assoc\">TensorProduct.assoc</a> <span class=\"fn\">K</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dual.html#Module.Dual\">Module.Dual</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>)</span> <span class=\"fn\">V</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dual.html#Module.Dual\">Module.Dual</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>)</span></span>)</span></span>)</span></span> ∘ₗ\n      <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.lTensor\">LinearMap.lTensor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dual.html#Module.Dual\">Module.Dual</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Coevaluation.html#coevaluation\">coevaluation</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>)</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Equiv.html#LinearEquiv.symm\">LinearEquiv.symm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.lid\">TensorProduct.lid</a> <span class=\"fn\">K</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dual.html#Module.Dual\">Module.Dual</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>)</span></span>)</span></span>)</span></span> ∘ₗ <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.rid\">TensorProduct.rid</a> <span class=\"fn\">K</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dual.html#Module.Dual\">Module.Dual</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>)</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/Coevaluation.lean#L48-L55","name":"coevaluation_apply_one","line":48,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Coevaluation.html#coevaluation_apply_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/Coevaluation.html#coevaluation_apply_one\"><span class=\"name\">coevaluation_apply_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional.html#FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Coevaluation.html#coevaluation\">coevaluation</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>)</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">let bV := <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.ofVectorSpace\">Basis.ofVectorSpace</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>;\n  <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">Finset.univ</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.ofVectorSpaceIndex\">Basis.ofVectorSpaceIndex</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>)</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">bV</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.tmul\">⊗ₜ[</a><span class=\"fn\">K</span><a href=\"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.tmul\">]</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis.html#Basis.coord\">Basis.coord</a> <span class=\"fn\">bV</span> <span class=\"fn\">i</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/Coevaluation.lean#L42-L45","name":"coevaluation","line":42,"kind":"def","docLink":"./Mathlib/LinearAlgebra/Coevaluation.html#coevaluation","doc":"The coevaluation map is a linear map from a field `K` to a finite dimensional\nvector space `V`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/Coevaluation.html#coevaluation\"><span class=\"name\">coevaluation</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional.html#FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Module/LinearMap.html#LinearMap\">→ₗ[</a><span class=\"fn\">K</span><a href=\"./Mathlib/Algebra/Module/LinearMap.html#LinearMap\">]</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct\">TensorProduct</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dual.html#Module.Dual\">Module.Dual</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>)</span></span></span></div></div>"}]}