{"name":"Mathlib.GroupTheory.SpecificGroups.Dihedral","instances":[{"typeNames":["Eq"],"name":"instDecidableEqDihedralGroup","className":"Decidable"},{"typeNames":["DihedralGroup"],"name":"DihedralGroup.instInhabitedDihedralGroup","className":"Inhabited"},{"typeNames":["DihedralGroup"],"name":"DihedralGroup.instGroupDihedralGroup","className":"Group"},{"typeNames":["DihedralGroup"],"name":"DihedralGroup.instFintypeDihedralGroup","className":"Fintype"},{"typeNames":["DihedralGroup"],"name":"DihedralGroup.instInfiniteDihedralGroupOfNatNatInstOfNatNat","className":"Infinite"},{"typeNames":["DihedralGroup"],"name":"DihedralGroup.instNontrivialDihedralGroup","className":"Nontrivial"}],"imports":["Init","Mathlib.Data.ZMod.Basic","Mathlib.GroupTheory.Exponent"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L254-L257","name":"DihedralGroup.card_conjClasses_odd","line":254,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.card_conjClasses_odd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.card_conjClasses_odd\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">card_conjClasses_odd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Parity.html#Odd\">Odd</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Finite.html#Nat.card\">Nat.card</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Conj.html#ConjClasses\">ConjClasses</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span></span>)</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L248-L252","name":"DihedralGroup.card_commute_odd","line":248,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.card_commute_odd","doc":"If n is odd, then the Dihedral group of order $2n$ has $n(n+3)$ pairs of commuting elements. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.card_commute_odd\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">card_commute_odd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Parity.html#Odd\">Odd</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Finite.html#Nat.card\">Nat.card</a> <span class=\"fn\">{ <span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span></span></span> // <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Commute/Defs.html#Commute\">Commute</a> <span class=\"fn\"><span class=\"fn\">p</span>.1</span> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L215-L245","name":"DihedralGroup.OddCommuteEquiv","line":215,"kind":"def","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.OddCommuteEquiv","doc":"If n is odd, then the Dihedral group of order $2n$ has $n(n+3)$ pairs (represented as\n$n + n + n + n*n$) of commuting elements. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.OddCommuteEquiv\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">OddCommuteEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Parity.html#Odd\">Odd</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span></span></span> // <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Commute/Defs.html#Commute\">Commute</a> <span class=\"fn\"><span class=\"fn\">p</span>.1</span> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span> }</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L214-L214","name":"DihedralGroup.OddCommuteEquiv_apply","line":214,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.OddCommuteEquiv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.OddCommuteEquiv_apply\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">OddCommuteEquiv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Parity.html#Odd\">Odd</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">{ <span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span></span></span> // <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Commute/Defs.html#Commute\">Commute</a> <span class=\"fn\"><span class=\"fn\">p</span>.1</span> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span> }</span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.OddCommuteEquiv\">DihedralGroup.OddCommuteEquiv</a> <span class=\"fn\">hn</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\">match <span class=\"fn\">x</span> with\n    | <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">DihedralGroup.sr</a> <span class=\"fn\">i</span></span>, <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">DihedralGroup.r</a> <span class=\"fn\">a</span></span>)</span>, <span class=\"fn\">property</span> := <span class=\"fn\">property</span> }</span> =&gt; <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">i</span></span>\n    | <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">DihedralGroup.r</a> <span class=\"fn\">a</span></span>, <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">DihedralGroup.sr</a> <span class=\"fn\">j</span></span>)</span>, <span class=\"fn\">property</span> := <span class=\"fn\">property</span> }</span> =&gt; <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">j</span></span>)</span></span>\n    | <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">DihedralGroup.sr</a> <span class=\"fn\">i</span></span>, <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">DihedralGroup.sr</a> <span class=\"fn\">j</span></span>)</span>, <span class=\"fn\">property</span> := <span class=\"fn\">property</span> }</span> =&gt; <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">j</span></span>)</span></span>)</span></span>)</span></span>\n    | <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">DihedralGroup.r</a> <span class=\"fn\">i</span></span>, <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">DihedralGroup.r</a> <span class=\"fn\">j</span></span>)</span>, <span class=\"fn\">property</span> := <span class=\"fn\">property</span> }</span> =&gt; <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">(<span class=\"fn\">i</span>, <span class=\"fn\">j</span>)</span></span>)</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L214-L214","name":"DihedralGroup.OddCommuteEquiv_symm_apply","line":214,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.OddCommuteEquiv_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.OddCommuteEquiv_symm_apply\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">OddCommuteEquiv_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Parity.html#Odd\">Odd</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span></span></span></span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.OddCommuteEquiv\">DihedralGroup.OddCommuteEquiv</a> <span class=\"fn\">hn</span></span>)</span>.symm</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\">match <span class=\"fn\">x</span> with\n    | <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inl</a> <span class=\"fn\">i</span></span> =&gt;\n      <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">DihedralGroup.sr</a> <span class=\"fn\">i</span></span>, <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">DihedralGroup.r</a> <span class=\"fn\">0</span></span>)</span>,\n        <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">DihedralGroup.sr</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">0</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">DihedralGroup.sr</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">0</span></span>)</span></span></span>)</span> }</span>\n    | <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inl</a> <span class=\"fn\">j</span></span>)</span></span> =&gt;\n      <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">DihedralGroup.r</a> <span class=\"fn\">0</span></span>, <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">DihedralGroup.sr</a> <span class=\"fn\">j</span></span>)</span>,\n        <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">DihedralGroup.sr</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">0</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">DihedralGroup.sr</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">0</span></span>)</span></span></span>)</span> }</span>\n    | <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inl</a> <span class=\"fn\">k</span></span>)</span></span>)</span></span> =&gt;\n      <span class=\"fn\">{\n        <span class=\"fn\">val</span> :=\n          <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">DihedralGroup.sr</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Basic.html#ZMod.unitOfCoprime\">ZMod.unitOfCoprime</a> <span class=\"fn\">2</span> <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Std/Data/Nat/Gcd.html#Nat.Coprime\">Nat.Coprime</a> <span class=\"fn\">2</span> <span class=\"fn\">n</span></span>)</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span></span>)</span></span>,\n            <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">DihedralGroup.sr</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Basic.html#ZMod.unitOfCoprime\">ZMod.unitOfCoprime</a> <span class=\"fn\">2</span> <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Std/Data/Nat/Gcd.html#Nat.Coprime\">Nat.Coprime</a> <span class=\"fn\">2</span> <span class=\"fn\">n</span></span>)</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span></span>)</span></span>)</span>,\n        <span class=\"fn\">property</span> :=\n          <span class=\"fn\">(_ :\n            <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">DihedralGroup.sr</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Basic.html#ZMod.unitOfCoprime\">ZMod.unitOfCoprime</a> <span class=\"fn\">2</span> <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Std/Data/Nat/Gcd.html#Nat.Coprime\">Nat.Coprime</a> <span class=\"fn\">2</span> <span class=\"fn\">n</span></span>)</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span></span>)</span></span>,\n                    <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">DihedralGroup.sr</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Basic.html#ZMod.unitOfCoprime\">ZMod.unitOfCoprime</a> <span class=\"fn\">2</span> <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Std/Data/Nat/Gcd.html#Nat.Coprime\">Nat.Coprime</a> <span class=\"fn\">2</span> <span class=\"fn\">n</span></span>)</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span></span>)</span></span>)</span>.1</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a>                 <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">DihedralGroup.sr</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Basic.html#ZMod.unitOfCoprime\">ZMod.unitOfCoprime</a> <span class=\"fn\">2</span> <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Std/Data/Nat/Gcd.html#Nat.Coprime\">Nat.Coprime</a> <span class=\"fn\">2</span> <span class=\"fn\">n</span></span>)</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span></span>)</span></span>,\n                    <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">DihedralGroup.sr</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Basic.html#ZMod.unitOfCoprime\">ZMod.unitOfCoprime</a> <span class=\"fn\">2</span> <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Std/Data/Nat/Gcd.html#Nat.Coprime\">Nat.Coprime</a> <span class=\"fn\">2</span> <span class=\"fn\">n</span></span>)</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span></span>)</span></span>)</span>.2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>               <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">DihedralGroup.sr</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Basic.html#ZMod.unitOfCoprime\">ZMod.unitOfCoprime</a> <span class=\"fn\">2</span> <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Std/Data/Nat/Gcd.html#Nat.Coprime\">Nat.Coprime</a> <span class=\"fn\">2</span> <span class=\"fn\">n</span></span>)</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span></span>)</span></span>,\n                    <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">DihedralGroup.sr</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Basic.html#ZMod.unitOfCoprime\">ZMod.unitOfCoprime</a> <span class=\"fn\">2</span> <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Std/Data/Nat/Gcd.html#Nat.Coprime\">Nat.Coprime</a> <span class=\"fn\">2</span> <span class=\"fn\">n</span></span>)</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span></span>)</span></span>)</span>.1</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a>                 <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">DihedralGroup.sr</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Basic.html#ZMod.unitOfCoprime\">ZMod.unitOfCoprime</a> <span class=\"fn\">2</span> <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Std/Data/Nat/Gcd.html#Nat.Coprime\">Nat.Coprime</a> <span class=\"fn\">2</span> <span class=\"fn\">n</span></span>)</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span></span>)</span></span>,\n                    <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">DihedralGroup.sr</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Basic.html#ZMod.unitOfCoprime\">ZMod.unitOfCoprime</a> <span class=\"fn\">2</span> <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Std/Data/Nat/Gcd.html#Nat.Coprime\">Nat.Coprime</a> <span class=\"fn\">2</span> <span class=\"fn\">n</span></span>)</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span></span>)</span></span>)</span>.2</span></span></span>)</span> }</span>\n    | <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">(<span class=\"fn\">i</span>, <span class=\"fn\">j</span>)</span></span>)</span></span>)</span></span> =&gt;\n      <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">DihedralGroup.r</a> <span class=\"fn\">i</span></span>, <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">DihedralGroup.r</a> <span class=\"fn\">j</span></span>)</span>,\n        <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">DihedralGroup.r</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">j</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">DihedralGroup.r</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">i</span></span>)</span></span></span>)</span> }</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L194-L209","name":"DihedralGroup.exponent","line":194,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.exponent","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.exponent\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">exponent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Exponent.html#Monoid.exponent\">Monoid.exponent</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#GCDMonoid.lcm\">lcm</a> <span class=\"fn\">n</span> <span class=\"fn\">2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L189-L191","name":"DihedralGroup.orderOf_r","line":189,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.orderOf_r","doc":"If `0 < n`, then `i : ZMod n` has order `n / gcd n i`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.orderOf_r\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">orderOf_r</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/OrderOfElement.html#orderOf\">orderOf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">DihedralGroup.r</a> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Gcd.html#Nat.gcd\">Nat.gcd</a> <span class=\"fn\">n</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Basic.html#ZMod.val\">ZMod.val</a> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L170-L184","name":"DihedralGroup.orderOf_r_one","line":170,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.orderOf_r_one","doc":"If `0 < n`, then `r 1` has order `n`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.orderOf_r_one\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">orderOf_r_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/OrderOfElement.html#orderOf\">orderOf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">DihedralGroup.r</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L159-L164","name":"DihedralGroup.orderOf_sr","line":159,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.orderOf_sr","doc":"If `0 < n`, then `sr i` has order 2.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.orderOf_sr\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">orderOf_sr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/OrderOfElement.html#orderOf\">orderOf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">DihedralGroup.sr</a> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L153-L153","name":"DihedralGroup.sr_mul_self","line":153,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr_mul_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr_mul_self\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">sr_mul_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">DihedralGroup.sr</a> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">DihedralGroup.sr</a> <span class=\"fn\">i</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L146-L149","name":"DihedralGroup.r_one_pow_n","line":146,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r_one_pow_n","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r_one_pow_n\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">r_one_pow_n</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">DihedralGroup.r</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L135-L142","name":"DihedralGroup.r_one_pow","line":135,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r_one_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r_one_pow\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">r_one_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">DihedralGroup.r</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">DihedralGroup.r</a> <span class=\"fn\">↑<span class=\"fn\">k</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L129-L132","name":"DihedralGroup.nat_card","line":129,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.nat_card","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.nat_card\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">nat_card</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Finite.html#Nat.card\">Nat.card</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L125-L126","name":"DihedralGroup.card","line":125,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.card","doc":"If `0 < n`, then `DihedralGroup n` has `2n` elements.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.card\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">card</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L120-L121","name":"DihedralGroup.instNontrivialDihedralGroup","line":120,"kind":"instance","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.instNontrivialDihedralGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.instNontrivialDihedralGroup\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">instNontrivialDihedralGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L117-L118","name":"DihedralGroup.instInfiniteDihedralGroupOfNatNatInstOfNatNat","line":117,"kind":"instance","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.instInfiniteDihedralGroupOfNatNatInstOfNatNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.instInfiniteDihedralGroupOfNatNatInstOfNatNat\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">instInfiniteDihedralGroupOfNatNatInstOfNatNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Infinite\">Infinite</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">0</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L114-L115","name":"DihedralGroup.instFintypeDihedralGroup","line":114,"kind":"instance","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.instFintypeDihedralGroup","doc":"If `0 < n`, then `DihedralGroup n` is a finite group.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.instFintypeDihedralGroup\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">instFintypeDihedralGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L98-L99","name":"DihedralGroup.one_def","line":98,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.one_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.one_def\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">one_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">DihedralGroup.r</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L94-L95","name":"DihedralGroup.sr_mul_sr","line":94,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr_mul_sr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr_mul_sr\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">sr_mul_sr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">DihedralGroup.sr</a> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">DihedralGroup.sr</a> <span class=\"fn\">j</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">DihedralGroup.r</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">i</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L89-L90","name":"DihedralGroup.sr_mul_r","line":89,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr_mul_r","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr_mul_r\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">sr_mul_r</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">DihedralGroup.sr</a> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">DihedralGroup.r</a> <span class=\"fn\">j</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">DihedralGroup.sr</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">j</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L84-L85","name":"DihedralGroup.r_mul_sr","line":84,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r_mul_sr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r_mul_sr\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">r_mul_sr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">DihedralGroup.r</a> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">DihedralGroup.sr</a> <span class=\"fn\">j</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">DihedralGroup.sr</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">i</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L79-L80","name":"DihedralGroup.r_mul_r","line":79,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r_mul_r","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r_mul_r\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">r_mul_r</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">DihedralGroup.r</a> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">DihedralGroup.r</a> <span class=\"fn\">j</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">DihedralGroup.r</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">j</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L60-L76","name":"DihedralGroup.instGroupDihedralGroup","line":60,"kind":"instance","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.instGroupDihedralGroup","doc":"The group structure on `DihedralGroup n`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.instGroupDihedralGroup\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">instGroupDihedralGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L49-L50","name":"DihedralGroup.instInhabitedDihedralGroup","line":49,"kind":"instance","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.instInhabitedDihedralGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.instInhabitedDihedralGroup\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">instInhabitedDihedralGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L29-L29","name":"instDecidableEqDihedralGroup","line":29,"kind":"instance","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#instDecidableEqDihedralGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#instDecidableEqDihedralGroup\"><span class=\"name\">instDecidableEqDihedralGroup</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>} → <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L28-L28","name":"DihedralGroup.sr","line":28,"kind":"ctor","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">sr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L27-L27","name":"DihedralGroup.r","line":27,"kind":"ctor","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">r</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L26-L29","name":"DihedralGroup","line":26,"kind":"inductive","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup","doc":"For `n ≠ 0`, `DihedralGroup n` represents the symmetry group of the regular `n`-gon.\n`r i` represents the rotations of the `n`-gon by `2πi/n`, and `sr i` represents the reflections of\nthe `n`-gon. `DihedralGroup 0` corresponds to the infinite dihedral group.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\"><span class=\"name\">DihedralGroup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}