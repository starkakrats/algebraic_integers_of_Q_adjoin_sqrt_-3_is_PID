{"name":"Mathlib.Algebra.CovariantAndContravariant","instances":[{"typeNames":[],"name":"AddGroup.covconv","className":"ContravariantClass"},{"typeNames":[],"name":"Group.covconv","className":"ContravariantClass"},{"typeNames":["Function.swap"],"name":"AddGroup.covconv_swap","className":"ContravariantClass"},{"typeNames":["Function.swap"],"name":"Group.covconv_swap","className":"ContravariantClass"},{"typeNames":[],"name":"contravariant_lt_of_covariant_le","className":"ContravariantClass"},{"typeNames":[],"name":"covariant_lt_of_contravariant_le","className":"CovariantClass"},{"typeNames":["Function.swap"],"name":"covariant_swap_add_of_covariant_add","className":"CovariantClass"},{"typeNames":["Function.swap"],"name":"covariant_swap_mul_of_covariant_mul","className":"CovariantClass"},{"typeNames":["Function.swap"],"name":"contravariant_swap_add_of_contravariant_add","className":"ContravariantClass"},{"typeNames":["Function.swap"],"name":"contravariant_swap_mul_of_contravariant_mul","className":"ContravariantClass"},{"typeNames":[],"name":"IsLeftCancelAdd.covariant_add_lt_of_covariant_add_le","className":"CovariantClass"},{"typeNames":[],"name":"IsLeftCancelMul.covariant_mul_lt_of_covariant_mul_le","className":"CovariantClass"},{"typeNames":["Function.swap"],"name":"IsRightCancelAdd.covariant_swap_add_lt_of_covariant_swap_add_le","className":"CovariantClass"},{"typeNames":["Function.swap"],"name":"IsRightCancelMul.covariant_swap_mul_lt_of_covariant_swap_mul_le","className":"CovariantClass"},{"typeNames":[],"name":"IsLeftCancelAdd.contravariant_add_le_of_contravariant_add_lt","className":"ContravariantClass"},{"typeNames":[],"name":"IsLeftCancelMul.contravariant_mul_le_of_contravariant_mul_lt","className":"ContravariantClass"},{"typeNames":["Function.swap"],"name":"IsRightCancelAdd.contravariant_swap_add_le_of_contravariant_swap_add_lt","className":"ContravariantClass"},{"typeNames":["Function.swap"],"name":"IsRightCancelMul.contravariant_swap_mul_le_of_contravariant_swap_mul_lt","className":"ContravariantClass"}],"imports":["Init","Mathlib.Algebra.Group.Basic","Mathlib.Order.Basic","Mathlib.Order.Monotone.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L384-L388","name":"IsRightCancelMul.contravariant_swap_mul_le_of_contravariant_swap_mul_lt","line":384,"kind":"instance","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#IsRightCancelMul.contravariant_swap_mul_le_of_contravariant_swap_mul_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#IsRightCancelMul.contravariant_swap_mul_le_of_contravariant_swap_mul_lt\"><span class=\"name\">IsRightCancelMul</span>.<span class=\"name\">contravariant_swap_mul_le_of_contravariant_swap_mul_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#IsRightCancelMul\">IsRightCancelMul</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass\">ContravariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.swap\">Function.swap</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x_1</span></span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass\">ContravariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.swap\">Function.swap</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x_1</span></span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L383-L383","name":"IsRightCancelAdd.contravariant_swap_add_le_of_contravariant_swap_add_lt","line":383,"kind":"instance","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#IsRightCancelAdd.contravariant_swap_add_le_of_contravariant_swap_add_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#IsRightCancelAdd.contravariant_swap_add_le_of_contravariant_swap_add_lt\"><span class=\"name\">IsRightCancelAdd</span>.<span class=\"name\">contravariant_swap_add_le_of_contravariant_swap_add_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#IsRightCancelAdd\">IsRightCancelAdd</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass\">ContravariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.swap\">Function.swap</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass\">ContravariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.swap\">Function.swap</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L377-L381","name":"IsLeftCancelMul.contravariant_mul_le_of_contravariant_mul_lt","line":377,"kind":"instance","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#IsLeftCancelMul.contravariant_mul_le_of_contravariant_mul_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#IsLeftCancelMul.contravariant_mul_le_of_contravariant_mul_lt\"><span class=\"name\">IsLeftCancelMul</span>.<span class=\"name\">contravariant_mul_le_of_contravariant_mul_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#IsLeftCancelMul\">IsLeftCancelMul</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass\">ContravariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass\">ContravariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L376-L376","name":"IsLeftCancelAdd.contravariant_add_le_of_contravariant_add_lt","line":376,"kind":"instance","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#IsLeftCancelAdd.contravariant_add_le_of_contravariant_add_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#IsLeftCancelAdd.contravariant_add_le_of_contravariant_add_lt\"><span class=\"name\">IsLeftCancelAdd</span>.<span class=\"name\">contravariant_add_le_of_contravariant_add_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#IsLeftCancelAdd\">IsLeftCancelAdd</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass\">ContravariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass\">ContravariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L371-L374","name":"IsRightCancelMul.covariant_swap_mul_lt_of_covariant_swap_mul_le","line":371,"kind":"instance","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#IsRightCancelMul.covariant_swap_mul_lt_of_covariant_swap_mul_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#IsRightCancelMul.covariant_swap_mul_lt_of_covariant_swap_mul_le\"><span class=\"name\">IsRightCancelMul</span>.<span class=\"name\">covariant_swap_mul_lt_of_covariant_swap_mul_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#IsRightCancelMul\">IsRightCancelMul</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.swap\">Function.swap</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x_1</span></span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.swap\">Function.swap</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x_1</span></span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L370-L370","name":"IsRightCancelAdd.covariant_swap_add_lt_of_covariant_swap_add_le","line":370,"kind":"instance","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#IsRightCancelAdd.covariant_swap_add_lt_of_covariant_swap_add_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#IsRightCancelAdd.covariant_swap_add_lt_of_covariant_swap_add_le\"><span class=\"name\">IsRightCancelAdd</span>.<span class=\"name\">covariant_swap_add_lt_of_covariant_swap_add_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#IsRightCancelAdd\">IsRightCancelAdd</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.swap\">Function.swap</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.swap\">Function.swap</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L365-L368","name":"IsLeftCancelMul.covariant_mul_lt_of_covariant_mul_le","line":365,"kind":"instance","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#IsLeftCancelMul.covariant_mul_lt_of_covariant_mul_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#IsLeftCancelMul.covariant_mul_lt_of_covariant_mul_le\"><span class=\"name\">IsLeftCancelMul</span>.<span class=\"name\">covariant_mul_lt_of_covariant_mul_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#IsLeftCancelMul\">IsLeftCancelMul</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L364-L364","name":"IsLeftCancelAdd.covariant_add_lt_of_covariant_add_le","line":364,"kind":"instance","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#IsLeftCancelAdd.covariant_add_lt_of_covariant_add_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#IsLeftCancelAdd.covariant_add_lt_of_covariant_add_le\"><span class=\"name\">IsLeftCancelAdd</span>.<span class=\"name\">covariant_add_lt_of_covariant_add_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#IsLeftCancelAdd\">IsLeftCancelAdd</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L352-L356","name":"contravariant_le_of_contravariant_eq_and_lt","line":352,"kind":"theorem","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#contravariant_le_of_contravariant_eq_and_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#contravariant_le_of_contravariant_eq_and_lt\"><span class=\"name\">contravariant_le_of_contravariant_eq_and_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(μ : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass\">ContravariantClass</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x_1</span></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass\">ContravariantClass</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass\">ContravariantClass</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L348-L350","name":"covariant_lt_of_covariant_le_of_contravariant_eq","line":348,"kind":"theorem","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#covariant_lt_of_covariant_le_of_contravariant_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#covariant_lt_of_covariant_le_of_contravariant_eq\"><span class=\"name\">covariant_lt_of_covariant_le_of_contravariant_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(μ : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass\">ContravariantClass</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x_1</span></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L344-L346","name":"contravariant_swap_mul_of_contravariant_mul","line":344,"kind":"instance","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#contravariant_swap_mul_of_contravariant_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#contravariant_swap_mul_of_contravariant_mul\"><span class=\"name\">contravariant_swap_mul_of_contravariant_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommSemigroup\">CommSemigroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass\">ContravariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass\">ContravariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.swap\">Function.swap</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x_1</span></span></span></span>)</span> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L343-L343","name":"contravariant_swap_add_of_contravariant_add","line":343,"kind":"instance","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#contravariant_swap_add_of_contravariant_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#contravariant_swap_add_of_contravariant_add\"><span class=\"name\">contravariant_swap_add_of_contravariant_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommSemigroup\">AddCommSemigroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass\">ContravariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass\">ContravariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.swap\">Function.swap</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span></span></span>)</span> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L339-L341","name":"covariant_swap_mul_of_covariant_mul","line":339,"kind":"instance","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#covariant_swap_mul_of_covariant_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#covariant_swap_mul_of_covariant_mul\"><span class=\"name\">covariant_swap_mul_of_covariant_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommSemigroup\">CommSemigroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.swap\">Function.swap</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x_1</span></span></span></span>)</span> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L338-L338","name":"covariant_swap_add_of_covariant_add","line":338,"kind":"instance","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#covariant_swap_add_of_covariant_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#covariant_swap_add_of_covariant_add\"><span class=\"name\">covariant_swap_add_of_covariant_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommSemigroup\">AddCommSemigroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.swap\">Function.swap</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span></span></span>)</span> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L334-L336","name":"covariant_lt_of_contravariant_le","line":334,"kind":"instance","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#covariant_lt_of_contravariant_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#covariant_lt_of_contravariant_le\"><span class=\"name\">covariant_lt_of_contravariant_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mu : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass\">ContravariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">mu</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">mu</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L330-L332","name":"contravariant_lt_of_covariant_le","line":330,"kind":"instance","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#contravariant_lt_of_covariant_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#contravariant_lt_of_covariant_le\"><span class=\"name\">contravariant_lt_of_covariant_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mu : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">mu</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass\">ContravariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">mu</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L325-L326","name":"contravariant_flip_iff","line":325,"kind":"theorem","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#contravariant_flip_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#contravariant_flip_iff\"><span class=\"name\">contravariant_flip_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mu : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Algebra/Classes.html#IsSymmOp\">IsSymmOp</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">mu</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Contravariant\">Contravariant</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#flip\">flip</a> <span class=\"fn\">mu</span></span>)</span> <span class=\"fn\">r</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Contravariant\">Contravariant</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">mu</span> <span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L320-L321","name":"covariant_flip_iff","line":320,"kind":"theorem","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#covariant_flip_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#covariant_flip_iff\"><span class=\"name\">covariant_flip_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mu : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Algebra/Classes.html#IsSymmOp\">IsSymmOp</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">mu</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Covariant\">Covariant</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#flip\">flip</a> <span class=\"fn\">mu</span></span>)</span> <span class=\"fn\">r</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Covariant\">Covariant</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">mu</span> <span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L312-L315","name":"covariant_lt_iff_contravariant_le","line":312,"kind":"theorem","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#covariant_lt_iff_contravariant_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#covariant_lt_iff_contravariant_le\"><span class=\"name\">covariant_lt_iff_contravariant_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(μ : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Covariant\">Covariant</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Contravariant\">Contravariant</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L306-L309","name":"covariant_le_iff_contravariant_lt","line":306,"kind":"theorem","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#covariant_le_iff_contravariant_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#covariant_le_iff_contravariant_lt\"><span class=\"name\">covariant_le_iff_contravariant_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(μ : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Covariant\">Covariant</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Contravariant\">Contravariant</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L301-L303","name":"contravariant_lt_of_contravariant_le","line":301,"kind":"theorem","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#contravariant_lt_of_contravariant_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#contravariant_lt_of_contravariant_le\"><span class=\"name\">contravariant_lt_of_contravariant_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(μ : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Contravariant\">Contravariant</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Contravariant\">Contravariant</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L294-L299","name":"contravariant_le_iff_contravariant_lt_and_eq","line":294,"kind":"theorem","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#contravariant_le_iff_contravariant_lt_and_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#contravariant_le_iff_contravariant_lt_and_eq\"><span class=\"name\">contravariant_le_iff_contravariant_lt_and_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(μ : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Contravariant\">Contravariant</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Contravariant\">Contravariant</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Contravariant\">Contravariant</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x_1</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L291-L292","name":"covariantClass_le_of_lt","line":291,"kind":"theorem","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#covariantClass_le_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#covariantClass_le_of_lt\"><span class=\"name\">covariantClass_le_of_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(μ : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L283-L288","name":"covariant_le_of_covariant_lt","line":283,"kind":"theorem","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#covariant_le_of_covariant_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#covariant_le_of_covariant_lt\"><span class=\"name\">covariant_le_of_covariant_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(μ : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Covariant\">Covariant</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Covariant\">Covariant</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L276-L278","name":"Antitone.covariant_of_const'","line":276,"kind":"theorem","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#Antitone.covariant_of_const'","doc":"Dual of `Monotone.covariant_of_const'` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Antitone.covariant_of_const'\"><span class=\"name\">Antitone</span>.<span class=\"name\">covariant_of_const'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.swap\">Function.swap</a> <span class=\"fn\">μ</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Antitone\">Antitone</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Antitone\">Antitone</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">x</span> <span class=\"fn\">m</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L270-L272","name":"Antitone.covariant_of_const","line":270,"kind":"theorem","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#Antitone.covariant_of_const","doc":"Dual of `Monotone.covariant_of_const` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Antitone.covariant_of_const\"><span class=\"name\">Antitone</span>.<span class=\"name\">covariant_of_const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Antitone\">Antitone</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Antitone\">Antitone</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">m</span> <span class=\"fn\">x</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L264-L266","name":"Monotone.covariant_of_const'","line":264,"kind":"theorem","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#Monotone.covariant_of_const'","doc":"Same as `Monotone.covariant_of_const`, but with the constant on the other side of\nthe operator.  E.g., `∀ (m : ℕ), Monotone f → Monotone (fun n ↦ f (n + m))`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Monotone.covariant_of_const'\"><span class=\"name\">Monotone</span>.<span class=\"name\">covariant_of_const'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.swap\">Function.swap</a> <span class=\"fn\">μ</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">x</span> <span class=\"fn\">m</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L257-L259","name":"Monotone.covariant_of_const","line":257,"kind":"theorem","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#Monotone.covariant_of_const","doc":"A monotone function remains monotone when composed with the partial application\nof a covariant operator. E.g., `∀ (m : ℕ), Monotone f → Monotone (fun n ↦ f (m + n))`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Monotone.covariant_of_const\"><span class=\"name\">Monotone</span>.<span class=\"name\">covariant_of_const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">m</span> <span class=\"fn\">x</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L251-L252","name":"Covariant.monotone_of_const","line":251,"kind":"theorem","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#Covariant.monotone_of_const","doc":"The partial application of a constant to a covariant operator is monotone. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Covariant.monotone_of_const\"><span class=\"name\">Covariant</span>.<span class=\"name\">monotone_of_const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">m</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L235-L237","name":"rel_act_of_act_rel_act_of_rel_act","line":235,"kind":"theorem","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#rel_act_of_act_rel_act_of_rel_act","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#rel_act_of_act_rel_act_of_rel_act\"><span class=\"name\">rel_act_of_act_rel_act_of_rel_act</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass\">ContravariantClass</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Algebra/Classes.html#IsTrans\">IsTrans</a> <span class=\"fn\">N</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">M</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ab : <span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">m</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">m</span> <span class=\"fn\">b</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rr : <span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">b</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">m</span> <span class=\"fn\">c</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">m</span> <span class=\"fn\">c</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L230-L232","name":"act_rel_of_act_rel_of_rel_act_rel","line":230,"kind":"theorem","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#act_rel_of_act_rel_of_rel_act_rel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#act_rel_of_act_rel_of_rel_act_rel\"><span class=\"name\">act_rel_of_act_rel_of_rel_act_rel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass\">ContravariantClass</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Algebra/Classes.html#IsTrans\">IsTrans</a> <span class=\"fn\">N</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">M</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ab : <span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">m</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rl : <span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">m</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">m</span> <span class=\"fn\">c</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">m</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L221-L222","name":"rel_of_act_rel_act","line":221,"kind":"theorem","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#rel_of_act_rel_act","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#rel_of_act_rel_act\"><span class=\"name\">rel_of_act_rel_act</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass\">ContravariantClass</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">M</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ab : <span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">m</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">m</span> <span class=\"fn\">b</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L211-L212","name":"act_rel_act_of_rel_of_rel","line":211,"kind":"theorem","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#act_rel_act_of_rel_of_rel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#act_rel_act_of_rel_of_rel\"><span class=\"name\">act_rel_act_of_rel_of_rel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mu : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Algebra/Classes.html#IsTrans\">IsTrans</a> <span class=\"fn\">N</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[i : <span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">mu</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[i' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.swap\">Function.swap</a> <span class=\"fn\">mu</span></span>)</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ab : <span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cd : <span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">mu</span> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">mu</span> <span class=\"fn\">b</span> <span class=\"fn\">d</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L197-L198","name":"rel_act_of_rel_of_rel_act","line":197,"kind":"theorem","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#rel_act_of_rel_of_rel_act","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#rel_act_of_rel_of_rel_act\"><span class=\"name\">rel_act_of_rel_of_rel_act</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Algebra/Classes.html#IsTrans\">IsTrans</a> <span class=\"fn\">N</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">M</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ab : <span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rr : <span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">c</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">m</span> <span class=\"fn\">a</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">c</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">m</span> <span class=\"fn\">b</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L193-L194","name":"act_rel_of_rel_of_act_rel","line":193,"kind":"theorem","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#act_rel_of_rel_of_act_rel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#act_rel_of_rel_of_act_rel\"><span class=\"name\">act_rel_of_rel_of_act_rel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Algebra/Classes.html#IsTrans\">IsTrans</a> <span class=\"fn\">N</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">M</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ab : <span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rl : <span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">m</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">m</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L183-L185","name":"Group.covconv_swap","line":183,"kind":"instance","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#Group.covconv_swap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Group.covconv_swap\"><span class=\"name\">Group</span>.<span class=\"name\">covconv_swap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.swap\">Function.swap</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x_1</span></span></span></span>)</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass\">ContravariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.swap\">Function.swap</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x_1</span></span></span></span>)</span> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L182-L182","name":"AddGroup.covconv_swap","line":182,"kind":"instance","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#AddGroup.covconv_swap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#AddGroup.covconv_swap\"><span class=\"name\">AddGroup</span>.<span class=\"name\">covconv_swap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.swap\">Function.swap</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span></span></span>)</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass\">ContravariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.swap\">Function.swap</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span></span></span>)</span> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L171-L177","name":"Group.covariant_swap_iff_contravariant_swap","line":171,"kind":"theorem","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#Group.covariant_swap_iff_contravariant_swap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Group.covariant_swap_iff_contravariant_swap\"><span class=\"name\">Group</span>.<span class=\"name\">covariant_swap_iff_contravariant_swap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Covariant\">Covariant</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.swap\">Function.swap</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x_1</span></span></span></span>)</span> <span class=\"fn\">r</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Contravariant\">Contravariant</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.swap\">Function.swap</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x_1</span></span></span></span>)</span> <span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L170-L170","name":"AddGroup.covariant_swap_iff_contravariant_swap","line":170,"kind":"theorem","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#AddGroup.covariant_swap_iff_contravariant_swap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#AddGroup.covariant_swap_iff_contravariant_swap\"><span class=\"name\">AddGroup</span>.<span class=\"name\">covariant_swap_iff_contravariant_swap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Covariant\">Covariant</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.swap\">Function.swap</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span></span></span>)</span> <span class=\"fn\">r</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Contravariant\">Contravariant</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.swap\">Function.swap</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span></span></span>)</span> <span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L166-L168","name":"Group.covconv","line":166,"kind":"instance","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#Group.covconv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Group.covconv\"><span class=\"name\">Group</span>.<span class=\"name\">covconv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass\">ContravariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L165-L165","name":"AddGroup.covconv","line":165,"kind":"instance","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#AddGroup.covconv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#AddGroup.covconv\"><span class=\"name\">AddGroup</span>.<span class=\"name\">covconv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass\">ContravariantClass</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L155-L161","name":"Group.covariant_iff_contravariant","line":155,"kind":"theorem","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#Group.covariant_iff_contravariant","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Group.covariant_iff_contravariant\"><span class=\"name\">Group</span>.<span class=\"name\">covariant_iff_contravariant</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Covariant\">Covariant</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">r</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Contravariant\">Contravariant</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L154-L154","name":"AddGroup.covariant_iff_contravariant","line":154,"kind":"theorem","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#AddGroup.covariant_iff_contravariant","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#AddGroup.covariant_iff_contravariant\"><span class=\"name\">AddGroup</span>.<span class=\"name\">covariant_iff_contravariant</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Covariant\">Covariant</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">r</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Contravariant\">Contravariant</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L150-L151","name":"act_rel_act_of_rel","line":150,"kind":"theorem","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#act_rel_act_of_rel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#act_rel_act_of_rel\"><span class=\"name\">act_rel_act_of_rel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">M</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ab : <span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">m</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">m</span> <span class=\"fn\">b</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L140-L141","name":"Contravariant.flip","line":140,"kind":"theorem","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#Contravariant.flip","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Contravariant.flip\"><span class=\"name\">Contravariant</span>.<span class=\"name\">flip</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Contravariant\">Contravariant</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Contravariant\">Contravariant</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#flip\">flip</a> <span class=\"fn\">r</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L136-L137","name":"Covariant.flip","line":136,"kind":"theorem","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#Covariant.flip","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Covariant.flip\"><span class=\"name\">Covariant</span>.<span class=\"name\">flip</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Covariant\">Covariant</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Covariant\">Covariant</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#flip\">flip</a> <span class=\"fn\">r</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L127-L129","name":"rel_iff_cov","line":127,"kind":"theorem","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#rel_iff_cov","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#rel_iff_cov\"><span class=\"name\">rel_iff_cov</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(μ : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass\">ContravariantClass</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">M</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">m</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">m</span> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L124-L124","name":"ContravariantClass.elim","line":124,"kind":"def","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass.elim","doc":"For all `m ∈ M` and all elements `n₁, n₂ ∈ N`, if the relation `r` holds for the\npair `(μ m n₁, μ m n₂)` obtained from `(n₁, n₂)` by acting upon it by `m`, then, the relation\n`r` also holds for the pair `(n₁, n₂)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass.elim\"><span class=\"name\">ContravariantClass</span>.<span class=\"name\">elim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass\">ContravariantClass</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Contravariant\">Contravariant</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L120-L120","name":"ContravariantClass.mk","line":120,"kind":"ctor","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass.mk\"><span class=\"name\">ContravariantClass</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(elim : <span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Contravariant\">Contravariant</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass\">ContravariantClass</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L120-L124","name":"ContravariantClass","line":120,"kind":"class","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass","doc":"Given an action `μ` of a Type `M` on a Type `N` and a relation `r` on `N`, informally, the\n`ContravariantClass` says that \"if the result of the action `μ` on a pair satisfies the\nrelation `r`, then the initial pair satisfied the relation `r`.\"\n\nMore precisely, the `ContravariantClass` is a class taking two Types `M N`, together with an\n\"action\" `μ : M → N → N` and a relation `r : N → N → Prop`.  Its unique field `elim` is the\nassertion that for all `m ∈ M` and all elements `n₁, n₂ ∈ N`, if the relation `r` holds for the\npair `(μ m n₁, μ m n₂)` obtained from `(n₁, n₂)` by acting upon it by `m`, then, the relation\n`r` also holds for the pair `(n₁, n₂)`.\n\nIf `m : M` and `h : r (μ m n₁) (μ m n₂)`, then `ContravariantClass.elim m h : r n₁ n₂`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass\"><span class=\"name\">ContravariantClass</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(μ : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L105-L105","name":"CovariantClass.elim","line":105,"kind":"def","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass.elim","doc":"For all `m ∈ M` and all elements `n₁, n₂ ∈ N`, if the relation `r` holds for the pair\n`(n₁, n₂)`, then, the relation `r` also holds for the pair `(μ m n₁, μ m n₂)` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass.elim\"><span class=\"name\">CovariantClass</span>.<span class=\"name\">elim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Covariant\">Covariant</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L102-L102","name":"CovariantClass.mk","line":102,"kind":"ctor","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass.mk\"><span class=\"name\">CovariantClass</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(elim : <span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Covariant\">Covariant</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <span class=\"fn\">M</span> <span class=\"fn\">N</span> <span class=\"fn\">μ</span> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L102-L105","name":"CovariantClass","line":102,"kind":"class","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass","doc":"Given an action `μ` of a Type `M` on a Type `N` and a relation `r` on `N`, informally, the\n`CovariantClass` says that \"the action `μ` preserves the relation `r`.\"\n\nMore precisely, the `CovariantClass` is a class taking two Types `M N`, together with an \"action\"\n`μ : M → N → N` and a relation `r : N → N → Prop`.  Its unique field `elim` is the assertion that\nfor all `m ∈ M` and all elements `n₁, n₂ ∈ N`, if the relation `r` holds for the pair\n`(n₁, n₂)`, then, the relation `r` also holds for the pair `(μ m n₁, μ m n₂)`,\nobtained from `(n₁, n₂)` by acting upon it by `m`.\n\nIf `m : M` and `h : r n₁ n₂`, then `CovariantClass.elim m h : r (μ m n₁) (μ m n₂)`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\"><span class=\"name\">CovariantClass</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(μ : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L87-L88","name":"Contravariant","line":87,"kind":"def","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#Contravariant","doc":"`Contravariant` is useful to formulate succintly statements about the interactions between an\naction of a Type on another one and a relation on the acted-upon Type.\n\nSee the `ContravariantClass` doc-string for its meaning. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Contravariant\"><span class=\"name\">Contravariant</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(μ : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/CovariantAndContravariant.lean#L79-L80","name":"Covariant","line":79,"kind":"def","docLink":"./Mathlib/Algebra/CovariantAndContravariant.html#Covariant","doc":"`Covariant` is useful to formulate succintly statements about the interactions between an\naction of a Type on another one and a relation on the acted-upon Type.\n\nSee the `CovariantClass` doc-string for its meaning. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/CovariantAndContravariant.html#Covariant\"><span class=\"name\">Covariant</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(μ : <span class=\"fn\"><span class=\"fn\">M</span> → <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><span class=\"fn\">N</span> → <span class=\"fn\">N</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}