{"name":"Mathlib.NumberTheory.NumberField.CanonicalEmbedding","instances":[{"typeNames":["Prod"],"name":"NumberField.mixedEmbedding.instNontrivialProdForAllSubtypeInfinitePlaceIsRealRealForAllIsComplexComplex","className":"Nontrivial"},{"typeNames":["MeasureTheory.MeasureSpace.volume"],"name":"NumberField.mixedEmbedding.instIsAddHaarMeasureProdForAllSubtypeInfinitePlaceIsRealRealForAllIsComplexComplexInstAddGroupAddGroupInstAddGroupRealToAddGroupToNormedAddGroupInstNormedAddCommGroupComplexInstTopologicalSpaceProdTopologicalSpaceToTopologicalSpaceToUniformSpacePseudoMetricSpaceToPseudoMetricSpaceToSeminormedRingToSeminormedCommRingToNormedCommRingInstNormedFieldComplexToMeasurableSpaceMeasureSpacePiFintypePropDecidableFintypeMeasureSpaceMeasureSpaceOfInnerProductSpaceComplexToRealInnerProductSpaceInstIsROrCComplexInstFiniteDimensionalRealComplexInstDivisionRingRealAddCommGroupInstModuleToSemiringToDivisionSemiringToModuleMeasurableSpaceBorelSpaceVolume","className":"MeasureTheory.Measure.IsAddHaarMeasure"},{"typeNames":["MeasureTheory.MeasureSpace.volume"],"name":"NumberField.mixedEmbedding.instNoAtomsProdForAllSubtypeInfinitePlaceIsRealRealForAllIsComplexComplexToMeasurableSpaceMeasureSpacePiFintypePropDecidableFintypeMeasureSpaceMeasureSpaceOfInnerProductSpaceInstNormedAddCommGroupComplexComplexToRealInnerProductSpaceInstIsROrCComplexInstFiniteDimensionalRealComplexInstDivisionRingRealAddCommGroupInstModuleToSemiringToDivisionSemiringToModuleMeasurableSpaceBorelSpaceVolume","className":"MeasureTheory.NoAtoms"}],"imports":["Init","Mathlib.Algebra.Module.Zlattice","Mathlib.MeasureTheory.Group.GeometryOfNumbers","Mathlib.MeasureTheory.Measure.Lebesgue.VolumeOfBalls","Mathlib.NumberTheory.NumberField.Embeddings","Mathlib.RingTheory.Discriminant","Mathlib.Topology.Bornology.Constructions"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L777-L812","name":"NumberField.mixedEmbedding.exists_ne_zero_mem_ringOfIntegers_of_norm_le","line":777,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.exists_ne_zero_mem_ringOfIntegers_of_norm_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.exists_ne_zero_mem_ringOfIntegers_of_norm_le\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">exists_ne_zero_mem_ringOfIntegers_of_norm_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.minkowskiBound\">NumberField.mixedEmbedding.minkowskiBound</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">‚Üë<span class=\"fn\">‚Üë<span class=\"fn\">MeasureTheory.volume</span></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum\">NumberField.mixedEmbedding.convexBodySum</a> <span class=\"fn\">K</span> <span class=\"fn\">B</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ (a : <span class=\"fn\">‚Ü•<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">‚â†</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">|<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Norm.html#Algebra.norm\">Algebra.norm</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">‚Ñö</a></span>)</span> <span class=\"fn\">‚Üë<span class=\"fn\">a</span></span></span>|</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">‚Üë<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#FiniteDimensional.finrank\">FiniteDimensional.finrank</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">‚Ñö</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#FiniteDimensional.finrank\">FiniteDimensional.finrank</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">‚Ñö</a> <span class=\"fn\">K</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L763-L775","name":"NumberField.mixedEmbedding.exists_ne_zero_mem_ringOfIntegers_lt","line":763,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.exists_ne_zero_mem_ringOfIntegers_lt","doc":"Assume that `f : InfinitePlace K ‚Üí ‚Ñù‚â•0` is such that\n`minkowskiBound K < volume (convexBodyLT K f)` where `convexBodyLT K f` is the set of\npoints `x` such that `‚Äñx w‚Äñ < f w` for all infinite places `w` (see `convexBodyLT_volume` for\nthe computation of this volume), then there exists a nonzero algebraic integer `a` in `ùìû K` such\nthat `w a < f w` for all infinite places `w`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.exists_ne_zero_mem_ringOfIntegers_lt\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">exists_ne_zero_mem_ringOfIntegers_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> ‚Üí <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.minkowskiBound\">NumberField.mixedEmbedding.minkowskiBound</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">‚Üë<span class=\"fn\">‚Üë<span class=\"fn\">MeasureTheory.volume</span></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT\">NumberField.mixedEmbedding.convexBodyLT</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ (a : <span class=\"fn\">‚Ü•<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">‚â†</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <span class=\"fn\">‚Üë<span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">‚Üë<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">w</span></span>)</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L751-L754","name":"NumberField.mixedEmbedding.minkowskiBound_pos","line":751,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.minkowskiBound_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.minkowskiBound_pos\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">minkowskiBound_pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.minkowskiBound\">NumberField.mixedEmbedding.minkowskiBound</a> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L746-L749","name":"NumberField.mixedEmbedding.minkowskiBound_lt_top","line":746,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.minkowskiBound_lt_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.minkowskiBound_lt_top\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">minkowskiBound_lt_top</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.minkowskiBound\">NumberField.mixedEmbedding.minkowskiBound</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">‚ä§</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L743-L744","name":"NumberField.mixedEmbedding.minkowskiBound","line":743,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.minkowskiBound","doc":"The bound that appears in **Minkowski Convex Body theorem**, see\n`MeasureTheory.exists_ne_zero_mem_lattice_of_measure_mul_two_pow_lt_measure`. See\n`NumberField.mixedEmbedding.volume_fundamentalDomain_latticeBasis` for the computation of\n`volume (fundamentalDomain (latticeBasis K))`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.minkowskiBound\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">minkowskiBound</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L677-L727","name":"NumberField.mixedEmbedding.convexBodySum_volume","line":677,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum_volume","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum_volume\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySum_volume</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">‚Üë<span class=\"fn\">MeasureTheory.volume</span></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum\">NumberField.mixedEmbedding.convexBodySum</a> <span class=\"fn\">K</span> <span class=\"fn\">B</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFactor\">NumberField.mixedEmbedding.convexBodySumFactor</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.ofReal\">ENNReal.ofReal</a> <span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#FiniteDimensional.finrank\">FiniteDimensional.finrank</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">‚Ñö</a> <span class=\"fn\">K</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L670-L674","name":"NumberField.mixedEmbedding.convexBodySumFactor_ne_top","line":670,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFactor_ne_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFactor_ne_top\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySumFactor_ne_top</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFactor\">NumberField.mixedEmbedding.convexBodySumFactor</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Core.html#Ne\">‚â†</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">‚ä§</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L663-L668","name":"NumberField.mixedEmbedding.convexBodySumFactor_ne_zero","line":663,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFactor_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFactor_ne_zero\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySumFactor_ne_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFactor\">NumberField.mixedEmbedding.convexBodySumFactor</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Core.html#Ne\">‚â†</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L660-L661","name":"NumberField.mixedEmbedding.convexBodySumFactor","line":660,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFactor","doc":"The fudge factor that appears in the formula for the volume of `convexBodyLt`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFactor\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySumFactor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L652-L657","name":"NumberField.mixedEmbedding.convexBodySum_compact","line":652,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum_compact","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum_compact\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySum_compact</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Compactness/Compact.html#IsCompact\">IsCompact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum\">NumberField.mixedEmbedding.convexBodySum</a> <span class=\"fn\">K</span> <span class=\"fn\">B</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L646-L650","name":"NumberField.mixedEmbedding.convexBodySum_isBounded","line":646,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum_isBounded","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum_isBounded\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySum_isBounded</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Bornology/Basic.html#Bornology.IsBounded\">Bornology.IsBounded</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum\">NumberField.mixedEmbedding.convexBodySum</a> <span class=\"fn\">K</span> <span class=\"fn\">B</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L641-L644","name":"NumberField.mixedEmbedding.convexBodySum_convex","line":641,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum_convex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum_convex\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySum_convex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Convex/Basic.html#Convex\">Convex</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum\">NumberField.mixedEmbedding.convexBodySum</a> <span class=\"fn\">K</span> <span class=\"fn\">B</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L636-L639","name":"NumberField.mixedEmbedding.convexBodySum_symmetric","line":636,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum_symmetric","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum_symmetric\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySum_symmetric</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum\">NumberField.mixedEmbedding.convexBodySum</a> <span class=\"fn\">K</span> <span class=\"fn\">B</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum\">NumberField.mixedEmbedding.convexBodySum</a> <span class=\"fn\">K</span> <span class=\"fn\">B</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L627-L634","name":"NumberField.mixedEmbedding.convexBodySum_mem","line":627,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum_mem\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySum_mem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding\">NumberField.mixedEmbedding</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum\">NumberField.mixedEmbedding.convexBodySum</a> <span class=\"fn\">K</span> <span class=\"fn\">B</span></span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">Finset.univ</span> <span class=\"fn\">fun (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.mult\">NumberField.InfinitePlace.mult</a> <span class=\"fn\">w</span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">w</span></span> <span class=\"fn\">x</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">B</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L614-L625","name":"NumberField.mixedEmbedding.convexBodySum_volume_eq_zero_of_le_zero","line":614,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum_volume_eq_zero_of_le_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum_volume_eq_zero_of_le_zero\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySum_volume_eq_zero_of_le_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hB : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">‚Üë<span class=\"fn\">MeasureTheory.volume</span></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum\">NumberField.mixedEmbedding.convexBodySum</a> <span class=\"fn\">K</span> <span class=\"fn\">B</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L612-L612","name":"NumberField.mixedEmbedding.convexBodySum","line":612,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum","doc":"The convex body equal to the set of points `x : E` such that\n`‚àë w real, ‚Äñx w‚Äñ + 2 * ‚àë w complex, ‚Äñx w‚Äñ ‚â§ B`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySum</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a>     <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L601-L608","name":"NumberField.mixedEmbedding.convexBodySumFun_continuous","line":601,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun_continuous","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun_continuous\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySumFun_continuous</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">NumberField.mixedEmbedding.convexBodySumFun</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L585-L597","name":"NumberField.mixedEmbedding.norm_le_convexBodySumFun","line":585,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.norm_le_convexBodySumFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.norm_le_convexBodySumFun\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">norm_le_convexBodySumFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun\">NumberField.mixedEmbedding.convexBodySumFun</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L571-L583","name":"NumberField.mixedEmbedding.convexBodySumFun_eq_zero_iff","line":571,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun_eq_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun_eq_zero_iff\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySumFun_eq_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun\">NumberField.mixedEmbedding.convexBodySumFun</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L565-L569","name":"NumberField.mixedEmbedding.convexBodySumFun_smul","line":565,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun_smul\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySumFun_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun\">NumberField.mixedEmbedding.convexBodySumFun</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">|<span class=\"fn\">c</span>|</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun\">NumberField.mixedEmbedding.convexBodySumFun</a> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L555-L563","name":"NumberField.mixedEmbedding.convexBodySumFun_add_le","line":555,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun_add_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun_add_le\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySumFun_add_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun\">NumberField.mixedEmbedding.convexBodySumFun</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun\">NumberField.mixedEmbedding.convexBodySumFun</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun\">NumberField.mixedEmbedding.convexBodySumFun</a> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L551-L553","name":"NumberField.mixedEmbedding.convexBodySumFun_neg","line":551,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun_neg\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySumFun_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun\">NumberField.mixedEmbedding.convexBodySumFun</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun\">NumberField.mixedEmbedding.convexBodySumFun</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L545-L549","name":"NumberField.mixedEmbedding.convexBodySumFun_nonneg","line":545,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun_nonneg\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySumFun_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun\">NumberField.mixedEmbedding.convexBodySumFun</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L543-L543","name":"NumberField.mixedEmbedding.convexBodySumFun","line":543,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun","doc":"The function that sends `x : ({w // IsReal w} ‚Üí ‚Ñù) √ó ({w // IsComplex w} ‚Üí ‚ÑÇ)` to\n`‚àë w, ‚Äñx.1 w‚Äñ + 2 * ‚àë w, ‚Äñx.2 w‚Äñ`. It defines a norm and it used to define `convexBodySum`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySumFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L516-L527","name":"NumberField.mixedEmbedding.adjust_f","line":516,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.adjust_f","doc":"This is a technical result: quite often, we want to impose conditions at all infinite places\nbut one and choose the value at the remaining place so that we can apply\n`exists_ne_zero_mem_ringOfIntegers_lt`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.adjust_f\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">adjust_f</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> ‚Üí <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w‚ÇÅ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">‚àÄ (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Core.html#Ne\">‚â†</a> <span class=\"fn\">w‚ÇÅ</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">w</span></span> <a href=\"./Init/Core.html#Ne\">‚â†</a> <span class=\"fn\">0</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ (g : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> ‚Üí <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>),\n  <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">‚àÄ (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Core.html#Ne\">‚â†</a> <span class=\"fn\">w‚ÇÅ</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">w</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">w</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">‚àß</a>     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">Finset.univ</span> <span class=\"fn\">fun (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">w</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.mult\">NumberField.InfinitePlace.mult</a> <span class=\"fn\">w</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">B</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L490-L509","name":"NumberField.mixedEmbedding.convexBodyLT_volume","line":490,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT_volume","doc":"The volume of `(ConvexBodyLt K f)` where `convexBodyLT K f` is the set of points `x`\nsuch that `‚Äñx w‚Äñ < f w` for all infinite places `w`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT_volume\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLT_volume</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> ‚Üí <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">‚Üë<span class=\"fn\">MeasureTheory.volume</span></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT\">NumberField.mixedEmbedding.convexBodyLT</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLTFactor\">NumberField.mixedEmbedding.convexBodyLTFactor</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a>     <span class=\"fn\">‚Üë<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">Finset.univ</span> <span class=\"fn\">fun (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">w</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.mult\">NumberField.InfinitePlace.mult</a> <span class=\"fn\">w</span></span></span></span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L483-L486","name":"NumberField.mixedEmbedding.convexBodyLTFactor_lt_top","line":483,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLTFactor_lt_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLTFactor_lt_top\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLTFactor_lt_top</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLTFactor\">NumberField.mixedEmbedding.convexBodyLTFactor</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">‚ä§</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L479-L481","name":"NumberField.mixedEmbedding.convexBodyLTFactor_pos","line":479,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLTFactor_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLTFactor_pos\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLTFactor_pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLTFactor\">NumberField.mixedEmbedding.convexBodyLTFactor</a> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L476-L477","name":"NumberField.mixedEmbedding.convexBodyLTFactor","line":476,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLTFactor","doc":"The fudge factor that appears in the formula for the volume of `convexBodyLT`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLTFactor\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLTFactor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L468-L473","name":"NumberField.mixedEmbedding.instNoAtomsProdForAllSubtypeInfinitePlaceIsRealRealForAllIsComplexComplexToMeasurableSpaceMeasureSpacePiFintypePropDecidableFintypeMeasureSpaceMeasureSpaceOfInnerProductSpaceInstNormedAddCommGroupComplexComplexToRealInnerProductSpaceInstIsROrCComplexInstFiniteDimensionalRealComplexInstDivisionRingRealAddCommGroupInstModuleToSemiringToDivisionSemiringToModuleMeasurableSpaceBorelSpaceVolume","line":468,"kind":"instance","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.instNoAtomsProdForAllSubtypeInfinitePlaceIsRealRealForAllIsComplexComplexToMeasurableSpaceMeasureSpacePiFintypePropDecidableFintypeMeasureSpaceMeasureSpaceOfInnerProductSpaceInstNormedAddCommGroupComplexComplexToRealInnerProductSpaceInstIsROrCComplexInstFiniteDimensionalRealComplexInstDivisionRingRealAddCommGroupInstModuleToSemiringToDivisionSemiringToModuleMeasurableSpaceBorelSpaceVolume","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.instNoAtomsProdForAllSubtypeInfinitePlaceIsRealRealForAllIsComplexComplexToMeasurableSpaceMeasureSpacePiFintypePropDecidableFintypeMeasureSpaceMeasureSpaceOfInnerProductSpaceInstNormedAddCommGroupComplexComplexToRealInnerProductSpaceInstIsROrCComplexInstFiniteDimensionalRealComplexInstDivisionRingRealAddCommGroupInstModuleToSemiringToDivisionSemiringToModuleMeasurableSpaceBorelSpaceVolume\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">instNoAtomsProdForAllSubtypeInfinitePlaceIsRealRealForAllIsComplexComplexToMeasurableSpaceMeasureSpacePiFintypePropDecidableFintypeMeasureSpaceMeasureSpaceOfInnerProductSpaceInstNormedAddCommGroupComplexComplexToRealInnerProductSpaceInstIsROrCComplexInstFiniteDimensionalRealComplexInstDivisionRingRealAddCommGroupInstModuleToSemiringToDivisionSemiringToModuleMeasurableSpaceBorelSpaceVolume</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.NoAtoms\">MeasureTheory.NoAtoms</a> <span class=\"fn\">MeasureTheory.volume</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L466-L466","name":"NumberField.mixedEmbedding.instIsAddHaarMeasureProdForAllSubtypeInfinitePlaceIsRealRealForAllIsComplexComplexInstAddGroupAddGroupInstAddGroupRealToAddGroupToNormedAddGroupInstNormedAddCommGroupComplexInstTopologicalSpaceProdTopologicalSpaceToTopologicalSpaceToUniformSpacePseudoMetricSpaceToPseudoMetricSpaceToSeminormedRingToSeminormedCommRingToNormedCommRingInstNormedFieldComplexToMeasurableSpaceMeasureSpacePiFintypePropDecidableFintypeMeasureSpaceMeasureSpaceOfInnerProductSpaceComplexToRealInnerProductSpaceInstIsROrCComplexInstFiniteDimensionalRealComplexInstDivisionRingRealAddCommGroupInstModuleToSemiringToDivisionSemiringToModuleMeasurableSpaceBorelSpaceVolume","line":466,"kind":"instance","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.instIsAddHaarMeasureProdForAllSubtypeInfinitePlaceIsRealRealForAllIsComplexComplexInstAddGroupAddGroupInstAddGroupRealToAddGroupToNormedAddGroupInstNormedAddCommGroupComplexInstTopologicalSpaceProdTopologicalSpaceToTopologicalSpaceToUniformSpacePseudoMetricSpaceToPseudoMetricSpaceToSeminormedRingToSeminormedCommRingToNormedCommRingInstNormedFieldComplexToMeasurableSpaceMeasureSpacePiFintypePropDecidableFintypeMeasureSpaceMeasureSpaceOfInnerProductSpaceComplexToRealInnerProductSpaceInstIsROrCComplexInstFiniteDimensionalRealComplexInstDivisionRingRealAddCommGroupInstModuleToSemiringToDivisionSemiringToModuleMeasurableSpaceBorelSpaceVolume","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.instIsAddHaarMeasureProdForAllSubtypeInfinitePlaceIsRealRealForAllIsComplexComplexInstAddGroupAddGroupInstAddGroupRealToAddGroupToNormedAddGroupInstNormedAddCommGroupComplexInstTopologicalSpaceProdTopologicalSpaceToTopologicalSpaceToUniformSpacePseudoMetricSpaceToPseudoMetricSpaceToSeminormedRingToSeminormedCommRingToNormedCommRingInstNormedFieldComplexToMeasurableSpaceMeasureSpacePiFintypePropDecidableFintypeMeasureSpaceMeasureSpaceOfInnerProductSpaceComplexToRealInnerProductSpaceInstIsROrCComplexInstFiniteDimensionalRealComplexInstDivisionRingRealAddCommGroupInstModuleToSemiringToDivisionSemiringToModuleMeasurableSpaceBorelSpaceVolume\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">instIsAddHaarMeasureProdForAllSubtypeInfinitePlaceIsRealRealForAllIsComplexComplexInstAddGroupAddGroupInstAddGroupRealToAddGroupToNormedAddGroupInstNormedAddCommGroupComplexInstTopologicalSpaceProdTopologicalSpaceToTopologicalSpaceToUniformSpacePseudoMetricSpaceToPseudoMetricSpaceToSeminormedRingToSeminormedCommRingToNormedCommRingInstNormedFieldComplexToMeasurableSpaceMeasureSpacePiFintypePropDecidableFintypeMeasureSpaceMeasureSpaceOfInnerProductSpaceComplexToRealInnerProductSpaceInstIsROrCComplexInstFiniteDimensionalRealComplexInstDivisionRingRealAddCommGroupInstModuleToSemiringToDivisionSemiringToModuleMeasurableSpaceBorelSpaceVolume</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Group/Measure.html#MeasureTheory.Measure.IsAddHaarMeasure\">MeasureTheory.Measure.IsAddHaarMeasure</a> <span class=\"fn\">MeasureTheory.volume</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L459-L460","name":"NumberField.mixedEmbedding.convexBodyLT_convex","line":459,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT_convex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT_convex\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLT_convex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> ‚Üí <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Convex/Basic.html#Convex\">Convex</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT\">NumberField.mixedEmbedding.convexBodyLT</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L452-L457","name":"NumberField.mixedEmbedding.convexBodyLT_symmetric","line":452,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT_symmetric","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT_symmetric\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLT_symmetric</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> ‚Üí <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT\">NumberField.mixedEmbedding.convexBodyLT</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT\">NumberField.mixedEmbedding.convexBodyLT</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L445-L450","name":"NumberField.mixedEmbedding.convexBodyLT_mem","line":445,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT_mem\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLT_mem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> ‚Üí <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding\">NumberField.mixedEmbedding</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT\">NumberField.mixedEmbedding.convexBodyLT</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span></span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a>   <span class=\"fn\">‚àÄ (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">‚Üë<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">w</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L441-L443","name":"NumberField.mixedEmbedding.convexBodyLT","line":441,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT","doc":"The convex body defined by `f`: the set of points `x : E` such that `‚Äñx w‚Äñ < f w` for all\ninfinite places `w`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLT</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> ‚Üí <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a>     <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L421-L429","name":"NumberField.mixedEmbedding.mem_span_latticeBasis","line":421,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.mem_span_latticeBasis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.mem_span_latticeBasis\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">mem_span_latticeBasis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Span.html#Submodule.span\">Submodule.span</a> <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">‚áë<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.latticeBasis\">NumberField.mixedEmbedding.latticeBasis</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span></span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a>   <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">‚áë<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding\">NumberField.mixedEmbedding</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">‚Üë<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L416-L419","name":"NumberField.mixedEmbedding.latticeBasis_apply","line":416,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.latticeBasis_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.latticeBasis_apply\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">latticeBasis_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FreeModule/Basic.html#Module.Free.ChooseBasisIndex\">Module.Free.ChooseBasisIndex</a> <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a> <span class=\"fn\">‚Ü•<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.latticeBasis\">NumberField.mixedEmbedding.latticeBasis</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding\">NumberField.mixedEmbedding</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.integralBasis\">NumberField.integralBasis</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">i</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L398-L413","name":"NumberField.mixedEmbedding.latticeBasis","line":398,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.latticeBasis","doc":"A `‚Ñù`-basis of `‚Ñù^r‚ÇÅ √ó ‚ÑÇ^r‚ÇÇ` that is also a `‚Ñ§`-basis of the image of `ùìû K`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.latticeBasis\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">latticeBasis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis.html#Basis\">Basis</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FreeModule/Basic.html#Module.Free.ChooseBasisIndex\">Module.Free.ChooseBasisIndex</a> <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a> <span class=\"fn\">‚Ü•<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a>     <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L357-L389","name":"NumberField.mixedEmbedding.stdBasis_repr_eq_matrixToStdBasis_mul","line":357,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.stdBasis_repr_eq_matrixToStdBasis_mul","doc":"Let `x : (K ‚Üí+* ‚ÑÇ) ‚Üí ‚ÑÇ` such that `x_œÜ = conj x_(conj œÜ)` for all `œÜ : K ‚Üí+* ‚ÑÇ`, then the\nrepresentation of `commMap K x` on `stdBasis` is given (up to reindexing) by the product of\n`matrixToStdBasis` by `x`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.stdBasis_repr_eq_matrixToStdBasis_mul\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">stdBasis_repr_eq_matrixToStdBasis_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">‚Üí+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span> ‚Üí <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\">‚àÄ (<span class=\"fn\">œÜ</span> : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">‚Üí+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">œÜ</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.ComplexEmbedding.conjugate\">NumberField.ComplexEmbedding.conjugate</a> <span class=\"fn\">œÜ</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.index\">NumberField.mixedEmbedding.index</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.stdBasis\">NumberField.mixedEmbedding.stdBasis</a> <span class=\"fn\">K</span></span>)</span>.repr</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.commMap\">NumberField.mixedEmbedding.commMap</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span>)</span> <span class=\"fn\">c</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Basic.html#Matrix.mulVec\">Matrix.mulVec</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.matrixToStdBasis\">NumberField.mixedEmbedding.matrixToStdBasis</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">‚áë<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.indexEquiv\">NumberField.mixedEmbedding.indexEquiv</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L342-L352","name":"NumberField.mixedEmbedding.det_matrixToStdBasis","line":342,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.det_matrixToStdBasis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.det_matrixToStdBasis\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">det_matrixToStdBasis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/Determinant.html#Matrix.det\">Matrix.det</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.matrixToStdBasis\">NumberField.mixedEmbedding.matrixToStdBasis</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">‚Åª¬π</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a></span>)</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.NrComplexPlaces\">NumberField.InfinitePlace.NrComplexPlaces</a> <span class=\"fn\">K</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L338-L340","name":"NumberField.mixedEmbedding.matrixToStdBasis","line":338,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.matrixToStdBasis","doc":"The matrix that gives the representation on `stdBasis` of the image by `commMap` of an\nelement `x` of `(K ‚Üí+* ‚ÑÇ) ‚Üí ‚ÑÇ` fixed by the map `x_œÜ ‚Ü¶ conj x_(conjugate œÜ)`,\nsee `stdBasis_repr_eq_matrixToStdBasis_mul`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.matrixToStdBasis\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">matrixToStdBasis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Basic.html#Matrix\">Matrix</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.index\">NumberField.mixedEmbedding.index</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.index\">NumberField.mixedEmbedding.index</a> <span class=\"fn\">K</span></span>)</span> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L330-L331","name":"NumberField.mixedEmbedding.indexEquiv_apply_ofIsComplex_snd","line":330,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.indexEquiv_apply_ofIsComplex_snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.indexEquiv_apply_ofIsComplex_snd\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">indexEquiv_apply_ofIsComplex_snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.indexEquiv\">NumberField.mixedEmbedding.indexEquiv</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">(<span class=\"fn\">w</span>, <span class=\"fn\">1</span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.ComplexEmbedding.conjugate\">NumberField.ComplexEmbedding.conjugate</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.embedding\">NumberField.InfinitePlace.embedding</a> <span class=\"fn\">‚Üë<span class=\"fn\">w</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L326-L327","name":"NumberField.mixedEmbedding.indexEquiv_apply_ofIsComplex_fst","line":326,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.indexEquiv_apply_ofIsComplex_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.indexEquiv_apply_ofIsComplex_fst\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">indexEquiv_apply_ofIsComplex_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.indexEquiv\">NumberField.mixedEmbedding.indexEquiv</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">(<span class=\"fn\">w</span>, <span class=\"fn\">0</span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.embedding\">NumberField.InfinitePlace.embedding</a> <span class=\"fn\">‚Üë<span class=\"fn\">w</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L322-L323","name":"NumberField.mixedEmbedding.indexEquiv_apply_ofIsReal","line":322,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.indexEquiv_apply_ofIsReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.indexEquiv_apply_ofIsReal\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">indexEquiv_apply_ofIsReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.indexEquiv\">NumberField.mixedEmbedding.indexEquiv</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">w</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.embedding\">NumberField.InfinitePlace.embedding</a> <span class=\"fn\">‚Üë<span class=\"fn\">w</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L302-L317","name":"NumberField.mixedEmbedding.indexEquiv","line":302,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.indexEquiv","doc":"The `Equiv` between `index K` and `K ‚Üí+* ‚ÑÇ` defined by sending a real infinite place `w` to\nthe unique corresponding embedding `w.embedding`, and the pair `‚ü®w, 0‚ü©` (resp. `‚ü®w, 1‚ü©`) for a\ncomplex infinite place `w` to `w.embedding` (resp. `conjugate w.embedding`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.indexEquiv\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">indexEquiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.index\">NumberField.mixedEmbedding.index</a> <span class=\"fn\">K</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">‚âÉ</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">‚Üí+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L291-L297","name":"NumberField.mixedEmbedding.volume_fundamentalDomain_stdBasis","line":291,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.volume_fundamentalDomain_stdBasis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.volume_fundamentalDomain_stdBasis\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">volume_fundamentalDomain_stdBasis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">‚Üë<span class=\"fn\">MeasureTheory.volume</span></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Zlattice.html#Zspan.fundamentalDomain\">Zspan.fundamentalDomain</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.stdBasis\">NumberField.mixedEmbedding.stdBasis</a> <span class=\"fn\">K</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L284-L289","name":"NumberField.mixedEmbedding.fundamentalDomain_stdBasis","line":284,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.fundamentalDomain_stdBasis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.fundamentalDomain_stdBasis\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">fundamentalDomain_stdBasis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Zlattice.html#Zspan.fundamentalDomain\">Zspan.fundamentalDomain</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.stdBasis\">NumberField.mixedEmbedding.stdBasis</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.pi\">Set.pi</a> <span class=\"fn\">Set.univ</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span>) =&gt;\n      <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Ico\">Set.Ico</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span>)</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">√óÀ¢</a>     <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.pi\">Set.pi</a> <span class=\"fn\">Set.univ</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span>) =&gt;\n      <span class=\"fn\"><span class=\"fn\">‚áë<a href=\"./Mathlib/MeasureTheory/Measure/Lebesgue/Complex.html#Complex.measurableEquivPi\">Complex.measurableEquivPi</a></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">‚Åª¬π'</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.pi\">Set.pi</a> <span class=\"fn\">Set.univ</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Ico\">Set.Ico</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L279-L280","name":"NumberField.mixedEmbedding.stdBasis_apply_ofIsComplex_snd","line":279,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.stdBasis_apply_ofIsComplex_snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.stdBasis_apply_ofIsComplex_snd\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">stdBasis_apply_ofIsComplex_snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.stdBasis\">NumberField.mixedEmbedding.stdBasis</a> <span class=\"fn\">K</span></span>)</span>.repr</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">(<span class=\"fn\">w</span>, <span class=\"fn\">1</span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.2 <span class=\"fn\">w</span></span>)</span>.im</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L275-L276","name":"NumberField.mixedEmbedding.stdBasis_apply_ofIsComplex_fst","line":275,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.stdBasis_apply_ofIsComplex_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.stdBasis_apply_ofIsComplex_fst\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">stdBasis_apply_ofIsComplex_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.stdBasis\">NumberField.mixedEmbedding.stdBasis</a> <span class=\"fn\">K</span></span>)</span>.repr</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">(<span class=\"fn\">w</span>, <span class=\"fn\">0</span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.2 <span class=\"fn\">w</span></span>)</span>.re</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L271-L272","name":"NumberField.mixedEmbedding.stdBasis_apply_ofIsReal","line":271,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.stdBasis_apply_ofIsReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.stdBasis_apply_ofIsReal\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">stdBasis_apply_ofIsReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.stdBasis\">NumberField.mixedEmbedding.stdBasis</a> <span class=\"fn\">K</span></span>)</span>.repr</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">w</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.1 <span class=\"fn\">w</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L264-L266","name":"NumberField.mixedEmbedding.stdBasis","line":264,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.stdBasis","doc":"The `‚Ñù`-basis of `({w // IsReal w} ‚Üí ‚Ñù) √ó ({ w // IsComplex w } ‚Üí ‚ÑÇ)` formed by the vector\nequal to `1` at `w` and `0` elsewhere for `IsReal w` and by the couple of vectors equal to `1`\n(resp. `I`) at `w` and `0` elsewhere for `IsComplex w`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.stdBasis\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">stdBasis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis.html#Basis\">Basis</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.index\">NumberField.mixedEmbedding.index</a> <span class=\"fn\">K</span></span>)</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a>     <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L259-L259","name":"NumberField.mixedEmbedding.index","line":259,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.index","doc":"The type indexing the basis `stdBasis`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.index\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">index</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L225-L247","name":"NumberField.mixedEmbedding.disjoint_span_commMap_ker","line":225,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.disjoint_span_commMap_ker","doc":"This is a technical result to ensure that the image of the `‚ÑÇ`-basis of `‚ÑÇ^n` defined in\n`canonicalEmbedding.latticeBasis` is a `‚Ñù`-basis of `‚Ñù^r‚ÇÅ √ó ‚ÑÇ^r‚ÇÇ`,\nsee `mixedEmbedding.latticeBasis`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.disjoint_span_commMap_ker\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">disjoint_span_commMap_ker</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Span.html#Submodule.span\">Submodule.span</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">‚áë<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.latticeBasis\">NumberField.canonicalEmbedding.latticeBasis</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basic.html#LinearMap.ker\">LinearMap.ker</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.commMap\">NumberField.mixedEmbedding.commMap</a> <span class=\"fn\">K</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L216-L220","name":"NumberField.mixedEmbedding.commMap_canonical_eq_mixed","line":216,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.commMap_canonical_eq_mixed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.commMap_canonical_eq_mixed\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">commMap_canonical_eq_mixed</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.commMap\">NumberField.mixedEmbedding.commMap</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding\">NumberField.canonicalEmbedding</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding\">NumberField.mixedEmbedding</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L212-L213","name":"NumberField.mixedEmbedding.commMap_apply_of_isComplex","line":212,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.commMap_apply_of_isComplex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.commMap_apply_of_isComplex\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">commMap_apply_of_isComplex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">‚Üí+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span> ‚Üí <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hw : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.commMap\">NumberField.mixedEmbedding.commMap</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">x</span></span>)</span>.2 <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">w</span>, <span class=\"fn\">property</span> := <span class=\"fn\">hw</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.embedding\">NumberField.InfinitePlace.embedding</a> <span class=\"fn\">w</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L209-L210","name":"NumberField.mixedEmbedding.commMap_apply_of_isReal","line":209,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.commMap_apply_of_isReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.commMap_apply_of_isReal\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">commMap_apply_of_isReal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">‚Üí+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span> ‚Üí <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hw : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.commMap\">NumberField.mixedEmbedding.commMap</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">x</span></span>)</span>.1 <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">w</span>, <span class=\"fn\">property</span> := <span class=\"fn\">hw</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.embedding\">NumberField.InfinitePlace.embedding</a> <span class=\"fn\">w</span></span>)</span></span>)</span>.re</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L199-L207","name":"NumberField.mixedEmbedding.commMap","line":199,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.commMap","doc":"The linear map that makes `canonicalEmbedding` and `mixedEmbedding` commute, see\n`commMap_canonical_eq_mixed`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.commMap\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">commMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">‚Üí+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span> ‚Üí <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span> <a href=\"./Mathlib/Algebra/Module/LinearMap.html#LinearMap\">‚Üí‚Çó[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a><a href=\"./Mathlib/Algebra/Module/LinearMap.html#LinearMap\">]</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a>     <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L191-L193","name":"NumberField.mixedEmbedding_injective","line":191,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding_injective\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding_injective</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">‚áë<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding\">NumberField.mixedEmbedding</a> <span class=\"fn\">K</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L184-L189","name":"NumberField.mixedEmbedding.finrank","line":184,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.finrank","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.finrank\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">finrank</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#FiniteDimensional.finrank\">FiniteDimensional.finrank</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a>       <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#FiniteDimensional.finrank\">FiniteDimensional.finrank</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">‚Ñö</a> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L176-L182","name":"NumberField.mixedEmbedding.instNontrivialProdForAllSubtypeInfinitePlaceIsRealRealForAllIsComplexComplex","line":176,"kind":"instance","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.instNontrivialProdForAllSubtypeInfinitePlaceIsRealRealForAllIsComplexComplex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.instNontrivialProdForAllSubtypeInfinitePlaceIsRealRealForAllIsComplexComplex\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">instNontrivialProdForAllSubtypeInfinitePlaceIsRealRealForAllIsComplexComplex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a>     <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L172-L174","name":"NumberField.mixedEmbedding","line":172,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding","doc":"The mixed embedding of a number field `K` of signature `(r‚ÇÅ, r‚ÇÇ)` into `‚Ñù^r‚ÇÅ √ó ‚ÑÇ^r‚ÇÇ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">‚Üí+*</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a>     <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> ‚Üí <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L151-L159","name":"NumberField.canonicalEmbedding.mem_span_latticeBasis","line":151,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.mem_span_latticeBasis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.mem_span_latticeBasis\"><span class=\"name\">NumberField</span>.<span class=\"name\">canonicalEmbedding</span>.<span class=\"name\">mem_span_latticeBasis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">‚Üí+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span> ‚Üí <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Span.html#Submodule.span\">Submodule.span</a> <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">‚áë<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.latticeBasis\">NumberField.canonicalEmbedding.latticeBasis</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span></span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a>   <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">‚áë<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding\">NumberField.canonicalEmbedding</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">‚Üë<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L146-L149","name":"NumberField.canonicalEmbedding.latticeBasis_apply","line":146,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.latticeBasis_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.latticeBasis_apply\"><span class=\"name\">NumberField</span>.<span class=\"name\">canonicalEmbedding</span>.<span class=\"name\">latticeBasis_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FreeModule/Basic.html#Module.Free.ChooseBasisIndex\">Module.Free.ChooseBasisIndex</a> <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a> <span class=\"fn\">‚Ü•<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.latticeBasis\">NumberField.canonicalEmbedding.latticeBasis</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding\">NumberField.canonicalEmbedding</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.integralBasis\">NumberField.integralBasis</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">i</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L117-L143","name":"NumberField.canonicalEmbedding.latticeBasis","line":117,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.latticeBasis","doc":"A `‚ÑÇ`-basis of `‚ÑÇ^n` that is also a `‚Ñ§`-basis of the `integerLattice`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.latticeBasis\"><span class=\"name\">NumberField</span>.<span class=\"name\">canonicalEmbedding</span>.<span class=\"name\">latticeBasis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis.html#Basis\">Basis</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FreeModule/Basic.html#Module.Free.ChooseBasisIndex\">Module.Free.ChooseBasisIndex</a> <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a> <span class=\"fn\">‚Ü•<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">‚Üí+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span> ‚Üí <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L100-L112","name":"NumberField.canonicalEmbedding.integerLattice.inter_ball_finite","line":100,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.integerLattice.inter_ball_finite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.integerLattice.inter_ball_finite\"><span class=\"name\">NumberField</span>.<span class=\"name\">canonicalEmbedding</span>.<span class=\"name\">integerLattice</span>.<span class=\"name\">inter_ball_finite</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Finite.html#Set.Finite\">Set.Finite</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.integerLattice\">NumberField.canonicalEmbedding.integerLattice</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">‚à©</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">r</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L97-L98","name":"NumberField.canonicalEmbedding.integerLattice","line":97,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.integerLattice","doc":"The image of `ùìû K` as a subring of `‚ÑÇ^n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.integerLattice\"><span class=\"name\">NumberField</span>.<span class=\"name\">canonicalEmbedding</span>.<span class=\"name\">integerLattice</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Subring/Basic.html#Subring\">Subring</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">‚Üí+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span> ‚Üí <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L83-L92","name":"NumberField.canonicalEmbedding.norm_le_iff","line":83,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.norm_le_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.norm_le_iff\"><span class=\"name\">NumberField</span>.<span class=\"name\">canonicalEmbedding</span>.<span class=\"name\">norm_le_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding\">NumberField.canonicalEmbedding</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">œÜ</span> : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">‚Üí+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a><span class=\"fn\"><span class=\"fn\">œÜ</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">r</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L79-L81","name":"NumberField.canonicalEmbedding.nnnorm_eq","line":79,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.nnnorm_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.nnnorm_eq\"><span class=\"name\">NumberField</span>.<span class=\"name\">canonicalEmbedding</span>.<span class=\"name\">nnnorm_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‚Äñ</a><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding\">NumberField.canonicalEmbedding</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‚Äñ‚Çä</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Lattice.html#Finset.sup\">Finset.sup</a> <span class=\"fn\">Finset.univ</span> <span class=\"fn\">fun (<span class=\"fn\">œÜ</span> : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">‚Üí+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‚Äñ</a><span class=\"fn\"><span class=\"fn\">œÜ</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‚Äñ‚Çä</a></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L68-L77","name":"NumberField.canonicalEmbedding.conj_apply","line":68,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.conj_apply","doc":"The image of `canonicalEmbedding` lives in the `‚Ñù`-submodule of the `x ‚àà ((K ‚Üí+* ‚ÑÇ) ‚Üí ‚ÑÇ)` such\nthat `conj x_œÜ = x_(conj œÜ)` for all `‚àÄ œÜ : K ‚Üí+* ‚ÑÇ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.conj_apply\"><span class=\"name\">NumberField</span>.<span class=\"name\">canonicalEmbedding</span>.<span class=\"name\">conj_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">‚Üí+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span> ‚Üí <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(œÜ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">‚Üí+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Span.html#Submodule.span\">Submodule.span</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">‚áë<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding\">NumberField.canonicalEmbedding</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">œÜ</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.ComplexEmbedding.conjugate\">NumberField.ComplexEmbedding.conjugate</a> <span class=\"fn\">œÜ</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L62-L62","name":"NumberField.canonicalEmbedding.apply_at","line":62,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.apply_at","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.apply_at\"><span class=\"name\">NumberField</span>.<span class=\"name\">canonicalEmbedding</span>.<span class=\"name\">apply_at</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(œÜ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">‚Üí+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding\">NumberField.canonicalEmbedding</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">œÜ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">œÜ</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L56-L57","name":"NumberField.canonicalEmbedding_injective","line":56,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding_injective\"><span class=\"name\">NumberField</span>.<span class=\"name\">canonicalEmbedding_injective</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">‚áë<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding\">NumberField.canonicalEmbedding</a> <span class=\"fn\">K</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L54-L54","name":"NumberField.canonicalEmbedding","line":54,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding","doc":"The canonical embedding of a number field `K` of degree `n` into `‚ÑÇ^n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding\"><span class=\"name\">NumberField</span>.<span class=\"name\">canonicalEmbedding</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">‚Üí+*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">‚Üí+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span>)</span> ‚Üí <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">‚ÑÇ</a></span></span></div></div>"}]}