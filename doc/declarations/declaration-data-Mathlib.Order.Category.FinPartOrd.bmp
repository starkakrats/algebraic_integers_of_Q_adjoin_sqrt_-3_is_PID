{"name":"Mathlib.Order.Category.FinPartOrd","instances":[{"typeNames":["FinPartOrd","_builtin_typeu"],"name":"FinPartOrd.instCoeSortFinPartOrdType","className":"CoeSort"},{"typeNames":["CategoryTheory.Bundled.α"],"name":"FinPartOrd.instPartialOrderαToPartOrd","className":"PartialOrder"},{"typeNames":["FinPartOrd"],"name":"FinPartOrd.instInhabitedFinPartOrd","className":"Inhabited"},{"typeNames":["FinPartOrd"],"name":"FinPartOrd.largeCategory","className":"CategoryTheory.Category"},{"typeNames":["FinPartOrd"],"name":"FinPartOrd.concreteCategory","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["FinPartOrd","PartOrd"],"name":"FinPartOrd.hasForgetToPartOrd","className":"CategoryTheory.HasForget₂"},{"typeNames":["FinPartOrd","FintypeCat"],"name":"FinPartOrd.hasForgetToFintype","className":"CategoryTheory.HasForget₂"}],"imports":["Init","Mathlib.CategoryTheory.FintypeCat","Mathlib.Order.Category.PartOrd"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinPartOrd.lean#L111-L113","name":"FinPartOrd_dual_comp_forget_to_partOrd","line":111,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd_dual_comp_forget_to_partOrd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd_dual_comp_forget_to_partOrd\"><span class=\"name\">FinPartOrd_dual_comp_forget_to_partOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dual\">FinPartOrd.dual</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a> <a href=\"./Mathlib/Order/Category/PartOrd.html#PartOrd\">PartOrd</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a> <a href=\"./Mathlib/Order/Category/PartOrd.html#PartOrd\">PartOrd</a></span>)</span> <a href=\"./Mathlib/Order/Category/PartOrd.html#PartOrd.dual\">PartOrd.dual</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinPartOrd.lean#L103-L106","name":"FinPartOrd.dualEquiv","line":103,"kind":"def","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dualEquiv","doc":"The equivalence between `FinPartOrd` and itself induced by `OrderDual` both ways. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dualEquiv\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">dualEquiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinPartOrd.lean#L102-L102","name":"FinPartOrd.dualEquiv_inverse","line":102,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dualEquiv_inverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dualEquiv_inverse\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">dualEquiv_inverse</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dualEquiv\">FinPartOrd.dualEquiv</a>.inverse</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dual\">FinPartOrd.dual</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinPartOrd.lean#L102-L102","name":"FinPartOrd.dualEquiv_functor","line":102,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dualEquiv_functor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dualEquiv_functor\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">dualEquiv_functor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dualEquiv\">FinPartOrd.dualEquiv</a>.functor</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dual\">FinPartOrd.dual</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinPartOrd.lean#L96-L98","name":"FinPartOrd.dual","line":96,"kind":"def","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dual","doc":"`OrderDual` as a functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dual\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">dual</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinPartOrd.lean#L95-L95","name":"FinPartOrd.dual_map","line":95,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dual_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dual_map\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">dual_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.toPartOrd</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">Y</span>.toPartOrd</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dual\">FinPartOrd.dual</a>.map <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">OrderHom.dual</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinPartOrd.lean#L95-L95","name":"FinPartOrd.dual_obj","line":95,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dual_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dual_obj\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">dual_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dual\">FinPartOrd.dual</a>.obj <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.of\">FinPartOrd.of</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.toPartOrd</span></span>)</span><a href=\"./Mathlib/Order/Basic.html#OrderDual\">ᵒᵈ</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinPartOrd.lean#L83-L91","name":"FinPartOrd.Iso.mk","line":83,"kind":"def","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.Iso.mk","doc":"Constructs an isomorphism of finite partial orders from an order isomorphism between them. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.Iso.mk\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">α</span>.toPartOrd</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">β</span>.toPartOrd</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinPartOrd.lean#L82-L82","name":"FinPartOrd.Iso.mk_inv","line":82,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.Iso.mk_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.Iso.mk_inv\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">α</span>.toPartOrd</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">β</span>.toPartOrd</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.Iso.mk\">FinPartOrd.Iso.mk</a> <span class=\"fn\">e</span></span>)</span>.inv</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso.symm\">OrderIso.symm</a> <span class=\"fn\">e</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinPartOrd.lean#L82-L82","name":"FinPartOrd.Iso.mk_hom","line":82,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.Iso.mk_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.Iso.mk_hom\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">α</span>.toPartOrd</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">β</span>.toPartOrd</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.Iso.mk\">FinPartOrd.Iso.mk</a> <span class=\"fn\">e</span></span>)</span>.hom</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">e</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinPartOrd.lean#L74-L78","name":"FinPartOrd.hasForgetToFintype","line":74,"kind":"instance","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.hasForgetToFintype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.hasForgetToFintype\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">hasForgetToFintype</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinPartOrd.lean#L70-L71","name":"FinPartOrd.hasForgetToPartOrd","line":70,"kind":"instance","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.hasForgetToPartOrd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.hasForgetToPartOrd\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">hasForgetToPartOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a> <a href=\"./Mathlib/Order/Category/PartOrd.html#PartOrd\">PartOrd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinPartOrd.lean#L66-L67","name":"FinPartOrd.concreteCategory","line":66,"kind":"instance","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.concreteCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.concreteCategory\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">concreteCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinPartOrd.lean#L62-L63","name":"FinPartOrd.largeCategory","line":62,"kind":"instance","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.largeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.largeCategory\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">largeCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinPartOrd.lean#L59-L60","name":"FinPartOrd.instInhabitedFinPartOrd","line":59,"kind":"instance","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.instInhabitedFinPartOrd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.instInhabitedFinPartOrd\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">instInhabitedFinPartOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinPartOrd.lean#L56-L56","name":"FinPartOrd.coe_of","line":56,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.coe_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.coe_of\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">coe_of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.of\">FinPartOrd.of</a> <span class=\"fn\">α</span></span>)</span>.toPartOrd</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinPartOrd.lean#L51-L52","name":"FinPartOrd.of","line":51,"kind":"def","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.of","doc":"Construct a bundled `FinPartOrd` from `PartialOrder` + `Fintype`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.of\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinPartOrd.lean#L42-L43","name":"FinPartOrd.instPartialOrderαToPartOrd","line":42,"kind":"instance","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.instPartialOrderαToPartOrd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.instPartialOrderαToPartOrd\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">instPartialOrderαToPartOrd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.toPartOrd</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinPartOrd.lean#L39-L40","name":"FinPartOrd.instCoeSortFinPartOrdType","line":39,"kind":"instance","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.instCoeSortFinPartOrdType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.instCoeSortFinPartOrdType\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">instCoeSortFinPartOrdType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u_1)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinPartOrd.lean#L34-L34","name":"FinPartOrd.isFintype","line":34,"kind":"def","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.isFintype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.isFintype\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">isFintype</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">self</span>.toPartOrd</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinPartOrd.lean#L33-L33","name":"FinPartOrd.toPartOrd","line":33,"kind":"def","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.toPartOrd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.toPartOrd\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">toPartOrd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/PartOrd.html#PartOrd\">PartOrd</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinPartOrd.lean#L32-L32","name":"FinPartOrd.mk","line":32,"kind":"ctor","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.mk\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toPartOrd : <a href=\"./Mathlib/Order/Category/PartOrd.html#PartOrd\">PartOrd</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[isFintype : <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">↑<span class=\"fn\">toPartOrd</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinPartOrd.lean#L32-L34","name":"FinPartOrd","line":32,"kind":"structure","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd","doc":"The category of finite partial orders with monotone functions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\"><span class=\"name\">FinPartOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u_1 + 1)</div></div>"}]}