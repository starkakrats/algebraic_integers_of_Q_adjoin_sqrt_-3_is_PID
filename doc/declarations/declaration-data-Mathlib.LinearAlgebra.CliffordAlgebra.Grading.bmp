{"name":"Mathlib.LinearAlgebra.CliffordAlgebra.Grading","instances":[{"typeNames":["CliffordAlgebra.evenOdd"],"name":"CliffordAlgebra.evenOdd.gradedMonoid","className":"SetLike.GradedMonoid"},{"typeNames":["CliffordAlgebra.evenOdd"],"name":"CliffordAlgebra.gradedAlgebra","className":"GradedRing"}],"imports":["Init","Mathlib.LinearAlgebra.CliffordAlgebra.Basic","Mathlib.Data.ZMod.Basic","Mathlib.RingTheory.GradedAlgebra.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/CliffordAlgebra/Grading.lean#L224-L237","name":"CliffordAlgebra.odd_induction","line":224,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.odd_induction","doc":"To show a property is true on the odd parts, it suffices to show it is true on the\nvectors, closed under addition, and under left-multiplication by a pair of vectors. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.odd_induction\"><span class=\"name\">CliffordAlgebra</span>.<span class=\"name\">odd_induction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Q : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">Q</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">1</span></span></span> → <a href=\"./foundational_types.html\">Prop</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hι : <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\">M</span>), <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">Q</span></span>)</span> <span class=\"fn\">v</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">Q</span></span>)</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">1</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hadd : <span class=\"fn\">∀ {<span class=\"fn\">x </span>y : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">Q</span></span>} {<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">1</span></span></span>} {<span class=\"fn\">hy</span> : <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">1</span></span></span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">x</span> <span class=\"fn\">hx</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">y</span> <span class=\"fn\">hy</span></span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">1</span></span></span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hιι_mul : <span class=\"fn\">∀ (<span class=\"fn\">m₁ </span>m₂ : <span class=\"fn\">M</span>) {<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">Q</span></span>} {<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">1</span></span></span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">x</span> <span class=\"fn\">hx</span></span> →\n    <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">Q</span></span>)</span> <span class=\"fn\">m₁</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">Q</span></span>)</span> <span class=\"fn\">m₂</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span>)</span>\n      <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">Q</span></span>)</span> <span class=\"fn\">m₁</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">Q</span></span>)</span> <span class=\"fn\">m₂</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">1</span></span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">1</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">x</span> <span class=\"fn\">hx</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/CliffordAlgebra/Grading.lean#L207-L218","name":"CliffordAlgebra.even_induction","line":207,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.even_induction","doc":"To show a property is true on the even parts, it suffices to show it is true on the\nscalars, closed under addition, and under left-multiplication by a pair of vectors. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.even_induction\"><span class=\"name\">CliffordAlgebra</span>.<span class=\"name\">even_induction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Q : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">Q</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">0</span></span></span> → <a href=\"./foundational_types.html\">Prop</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\">∀ (<span class=\"fn\">r</span> : <span class=\"fn\">R</span>),\n  <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#algebraMap\">algebraMap</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">Q</span></span>)</span></span>)</span> <span class=\"fn\">r</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#algebraMap\">algebraMap</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">Q</span></span>)</span></span>)</span> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">0</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hadd : <span class=\"fn\">∀ {<span class=\"fn\">x </span>y : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">Q</span></span>} {<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">0</span></span></span>} {<span class=\"fn\">hy</span> : <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">0</span></span></span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">x</span> <span class=\"fn\">hx</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">y</span> <span class=\"fn\">hy</span></span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">0</span></span></span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hιι_mul : <span class=\"fn\">∀ (<span class=\"fn\">m₁ </span>m₂ : <span class=\"fn\">M</span>) {<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">Q</span></span>} {<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">0</span></span></span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">x</span> <span class=\"fn\">hx</span></span> →\n    <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">Q</span></span>)</span> <span class=\"fn\">m₁</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">Q</span></span>)</span> <span class=\"fn\">m₂</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span>)</span>\n      <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">Q</span></span>)</span> <span class=\"fn\">m₁</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">Q</span></span>)</span> <span class=\"fn\">m₂</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">0</span></span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">0</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">x</span> <span class=\"fn\">hx</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/CliffordAlgebra/Grading.lean#L161-L201","name":"CliffordAlgebra.evenOdd_induction","line":161,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd_induction","doc":"To show a property is true on the even or odd part, it suffices to show it is true on the\nscalars or vectors (respectively), closed under addition, and under left-multiplication by a pair\nof vectors. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd_induction\"><span class=\"name\">CliffordAlgebra</span>.<span class=\"name\">evenOdd_induction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Q : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">Q</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">n</span></span></span> → <a href=\"./foundational_types.html\">Prop</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">Q</span></span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basic.html#LinearMap.range\">LinearMap.range</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">Q</span></span>)</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Basic.html#ZMod.val\">ZMod.val</a> <span class=\"fn\">n</span></span></span></span>),\n  <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">v</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">⨆ (i : <span class=\"fn\">{ <span class=\"fn\">n_1</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> // <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n_1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></span> }</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basic.html#LinearMap.range\">LinearMap.range</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">Q</span></span>)</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">↑<span class=\"fn\">i</span></span></span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hadd : <span class=\"fn\">∀ {<span class=\"fn\">x </span>y : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">Q</span></span>} {<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">n</span></span></span>} {<span class=\"fn\">hy</span> : <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">n</span></span></span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">x</span> <span class=\"fn\">hx</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">y</span> <span class=\"fn\">hy</span></span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">n</span></span></span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hιι_mul : <span class=\"fn\">∀ (<span class=\"fn\">m₁ </span>m₂ : <span class=\"fn\">M</span>) {<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">Q</span></span>} {<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">n</span></span></span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">x</span> <span class=\"fn\">hx</span></span> →\n    <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">Q</span></span>)</span> <span class=\"fn\">m₁</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">Q</span></span>)</span> <span class=\"fn\">m₂</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span>)</span>\n      <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">Q</span></span>)</span> <span class=\"fn\">m₁</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">Q</span></span>)</span> <span class=\"fn\">m₂</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">n</span></span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">n</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">x</span> <span class=\"fn\">hx</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/CliffordAlgebra/Grading.lean#L151-L154","name":"CliffordAlgebra.evenOdd_isCompl","line":151,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd_isCompl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd_isCompl\"><span class=\"name\">CliffordAlgebra</span>.<span class=\"name\">evenOdd_isCompl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Q : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#IsCompl\">IsCompl</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">0</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">1</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/CliffordAlgebra/Grading.lean#L139-L148","name":"CliffordAlgebra.iSup_ι_range_eq_top","line":139,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.iSup_ι_range_eq_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.iSup_ι_range_eq_top\"><span class=\"name\">CliffordAlgebra</span>.<span class=\"name\">iSup_ι_range_eq_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Q : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⨆ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basic.html#LinearMap.range\">LinearMap.range</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">Q</span></span>)</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/CliffordAlgebra/Grading.lean#L125-L136","name":"CliffordAlgebra.gradedAlgebra","line":125,"kind":"instance","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.gradedAlgebra","doc":"The clifford algebra is graded by the even and odd parts. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.gradedAlgebra\"><span class=\"name\">CliffordAlgebra</span>.<span class=\"name\">gradedAlgebra</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Q : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedAlgebra\">GradedAlgebra</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/CliffordAlgebra/Grading.lean#L92-L121","name":"CliffordAlgebra.GradedAlgebra.lift_ι_eq","line":92,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.GradedAlgebra.lift_ι_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.GradedAlgebra.lift_ι_eq\"><span class=\"name\">CliffordAlgebra</span>.<span class=\"name\">GradedAlgebra</span>.<span class=\"name\">lift_ι_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Q : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i' : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x' : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">i'</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.lift\">CliffordAlgebra.lift</a> <span class=\"fn\">Q</span></span>)</span>\n      <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.GradedAlgebra.ι\">CliffordAlgebra.GradedAlgebra.ι</a> <span class=\"fn\">Q</span></span>,\n        <span class=\"fn\">property</span> :=\n          <span class=\"fn\">(_ :\n            <span class=\"fn\">∀ (<span class=\"fn\">m</span> : <span class=\"fn\">M</span>),\n              <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.GradedAlgebra.ι\">CliffordAlgebra.GradedAlgebra.ι</a> <span class=\"fn\">Q</span></span>)</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.GradedAlgebra.ι\">CliffordAlgebra.GradedAlgebra.ι</a> <span class=\"fn\">Q</span></span>)</span> <span class=\"fn\">m</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                 <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#algebraMap\">algebraMap</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/DirectSum/Basic.html#DirectSum\">DirectSum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">2</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">2</span></span>) =&gt; <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">i</span></span>)</span></span></span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">m</span></span>)</span></span></span></span>)</span> }</span></span>)</span>\n    <span class=\"fn\">↑<span class=\"fn\">x'</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/DirectSum/Basic.html#DirectSum.of\">DirectSum.of</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">2</span></span>) =&gt; <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span> <span class=\"fn\">i'</span></span>)</span> <span class=\"fn\">x'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/CliffordAlgebra/Grading.lean#L86-L89","name":"CliffordAlgebra.GradedAlgebra.ι_sq_scalar","line":86,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.GradedAlgebra.ι_sq_scalar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.GradedAlgebra.ι_sq_scalar\"><span class=\"name\">CliffordAlgebra</span>.<span class=\"name\">GradedAlgebra</span>.<span class=\"name\">ι_sq_scalar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Q : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.GradedAlgebra.ι\">CliffordAlgebra.GradedAlgebra.ι</a> <span class=\"fn\">Q</span></span>)</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.GradedAlgebra.ι\">CliffordAlgebra.GradedAlgebra.ι</a> <span class=\"fn\">Q</span></span>)</span> <span class=\"fn\">m</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#algebraMap\">algebraMap</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/DirectSum/Basic.html#DirectSum\">DirectSum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">2</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">2</span></span>) =&gt; <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">i</span></span>)</span></span></span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">m</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/CliffordAlgebra/Grading.lean#L81-L83","name":"CliffordAlgebra.GradedAlgebra.ι_apply","line":81,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.GradedAlgebra.ι_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.GradedAlgebra.ι_apply\"><span class=\"name\">CliffordAlgebra</span>.<span class=\"name\">GradedAlgebra</span>.<span class=\"name\">ι_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Q : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.GradedAlgebra.ι\">CliffordAlgebra.GradedAlgebra.ι</a> <span class=\"fn\">Q</span></span>)</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/DirectSum/Basic.html#DirectSum.of\">DirectSum.of</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">2</span></span>) =&gt; <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span> <span class=\"fn\">1</span></span>)</span>\n    <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">Q</span></span>)</span> <span class=\"fn\">m</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">Q</span></span>)</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">1</span></span></span>)</span> }</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/CliffordAlgebra/Grading.lean#L77-L78","name":"CliffordAlgebra.GradedAlgebra.ι","line":77,"kind":"def","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.GradedAlgebra.ι","doc":"A version of `CliffordAlgebra.ι` that maps directly into the graded structure. This is\nprimarily an auxiliary construction used to provide `CliffordAlgebra.gradedAlgebra`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.GradedAlgebra.ι\"><span class=\"name\">CliffordAlgebra</span>.<span class=\"name\">GradedAlgebra</span>.<span class=\"name\">ι</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Q : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Module/LinearMap.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap.html#LinearMap\">]</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/DirectSum/Basic.html#DirectSum\">DirectSum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">2</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">2</span></span>) =&gt; <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">i</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/CliffordAlgebra/Grading.lean#L69-L71","name":"CliffordAlgebra.evenOdd.gradedMonoid","line":69,"kind":"instance","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd.gradedMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd.gradedMonoid\"><span class=\"name\">CliffordAlgebra</span>.<span class=\"name\">evenOdd</span>.<span class=\"name\">gradedMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Q : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GradedMonoid.html#SetLike.GradedMonoid\">SetLike.GradedMonoid</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/CliffordAlgebra/Grading.lean#L59-L66","name":"CliffordAlgebra.evenOdd_mul_le","line":59,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd_mul_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd_mul_le\"><span class=\"name\">CliffordAlgebra</span>.<span class=\"name\">evenOdd_mul_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Q : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">j</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">j</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/CliffordAlgebra/Grading.lean#L50-L56","name":"CliffordAlgebra.ι_mul_ι_mem_evenOdd_zero","line":50,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.ι_mul_ι_mem_evenOdd_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.ι_mul_ι_mem_evenOdd_zero\"><span class=\"name\">CliffordAlgebra</span>.<span class=\"name\">ι_mul_ι_mem_evenOdd_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Q : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₁ : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₂ : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">Q</span></span>)</span> <span class=\"fn\">m₁</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">Q</span></span>)</span> <span class=\"fn\">m₂</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/CliffordAlgebra/Grading.lean#L46-L47","name":"CliffordAlgebra.ι_mem_evenOdd_one","line":46,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.ι_mem_evenOdd_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.ι_mem_evenOdd_one\"><span class=\"name\">CliffordAlgebra</span>.<span class=\"name\">ι_mem_evenOdd_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Q : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">Q</span></span>)</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/CliffordAlgebra/Grading.lean#L41-L43","name":"CliffordAlgebra.range_ι_le_evenOdd_one","line":41,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.range_ι_le_evenOdd_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.range_ι_le_evenOdd_one\"><span class=\"name\">CliffordAlgebra</span>.<span class=\"name\">range_ι_le_evenOdd_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Q : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basic.html#LinearMap.range\">LinearMap.range</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">Q</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/CliffordAlgebra/Grading.lean#L36-L38","name":"CliffordAlgebra.one_le_evenOdd_zero","line":36,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.one_le_evenOdd_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.one_le_evenOdd_zero\"><span class=\"name\">CliffordAlgebra</span>.<span class=\"name\">one_le_evenOdd_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Q : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q</span> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/CliffordAlgebra/Grading.lean#L32-L33","name":"CliffordAlgebra.evenOdd","line":32,"kind":"def","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd","doc":"The even or odd submodule, defined as the supremum of the even or odd powers of\n`(ι Q).range`. `evenOdd 0` is the even submodule, and `evenOdd 1` is the odd submodule. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\"><span class=\"name\">CliffordAlgebra</span>.<span class=\"name\">evenOdd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Q : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Basic.html#Submodule\">Submodule</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">Q</span></span>)</span></span></div></div>"}]}