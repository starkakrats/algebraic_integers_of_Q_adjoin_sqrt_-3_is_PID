{"name":"Mathlib.LinearAlgebra.Basis.VectorSpace","instances":[{"typeNames":[],"name":"Module.Free.of_divisionRing","className":"Module.Free"},{"typeNames":["Submodule"],"name":"instIsAtomisticSubmoduleToSemiringToDivisionSemiringToAddCommMonoidCompleteLattice","className":"IsAtomistic"},{"typeNames":["Submodule"],"name":"Module.Submodule.complementedLattice","className":"ComplementedLattice"}],"imports":["Init","Mathlib.LinearAlgebra.Basis","Mathlib.LinearAlgebra.FreeModule.Basic","Mathlib.LinearAlgebra.LinearPMap","Mathlib.LinearAlgebra.Projection"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/Basis/VectorSpace.lean#L277-L281","name":"quotient_prod_linearEquiv","line":277,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#quotient_prod_linearEquiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#quotient_prod_linearEquiv\"><span class=\"name\">quotient_prod_linearEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Basic.html#Submodule\">Submodule</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">p</span></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">p</span></span></span>)</span> <a href=\"./Mathlib/Algebra/Module/Equiv.html#LinearEquiv\">≃ₗ[</a><span class=\"fn\">K</span><a href=\"./Mathlib/Algebra/Module/Equiv.html#LinearEquiv\">]</a> <span class=\"fn\">V</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/Basis/VectorSpace.lean#L263-L274","name":"Submodule.exists_le_ker_of_lt_top","line":263,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Submodule.exists_le_ker_of_lt_top","doc":"If `p < ⊤` is a subspace of a vector space `V`, then there exists a nonzero linear map\n`f : V →ₗ[K] K` such that `p ≤ ker f`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Submodule.exists_le_ker_of_lt_top\"><span class=\"name\">Submodule</span>.<span class=\"name\">exists_le_ker_of_lt_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Basic.html#Submodule\">Submodule</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (f : <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Algebra/Module/LinearMap.html#LinearMap\">→ₗ[</a><span class=\"fn\">K</span><a href=\"./Mathlib/Algebra/Module/LinearMap.html#LinearMap\">]</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basic.html#LinearMap.ker\">LinearMap.ker</a> <span class=\"fn\">f</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/Basis/VectorSpace.lean#L253-L256","name":"LinearMap.exists_extend","line":253,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#LinearMap.exists_extend","doc":"Any linear map `f : p →ₗ[K] V'` defined on a subspace `p` can be extended to the whole\nspace. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#LinearMap.exists_extend\"><span class=\"name\">LinearMap</span>.<span class=\"name\">exists_extend</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V' : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Basic.html#Submodule\">Submodule</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">p</span></span> <a href=\"./Mathlib/Algebra/Module/LinearMap.html#LinearMap\">→ₗ[</a><span class=\"fn\">K</span><a href=\"./Mathlib/Algebra/Module/LinearMap.html#LinearMap\">]</a> <span class=\"fn\">V'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (g : <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Algebra/Module/LinearMap.html#LinearMap\">→ₗ[</a><span class=\"fn\">K</span><a href=\"./Mathlib/Algebra/Module/LinearMap.html#LinearMap\">]</a> <span class=\"fn\">V'</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> ∘ₗ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/LinearMap.html#Submodule.subtype\">Submodule.subtype</a> <span class=\"fn\">p</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/Basis/VectorSpace.lean#L241-L248","name":"LinearMap.exists_rightInverse_of_surjective","line":241,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#LinearMap.exists_rightInverse_of_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#LinearMap.exists_rightInverse_of_surjective\"><span class=\"name\">LinearMap</span>.<span class=\"name\">exists_rightInverse_of_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V' : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Algebra/Module/LinearMap.html#LinearMap\">→ₗ[</a><span class=\"fn\">K</span><a href=\"./Mathlib/Algebra/Module/LinearMap.html#LinearMap\">]</a> <span class=\"fn\">V'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf_surj : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basic.html#LinearMap.range\">LinearMap.range</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (g : <span class=\"fn\"><span class=\"fn\">V'</span> <a href=\"./Mathlib/Algebra/Module/LinearMap.html#LinearMap\">→ₗ[</a><span class=\"fn\">K</span><a href=\"./Mathlib/Algebra/Module/LinearMap.html#LinearMap\">]</a> <span class=\"fn\">V</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> ∘ₗ <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">LinearMap.id</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/Basis/VectorSpace.lean#L237-L238","name":"Module.Submodule.complementedLattice","line":237,"kind":"instance","docLink":"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Module.Submodule.complementedLattice","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Module.Submodule.complementedLattice\"><span class=\"name\">Module</span>.<span class=\"name\">Submodule</span>.<span class=\"name\">complementedLattice</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#ComplementedLattice\">ComplementedLattice</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Basic.html#Submodule\">Submodule</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/Basis/VectorSpace.lean#L232-L234","name":"Submodule.exists_isCompl","line":232,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Submodule.exists_isCompl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Submodule.exists_isCompl\"><span class=\"name\">Submodule</span>.<span class=\"name\">exists_isCompl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Basic.html#Submodule\">Submodule</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Basic.html#Submodule\">Submodule</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#IsCompl\">IsCompl</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/Basis/VectorSpace.lean#L209-L229","name":"LinearMap.exists_leftInverse_of_injective","line":209,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#LinearMap.exists_leftInverse_of_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#LinearMap.exists_leftInverse_of_injective\"><span class=\"name\">LinearMap</span>.<span class=\"name\">exists_leftInverse_of_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V' : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Algebra/Module/LinearMap.html#LinearMap\">→ₗ[</a><span class=\"fn\">K</span><a href=\"./Mathlib/Algebra/Module/LinearMap.html#LinearMap\">]</a> <span class=\"fn\">V'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf_inj : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basic.html#LinearMap.ker\">LinearMap.ker</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (g : <span class=\"fn\"><span class=\"fn\">V'</span> <a href=\"./Mathlib/Algebra/Module/LinearMap.html#LinearMap\">→ₗ[</a><span class=\"fn\">K</span><a href=\"./Mathlib/Algebra/Module/LinearMap.html#LinearMap\">]</a> <span class=\"fn\">V</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> ∘ₗ <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">LinearMap.id</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/Basis/VectorSpace.lean#L199-L203","name":"instIsAtomisticSubmoduleToSemiringToDivisionSemiringToAddCommMonoidCompleteLattice","line":199,"kind":"instance","docLink":"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#instIsAtomisticSubmoduleToSemiringToDivisionSemiringToAddCommMonoidCompleteLattice","doc":"The lattice of submodules of a module over a division ring is atomistic. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#instIsAtomisticSubmoduleToSemiringToDivisionSemiringToAddCommMonoidCompleteLattice\"><span class=\"name\">instIsAtomisticSubmoduleToSemiringToDivisionSemiringToAddCommMonoidCompleteLattice</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Atoms.html#IsAtomistic\">IsAtomistic</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Basic.html#Submodule\">Submodule</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/Basis/VectorSpace.lean#L184-L195","name":"atom_iff_nonzero_span","line":184,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#atom_iff_nonzero_span","doc":"The atoms of the lattice of submodules of a module over a division ring are the\nsubmodules equal to the span of a nonzero element of the module. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#atom_iff_nonzero_span\"><span class=\"name\">atom_iff_nonzero_span</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Basic.html#Submodule\">Submodule</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Atoms.html#IsAtom\">IsAtom</a> <span class=\"fn\">W</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (v : <span class=\"fn\">V</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">W</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Span.html#Submodule.span\">Submodule.span</a> <span class=\"fn\">K</span> <span class=\"fn\">{<span class=\"fn\">v</span>}</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/Basis/VectorSpace.lean#L166-L179","name":"nonzero_span_atom","line":166,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#nonzero_span_atom","doc":"For a module over a division ring, the span of a nonzero element is an atom of the\nlattice of submodules. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#nonzero_span_atom\"><span class=\"name\">nonzero_span_atom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\">V</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hv : <span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Atoms.html#IsAtom\">IsAtom</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Span.html#Submodule.span\">Submodule.span</a> <span class=\"fn\">K</span> <span class=\"fn\">{<span class=\"fn\">v</span>}</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/Basis/VectorSpace.lean#L155-L157","name":"VectorSpace.card_fintype","line":155,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#VectorSpace.card_fintype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#VectorSpace.card_fintype\"><span class=\"name\">VectorSpace</span>.<span class=\"name\">card_fintype</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">V</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/Basis/VectorSpace.lean#L141-L142","name":"Basis.exists_basis","line":141,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.exists_basis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.exists_basis\"><span class=\"name\">Basis</span>.<span class=\"name\">exists_basis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">V</span></span>), <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis.html#Basis\">Basis</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">s</span></span>)</span> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/Basis/VectorSpace.lean#L137-L138","name":"Basis.range_ofVectorSpace","line":137,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.range_ofVectorSpace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.range_ofVectorSpace\"><span class=\"name\">Basis</span>.<span class=\"name\">range_ofVectorSpace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.ofVectorSpace\">Basis.ofVectorSpace</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.ofVectorSpaceIndex\">Basis.ofVectorSpaceIndex</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/Basis/VectorSpace.lean#L130-L134","name":"Basis.ofVectorSpaceIndex.linearIndependent","line":130,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.ofVectorSpaceIndex.linearIndependent","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.ofVectorSpaceIndex.linearIndependent\"><span class=\"name\">Basis</span>.<span class=\"name\">ofVectorSpaceIndex</span>.<span class=\"name\">linearIndependent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/LinearIndependent.html#LinearIndependent\">LinearIndependent</a> (ι := <span class=\"fn\">{ <span class=\"fn\">x</span> : <span class=\"fn\">V</span> // <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.ofVectorSpaceIndex\">Basis.ofVectorSpaceIndex</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span></span> }</span>) <span class=\"fn\">K</span> <span class=\"fn\">Subtype.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/Basis/VectorSpace.lean#L126-L127","name":"Basis.coe_ofVectorSpace","line":126,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.coe_ofVectorSpace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.coe_ofVectorSpace\"><span class=\"name\">Basis</span>.<span class=\"name\">coe_ofVectorSpace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.ofVectorSpace\">Basis.ofVectorSpace</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Subtype.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/Basis/VectorSpace.lean#L120-L122","name":"Basis.ofVectorSpace_apply_self","line":120,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.ofVectorSpace_apply_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.ofVectorSpace_apply_self\"><span class=\"name\">Basis</span>.<span class=\"name\">ofVectorSpace_apply_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.ofVectorSpaceIndex\">Basis.ofVectorSpaceIndex</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.ofVectorSpace\">Basis.ofVectorSpace</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/Basis/VectorSpace.lean#L116-L117","name":"Module.Free.of_divisionRing","line":116,"kind":"instance","docLink":"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Module.Free.of_divisionRing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Module.Free.of_divisionRing\"><span class=\"name\">Module</span>.<span class=\"name\">Free</span>.<span class=\"name\">of_divisionRing</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FreeModule/Basic.html#Module.Free\">Module.Free</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/Basis/VectorSpace.lean#L112-L113","name":"Basis.ofVectorSpace","line":112,"kind":"def","docLink":"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.ofVectorSpace","doc":"Each vector space has a basis. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.ofVectorSpace\"><span class=\"name\">Basis</span>.<span class=\"name\">ofVectorSpace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis.html#Basis\">Basis</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.ofVectorSpaceIndex\">Basis.ofVectorSpaceIndex</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>)</span></span>)</span> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/Basis/VectorSpace.lean#L107-L108","name":"Basis.ofVectorSpaceIndex","line":107,"kind":"def","docLink":"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.ofVectorSpaceIndex","doc":"A set used to index `Basis.ofVectorSpace`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.ofVectorSpaceIndex\"><span class=\"name\">Basis</span>.<span class=\"name\">ofVectorSpaceIndex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/Basis/VectorSpace.lean#L97-L99","name":"Basis.subset_extend","line":97,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.subset_extend","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.subset_extend\"><span class=\"name\">Basis</span>.<span class=\"name\">subset_extend</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/LinearIndependent.html#LinearIndependent\">LinearIndependent</a> (ι := <span class=\"fn\">{ <span class=\"fn\">x</span> : <span class=\"fn\">V</span> // <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> }</span>) <span class=\"fn\">K</span> <span class=\"fn\">Subtype.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/LinearIndependent.html#LinearIndependent.extend\">LinearIndependent.extend</a> <span class=\"fn\">hs</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">Set.univ</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/Basis/VectorSpace.lean#L84-L94","name":"Basis.sumExtend","line":84,"kind":"def","docLink":"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.sumExtend","doc":"If `v` is a linear independent family of vectors, extend it to a basis indexed by a sum type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.sumExtend\"><span class=\"name\">Basis</span>.<span class=\"name\">sumExtend</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{v : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/LinearIndependent.html#LinearIndependent\">LinearIndependent</a> <span class=\"fn\">K</span> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis.html#Basis\">Basis</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.sumExtendIndex\">Basis.sumExtendIndex</a> <span class=\"fn\">hs</span></span>)</span></span></span>)</span> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/Basis/VectorSpace.lean#L80-L81","name":"Basis.sumExtendIndex","line":80,"kind":"def","docLink":"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.sumExtendIndex","doc":"Auxiliary definition: the index for the new basis vectors in `Basis.sumExtend`.\n\nThe specific value of this definition should be considered an implementation detail.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.sumExtendIndex\"><span class=\"name\">Basis</span>.<span class=\"name\">sumExtendIndex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{v : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/LinearIndependent.html#LinearIndependent\">LinearIndependent</a> <span class=\"fn\">K</span> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/Basis/VectorSpace.lean#L70-L72","name":"Basis.range_extend","line":70,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.range_extend","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.range_extend\"><span class=\"name\">Basis</span>.<span class=\"name\">range_extend</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/LinearIndependent.html#LinearIndependent\">LinearIndependent</a> (ι := <span class=\"fn\">{ <span class=\"fn\">x</span> : <span class=\"fn\">V</span> // <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> }</span>) <span class=\"fn\">K</span> <span class=\"fn\">Subtype.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.extend\">Basis.extend</a> <span class=\"fn\">hs</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/LinearIndependent.html#LinearIndependent.extend\">LinearIndependent.extend</a> <span class=\"fn\">hs</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">Set.univ</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/Basis/VectorSpace.lean#L66-L67","name":"Basis.coe_extend","line":66,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.coe_extend","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.coe_extend\"><span class=\"name\">Basis</span>.<span class=\"name\">coe_extend</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/LinearIndependent.html#LinearIndependent\">LinearIndependent</a> (ι := <span class=\"fn\">{ <span class=\"fn\">x</span> : <span class=\"fn\">V</span> // <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> }</span>) <span class=\"fn\">K</span> <span class=\"fn\">Subtype.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.extend\">Basis.extend</a> <span class=\"fn\">hs</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Subtype.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/Basis/VectorSpace.lean#L60-L62","name":"Basis.extend_apply_self","line":60,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.extend_apply_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.extend_apply_self\"><span class=\"name\">Basis</span>.<span class=\"name\">extend_apply_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/LinearIndependent.html#LinearIndependent\">LinearIndependent</a> (ι := <span class=\"fn\">{ <span class=\"fn\">x</span> : <span class=\"fn\">V</span> // <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> }</span>) <span class=\"fn\">K</span> <span class=\"fn\">Subtype.val</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/LinearIndependent.html#LinearIndependent.extend\">LinearIndependent.extend</a> <span class=\"fn\">hs</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">Set.univ</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.extend\">Basis.extend</a> <span class=\"fn\">hs</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/LinearAlgebra/Basis/VectorSpace.lean#L53-L57","name":"Basis.extend","line":53,"kind":"def","docLink":"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.extend","doc":"If `s` is a linear independent set of vectors, we can extend it to a basis. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/Basis/VectorSpace.html#Basis.extend\"><span class=\"name\">Basis</span>.<span class=\"name\">extend</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/LinearIndependent.html#LinearIndependent\">LinearIndependent</a> (ι := <span class=\"fn\">{ <span class=\"fn\">x</span> : <span class=\"fn\">V</span> // <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> }</span>) <span class=\"fn\">K</span> <span class=\"fn\">Subtype.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis.html#Basis\">Basis</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/LinearIndependent.html#LinearIndependent.extend\">LinearIndependent.extend</a> <span class=\"fn\">hs</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">Set.univ</span></span>)</span></span>)</span></span>)</span> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span></div></div>"}]}