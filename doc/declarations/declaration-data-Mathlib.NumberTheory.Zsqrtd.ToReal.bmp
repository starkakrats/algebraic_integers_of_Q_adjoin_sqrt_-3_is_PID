{"name":"Mathlib.NumberTheory.Zsqrtd.ToReal","instances":[],"imports":["Init","Mathlib.Data.Real.Sqrt","Mathlib.NumberTheory.Zsqrtd.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Zsqrtd/ToReal.lean#L29-L31","name":"Zsqrtd.toReal_injective","line":29,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/ToReal.html#Zsqrtd.toReal_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/ToReal.html#Zsqrtd.toReal_injective\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">toReal_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h0d : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hd : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/ToReal.html#Zsqrtd.toReal\">Zsqrtd.toReal</a> <span class=\"fn\">h0d</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Zsqrtd/ToReal.lean#L25-L26","name":"Zsqrtd.toReal","line":25,"kind":"def","docLink":"./Mathlib/NumberTheory/Zsqrtd/ToReal.html#Zsqrtd.toReal","doc":"The image of `Zsqrtd` in `ℝ`, using `Real.sqrt` which takes the positive root of `d`.\n\nIf the negative root is desired, use `toReal h (star a)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/ToReal.html#Zsqrtd.toReal\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">toReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span></span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Zsqrtd/ToReal.lean#L24-L24","name":"Zsqrtd.toReal_apply","line":24,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/ToReal.html#Zsqrtd.toReal_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/ToReal.html#Zsqrtd.toReal_apply\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">toReal_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/ToReal.html#Zsqrtd.toReal\">Zsqrtd.toReal</a> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">a</span>.re</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">a</span>.im</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Sqrt.html#Real.sqrt\">Real.sqrt</a> <span class=\"fn\">↑<span class=\"fn\">d</span></span></span></span></span></span></div></div>"}]}