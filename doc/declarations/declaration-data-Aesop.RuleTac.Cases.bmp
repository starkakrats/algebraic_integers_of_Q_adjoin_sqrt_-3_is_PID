{"name":"Aesop.RuleTac.Cases","instances":[],"imports":["Init","Aesop.RuleTac.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/RuleTac/Cases.lean#L59-L93","name":"Aesop.RuleTac.cases.go","line":59,"kind":"opaque","docLink":"./Aesop/RuleTac/Cases.html#Aesop.RuleTac.cases.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Cases.html#Aesop.RuleTac.cases.go\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTac</span>.<span class=\"name\">cases</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(target : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesTarget\">Aesop.CasesTarget</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(md : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(isRecursiveType : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(newGoals : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(excluded : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(generateScript : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/Script.html#Aesop.RuleTacScriptBuilder\">Aesop.RuleTacScriptBuilder</a></span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/RuleTac/Cases.lean#L41-L57","name":"Aesop.RuleTac.cases.findFirstApplicableHyp","line":41,"kind":"def","docLink":"./Aesop/RuleTac/Cases.html#Aesop.RuleTac.cases.findFirstApplicableHyp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Cases.html#Aesop.RuleTac.cases.findFirstApplicableHyp\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTac</span>.<span class=\"name\">cases</span>.<span class=\"name\">findFirstApplicableHyp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(target : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesTarget\">Aesop.CasesTarget</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(md : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(excluded : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/RuleTac/Cases.lean#L35-L93","name":"Aesop.RuleTac.cases","line":35,"kind":"def","docLink":"./Aesop/RuleTac/Cases.html#Aesop.RuleTac.cases","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Cases.html#Aesop.RuleTac.cases\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTac</span>.<span class=\"name\">cases</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(target : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesTarget\">Aesop.CasesTarget</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(md : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(isRecursiveType : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTac\">Aesop.RuleTac</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/RuleTac/Cases.lean#L23-L31","name":"Aesop.CasesTarget.toCasesTarget'","line":23,"kind":"def","docLink":"./Aesop/RuleTac/Cases.html#Aesop.CasesTarget.toCasesTarget'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Cases.html#Aesop.CasesTarget.toCasesTarget'\"><span class=\"name\">Aesop</span>.<span class=\"name\">CasesTarget</span>.<span class=\"name\">toCasesTarget'</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesTarget\">Aesop.CasesTarget</a> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Aesop/RuleTac/Cases.html#Aesop.CasesTarget'\">Aesop.CasesTarget'</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/RuleTac/Cases.lean#L21-L21","name":"Aesop.CasesTarget'.patterns","line":21,"kind":"ctor","docLink":"./Aesop/RuleTac/Cases.html#Aesop.CasesTarget'.patterns","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Cases.html#Aesop.CasesTarget'.patterns\"><span class=\"name\">Aesop</span>.<span class=\"name\">CasesTarget'</span>.<span class=\"name\">patterns</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ps : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Cases.html#Aesop.CasesTarget'\">Aesop.CasesTarget'</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/RuleTac/Cases.lean#L20-L20","name":"Aesop.CasesTarget'.decl","line":20,"kind":"ctor","docLink":"./Aesop/RuleTac/Cases.html#Aesop.CasesTarget'.decl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Cases.html#Aesop.CasesTarget'.decl\"><span class=\"name\">Aesop</span>.<span class=\"name\">CasesTarget'</span>.<span class=\"name\">decl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Cases.html#Aesop.CasesTarget'\">Aesop.CasesTarget'</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/RuleTac/Cases.lean#L19-L21","name":"Aesop.CasesTarget'","line":19,"kind":"inductive","docLink":"./Aesop/RuleTac/Cases.html#Aesop.CasesTarget'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Cases.html#Aesop.CasesTarget'\"><span class=\"name\">Aesop</span>.<span class=\"name\">CasesTarget'</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/RuleTac/Cases.lean#L15-L17","name":"Aesop.CasesPattern.toExpr","line":15,"kind":"def","docLink":"./Aesop/RuleTac/Cases.html#Aesop.CasesPattern.toExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Cases.html#Aesop.CasesPattern.toExpr\"><span class=\"name\">Aesop</span>.<span class=\"name\">CasesPattern</span>.<span class=\"name\">toExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesPattern\">Aesop.CasesPattern</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"}]}