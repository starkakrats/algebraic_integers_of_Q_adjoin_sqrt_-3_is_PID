{"name":"Aesop.RuleTac.Forward","instances":[],"imports":["Init","Aesop.RuleTac.Basic","Std.Lean.Meta.UnusedNames","Std.Lean.Meta.AssertHypotheses"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/RuleTac/Forward.lean#L156-L160","name":"Aesop.RuleTac.forwardFVar","line":156,"kind":"def","docLink":"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.forwardFVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.forwardFVar\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTac</span>.<span class=\"name\">forwardFVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(userName : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(immediate : <span class=\"fn\"><a href=\"./Aesop/Util/UnorderedArraySet.html#Aesop.UnorderedArraySet\">Aesop.UnorderedArraySet</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(clear : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(md : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTac\">Aesop.RuleTac</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/RuleTac/Forward.lean#L152-L154","name":"Aesop.RuleTac.forwardConst","line":152,"kind":"def","docLink":"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.forwardConst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.forwardConst\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTac</span>.<span class=\"name\">forwardConst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(immediate : <span class=\"fn\"><a href=\"./Aesop/Util/UnorderedArraySet.html#Aesop.UnorderedArraySet\">Aesop.UnorderedArraySet</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(clear : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(md : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTac\">Aesop.RuleTac</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/RuleTac/Forward.lean#L144-L150","name":"Aesop.RuleTac.forwardExpr","line":144,"kind":"def","docLink":"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.forwardExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.forwardExpr\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTac</span>.<span class=\"name\">forwardExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(immediate : <span class=\"fn\"><a href=\"./Aesop/Util/UnorderedArraySet.html#Aesop.UnorderedArraySet\">Aesop.UnorderedArraySet</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(clear : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(md : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTac\">Aesop.RuleTac</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/RuleTac/Forward.lean#L140-L141","name":"Aesop.RuleTac.applyForwardRule.err","line":140,"kind":"def","docLink":"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.applyForwardRule.err","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.applyForwardRule.err\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTac</span>.<span class=\"name\">applyForwardRule</span>.<span class=\"name\">err</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/RuleTac/Forward.lean#L99-L141","name":"Aesop.RuleTac.applyForwardRule","line":99,"kind":"def","docLink":"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.applyForwardRule","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.applyForwardRule\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTac</span>.<span class=\"name\">applyForwardRule</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(immediate : <span class=\"fn\"><a href=\"./Aesop/Util/UnorderedArraySet.html#Aesop.UnorderedArraySet\">Aesop.UnorderedArraySet</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(clear : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(generateScript : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(md : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/Script.html#Aesop.RuleTacScriptBuilder\">Aesop.RuleTacScriptBuilder</a></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/RuleTac/Forward.lean#L92-L97","name":"Aesop.RuleTac.getForwardHypTypes","line":92,"kind":"def","docLink":"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.getForwardHypTypes","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.getForwardHypTypes\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTac</span>.<span class=\"name\">getForwardHypTypes</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Data/HashSet.html#Lean.HashSet\">Lean.HashSet</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/RuleTac/Forward.lean#L89-L90","name":"Aesop.RuleTac.isForwardImplDetailHypName","line":89,"kind":"def","docLink":"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.isForwardImplDetailHypName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.isForwardImplDetailHypName\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTac</span>.<span class=\"name\">isForwardImplDetailHypName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/RuleTac/Forward.lean#L86-L87","name":"Aesop.RuleTac.mkFreshForwardImplDetailHypName","line":86,"kind":"def","docLink":"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.mkFreshForwardImplDetailHypName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.mkFreshForwardImplDetailHypName\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTac</span>.<span class=\"name\">mkFreshForwardImplDetailHypName</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/RuleTac/Forward.lean#L83-L83","name":"Aesop.RuleTac.forwardImplDetailHypPrefix","line":83,"kind":"def","docLink":"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.forwardImplDetailHypPrefix","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.forwardImplDetailHypPrefix\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTac</span>.<span class=\"name\">forwardImplDetailHypPrefix</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/RuleTac/Forward.lean#L80-L80","name":"Aesop.RuleTac.forwardHypPrefix","line":80,"kind":"def","docLink":"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.forwardHypPrefix","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.forwardHypPrefix\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTac</span>.<span class=\"name\">forwardHypPrefix</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>"}]}