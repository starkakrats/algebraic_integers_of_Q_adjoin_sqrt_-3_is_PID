{"name":"Aesop.Frontend.Extension","instances":[],"imports":["Init","Aesop.Frontend.Extension.Init"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Frontend/Extension.lean#L110-L116","name":"Aesop.Frontend.eraseRules.go","line":110,"kind":"def","docLink":"./Aesop/Frontend/Extension.html#Aesop.Frontend.eraseRules.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Extension.html#Aesop.Frontend.eraseRules.go\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">eraseRules</span>.<span class=\"name\">go</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(rf : <a href=\"./Aesop/RuleSet.html#Aesop.RuleNameFilter\">Aesop.RuleNameFilter</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(anyErased : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ext : <a href=\"./Aesop/Frontend/Extension/Init.html#Aesop.RuleSetExtension\">Aesop.RuleSetExtension</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Frontend/Extension.lean#L95-L116","name":"Aesop.Frontend.eraseRules","line":95,"kind":"def","docLink":"./Aesop/Frontend/Extension.html#Aesop.Frontend.eraseRules","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Extension.html#Aesop.Frontend.eraseRules\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">eraseRules</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(rsf : <a href=\"./Aesop/RuleSet.html#Aesop.RuleSetNameFilter\">Aesop.RuleSetNameFilter</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rf : <a href=\"./Aesop/RuleSet.html#Aesop.RuleNameFilter\">Aesop.RuleNameFilter</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(check : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Frontend/Extension.lean#L87-L93","name":"Aesop.Frontend.addRule","line":87,"kind":"def","docLink":"./Aesop/Frontend/Extension.html#Aesop.Frontend.addRule","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Extension.html#Aesop.Frontend.addRule\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">addRule</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/ResolveName.html#Lean.MonadResolveName\">Lean.MonadResolveName</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(rsName : <a href=\"./Aesop/RuleSet.html#Aesop.RuleSetName\">Aesop.RuleSetName</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Aesop/RuleSet.html#Aesop.RuleSetMember\">Aesop.RuleSetMember</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(kind : <a href=\"./Lean/Attributes.html#Lean.AttributeKind\">Lean.AttributeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Frontend/Extension.lean#L82-L85","name":"Aesop.Frontend.addRuleUnchecked","line":82,"kind":"def","docLink":"./Aesop/Frontend/Extension.html#Aesop.Frontend.addRuleUnchecked","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Extension.html#Aesop.Frontend.addRuleUnchecked\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">addRuleUnchecked</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/ResolveName.html#Lean.MonadResolveName\">Lean.MonadResolveName</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(rsName : <a href=\"./Aesop/RuleSet.html#Aesop.RuleSetName\">Aesop.RuleSetName</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Aesop/RuleSet.html#Aesop.RuleSetMember\">Aesop.RuleSetMember</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(kind : <a href=\"./Lean/Attributes.html#Lean.AttributeKind\">Lean.AttributeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Frontend/Extension.lean#L78-L80","name":"Aesop.Frontend.getAllRuleSets","line":78,"kind":"def","docLink":"./Aesop/Frontend/Extension.html#Aesop.Frontend.getAllRuleSets","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Extension.html#Aesop.Frontend.getAllRuleSets\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">getAllRuleSets</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(includeGlobalSimpTheorems : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Aesop/RuleSet.html#Aesop.RuleSets\">Aesop.RuleSets</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Frontend/Extension.lean#L73-L76","name":"Aesop.Frontend.getDefaultRuleSet","line":73,"kind":"def","docLink":"./Aesop/Frontend/Extension.html#Aesop.Frontend.getDefaultRuleSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Extension.html#Aesop.Frontend.getDefaultRuleSet\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">getDefaultRuleSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(includeGlobalSimpTheorems : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(options : <a href=\"./Aesop/Options/Public.html#Aesop.Options\">Aesop.Options</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Aesop/RuleSet.html#Aesop.RuleSet\">Aesop.RuleSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Frontend/Extension.lean#L70-L71","name":"Aesop.Frontend.getDefaultRuleSets","line":70,"kind":"def","docLink":"./Aesop/Frontend/Extension.html#Aesop.Frontend.getDefaultRuleSets","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Extension.html#Aesop.Frontend.getDefaultRuleSets\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">getDefaultRuleSets</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(includeGlobalSimpTheorems : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Aesop/RuleSet.html#Aesop.RuleSets\">Aesop.RuleSets</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Frontend/Extension.lean#L64-L68","name":"Aesop.Frontend.getRuleSets","line":64,"kind":"def","docLink":"./Aesop/Frontend/Extension.html#Aesop.Frontend.getRuleSets","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Extension.html#Aesop.Frontend.getRuleSets\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">getRuleSets</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(rsNames : <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">Lean.NameSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(includeGlobalSimpTheorems : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Aesop/RuleSet.html#Aesop.RuleSets\">Aesop.RuleSets</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Frontend/Extension.lean#L53-L62","name":"Aesop.Frontend.getRuleSet","line":53,"kind":"def","docLink":"./Aesop/Frontend/Extension.html#Aesop.Frontend.getRuleSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Extension.html#Aesop.Frontend.getRuleSet\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">getRuleSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(rsName : <a href=\"./Aesop/RuleSet.html#Aesop.RuleSetName\">Aesop.RuleSetName</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(includeGlobalSimpTheorems : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Aesop/RuleSet.html#Aesop.RuleSet\">Aesop.RuleSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Frontend/Extension.lean#L48-L51","name":"Aesop.Frontend.getRuleSetExtension","line":48,"kind":"def","docLink":"./Aesop/Frontend/Extension.html#Aesop.Frontend.getRuleSetExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Extension.html#Aesop.Frontend.getRuleSetExtension\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">getRuleSetExtension</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(rsName : <a href=\"./Aesop/RuleSet.html#Aesop.RuleSetName\">Aesop.RuleSetName</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Aesop/Frontend/Extension/Init.html#Aesop.RuleSetExtension\">Aesop.RuleSetExtension</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Frontend/Extension.lean#L41-L43","name":"Aesop.Frontend.declareRuleSet","line":41,"kind":"def","docLink":"./Aesop/Frontend/Extension.html#Aesop.Frontend.declareRuleSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Extension.html#Aesop.Frontend.declareRuleSet\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">declareRuleSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(rsName : <a href=\"./Aesop/RuleSet.html#Aesop.RuleSetName\">Aesop.RuleSetName</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(isDefault : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Frontend/Extension.lean#L37-L39","name":"Aesop.Frontend.checkRuleSetNotDeclared","line":37,"kind":"def","docLink":"./Aesop/Frontend/Extension.html#Aesop.Frontend.checkRuleSetNotDeclared","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Extension.html#Aesop.Frontend.checkRuleSetNotDeclared\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">checkRuleSetNotDeclared</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(rsName : <a href=\"./Aesop/RuleSet.html#Aesop.RuleSetName\">Aesop.RuleSetName</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Frontend/Extension.lean#L31-L32","name":"Aesop.Frontend.isRuleSetDeclared","line":31,"kind":"def","docLink":"./Aesop/Frontend/Extension.html#Aesop.Frontend.isRuleSetDeclared","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Extension.html#Aesop.Frontend.isRuleSetDeclared\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">isRuleSetDeclared</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(rsName : <a href=\"./Aesop/RuleSet.html#Aesop.RuleSetName\">Aesop.RuleSetName</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Frontend/Extension.lean#L19-L29","name":"Aesop.Frontend.declareRuleSetUnchecked","line":19,"kind":"def","docLink":"./Aesop/Frontend/Extension.html#Aesop.Frontend.declareRuleSetUnchecked","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Extension.html#Aesop.Frontend.declareRuleSetUnchecked\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">declareRuleSetUnchecked</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(rsName : <a href=\"./Aesop/RuleSet.html#Aesop.RuleSetName\">Aesop.RuleSetName</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(isDefault : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Frontend/Extension.lean#L13-L17","name":"Aesop.Frontend.extensionDescr","line":13,"kind":"def","docLink":"./Aesop/Frontend/Extension.html#Aesop.Frontend.extensionDescr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Extension.html#Aesop.Frontend.extensionDescr\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">extensionDescr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(rsName : <a href=\"./Aesop/RuleSet.html#Aesop.RuleSetName\">Aesop.RuleSetName</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr\">Lean.SimpleScopedEnvExtension.Descr</a> <a href=\"./Aesop/RuleSet.html#Aesop.RuleSetMember\">Aesop.RuleSetMember</a> <a href=\"./Aesop/RuleSet.html#Aesop.RuleSet\">Aesop.RuleSet</a></span></div></div>"}]}