{"name":"Mathlib.CategoryTheory.Abelian.Projective","instances":[],"imports":["Init","Mathlib.CategoryTheory.Preadditive.Yoneda.Projective","Mathlib.CategoryTheory.Preadditive.Yoneda.Limits","Mathlib.Algebra.Category.ModuleCat.EpiMono"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Abelian/Projective.lean#L37-L42","name":"CategoryTheory.projective_of_preservesFiniteColimits_preadditiveCoyonedaObj","line":37,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/Projective.html#CategoryTheory.projective_of_preservesFiniteColimits_preadditiveCoyonedaObj","doc":"An object is projective if its preadditive Co-Yoneda functor preserves finite colimits. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/Projective.html#CategoryTheory.projective_of_preservesFiniteColimits_preadditiveCoyonedaObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">projective_of_preservesFiniteColimits_preadditiveCoyonedaObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">CategoryTheory.Abelian</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\">C</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hP : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Finite.html#CategoryTheory.Limits.PreservesFiniteColimits\">CategoryTheory.Limits.PreservesFiniteColimits</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Yoneda/Basic.html#CategoryTheory.preadditiveCoyonedaObj\">CategoryTheory.preadditiveCoyonedaObj</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">P</span></span>)</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Projective.html#CategoryTheory.Projective\">CategoryTheory.Projective</a> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Abelian/Projective.lean#L27-L33","name":"CategoryTheory.preservesFiniteColimitsPreadditiveCoyonedaObjOfProjective","line":27,"kind":"def","docLink":"./Mathlib/CategoryTheory/Abelian/Projective.html#CategoryTheory.preservesFiniteColimitsPreadditiveCoyonedaObjOfProjective","doc":"The preadditive Co-Yoneda functor on `P` preserves finite colimits if `P` is projective. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/Projective.html#CategoryTheory.preservesFiniteColimitsPreadditiveCoyonedaObjOfProjective\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">preservesFiniteColimitsPreadditiveCoyonedaObjOfProjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">CategoryTheory.Abelian</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\">C</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hP : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Projective.html#CategoryTheory.Projective\">CategoryTheory.Projective</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Finite.html#CategoryTheory.Limits.PreservesFiniteColimits\">CategoryTheory.Limits.PreservesFiniteColimits</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Yoneda/Basic.html#CategoryTheory.preadditiveCoyonedaObj\">CategoryTheory.preadditiveCoyonedaObj</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">P</span></span>)</span></span>)</span></span></div></div>"}]}