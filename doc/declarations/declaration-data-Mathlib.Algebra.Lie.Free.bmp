{"name":"Mathlib.Algebra.Lie.Free","instances":[{"typeNames":["FreeLieAlgebra"],"name":"instInhabitedFreeLieAlgebra","className":"Inhabited"},{"typeNames":["FreeLieAlgebra"],"name":"FreeLieAlgebra.instSMulFreeLieAlgebra","className":"SMul"},{"typeNames":["FreeLieAlgebra"],"name":"FreeLieAlgebra.instIsCentralScalarFreeLieAlgebraInstSMulFreeLieAlgebraMulOppositeMonoidOp_leftToSMulToZeroToCommMonoidWithZeroToCommSemiringToSMulZeroClassToAddZeroClassToAddMonoidToAddMonoidWithOneToAddGroupWithOneToRingToDistribSMulToSMulToSemiringId","className":"IsCentralScalar"},{"typeNames":["FreeLieAlgebra"],"name":"FreeLieAlgebra.instZeroFreeLieAlgebra","className":"Zero"},{"typeNames":["FreeLieAlgebra"],"name":"FreeLieAlgebra.instAddFreeLieAlgebra","className":"Add"},{"typeNames":["FreeLieAlgebra"],"name":"FreeLieAlgebra.instNegFreeLieAlgebra","className":"Neg"},{"typeNames":["FreeLieAlgebra"],"name":"FreeLieAlgebra.instSubFreeLieAlgebra","className":"Sub"},{"typeNames":["FreeLieAlgebra"],"name":"FreeLieAlgebra.instAddGroupFreeLieAlgebra","className":"AddGroup"},{"typeNames":["FreeLieAlgebra"],"name":"FreeLieAlgebra.instAddCommSemigroupFreeLieAlgebra","className":"AddCommSemigroup"},{"typeNames":["FreeLieAlgebra"],"name":"FreeLieAlgebra.instAddCommGroupFreeLieAlgebra","className":"AddCommGroup"},{"typeNames":["FreeLieAlgebra"],"name":"FreeLieAlgebra.instModuleFreeLieAlgebraToAddCommMonoidInstAddCommGroupFreeLieAlgebra","className":"Module"},{"typeNames":["FreeLieAlgebra"],"name":"FreeLieAlgebra.instLieRingFreeLieAlgebra","className":"LieRing"},{"typeNames":["FreeLieAlgebra"],"name":"FreeLieAlgebra.instLieAlgebraFreeLieAlgebraInstLieRingFreeLieAlgebra","className":"LieAlgebra"}],"imports":["Init","Mathlib.Algebra.FreeNonUnitalNonAssocAlgebra","Mathlib.Algebra.Lie.NonUnitalNonAssocAlgebra","Mathlib.Algebra.Lie.UniversalEnveloping","Mathlib.GroupTheory.GroupAction.Ring"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L278-L282","name":"FreeLieAlgebra.universalEnvelopingEquivFreeAlgebra","line":278,"kind":"def","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.universalEnvelopingEquivFreeAlgebra","doc":"The universal enveloping algebra of the free Lie algebra is just the free unital associative\nalgebra. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.universalEnvelopingEquivFreeAlgebra\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">universalEnvelopingEquivFreeAlgebra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/UniversalEnveloping.html#UniversalEnvelopingAlgebra\">UniversalEnvelopingAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra\">FreeLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span> <a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">≃ₐ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">]</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeAlgebra.html#FreeAlgebra\">FreeAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L277-L277","name":"FreeLieAlgebra.universalEnvelopingEquivFreeAlgebra_apply","line":277,"kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.universalEnvelopingEquivFreeAlgebra_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.universalEnvelopingEquivFreeAlgebra_apply\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">universalEnvelopingEquivFreeAlgebra_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/UniversalEnveloping.html#UniversalEnvelopingAlgebra\">UniversalEnvelopingAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra\">FreeLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.universalEnvelopingEquivFreeAlgebra\">FreeLieAlgebra.universalEnvelopingEquivFreeAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/UniversalEnveloping.html#UniversalEnvelopingAlgebra.lift\">UniversalEnvelopingAlgebra.lift</a> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.lift\">FreeLieAlgebra.lift</a> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeAlgebra.html#FreeAlgebra.ι\">FreeAlgebra.ι</a> <span class=\"fn\">R</span></span>)</span></span>)</span></span>)</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L277-L277","name":"FreeLieAlgebra.universalEnvelopingEquivFreeAlgebra_symm_apply","line":277,"kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.universalEnvelopingEquivFreeAlgebra_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.universalEnvelopingEquivFreeAlgebra_symm_apply\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">universalEnvelopingEquivFreeAlgebra_symm_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeAlgebra.html#FreeAlgebra\">FreeAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv.symm\">AlgEquiv.symm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.universalEnvelopingEquivFreeAlgebra\">FreeLieAlgebra.universalEnvelopingEquivFreeAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeAlgebra.html#FreeAlgebra.lift\">FreeAlgebra.lift</a> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/UniversalEnveloping.html#UniversalEnvelopingAlgebra.ι\">UniversalEnvelopingAlgebra.ι</a> <span class=\"fn\">R</span></span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.of\">FreeLieAlgebra.of</a> <span class=\"fn\">R</span></span></span>)</span></span>)</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L267-L270","name":"FreeLieAlgebra.hom_ext","line":267,"kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.hom_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.hom_ext\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">hom_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieRing\">LieRing</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieAlgebra\">LieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra\">FreeLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Algebra/Lie/Basic.html#LieHom\">→ₗ⁅</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieHom\">⁆</a> <span class=\"fn\">L</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra\">FreeLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Algebra/Lie/Basic.html#LieHom\">→ₗ⁅</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieHom\">⁆</a> <span class=\"fn\">L</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">X</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.of\">FreeLieAlgebra.of</a> <span class=\"fn\">R</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">F₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.of\">FreeLieAlgebra.of</a> <span class=\"fn\">R</span> <span class=\"fn\">x</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">F₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">F₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L262-L263","name":"FreeLieAlgebra.lift_comp_of","line":262,"kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.lift_comp_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.lift_comp_of\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">lift_comp_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieRing\">LieRing</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieAlgebra\">LieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra\">FreeLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Algebra/Lie/Basic.html#LieHom\">→ₗ⁅</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieHom\">⁆</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.lift\">FreeLieAlgebra.lift</a> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">F</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.of\">FreeLieAlgebra.of</a> <span class=\"fn\">R</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L257-L258","name":"FreeLieAlgebra.lift_of_apply","line":257,"kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.lift_of_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.lift_of_apply\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">lift_of_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieRing\">LieRing</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieAlgebra\">LieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.lift\">FreeLieAlgebra.lift</a> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.of\">FreeLieAlgebra.of</a> <span class=\"fn\">R</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L252-L253","name":"FreeLieAlgebra.lift_unique","line":252,"kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.lift_unique","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.lift_unique\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">lift_unique</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieRing\">LieRing</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieAlgebra\">LieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra\">FreeLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Algebra/Lie/Basic.html#LieHom\">→ₗ⁅</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieHom\">⁆</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.of\">FreeLieAlgebra.of</a> <span class=\"fn\">R</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.lift\">FreeLieAlgebra.lift</a> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L248-L248","name":"FreeLieAlgebra.of_comp_lift","line":248,"kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.of_comp_lift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.of_comp_lift\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">of_comp_lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieRing\">LieRing</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieAlgebra\">LieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.lift\">FreeLieAlgebra.lift</a> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.of\">FreeLieAlgebra.of</a> <span class=\"fn\">R</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L242-L242","name":"FreeLieAlgebra.lift_symm_apply","line":242,"kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.lift_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.lift_symm_apply\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">lift_symm_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieRing\">LieRing</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieAlgebra\">LieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra\">FreeLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Algebra/Lie/Basic.html#LieHom\">→ₗ⁅</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieHom\">⁆</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.lift\">FreeLieAlgebra.lift</a> <span class=\"fn\">R</span></span>)</span>.symm</span> <span class=\"fn\">F</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">F</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.of\">FreeLieAlgebra.of</a> <span class=\"fn\">R</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L225-L238","name":"FreeLieAlgebra.lift","line":225,"kind":"def","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.lift","doc":"The functor `X ↦ FreeLieAlgebra R X` from the category of types to the category of Lie\nalgebras over `R` is adjoint to the forgetful functor in the other direction. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.lift\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">lift</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieRing\">LieRing</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieAlgebra\">LieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">L</span></span>)</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra\">FreeLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Algebra/Lie/Basic.html#LieHom\">→ₗ⁅</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieHom\">⁆</a> <span class=\"fn\">L</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L215-L220","name":"FreeLieAlgebra.mk","line":215,"kind":"def","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.mk","doc":"The quotient map as a `NonUnitalAlgHom`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.mk\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Algebra/Algebra/NonUnitalHom.html#NonUnitalAlgHom\">→ₙₐ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Algebra/NonUnitalHom.html#NonUnitalAlgHom\">]</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/NonUnitalNonAssocAlgebra.html#CommutatorRing\">CommutatorRing</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra\">FreeLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L202-L211","name":"FreeLieAlgebra.liftAux_spec","line":202,"kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.liftAux_spec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.liftAux_spec\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">liftAux_spec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieRing\">LieRing</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieAlgebra\">LieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel\">FreeLieAlgebra.Rel</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.liftAux\">FreeLieAlgebra.liftAux</a> <span class=\"fn\">R</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.liftAux\">FreeLieAlgebra.liftAux</a> <span class=\"fn\">R</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L197-L199","name":"FreeLieAlgebra.liftAux_map_mul","line":197,"kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.liftAux_map_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.liftAux_map_mul\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">liftAux_map_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieRing\">LieRing</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieAlgebra\">LieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.liftAux\">FreeLieAlgebra.liftAux</a> <span class=\"fn\">R</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.liftAux\">FreeLieAlgebra.liftAux</a> <span class=\"fn\">R</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.liftAux\">FreeLieAlgebra.liftAux</a> <span class=\"fn\">R</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">b</span></span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L192-L194","name":"FreeLieAlgebra.liftAux_map_add","line":192,"kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.liftAux_map_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.liftAux_map_add\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">liftAux_map_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieRing\">LieRing</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieAlgebra\">LieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.liftAux\">FreeLieAlgebra.liftAux</a> <span class=\"fn\">R</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.liftAux\">FreeLieAlgebra.liftAux</a> <span class=\"fn\">R</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.liftAux\">FreeLieAlgebra.liftAux</a> <span class=\"fn\">R</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L187-L189","name":"FreeLieAlgebra.liftAux_map_smul","line":187,"kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.liftAux_map_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.liftAux_map_smul\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">liftAux_map_smul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieRing\">LieRing</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieAlgebra\">LieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.liftAux\">FreeLieAlgebra.liftAux</a> <span class=\"fn\">R</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.liftAux\">FreeLieAlgebra.liftAux</a> <span class=\"fn\">R</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L183-L184","name":"FreeLieAlgebra.liftAux","line":183,"kind":"def","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.liftAux","doc":"An auxiliary definition used to construct the equivalence `lift` below. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.liftAux\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">liftAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieRing\">LieRing</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieAlgebra\">LieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/NonUnitalNonAssocAlgebra.html#CommutatorRing\">CommutatorRing</a> <span class=\"fn\">L</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Algebra/Algebra/NonUnitalHom.html#NonUnitalAlgHom\">→ₙₐ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Algebra/NonUnitalHom.html#NonUnitalAlgHom\">]</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/NonUnitalNonAssocAlgebra.html#CommutatorRing\">CommutatorRing</a> <span class=\"fn\">L</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L177-L177","name":"FreeLieAlgebra.of","line":177,"kind":"def","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.of","doc":"The embedding of `X` into the free Lie algebra of `X` with coefficients in the commutative ring\n`R`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.of\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra\">FreeLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L167-L171","name":"FreeLieAlgebra.instLieAlgebraFreeLieAlgebraInstLieRingFreeLieAlgebra","line":167,"kind":"instance","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.instLieAlgebraFreeLieAlgebraInstLieRingFreeLieAlgebra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.instLieAlgebraFreeLieAlgebraInstLieRingFreeLieAlgebra\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">instLieAlgebraFreeLieAlgebraInstLieRingFreeLieAlgebra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieAlgebra\">LieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra\">FreeLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L160-L165","name":"FreeLieAlgebra.instLieRingFreeLieAlgebra","line":160,"kind":"instance","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.instLieRingFreeLieAlgebra","doc":"Note that here we turn the `Mul` coming from the `NonUnitalNonAssocSemiring` structure\non `lib R X` into a `Bracket` on `FreeLieAlgebra`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.instLieRingFreeLieAlgebra\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">instLieRingFreeLieAlgebra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieRing\">LieRing</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra\">FreeLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L153-L156","name":"FreeLieAlgebra.instModuleFreeLieAlgebraToAddCommMonoidInstAddCommGroupFreeLieAlgebra","line":153,"kind":"instance","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.instModuleFreeLieAlgebraToAddCommMonoidInstAddCommGroupFreeLieAlgebra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.instModuleFreeLieAlgebraToAddCommMonoidInstAddCommGroupFreeLieAlgebra\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">instModuleFreeLieAlgebraToAddCommMonoidInstAddCommGroupFreeLieAlgebra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">S</span> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">S</span> <span class=\"fn\">R</span> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">S</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra\">FreeLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L149-L151","name":"FreeLieAlgebra.instAddCommGroupFreeLieAlgebra","line":149,"kind":"instance","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.instAddCommGroupFreeLieAlgebra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.instAddCommGroupFreeLieAlgebra\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">instAddCommGroupFreeLieAlgebra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra\">FreeLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L146-L147","name":"FreeLieAlgebra.instAddCommSemigroupFreeLieAlgebra","line":146,"kind":"instance","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.instAddCommSemigroupFreeLieAlgebra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.instAddCommSemigroupFreeLieAlgebra\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">instAddCommSemigroupFreeLieAlgebra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommSemigroup\">AddCommSemigroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra\">FreeLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L142-L144","name":"FreeLieAlgebra.instAddGroupFreeLieAlgebra","line":142,"kind":"instance","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.instAddGroupFreeLieAlgebra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.instAddGroupFreeLieAlgebra\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">instAddGroupFreeLieAlgebra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra\">FreeLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L139-L140","name":"FreeLieAlgebra.instSubFreeLieAlgebra","line":139,"kind":"instance","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.instSubFreeLieAlgebra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.instSubFreeLieAlgebra\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">instSubFreeLieAlgebra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra\">FreeLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L137-L137","name":"FreeLieAlgebra.instNegFreeLieAlgebra","line":137,"kind":"instance","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.instNegFreeLieAlgebra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.instNegFreeLieAlgebra\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">instNegFreeLieAlgebra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra\">FreeLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L134-L135","name":"FreeLieAlgebra.instAddFreeLieAlgebra","line":134,"kind":"instance","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.instAddFreeLieAlgebra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.instAddFreeLieAlgebra\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">instAddFreeLieAlgebra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra\">FreeLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L132-L132","name":"FreeLieAlgebra.instZeroFreeLieAlgebra","line":132,"kind":"instance","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.instZeroFreeLieAlgebra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.instZeroFreeLieAlgebra\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">instZeroFreeLieAlgebra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra\">FreeLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L128-L130","name":"FreeLieAlgebra.instIsCentralScalarFreeLieAlgebraInstSMulFreeLieAlgebraMulOppositeMonoidOp_leftToSMulToZeroToCommMonoidWithZeroToCommSemiringToSMulZeroClassToAddZeroClassToAddMonoidToAddMonoidWithOneToAddGroupWithOneToRingToDistribSMulToSMulToSemiringId","line":128,"kind":"instance","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.instIsCentralScalarFreeLieAlgebraInstSMulFreeLieAlgebraMulOppositeMonoidOp_leftToSMulToZeroToCommMonoidWithZeroToCommSemiringToSMulZeroClassToAddZeroClassToAddMonoidToAddMonoidWithOneToAddGroupWithOneToRingToDistribSMulToSMulToSemiringId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.instIsCentralScalarFreeLieAlgebraInstSMulFreeLieAlgebraMulOppositeMonoidOp_leftToSMulToZeroToCommMonoidWithZeroToCommSemiringToSMulZeroClassToAddZeroClassToAddMonoidToAddMonoidWithOneToAddGroupWithOneToRingToDistribSMulToSMulToSemiringId\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">instIsCentralScalarFreeLieAlgebraInstSMulFreeLieAlgebraMulOppositeMonoidOp_leftToSMulToZeroToCommMonoidWithZeroToCommSemiringToSMulZeroClassToAddZeroClassToAddMonoidToAddMonoidWithOneToAddGroupWithOneToRingToDistribSMulToSMulToSemiringId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">S</span> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\"><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite\">ᵐᵒᵖ</a></span> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">S</span> <span class=\"fn\">R</span> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsCentralScalar\">IsCentralScalar</a> <span class=\"fn\">S</span> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsCentralScalar\">IsCentralScalar</a> <span class=\"fn\">S</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra\">FreeLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L125-L126","name":"FreeLieAlgebra.instSMulFreeLieAlgebra","line":125,"kind":"instance","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.instSMulFreeLieAlgebra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.instSMulFreeLieAlgebra\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">instSMulFreeLieAlgebra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">S</span> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">S</span> <span class=\"fn\">R</span> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">S</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra\">FreeLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L121-L121","name":"instInhabitedFreeLieAlgebra","line":121,"kind":"instance","docLink":"./Mathlib/Algebra/Lie/Free.html#instInhabitedFreeLieAlgebra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#instInhabitedFreeLieAlgebra\"><span class=\"name\">instInhabitedFreeLieAlgebra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra\">FreeLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L117-L118","name":"FreeLieAlgebra","line":117,"kind":"def","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra","doc":"The free Lie algebra on the type `X` with coefficients in the commutative ring `R`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra\"><span class=\"name\">FreeLieAlgebra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u v)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L108-L111","name":"FreeLieAlgebra.Rel.smulOfTower","line":108,"kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel.smulOfTower","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel.smulOfTower\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">Rel</span>.<span class=\"name\">smulOfTower</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">S</span> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">S</span> <span class=\"fn\">R</span> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel\">FreeLieAlgebra.Rel</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel\">FreeLieAlgebra.Rel</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">b</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L104-L105","name":"FreeLieAlgebra.Rel.subRight","line":104,"kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel.subRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel.subRight\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">Rel</span>.<span class=\"name\">subRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel\">FreeLieAlgebra.Rel</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel\">FreeLieAlgebra.Rel</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">c</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L100-L101","name":"FreeLieAlgebra.Rel.subLeft","line":100,"kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel.subLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel.subLeft\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">Rel</span>.<span class=\"name\">subLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel\">FreeLieAlgebra.Rel</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel\">FreeLieAlgebra.Rel</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">c</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L96-L97","name":"FreeLieAlgebra.Rel.neg","line":96,"kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel.neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel.neg\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">Rel</span>.<span class=\"name\">neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel\">FreeLieAlgebra.Rel</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel\">FreeLieAlgebra.Rel</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">b</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L92-L93","name":"FreeLieAlgebra.Rel.addLeft","line":92,"kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel.addLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel.addLeft\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">Rel</span>.<span class=\"name\">addLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel\">FreeLieAlgebra.Rel</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel\">FreeLieAlgebra.Rel</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L87-L87","name":"FreeLieAlgebra.Rel.mul_right","line":87,"kind":"ctor","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel.mul_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel.mul_right\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">Rel</span>.<span class=\"name\">mul_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel\">FreeLieAlgebra.Rel</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel\">FreeLieAlgebra.Rel</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L86-L86","name":"FreeLieAlgebra.Rel.mul_left","line":86,"kind":"ctor","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel.mul_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel.mul_left\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">Rel</span>.<span class=\"name\">mul_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel\">FreeLieAlgebra.Rel</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel\">FreeLieAlgebra.Rel</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L85-L85","name":"FreeLieAlgebra.Rel.add_right","line":85,"kind":"ctor","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel.add_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel.add_right\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">Rel</span>.<span class=\"name\">add_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel\">FreeLieAlgebra.Rel</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel\">FreeLieAlgebra.Rel</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L84-L84","name":"FreeLieAlgebra.Rel.smul","line":84,"kind":"ctor","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel.smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel.smul\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">Rel</span>.<span class=\"name\">smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\">R</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel\">FreeLieAlgebra.Rel</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel\">FreeLieAlgebra.Rel</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">b</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L83-L83","name":"FreeLieAlgebra.Rel.leibniz_lie","line":83,"kind":"ctor","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel.leibniz_lie","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel.leibniz_lie\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">Rel</span>.<span class=\"name\">leibniz_lie</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel\">FreeLieAlgebra.Rel</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span></span>)</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L82-L82","name":"FreeLieAlgebra.Rel.lie_self","line":82,"kind":"ctor","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel.lie_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel.lie_self\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">Rel</span>.<span class=\"name\">lie_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel\">FreeLieAlgebra.Rel</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/Free.lean#L81-L87","name":"FreeLieAlgebra.Rel","line":81,"kind":"inductive","docLink":"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel","doc":"The quotient of `lib R X` by the equivalence relation generated by this relation will give us\nthe free Lie algebra. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra.Rel\"><span class=\"name\">FreeLieAlgebra</span>.<span class=\"name\">Rel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.html#FreeNonUnitalNonAssocAlgebra\">FreeNonUnitalNonAssocAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"}]}