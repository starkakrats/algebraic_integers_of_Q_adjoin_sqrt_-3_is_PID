{"name":"Mathlib.Analysis.BoxIntegral.Box.SubboxInduction","instances":[],"imports":["Init","Mathlib.Analysis.BoxIntegral.Box.Basic","Mathlib.Analysis.SpecificLimits.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.lean#L122-L172","name":"BoxIntegral.Box.subbox_induction_on'","line":122,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.subbox_induction_on'","doc":"Let `p` be a predicate on `Box ι`, let `I` be a box. Suppose that the following two properties\nhold true.\n\n* `H_ind` : Consider a smaller box `J ≤ I`. The hyperplanes passing through the center of `J` split\n  it into `2 ^ n` boxes. If `p` holds true on each of these boxes, then it true on `J`.\n\n* `H_nhds` : For each `z` in the closed box `I.Icc` there exists a neighborhood `U` of `z` within\n  `I.Icc` such that for every box `J ≤ I` such that `z ∈ J.Icc ⊆ U`, if `J` is homothetic to `I`\n  with a coefficient of the form `1 / 2 ^ m`, then `p` is true on `J`.\n\nThen `p I` is true. See also `BoxIntegral.Box.subbox_induction_on` for a version using\n`BoxIntegral.Prepartition.splitCenter` instead of `BoxIntegral.Box.splitCenterBox`.\n\nThe proof still works if we assume `H_ind` only for subboxes `J ≤ I` that are homothetic to `I` with\na coefficient of the form `2⁻ᵐ` but we do not need this generalization yet. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.subbox_induction_on'\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">subbox_induction_on'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H_ind : <span class=\"fn\">∀ <span class=\"fn\">J</span> ≤ <span class=\"fn\">I</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">ι</span></span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.splitCenterBox\">BoxIntegral.Box.splitCenterBox</a> <span class=\"fn\">J</span> <span class=\"fn\">s</span></span>)</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">J</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H_nhds : <span class=\"fn\">∀ <span class=\"fn\">z</span> ∈ <span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">I</span></span>,\n  <span class=\"fn\">∃ U ∈ <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">z</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">I</span></span>)</span></span>,\n    <span class=\"fn\">∀ <span class=\"fn\">J</span> ≤ <span class=\"fn\">I</span>,\n      <span class=\"fn\">∀ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>),\n        <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">J</span></span></span> →\n          <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">J</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">U</span></span> →\n            <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>),\n                <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">BoxIntegral.Box.upper</a> <span class=\"fn\">J</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">BoxIntegral.Box.lower</a> <span class=\"fn\">J</span> <span class=\"fn\">i</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">BoxIntegral.Box.upper</a> <span class=\"fn\">I</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">BoxIntegral.Box.lower</a> <span class=\"fn\">I</span> <span class=\"fn\">i</span></span></span>)</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">m</span></span></span></span></span>)</span> →\n              <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">J</span></span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.lean#L101-L103","name":"BoxIntegral.Box.upper_sub_lower_splitCenterBox","line":101,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.upper_sub_lower_splitCenterBox","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.upper_sub_lower_splitCenterBox\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">upper_sub_lower_splitCenterBox</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">BoxIntegral.Box.upper</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.splitCenterBox\">BoxIntegral.Box.splitCenterBox</a> <span class=\"fn\">I</span> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a>     <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">BoxIntegral.Box.lower</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.splitCenterBox\">BoxIntegral.Box.splitCenterBox</a> <span class=\"fn\">I</span> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">i</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">BoxIntegral.Box.upper</a> <span class=\"fn\">I</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">BoxIntegral.Box.lower</a> <span class=\"fn\">I</span> <span class=\"fn\">i</span></span></span>)</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.lean#L95-L97","name":"BoxIntegral.Box.iUnion_coe_splitCenterBox","line":95,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.iUnion_coe_splitCenterBox","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.iUnion_coe_splitCenterBox\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">iUnion_coe_splitCenterBox</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⋃ (s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">ι</span></span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.splitCenterBox\">BoxIntegral.Box.splitCenterBox</a> <span class=\"fn\">I</span> <span class=\"fn\">s</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.lean#L90-L91","name":"BoxIntegral.Box.splitCenterBoxEmb","line":90,"kind":"def","docLink":"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.splitCenterBoxEmb","doc":"`BoxIntegral.Box.splitCenterBox` bundled as a `Function.Embedding`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.splitCenterBoxEmb\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">splitCenterBoxEmb</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">ι</span></span> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding\">↪</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.lean#L89-L89","name":"BoxIntegral.Box.splitCenterBoxEmb_apply","line":89,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.splitCenterBoxEmb_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.splitCenterBoxEmb_apply\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">splitCenterBoxEmb_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.splitCenterBoxEmb\">BoxIntegral.Box.splitCenterBoxEmb</a> <span class=\"fn\">I</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.splitCenterBox\">BoxIntegral.Box.splitCenterBox</a> <span class=\"fn\">I</span> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.lean#L83-L85","name":"BoxIntegral.Box.exists_mem_splitCenterBox","line":83,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.exists_mem_splitCenterBox","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.exists_mem_splitCenterBox\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">exists_mem_splitCenterBox</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ (s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">ι</span></span>), <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.splitCenterBox\">BoxIntegral.Box.splitCenterBox</a> <span class=\"fn\">I</span> <span class=\"fn\">s</span></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">I</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.lean#L78-L79","name":"BoxIntegral.Box.injective_splitCenterBox","line":78,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.injective_splitCenterBox","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.injective_splitCenterBox\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">injective_splitCenterBox</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.splitCenterBox\">BoxIntegral.Box.splitCenterBox</a> <span class=\"fn\">I</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.lean#L69-L75","name":"BoxIntegral.Box.disjoint_splitCenterBox","line":69,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.disjoint_splitCenterBox","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.disjoint_splitCenterBox\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">disjoint_splitCenterBox</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.splitCenterBox\">BoxIntegral.Box.splitCenterBox</a> <span class=\"fn\">I</span> <span class=\"fn\">s</span></span>)</span></span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.splitCenterBox\">BoxIntegral.Box.splitCenterBox</a> <span class=\"fn\">I</span> <span class=\"fn\">t</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.lean#L65-L66","name":"BoxIntegral.Box.splitCenterBox_le","line":65,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.splitCenterBox_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.splitCenterBox_le\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">splitCenterBox_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.splitCenterBox\">BoxIntegral.Box.splitCenterBox</a> <span class=\"fn\">I</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.lean#L53-L62","name":"BoxIntegral.Box.mem_splitCenterBox","line":53,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.mem_splitCenterBox","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.mem_splitCenterBox\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">mem_splitCenterBox</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.splitCenterBox\">BoxIntegral.Box.splitCenterBox</a> <span class=\"fn\">I</span> <span class=\"fn\">s</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">BoxIntegral.Box.lower</a> <span class=\"fn\">I</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">BoxIntegral.Box.upper</a> <span class=\"fn\">I</span> <span class=\"fn\">i</span></span></span>)</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">y</span> <span class=\"fn\">i</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.lean#L45-L50","name":"BoxIntegral.Box.splitCenterBox","line":45,"kind":"def","docLink":"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.splitCenterBox","doc":"For a box `I`, the hyperplanes passing through its center split `I` into `2 ^ card ι` boxes.\n`BoxIntegral.Box.splitCenterBox I s` is one of these boxes. See also\n`BoxIntegral.Partition.splitCenter` for the corresponding `BoxIntegral.Partition`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.html#BoxIntegral.Box.splitCenterBox\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">splitCenterBox</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span></div></div>"}]}