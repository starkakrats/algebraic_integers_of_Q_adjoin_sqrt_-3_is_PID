{"name":"Mathlib.Data.Matroid.Dual","instances":[{"typeNames":["Matroid.dual"],"name":"Matroid.dual_finite","className":"Matroid.Finite"},{"typeNames":["Matroid.dual"],"name":"Matroid.dual_nonempty","className":"Matroid.Nonempty"}],"imports":["Init","Mathlib.Data.Matroid.IndepAxioms"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L257-L258","name":"Matroid.Coindep.exists_subset_compl_base","line":257,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.Coindep.exists_subset_compl_base","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.Coindep.exists_subset_compl_base\"><span class=\"name\">Matroid</span>.<span class=\"name\">Coindep</span>.<span class=\"name\">exists_subset_compl_base</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.Coindep\">Matroid.Coindep</a> <span class=\"fn\">M</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (B : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Base <span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.E</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">B</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L254-L255","name":"Matroid.Coindep.exists_base_subset_compl","line":254,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.Coindep.exists_base_subset_compl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.Coindep.exists_base_subset_compl\"><span class=\"name\">Matroid</span>.<span class=\"name\">Coindep</span>.<span class=\"name\">exists_base_subset_compl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.Coindep\">Matroid.Coindep</a> <span class=\"fn\">M</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (B : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Base <span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.E</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">X</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L251-L252","name":"Matroid.Coindep.subset_ground","line":251,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.Coindep.subset_ground","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.Coindep.subset_ground\"><span class=\"name\">Matroid</span>.<span class=\"name\">Coindep</span>.<span class=\"name\">subset_ground</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hX : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.Coindep\">Matroid.Coindep</a> <span class=\"fn\">M</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">M</span>.E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L245-L248","name":"Matroid.coindep_iff_subset_compl_base","line":245,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.coindep_iff_subset_compl_base","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.coindep_iff_subset_compl_base\"><span class=\"name\">Matroid</span>.<span class=\"name\">coindep_iff_subset_compl_base</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.Coindep\">Matroid.Coindep</a> <span class=\"fn\">M</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (B : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Base <span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.E</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">B</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L241-L243","name":"Matroid.coindep_iff_exists","line":241,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.coindep_iff_exists","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.coindep_iff_exists\"><span class=\"name\">Matroid</span>.<span class=\"name\">coindep_iff_exists</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hX : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">M</span>.E</span></span>)</span> <a href=\"./Mathlib/Data/Matroid/Dual.html#_auto._@.Mathlib.Data.Matroid.Dual._hyg.3862\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.Coindep\">Matroid.Coindep</a> <span class=\"fn\">M</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (B : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Base <span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.E</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">X</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L236-L239","name":"Matroid.coindep_iff_exists'","line":236,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.coindep_iff_exists'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.coindep_iff_exists'\"><span class=\"name\">Matroid</span>.<span class=\"name\">coindep_iff_exists'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.Coindep\">Matroid.Coindep</a> <span class=\"fn\">M</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ (B : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Base <span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.E</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">X</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">M</span>.E</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L233-L234","name":"Matroid.Indep.coindep","line":233,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.Indep.coindep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.Indep.coindep\"><span class=\"name\">Matroid</span>.<span class=\"name\">Indep</span>.<span class=\"name\">coindep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hI : <span class=\"fn\"><span class=\"fn\">M</span>.Indep <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.Coindep\">Matroid.Coindep</a> <span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">﹡</a></span> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L230-L231","name":"Matroid.dual_coindep_iff","line":230,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.dual_coindep_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual_coindep_iff\"><span class=\"name\">Matroid</span>.<span class=\"name\">dual_coindep_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.Coindep\">Matroid.Coindep</a> <span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">﹡</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">M</span>.Indep <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L227-L228","name":"Matroid.Coindep.indep","line":227,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.Coindep.indep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.Coindep.indep\"><span class=\"name\">Matroid</span>.<span class=\"name\">Coindep</span>.<span class=\"name\">indep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hX : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.Coindep\">Matroid.Coindep</a> <span class=\"fn\">M</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">﹡</a></span>.Indep <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L225-L225","name":"Matroid.coindep_def","line":225,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.coindep_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.coindep_def\"><span class=\"name\">Matroid</span>.<span class=\"name\">coindep_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.Coindep\">Matroid.Coindep</a> <span class=\"fn\">M</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">﹡</a></span>.Indep <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L223-L223","name":"Matroid.Coindep","line":223,"kind":"def","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.Coindep","doc":"A coindependent set of `M` is an independent set of the dual of `M﹡`. we give it a separate\ndefinition to enable dot notation. Which spelling is better depends on context. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.Coindep\"><span class=\"name\">Matroid</span>.<span class=\"name\">Coindep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L218-L219","name":"Matroid.Indep.ssubset_ground","line":218,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.Indep.ssubset_ground","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.Indep.ssubset_ground\"><span class=\"name\">Matroid</span>.<span class=\"name\">Indep</span>.<span class=\"name\">ssubset_ground</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.RkPos\">Matroid.RkPos</a> <span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">﹡</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hI : <span class=\"fn\"><span class=\"fn\">M</span>.Indep <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSSubset.SSubset\">⊂</a> <span class=\"fn\"><span class=\"fn\">M</span>.E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L215-L216","name":"Matroid.Base.ssubset_ground","line":215,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.Base.ssubset_ground","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.Base.ssubset_ground\"><span class=\"name\">Matroid</span>.<span class=\"name\">Base</span>.<span class=\"name\">ssubset_ground</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.RkPos\">Matroid.RkPos</a> <span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">﹡</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hB : <span class=\"fn\"><span class=\"fn\">M</span>.Base <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Std/Classes/SetNotation.html#HasSSubset.SSubset\">⊂</a> <span class=\"fn\"><span class=\"fn\">M</span>.E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L212-L213","name":"Matroid.ground_not_base","line":212,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.ground_not_base","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.ground_not_base\"><span class=\"name\">Matroid</span>.<span class=\"name\">ground_not_base</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.RkPos\">Matroid.RkPos</a> <span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">﹡</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">M</span>.Base <span class=\"fn\"><span class=\"fn\">M</span>.E</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L208-L210","name":"Matroid.base_iff_dual_base_compl","line":208,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.base_iff_dual_base_compl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.base_iff_dual_base_compl\"><span class=\"name\">Matroid</span>.<span class=\"name\">base_iff_dual_base_compl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hB : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">M</span>.E</span></span>)</span> <a href=\"./Mathlib/Data/Matroid/Dual.html#_auto._@.Mathlib.Data.Matroid.Dual._hyg.3321\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Base <span class=\"fn\">B</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">﹡</a></span>.Base <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.E</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">B</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L202-L206","name":"Matroid.Base.inter_basis_iff_compl_inter_basis_dual","line":202,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.Base.inter_basis_iff_compl_inter_basis_dual","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.Base.inter_basis_iff_compl_inter_basis_dual\"><span class=\"name\">Matroid</span>.<span class=\"name\">Base</span>.<span class=\"name\">inter_basis_iff_compl_inter_basis_dual</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hB : <span class=\"fn\"><span class=\"fn\">M</span>.Base <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hX : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">M</span>.E</span></span>)</span> <a href=\"./Mathlib/Data/Matroid/Dual.html#_auto._@.Mathlib.Data.Matroid.Dual._hyg.3211\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Basis <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">﹡</a></span>.Basis <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.E</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">B</span></span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.E</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">X</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.E</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L181-L200","name":"Matroid.Base.compl_inter_basis_of_inter_basis","line":181,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.Base.compl_inter_basis_of_inter_basis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.Base.compl_inter_basis_of_inter_basis\"><span class=\"name\">Matroid</span>.<span class=\"name\">Base</span>.<span class=\"name\">compl_inter_basis_of_inter_basis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hB : <span class=\"fn\"><span class=\"fn\">M</span>.Base <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hBX : <span class=\"fn\"><span class=\"fn\">M</span>.Basis <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">﹡</a></span>.Basis <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.E</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">B</span></span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.E</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">X</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.E</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L178-L179","name":"Matroid.Base.compl_base_dual","line":178,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.Base.compl_base_dual","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.Base.compl_base_dual\"><span class=\"name\">Matroid</span>.<span class=\"name\">Base</span>.<span class=\"name\">compl_base_dual</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">M</span>.Base <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">﹡</a></span>.Base <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.E</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">B</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L175-L176","name":"Matroid.Base.compl_base_of_dual","line":175,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.Base.compl_base_of_dual","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.Base.compl_base_of_dual\"><span class=\"name\">Matroid</span>.<span class=\"name\">Base</span>.<span class=\"name\">compl_base_of_dual</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">﹡</a></span>.Base <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">M</span>.Base <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.E</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">B</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L172-L173","name":"Matroid.eq_dual_iff_dual_eq","line":172,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.eq_dual_iff_dual_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.eq_dual_iff_dual_eq\"><span class=\"name\">Matroid</span>.<span class=\"name\">eq_dual_iff_dual_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₁ : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₂ : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">M₂</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">﹡</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₁</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">﹡</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">M₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L169-L170","name":"Matroid.eq_dual_comm","line":169,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.eq_dual_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.eq_dual_comm\"><span class=\"name\">Matroid</span>.<span class=\"name\">eq_dual_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₁ : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₂ : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">M₂</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">﹡</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">M₂</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">M₁</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">﹡</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L166-L167","name":"Matroid.dual_inj","line":166,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.dual_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual_inj\"><span class=\"name\">Matroid</span>.<span class=\"name\">dual_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₁ : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₂ : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₁</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">﹡</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">M₂</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">﹡</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">M₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">M₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L163-L164","name":"Matroid.dual_injective","line":163,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.dual_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual_injective\"><span class=\"name\">Matroid</span>.<span class=\"name\">dual_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">Matroid.dual</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L161-L161","name":"Matroid.dual_involutive","line":161,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.dual_involutive","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual_involutive\"><span class=\"name\">Matroid</span>.<span class=\"name\">dual_involutive</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Basic.html#Function.Involutive\">Function.Involutive</a> <span class=\"fn\">Matroid.dual</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L157-L159","name":"Matroid.dual_dual","line":157,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.dual_dual","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual_dual\"><span class=\"name\">Matroid</span>.<span class=\"name\">dual_dual</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">﹡</a></span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">﹡</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L150-L155","name":"Matroid.setOf_dual_base_eq","line":150,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.setOf_dual_base_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.setOf_dual_base_eq\"><span class=\"name\">Matroid</span>.<span class=\"name\">setOf_dual_base_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> | <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">﹡</a></span>.Base <span class=\"fn\">B</span></span>}</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.E</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">X</span></span></span>)</span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">{<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> | <span class=\"fn\"><span class=\"fn\">M</span>.Base <span class=\"fn\">B</span></span>}</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L146-L148","name":"Matroid.dual_base_iff'","line":146,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.dual_base_iff'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual_base_iff'\"><span class=\"name\">Matroid</span>.<span class=\"name\">dual_base_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">﹡</a></span>.Base <span class=\"fn\">B</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Base <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.E</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">B</span></span>)</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">M</span>.E</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L141-L144","name":"Matroid.dual_base_iff","line":141,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.dual_base_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual_base_iff\"><span class=\"name\">Matroid</span>.<span class=\"name\">dual_base_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hB : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">M</span>.E</span></span>)</span> <a href=\"./Mathlib/Data/Matroid/Dual.html#_auto._@.Mathlib.Data.Matroid.Dual._hyg.2187\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">﹡</a></span>.Base <span class=\"fn\">B</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">M</span>.Base <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.E</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">B</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L138-L139","name":"Matroid.dual_nonempty","line":138,"kind":"instance","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.dual_nonempty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual_nonempty\"><span class=\"name\">Matroid</span>.<span class=\"name\">dual_nonempty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Nonempty\">Matroid.Nonempty</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Nonempty\">Matroid.Nonempty</a> <span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">﹡</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L135-L136","name":"Matroid.dual_finite","line":135,"kind":"instance","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.dual_finite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual_finite\"><span class=\"name\">Matroid</span>.<span class=\"name\">dual_finite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Finite\">Matroid.Finite</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Finite\">Matroid.Finite</a> <span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">﹡</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L131-L133","name":"Matroid.dual_dep_iff_forall","line":131,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.dual_dep_iff_forall","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual_dep_iff_forall\"><span class=\"name\">Matroid</span>.<span class=\"name\">dual_dep_iff_forall</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">﹡</a></span>.Dep <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Base <span class=\"fn\">B</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">B</span></span>)</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">M</span>.E</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L127-L129","name":"Matroid.dual_indep_iff_exists","line":127,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.dual_indep_iff_exists","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual_indep_iff_exists\"><span class=\"name\">Matroid</span>.<span class=\"name\">dual_indep_iff_exists</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hI : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">M</span>.E</span></span>)</span> <a href=\"./Mathlib/Data/Matroid/Dual.html#_auto._@.Mathlib.Data.Matroid.Dual._hyg.1976\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">﹡</a></span>.Indep <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (B : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Base <span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">I</span> <span class=\"fn\">B</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L125-L125","name":"Matroid.dual_ground","line":125,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.dual_ground","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual_ground\"><span class=\"name\">Matroid</span>.<span class=\"name\">dual_ground</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">﹡</a></span>.E</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">M</span>.E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L122-L123","name":"Matroid.dual_indep_iff_exists'","line":122,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.dual_indep_iff_exists'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual_indep_iff_exists'\"><span class=\"name\">Matroid</span>.<span class=\"name\">dual_indep_iff_exists'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">﹡</a></span>.Indep <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">M</span>.E</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∃ (B : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Base <span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">I</span> <span class=\"fn\">B</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L118-L120","name":"Matroid.«term_﹡»","line":118,"kind":"def","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.«term_﹡»","doc":"The `﹡` symbol, which denotes matroid duality.\n(This is distinct from the usual `*` symbol for multiplication, due to precedence issues. )"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.«term_﹡»\"><span class=\"name\">Matroid</span>.<span class=\"name\">«term_﹡»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L116-L116","name":"Matroid.dual","line":116,"kind":"def","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.dual","doc":"The dual of a matroid; the bases are the complements (w.r.t `M.E`) of the bases of `M`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\"><span class=\"name\">Matroid</span>.<span class=\"name\">dual</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L41-L113","name":"Matroid.dualIndepMatroid","line":41,"kind":"def","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.dualIndepMatroid","doc":"Given `M : Matroid α`, the `IndepMatroid α` whose independent sets are\nthe subsets of `M.E` that are disjoint from some base of `M` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dualIndepMatroid\"><span class=\"name\">Matroid</span>.<span class=\"name\">dualIndepMatroid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid\">IndepMatroid</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L41-L41","name":"Matroid.dualIndepMatroid_E","line":41,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.dualIndepMatroid_E","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dualIndepMatroid_E\"><span class=\"name\">Matroid</span>.<span class=\"name\">dualIndepMatroid_E</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dualIndepMatroid\">Matroid.dualIndepMatroid</a> <span class=\"fn\">M</span></span>)</span>.E</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">M</span>.E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Matroid/Dual.lean#L41-L41","name":"Matroid.dualIndepMatroid_Indep","line":41,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Dual.html#Matroid.dualIndepMatroid_Indep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dualIndepMatroid_Indep\"><span class=\"name\">Matroid</span>.<span class=\"name\">dualIndepMatroid_Indep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dualIndepMatroid\">Matroid.dualIndepMatroid</a> <span class=\"fn\">M</span></span>)</span>.Indep <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">M</span>.E</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∃ (B : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Base <span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">I</span> <span class=\"fn\">B</span></span></span></span></span>)</span></span></div></div>"}]}