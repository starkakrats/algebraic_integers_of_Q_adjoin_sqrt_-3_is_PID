{"name":"Mathlib.CategoryTheory.Idempotents.KaroubiKaroubi","instances":[{"typeNames":["CategoryTheory.Idempotents.KaroubiKaroubi.inverse"],"name":"CategoryTheory.Idempotents.KaroubiKaroubi.instAdditiveKaroubiKaroubiInstCategoryKaroubiInstCategoryKaroubiInstPreadditiveKaroubiInstCategoryKaroubiInstPreadditiveKaroubiInstCategoryKaroubiInverse","className":"CategoryTheory.Functor.Additive"},{"typeNames":["CategoryTheory.Equivalence.functor"],"name":"CategoryTheory.Idempotents.KaroubiKaroubi.equivalence.additive_functor","className":"CategoryTheory.Functor.Additive"},{"typeNames":["CategoryTheory.Equivalence.inverse"],"name":"CategoryTheory.Idempotents.KaroubiKaroubi.equivalence.additive_inverse","className":"CategoryTheory.Functor.Additive"}],"imports":["Init","Mathlib.CategoryTheory.Idempotents.Karoubi"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L87-L88","name":"CategoryTheory.Idempotents.KaroubiKaroubi.equivalence.additive_inverse","line":87,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence.additive_inverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence.additive_inverse\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">equivalence</span>.<span class=\"name\">additive_inverse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/AdditiveFunctor.html#CategoryTheory.Functor.Additive\">CategoryTheory.Functor.Additive</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence\">CategoryTheory.Idempotents.KaroubiKaroubi.equivalence</a> <span class=\"fn\">C</span></span>)</span>.inverse</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L83-L84","name":"CategoryTheory.Idempotents.KaroubiKaroubi.equivalence.additive_functor","line":83,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence.additive_functor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence.additive_functor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">equivalence</span>.<span class=\"name\">additive_functor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/AdditiveFunctor.html#CategoryTheory.Functor.Additive\">CategoryTheory.Functor.Additive</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence\">CategoryTheory.Idempotents.KaroubiKaroubi.equivalence</a> <span class=\"fn\">C</span></span>)</span>.functor</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L76-L80","name":"CategoryTheory.Idempotents.KaroubiKaroubi.equivalence","line":76,"kind":"def","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence","doc":"The equivalence `Karoubi C ≌ Karoubi (Karoubi C)` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">equivalence</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">C</span></span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">C</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L75-L75","name":"CategoryTheory.Idempotents.KaroubiKaroubi.equivalence_unitIso","line":75,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence_unitIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence_unitIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">equivalence_unitIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence\">CategoryTheory.Idempotents.KaroubiKaroubi.equivalence</a> <span class=\"fn\">C</span></span>)</span>.unitIso</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.unitIso\">CategoryTheory.Idempotents.KaroubiKaroubi.unitIso</a> <span class=\"fn\">C</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L75-L75","name":"CategoryTheory.Idempotents.KaroubiKaroubi.equivalence_inverse","line":75,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence_inverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence_inverse\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">equivalence_inverse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence\">CategoryTheory.Idempotents.KaroubiKaroubi.equivalence</a> <span class=\"fn\">C</span></span>)</span>.inverse</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.inverse\">CategoryTheory.Idempotents.KaroubiKaroubi.inverse</a> <span class=\"fn\">C</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L75-L75","name":"CategoryTheory.Idempotents.KaroubiKaroubi.equivalence_functor","line":75,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence_functor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence_functor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">equivalence_functor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence\">CategoryTheory.Idempotents.KaroubiKaroubi.equivalence</a> <span class=\"fn\">C</span></span>)</span>.functor</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubi\">CategoryTheory.Idempotents.toKaroubi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">C</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L75-L75","name":"CategoryTheory.Idempotents.KaroubiKaroubi.equivalence_counitIso","line":75,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence_counitIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence_counitIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">equivalence_counitIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence\">CategoryTheory.Idempotents.KaroubiKaroubi.equivalence</a> <span class=\"fn\">C</span></span>)</span>.counitIso</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.counitIso\">CategoryTheory.Idempotents.KaroubiKaroubi.counitIso</a> <span class=\"fn\">C</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L59-L71","name":"CategoryTheory.Idempotents.KaroubiKaroubi.counitIso","line":59,"kind":"def","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.counitIso","doc":"The counit isomorphism of the equivalence "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.counitIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">counitIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.inverse\">CategoryTheory.Idempotents.KaroubiKaroubi.inverse</a> <span class=\"fn\">C</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubi\">CategoryTheory.Idempotents.toKaroubi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L58-L58","name":"CategoryTheory.Idempotents.KaroubiKaroubi.counitIso_hom_app_f_f","line":58,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.counitIso_hom_app_f_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.counitIso_hom_app_f_f\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">counitIso_hom_app_f_f</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.counitIso\">CategoryTheory.Idempotents.KaroubiKaroubi.counitIso</a> <span class=\"fn\">C</span></span>)</span>.hom</span>.app <span class=\"fn\">P</span></span>)</span>.f</span>.f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.p</span>.f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L58-L58","name":"CategoryTheory.Idempotents.KaroubiKaroubi.counitIso_inv_app_f_f","line":58,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.counitIso_inv_app_f_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.counitIso_inv_app_f_f\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">counitIso_inv_app_f_f</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.counitIso\">CategoryTheory.Idempotents.KaroubiKaroubi.counitIso</a> <span class=\"fn\">C</span></span>)</span>.inv</span>.app <span class=\"fn\">P</span></span>)</span>.f</span>.f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.p</span>.f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L53-L54","name":"CategoryTheory.Idempotents.KaroubiKaroubi.unitIso","line":53,"kind":"def","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.unitIso","doc":"The unit isomorphism of the equivalence "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.unitIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">unitIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">C</span></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubi\">CategoryTheory.Idempotents.toKaroubi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.inverse\">CategoryTheory.Idempotents.KaroubiKaroubi.inverse</a> <span class=\"fn\">C</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L52-L52","name":"CategoryTheory.Idempotents.KaroubiKaroubi.unitIso_hom_app_f","line":52,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.unitIso_hom_app_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.unitIso_hom_app_f\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">unitIso_hom_app_f</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.unitIso\">CategoryTheory.Idempotents.KaroubiKaroubi.unitIso</a> <span class=\"fn\">C</span></span>)</span>.hom</span>.app <span class=\"fn\">X</span></span>)</span>.f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span>.p</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L52-L52","name":"CategoryTheory.Idempotents.KaroubiKaroubi.unitIso_inv_app_f","line":52,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.unitIso_inv_app_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.unitIso_inv_app_f\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">unitIso_inv_app_f</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.unitIso\">CategoryTheory.Idempotents.KaroubiKaroubi.unitIso</a> <span class=\"fn\">C</span></span>)</span>.inv</span>.app <span class=\"fn\">X</span></span>)</span>.f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span>.p</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L49-L49","name":"CategoryTheory.Idempotents.KaroubiKaroubi.instAdditiveKaroubiKaroubiInstCategoryKaroubiInstCategoryKaroubiInstPreadditiveKaroubiInstCategoryKaroubiInstPreadditiveKaroubiInstCategoryKaroubiInverse","line":49,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.instAdditiveKaroubiKaroubiInstCategoryKaroubiInstCategoryKaroubiInstPreadditiveKaroubiInstCategoryKaroubiInstPreadditiveKaroubiInstCategoryKaroubiInverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.instAdditiveKaroubiKaroubiInstCategoryKaroubiInstCategoryKaroubiInstPreadditiveKaroubiInstCategoryKaroubiInstPreadditiveKaroubiInstCategoryKaroubiInverse\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">instAdditiveKaroubiKaroubiInstCategoryKaroubiInstCategoryKaroubiInstPreadditiveKaroubiInstCategoryKaroubiInstPreadditiveKaroubiInstCategoryKaroubiInverse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/AdditiveFunctor.html#CategoryTheory.Functor.Additive\">CategoryTheory.Functor.Additive</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.inverse\">CategoryTheory.Idempotents.KaroubiKaroubi.inverse</a> <span class=\"fn\">C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L44-L46","name":"CategoryTheory.Idempotents.KaroubiKaroubi.inverse","line":44,"kind":"def","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.inverse","doc":"The canonical functor `Karoubi (Karoubi C) ⥤ Karoubi C` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.inverse\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">inverse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L43-L43","name":"CategoryTheory.Idempotents.KaroubiKaroubi.inverse_obj_X","line":43,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.inverse_obj_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.inverse_obj_X\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">inverse_obj_X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.inverse\">CategoryTheory.Idempotents.KaroubiKaroubi.inverse</a> <span class=\"fn\">C</span></span>)</span>.obj <span class=\"fn\">P</span></span>)</span>.X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.X</span>.X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L43-L43","name":"CategoryTheory.Idempotents.KaroubiKaroubi.inverse_obj_p","line":43,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.inverse_obj_p","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.inverse_obj_p\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">inverse_obj_p</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.inverse\">CategoryTheory.Idempotents.KaroubiKaroubi.inverse</a> <span class=\"fn\">C</span></span>)</span>.obj <span class=\"fn\">P</span></span>)</span>.p</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.p</span>.f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L43-L43","name":"CategoryTheory.Idempotents.KaroubiKaroubi.inverse_map_f","line":43,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.inverse_map_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.inverse_map_f\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">inverse_map_f</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.inverse\">CategoryTheory.Idempotents.KaroubiKaroubi.inverse</a> <span class=\"fn\">C</span></span>)</span>.map <span class=\"fn\">f</span></span>)</span>.f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.f</span>.f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L37-L38","name":"CategoryTheory.Idempotents.KaroubiKaroubi.p_comm_f","line":37,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.p_comm_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.p_comm_f\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">p_comm_f</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.p</span>.f</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.f</span>.f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.f</span>.f</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Q</span>.p</span>.f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L36-L36","name":"CategoryTheory.Idempotents.KaroubiKaroubi.p_comm_f_assoc","line":36,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.p_comm_f_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.p_comm_f_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">p_comm_f_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Q</span>.X</span>.X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.p</span>.f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.f</span>.f</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.f</span>.f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Q</span>.p</span>.f</span> <span class=\"fn\">h</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L33-L34","name":"CategoryTheory.Idempotents.KaroubiKaroubi.idem_f","line":33,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.idem_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.idem_f\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">idem_f</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.p</span>.f</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.p</span>.f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.p</span>.f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L32-L32","name":"CategoryTheory.Idempotents.KaroubiKaroubi.idem_f_assoc","line":32,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.idem_f_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.idem_f_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">idem_f_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.X</span>.X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.p</span>.f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.p</span>.f</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.p</span>.f</span> <span class=\"fn\">h</span></span></span></div></div>"}]}