{"name":"Mathlib.Topology.ExtremallyDisconnected","instances":[{"typeNames":[],"name":"instTotallySeparatedSpace_1","className":"TotallySeparatedSpace"},{"typeNames":["Sigma"],"name":"instExtremallyDisconnected","className":"ExtremallyDisconnected"}],"imports":["Init","Mathlib.Topology.Homeomorph","Mathlib.Topology.StoneCech"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/ExtremallyDisconnected.lean#L287-L305","name":"instExtremallyDisconnected","line":287,"kind":"instance","docLink":"./Mathlib/Topology/ExtremallyDisconnected.html#instExtremallyDisconnected","doc":"The sigma-type of extremally disconnected spaces is extremally disconnected. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ExtremallyDisconnected.html#instExtremallyDisconnected\"><span class=\"name\">instExtremallyDisconnected</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{π : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span> <span class=\"fn\">i</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h₀ : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/ExtremallyDisconnected.html#ExtremallyDisconnected\">ExtremallyDisconnected</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span> <span class=\"fn\">i</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/ExtremallyDisconnected.html#ExtremallyDisconnected\">ExtremallyDisconnected</a> <span class=\"fn\">(<span class=\"fn\">(i : <span class=\"fn\">ι</span>) × <span class=\"fn\"><span class=\"fn\">π</span> <span class=\"fn\">i</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/ExtremallyDisconnected.lean#L279-L281","name":"CompactT2.projective_iff_extremallyDisconnnected","line":279,"kind":"theorem","docLink":"./Mathlib/Topology/ExtremallyDisconnected.html#CompactT2.projective_iff_extremallyDisconnnected","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ExtremallyDisconnected.html#CompactT2.projective_iff_extremallyDisconnnected\"><span class=\"name\">CompactT2</span>.<span class=\"name\">projective_iff_extremallyDisconnnected</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Compactness/Compact.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation.html#T2Space\">T2Space</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/ExtremallyDisconnected.html#CompactT2.Projective\">CompactT2.Projective</a> <span class=\"fn\">A</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/ExtremallyDisconnected.html#ExtremallyDisconnected\">ExtremallyDisconnected</a> <span class=\"fn\">A</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/ExtremallyDisconnected.lean#L251-L277","name":"CompactT2.ExtremallyDisconnected.projective","line":251,"kind":"theorem","docLink":"./Mathlib/Topology/ExtremallyDisconnected.html#CompactT2.ExtremallyDisconnected.projective","doc":"Theorem 2.5 in [Gleason, *Projective topological spaces*][gleason1958]:\nin the category of compact spaces and continuous maps,\nthe projective spaces are precisely the extremally disconnected spaces."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ExtremallyDisconnected.html#CompactT2.ExtremallyDisconnected.projective\"><span class=\"name\">CompactT2</span>.<span class=\"name\">ExtremallyDisconnected</span>.<span class=\"name\">projective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/ExtremallyDisconnected.html#ExtremallyDisconnected\">ExtremallyDisconnected</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Compactness/Compact.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation.html#T2Space\">T2Space</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/ExtremallyDisconnected.html#CompactT2.Projective\">CompactT2.Projective</a> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/ExtremallyDisconnected.lean#L242-L246","name":"ExtremallyDisconnected.homeoCompactToT2","line":242,"kind":"def","docLink":"./Mathlib/Topology/ExtremallyDisconnected.html#ExtremallyDisconnected.homeoCompactToT2","doc":"Lemma 2.3 in [Gleason, *Projective topological spaces*][gleason1958]:\na continuous surjection from a compact Hausdorff space to an extremally disconnected Hausdorff space\nsatisfying the \"Zorn subset condition\" is a homeomorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ExtremallyDisconnected.html#ExtremallyDisconnected.homeoCompactToT2\"><span class=\"name\">ExtremallyDisconnected</span>.<span class=\"name\">homeoCompactToT2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/ExtremallyDisconnected.html#ExtremallyDisconnected\">ExtremallyDisconnected</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation.html#T2Space\">T2Space</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation.html#T2Space\">T2Space</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Compactness/Compact.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ρ : <span class=\"fn\"><span class=\"fn\">E</span> → <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ_cont : <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">ρ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ρ_surj : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">ρ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(zorn_subset : <span class=\"fn\">∀ (<span class=\"fn\">E₀</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">E</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E₀</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">Set.univ</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">E₀</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ρ</span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">E₀</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">Set.univ</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Homeomorph.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/ExtremallyDisconnected.lean#L206-L209","name":"ExtremallyDisconnected.disjoint_closure_of_disjoint_isOpen","line":206,"kind":"theorem","docLink":"./Mathlib/Topology/ExtremallyDisconnected.html#ExtremallyDisconnected.disjoint_closure_of_disjoint_isOpen","doc":"Lemma 2.2 in [Gleason, *Projective topological spaces*][gleason1958]:\nin an extremally disconnected space, if $U_1$ and $U_2$ are disjoint open sets,\nthen $\\overline{U_1}$ and $\\overline{U_2}$ are also disjoint. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ExtremallyDisconnected.html#ExtremallyDisconnected.disjoint_closure_of_disjoint_isOpen\"><span class=\"name\">ExtremallyDisconnected</span>.<span class=\"name\">disjoint_closure_of_disjoint_isOpen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/ExtremallyDisconnected.html#ExtremallyDisconnected\">ExtremallyDisconnected</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U₁ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U₂ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">U₁</span> <span class=\"fn\">U₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hU₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">U₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hU₂ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">U₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#closure\">closure</a> <span class=\"fn\">U₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#closure\">closure</a> <span class=\"fn\">U₂</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/ExtremallyDisconnected.lean#L179-L201","name":"image_subset_closure_compl_image_compl_of_isOpen","line":179,"kind":"theorem","docLink":"./Mathlib/Topology/ExtremallyDisconnected.html#image_subset_closure_compl_image_compl_of_isOpen","doc":"Lemma 2.1 in [Gleason, *Projective topological spaces*][gleason1958]:\nif $\\rho$ is a continuous surjection from a topological space $E$ to a topological space $A$\nsatisfying the \"Zorn subset condition\", then $\\rho(G)$ is contained in\nthe closure of $A \\setminus \\rho(E \\setminus G)}$ for any open set $G$ of $E$. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ExtremallyDisconnected.html#image_subset_closure_compl_image_compl_of_isOpen\"><span class=\"name\">image_subset_closure_compl_image_compl_of_isOpen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ρ : <span class=\"fn\"><span class=\"fn\">E</span> → <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ_cont : <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">ρ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ρ_surj : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">ρ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(zorn_subset : <span class=\"fn\">∀ (<span class=\"fn\">E₀</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">E</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E₀</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">Set.univ</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">E₀</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ρ</span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">E₀</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">Set.univ</span></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hG : <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ρ</span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">G</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#closure\">closure</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ρ</span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\"><span class=\"fn\">G</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span></span>)</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/ExtremallyDisconnected.lean#L142-L173","name":"exists_compact_surjective_zorn_subset","line":142,"kind":"theorem","docLink":"./Mathlib/Topology/ExtremallyDisconnected.html#exists_compact_surjective_zorn_subset","doc":"Lemma 2.4 in [Gleason, *Projective topological spaces*][gleason1958]:\na continuous surjection $\\pi$ from a compact space $D$ to a Fréchet space $A$ restricts to\na compact subset $E$ of $D$, such that $\\pi$ maps $E$ onto $A$ and satisfies the\n\"Zorn subset condition\", where $\\pi(E_0) \\ne A$ for any proper closed subset $E_0 \\subsetneq E$. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ExtremallyDisconnected.html#exists_compact_surjective_zorn_subset\"><span class=\"name\">exists_compact_surjective_zorn_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation.html#T1Space\">T1Space</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Compactness/Compact.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{π : <span class=\"fn\"><span class=\"fn\">D</span> → <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(π_cont : <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">π</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(π_surj : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">π</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">D</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Compactness/Compact.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">↑<span class=\"fn\">E</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π</span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">E</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Set.univ</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">E₀</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">↑<span class=\"fn\">E</span></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E₀</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">Set.univ</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">E₀</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Function.html#Set.restrict\">Set.restrict</a> <span class=\"fn\">E</span> <span class=\"fn\">π</span></span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">E₀</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">Set.univ</span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/ExtremallyDisconnected.lean#L94-L129","name":"CompactT2.Projective.extremallyDisconnected","line":94,"kind":"theorem","docLink":"./Mathlib/Topology/ExtremallyDisconnected.html#CompactT2.Projective.extremallyDisconnected","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ExtremallyDisconnected.html#CompactT2.Projective.extremallyDisconnected\"><span class=\"name\">CompactT2</span>.<span class=\"name\">Projective</span>.<span class=\"name\">extremallyDisconnected</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Compactness/Compact.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation.html#T2Space\">T2Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/ExtremallyDisconnected.html#CompactT2.Projective\">CompactT2.Projective</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/ExtremallyDisconnected.html#ExtremallyDisconnected\">ExtremallyDisconnected</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/ExtremallyDisconnected.lean#L82-L91","name":"StoneCech.projective","line":82,"kind":"theorem","docLink":"./Mathlib/Topology/ExtremallyDisconnected.html#StoneCech.projective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ExtremallyDisconnected.html#StoneCech.projective\"><span class=\"name\">StoneCech</span>.<span class=\"name\">projective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Order.html#DiscreteTopology\">DiscreteTopology</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/ExtremallyDisconnected.html#CompactT2.Projective\">CompactT2.Projective</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/StoneCech.html#StoneCech\">StoneCech</a> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/ExtremallyDisconnected.lean#L73-L77","name":"CompactT2.Projective","line":73,"kind":"def","docLink":"./Mathlib/Topology/ExtremallyDisconnected.html#CompactT2.Projective","doc":"The assertion `CompactT2.Projective` states that given continuous maps\n`f : X → Z` and `g : Y → Z` with `g` surjective between `t_2`, compact topological spaces,\nthere exists a continuous lift `h : X → Y`, such that `f = g ∘ h`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ExtremallyDisconnected.html#CompactT2.Projective\"><span class=\"name\">CompactT2</span>.<span class=\"name\">Projective</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/ExtremallyDisconnected.lean#L53-L64","name":"instTotallySeparatedSpace_1","line":53,"kind":"instance","docLink":"./Mathlib/Topology/ExtremallyDisconnected.html#instTotallySeparatedSpace_1","doc":"Extremally disconnected spaces are totally separated. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ExtremallyDisconnected.html#instTotallySeparatedSpace_1\"><span class=\"name\">instTotallySeparatedSpace_1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/ExtremallyDisconnected.html#ExtremallyDisconnected\">ExtremallyDisconnected</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation.html#T2Space\">T2Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallySeparatedSpace\">TotallySeparatedSpace</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/ExtremallyDisconnected.lean#L47-L47","name":"ExtremallyDisconnected.open_closure","line":47,"kind":"def","docLink":"./Mathlib/Topology/ExtremallyDisconnected.html#ExtremallyDisconnected.open_closure","doc":"The closure of every open set is open. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ExtremallyDisconnected.html#ExtremallyDisconnected.open_closure\"><span class=\"name\">ExtremallyDisconnected</span>.<span class=\"name\">open_closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Topology/ExtremallyDisconnected.html#ExtremallyDisconnected\">ExtremallyDisconnected</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">U</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#closure\">closure</a> <span class=\"fn\">U</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/ExtremallyDisconnected.lean#L45-L45","name":"ExtremallyDisconnected.mk","line":45,"kind":"ctor","docLink":"./Mathlib/Topology/ExtremallyDisconnected.html#ExtremallyDisconnected.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ExtremallyDisconnected.html#ExtremallyDisconnected.mk\"><span class=\"name\">ExtremallyDisconnected</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(open_closure : <span class=\"fn\">∀ (<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">U</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#closure\">closure</a> <span class=\"fn\">U</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/ExtremallyDisconnected.html#ExtremallyDisconnected\">ExtremallyDisconnected</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/ExtremallyDisconnected.lean#L45-L47","name":"ExtremallyDisconnected","line":45,"kind":"class","docLink":"./Mathlib/Topology/ExtremallyDisconnected.html#ExtremallyDisconnected","doc":"An extremally disconnected topological space is a space\nin which the closure of every open set is open. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ExtremallyDisconnected.html#ExtremallyDisconnected\"><span class=\"name\">ExtremallyDisconnected</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}