{"name":"Mathlib.Data.Nat.SuccPred","instances":[{"typeNames":["Nat"],"name":"Nat.instSuccOrderNatToPreorderToPartialOrderStrictOrderedSemiring","className":"SuccOrder"},{"typeNames":["Nat"],"name":"Nat.instPredOrderNatToPreorderToPartialOrderStrictOrderedSemiring","className":"PredOrder"},{"typeNames":["Nat"],"name":"Nat.instIsSuccArchimedeanNatToPreorderToPartialOrderStrictOrderedSemiringInstSuccOrderNatToPreorderToPartialOrderStrictOrderedSemiring","className":"IsSuccArchimedean"},{"typeNames":["Nat"],"name":"Nat.instIsPredArchimedeanNatToPreorderToPartialOrderStrictOrderedSemiringInstPredOrderNatToPreorderToPartialOrderStrictOrderedSemiring","className":"IsPredArchimedean"}],"imports":["Init","Mathlib.Data.Fin.Basic","Mathlib.Order.SuccPred.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/SuccPred.lean#L96-L96","name":"CovBy.coe_fin","line":96,"kind":"theorem","docLink":"./Mathlib/Data/Nat/SuccPred.html#CovBy.coe_fin","doc":"**Alias** of the reverse direction of `Fin.coe_covBy_iff`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/SuccPred.html#CovBy.coe_fin\"><span class=\"name\">CovBy</span>.<span class=\"name\">coe_fin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">⋖</a> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">⋖</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/SuccPred.lean#L92-L93","name":"Fin.coe_covBy_iff","line":92,"kind":"theorem","docLink":"./Mathlib/Data/Nat/SuccPred.html#Fin.coe_covBy_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/SuccPred.html#Fin.coe_covBy_iff\"><span class=\"name\">Fin</span>.<span class=\"name\">coe_covBy_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">⋖</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">⋖</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/SuccPred.lean#L85-L86","name":"Nat.covBy_iff_succ_eq","line":85,"kind":"theorem","docLink":"./Mathlib/Data/Nat/SuccPred.html#Nat.covBy_iff_succ_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/SuccPred.html#Nat.covBy_iff_succ_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">covBy_iff_succ_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">⋖</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/SuccPred.lean#L78-L80","name":"Nat.forall_ne_zero_iff","line":78,"kind":"theorem","docLink":"./Mathlib/Data/Nat/SuccPred.html#Nat.forall_ne_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/SuccPred.html#Nat.forall_ne_zero_iff\"><span class=\"name\">Nat</span>.<span class=\"name\">forall_ne_zero_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">i</span></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/SuccPred.lean#L75-L76","name":"Nat.instIsPredArchimedeanNatToPreorderToPartialOrderStrictOrderedSemiringInstPredOrderNatToPreorderToPartialOrderStrictOrderedSemiring","line":75,"kind":"instance","docLink":"./Mathlib/Data/Nat/SuccPred.html#Nat.instIsPredArchimedeanNatToPreorderToPartialOrderStrictOrderedSemiringInstPredOrderNatToPreorderToPartialOrderStrictOrderedSemiring","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/SuccPred.html#Nat.instIsPredArchimedeanNatToPreorderToPartialOrderStrictOrderedSemiringInstPredOrderNatToPreorderToPartialOrderStrictOrderedSemiring\"><span class=\"name\">Nat</span>.<span class=\"name\">instIsPredArchimedeanNatToPreorderToPartialOrderStrictOrderedSemiringInstPredOrderNatToPreorderToPartialOrderStrictOrderedSemiring</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#IsPredArchimedean\">IsPredArchimedean</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/SuccPred.lean#L72-L73","name":"Nat.instIsSuccArchimedeanNatToPreorderToPartialOrderStrictOrderedSemiringInstSuccOrderNatToPreorderToPartialOrderStrictOrderedSemiring","line":72,"kind":"instance","docLink":"./Mathlib/Data/Nat/SuccPred.html#Nat.instIsSuccArchimedeanNatToPreorderToPartialOrderStrictOrderedSemiringInstSuccOrderNatToPreorderToPartialOrderStrictOrderedSemiring","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/SuccPred.html#Nat.instIsSuccArchimedeanNatToPreorderToPartialOrderStrictOrderedSemiringInstSuccOrderNatToPreorderToPartialOrderStrictOrderedSemiring\"><span class=\"name\">Nat</span>.<span class=\"name\">instIsSuccArchimedeanNatToPreorderToPartialOrderStrictOrderedSemiringInstSuccOrderNatToPreorderToPartialOrderStrictOrderedSemiring</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#IsSuccArchimedean\">IsSuccArchimedean</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/SuccPred.lean#L70-L70","name":"Nat.le_succ_iff_eq_or_le","line":70,"kind":"theorem","docLink":"./Mathlib/Data/Nat/SuccPred.html#Nat.le_succ_iff_eq_or_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/SuccPred.html#Nat.le_succ_iff_eq_or_le\"><span class=\"name\">Nat</span>.<span class=\"name\">le_succ_iff_eq_or_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat.succ\">Nat.succ</a> <span class=\"fn\">n</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat.succ\">Nat.succ</a> <span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/SuccPred.lean#L63-L67","name":"Nat.pred_iterate","line":63,"kind":"theorem","docLink":"./Mathlib/Data/Nat/SuccPred.html#Nat.pred_iterate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/SuccPred.html#Nat.pred_iterate\"><span class=\"name\">Nat</span>.<span class=\"name\">pred_iterate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\"><a href=\"./Init/Prelude.html#Nat.pred\">Nat.pred</a><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a></a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/SuccPred.lean#L56-L60","name":"Nat.succ_iterate","line":56,"kind":"theorem","docLink":"./Mathlib/Data/Nat/SuccPred.html#Nat.succ_iterate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/SuccPred.html#Nat.succ_iterate\"><span class=\"name\">Nat</span>.<span class=\"name\">succ_iterate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\"><a href=\"./Init/Prelude.html#Nat.succ\">Nat.succ</a><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a></a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/SuccPred.lean#L52-L53","name":"Nat.pred_eq_pred","line":52,"kind":"theorem","docLink":"./Mathlib/Data/Nat/SuccPred.html#Nat.pred_eq_pred","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/SuccPred.html#Nat.pred_eq_pred\"><span class=\"name\">Nat</span>.<span class=\"name\">pred_eq_pred</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Order.pred</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Nat.pred\">Nat.pred</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/SuccPred.lean#L47-L48","name":"Nat.succ_eq_succ","line":47,"kind":"theorem","docLink":"./Mathlib/Data/Nat/SuccPred.html#Nat.succ_eq_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/SuccPred.html#Nat.succ_eq_succ\"><span class=\"name\">Nat</span>.<span class=\"name\">succ_eq_succ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Order.succ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Nat.succ\">Nat.succ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/SuccPred.lean#L30-L44","name":"Nat.instPredOrderNatToPreorderToPartialOrderStrictOrderedSemiring","line":30,"kind":"instance","docLink":"./Mathlib/Data/Nat/SuccPred.html#Nat.instPredOrderNatToPreorderToPartialOrderStrictOrderedSemiring","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/SuccPred.html#Nat.instPredOrderNatToPreorderToPartialOrderStrictOrderedSemiring\"><span class=\"name\">Nat</span>.<span class=\"name\">instPredOrderNatToPreorderToPartialOrderStrictOrderedSemiring</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#PredOrder\">PredOrder</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/SuccPred.lean#L25-L26","name":"Nat.instSuccOrderNatToPreorderToPartialOrderStrictOrderedSemiring","line":25,"kind":"instance","docLink":"./Mathlib/Data/Nat/SuccPred.html#Nat.instSuccOrderNatToPreorderToPartialOrderStrictOrderedSemiring","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/SuccPred.html#Nat.instSuccOrderNatToPreorderToPartialOrderStrictOrderedSemiring\"><span class=\"name\">Nat</span>.<span class=\"name\">instSuccOrderNatToPreorderToPartialOrderStrictOrderedSemiring</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#SuccOrder\">SuccOrder</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"}]}