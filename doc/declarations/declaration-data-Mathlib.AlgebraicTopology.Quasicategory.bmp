{"name":"Mathlib.AlgebraicTopology.Quasicategory","instances":[{"typeNames":[],"name":"SSet.instQuasicategory","className":"SSet.Quasicategory"}],"imports":["Init","Mathlib.AlgebraicTopology.KanComplex"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicTopology/Quasicategory.lean#L58-L69","name":"SSet.quasicategory_of_filler","line":58,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/Quasicategory.html#SSet.quasicategory_of_filler","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/Quasicategory.html#SSet.quasicategory_of_filler\"><span class=\"name\">SSet</span>.<span class=\"name\">quasicategory_of_filler</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(S : <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet\">SSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(filler : <span class=\"fn\">∀ ⦃<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>⦄ ⦃<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span></span>)</span></span>⦄ (<span class=\"fn\">σ₀</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn\">SSet.horn</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">S</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">i</span></span> →\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Std/Data/Fin/Basic.html#Fin.last\">Fin.last</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span></span>)</span></span></span> →\n      <span class=\"fn\">∃ (σ : <span class=\"fn\"><span class=\"fn\">S</span>.obj <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span></span>)</span></span>)</span></span>)</span></span>),\n        <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span></span>)</span></span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i</span></span>),\n          <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">S</span> <span class=\"fn\">j</span> <span class=\"fn\">σ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>             <span class=\"fn\"><span class=\"fn\">σ₀</span>.app <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.face\">SSet.horn.face</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">h</span></span>)</span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/Quasicategory.html#SSet.Quasicategory\">SSet.Quasicategory</a> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicTopology/Quasicategory.lean#L55-L56","name":"SSet.instQuasicategory","line":55,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/Quasicategory.html#SSet.instQuasicategory","doc":"Every Kan complex is a quasicategory.\n\n[Kerodon, 003C] "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/Quasicategory.html#SSet.instQuasicategory\"><span class=\"name\">SSet</span>.<span class=\"name\">instQuasicategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(S : <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet\">SSet</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/KanComplex.html#SSet.KanComplex\">SSet.KanComplex</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/Quasicategory.html#SSet.Quasicategory\">SSet.Quasicategory</a> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicTopology/Quasicategory.lean#L40-L50","name":"SSet.Quasicategory.hornFilling","line":40,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/Quasicategory.html#SSet.Quasicategory.hornFilling","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/Quasicategory.html#SSet.Quasicategory.hornFilling\"><span class=\"name\">SSet</span>.<span class=\"name\">Quasicategory</span>.<span class=\"name\">hornFilling</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet\">SSet</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/Quasicategory.html#SSet.Quasicategory\">SSet.Quasicategory</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h0 : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">i</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Std/Data/Fin/Basic.html#Fin.last\">Fin.last</a> <span class=\"fn\">n</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(σ₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn\">SSet.horn</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (σ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex\">SSet.standardSimplex</a>.obj <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">S</span></span>),\n  <span class=\"fn\"><span class=\"fn\">σ₀</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.hornInclusion\">SSet.hornInclusion</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">σ</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicTopology/Quasicategory.lean#L36-L36","name":"SSet.Quasicategory.hornFilling'","line":36,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/Quasicategory.html#SSet.Quasicategory.hornFilling'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/Quasicategory.html#SSet.Quasicategory.hornFilling'\"><span class=\"name\">SSet</span>.<span class=\"name\">Quasicategory</span>.<span class=\"name\">hornFilling'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet\">SSet</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/Quasicategory.html#SSet.Quasicategory\">SSet.Quasicategory</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span></span>)</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(σ₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn\">SSet.horn</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(_h0 : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">i</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(_hn : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Std/Data/Fin/Basic.html#Fin.last\">Fin.last</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (σ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex\">SSet.standardSimplex</a>.obj <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span></span>)</span></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">S</span></span>),\n  <span class=\"fn\"><span class=\"fn\">σ₀</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.hornInclusion\">SSet.hornInclusion</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span></span>)</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">σ</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicTopology/Quasicategory.lean#L35-L35","name":"SSet.Quasicategory.mk","line":35,"kind":"ctor","docLink":"./Mathlib/AlgebraicTopology/Quasicategory.html#SSet.Quasicategory.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/Quasicategory.html#SSet.Quasicategory.mk\"><span class=\"name\">SSet</span>.<span class=\"name\">Quasicategory</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet\">SSet</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hornFilling' : <span class=\"fn\">∀ ⦃<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>⦄ ⦃<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span></span>)</span></span>⦄ (<span class=\"fn\">σ₀</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn\">SSet.horn</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">S</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">i</span></span> →\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Std/Data/Fin/Basic.html#Fin.last\">Fin.last</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span></span>)</span></span></span> →\n      <span class=\"fn\">∃ (σ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex\">SSet.standardSimplex</a>.obj <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span></span>)</span></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">S</span></span>),\n        <span class=\"fn\"><span class=\"fn\">σ₀</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.hornInclusion\">SSet.hornInclusion</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span></span>)</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">σ</span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/Quasicategory.html#SSet.Quasicategory\">SSet.Quasicategory</a> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicTopology/Quasicategory.lean#L35-L38","name":"SSet.Quasicategory","line":35,"kind":"class","docLink":"./Mathlib/AlgebraicTopology/Quasicategory.html#SSet.Quasicategory","doc":"A simplicial set `S` is a *quasicategory* if it satisfies the following horn-filling condition:\nfor every `n : ℕ` and `0 < i < n`,\nevery map of simplicial sets `σ₀ : Λ[n, i] → S` can be extended to a map `σ : Δ[n] → S`.\n\n[Kerodon, 003A] "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/Quasicategory.html#SSet.Quasicategory\"><span class=\"name\">SSet</span>.<span class=\"name\">Quasicategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(S : <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet\">SSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}