{"name":"Mathlib.CategoryTheory.Category.Quiv","instances":[{"typeNames":["CategoryTheory.Quiv","_builtin_typeu"],"name":"CategoryTheory.Quiv.instCoeSortQuivType","className":"CoeSort"},{"typeNames":["CategoryTheory.Bundled.α"],"name":"CategoryTheory.Quiv.str'","className":"Quiver"},{"typeNames":["CategoryTheory.Quiv"],"name":"CategoryTheory.Quiv.instInhabitedQuiv","className":"Inhabited"},{"typeNames":["CategoryTheory.Quiv"],"name":"CategoryTheory.Quiv.category","className":"CategoryTheory.Category"}],"imports":["Init","Mathlib.CategoryTheory.Adjunction.Basic","Mathlib.CategoryTheory.Category.Cat","Mathlib.CategoryTheory.PathCategory"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Quiv.lean#L113-L129","name":"CategoryTheory.Quiv.adj","line":113,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv.adj","doc":"The adjunction between forming the free category on a quiver, and forgetting a category to a quiver.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv.adj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Quiv</span>.<span class=\"name\">adj</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Cat.free\">CategoryTheory.Cat.free</a> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <a href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv.forget\">CategoryTheory.Quiv.forget</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Quiv.lean#L100-L103","name":"CategoryTheory.Quiv.lift","line":100,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv.lift","doc":"Any prefunctor into a category lifts to a functor from the path category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv.lift\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Quiv</span>.<span class=\"name\">lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Prefunctor\">⥤q</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/PathCategory.html#CategoryTheory.Paths\">CategoryTheory.Paths</a> <span class=\"fn\">V</span></span>)</span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Quiv.lean#L99-L99","name":"CategoryTheory.Quiv.lift_obj","line":99,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv.lift_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv.lift_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Quiv</span>.<span class=\"name\">lift_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Prefunctor\">⥤q</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/PathCategory.html#CategoryTheory.Paths\">CategoryTheory.Paths</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv.lift\">CategoryTheory.Quiv.lift</a> <span class=\"fn\">F</span></span>)</span>.obj <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Quiv.lean#L99-L99","name":"CategoryTheory.Quiv.lift_map","line":99,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv.lift_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv.lift_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Quiv</span>.<span class=\"name\">lift_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Prefunctor\">⥤q</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/PathCategory.html#CategoryTheory.Paths\">CategoryTheory.Paths</a> <span class=\"fn\">V</span></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv.lift\">CategoryTheory.Quiv.lift</a> <span class=\"fn\">F</span></span>)</span>.map <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/PathCategory.html#CategoryTheory.composePath\">CategoryTheory.composePath</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Path.html#Prefunctor.mapPath\">Prefunctor.mapPath</a> <span class=\"fn\">F</span> <span class=\"fn\">f</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Quiv.lean#L74-L90","name":"CategoryTheory.Cat.free","line":74,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Cat.free","doc":"The functor sending each quiver to its path category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Cat.free\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Cat</span>.<span class=\"name\">free</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv\">CategoryTheory.Quiv</a> <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Quiv.lean#L73-L73","name":"CategoryTheory.Cat.free_map_obj","line":73,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Cat.free_map_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Cat.free_map_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Cat</span>.<span class=\"name\">free_map_obj</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <a href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv\">CategoryTheory.Quiv</a>} (<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)\n  (<span class=\"fn\">X_1</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">V</span> : <a href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv\">CategoryTheory.Quiv</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.of\">CategoryTheory.Cat.of</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/PathCategory.html#CategoryTheory.Paths\">CategoryTheory.Paths</a> <span class=\"fn\">↑<span class=\"fn\">V</span></span></span>)</span></span></span>)</span> <span class=\"fn\">X</span></span>)</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Cat.free\">CategoryTheory.Cat.free</a>.map <span class=\"fn\">F</span></span>)</span>.obj <span class=\"fn\">X_1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">X_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Quiv.lean#L73-L73","name":"CategoryTheory.Cat.free_obj","line":73,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Cat.free_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Cat.free_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Cat</span>.<span class=\"name\">free_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv\">CategoryTheory.Quiv</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Cat.free\">CategoryTheory.Cat.free</a>.obj <span class=\"fn\">V</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.of\">CategoryTheory.Cat.of</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/PathCategory.html#CategoryTheory.Paths\">CategoryTheory.Paths</a> <span class=\"fn\">↑<span class=\"fn\">V</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Quiv.lean#L73-L73","name":"CategoryTheory.Cat.free_map_map","line":73,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Cat.free_map_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Cat.free_map_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Cat</span>.<span class=\"name\">free_map_map</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <a href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv\">CategoryTheory.Quiv</a>} (<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)\n  {<span class=\"fn\">X_1 </span>Y_1 : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">V</span> : <a href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv\">CategoryTheory.Quiv</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.of\">CategoryTheory.Cat.of</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/PathCategory.html#CategoryTheory.Paths\">CategoryTheory.Paths</a> <span class=\"fn\">↑<span class=\"fn\">V</span></span></span>)</span></span></span>)</span> <span class=\"fn\">X</span></span>)</span></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X_1</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y_1</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Cat.free\">CategoryTheory.Cat.free</a>.map <span class=\"fn\">F</span></span>)</span>.map <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Path.html#Prefunctor.mapPath\">Prefunctor.mapPath</a> <span class=\"fn\">F</span> <span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Quiv.lean#L61-L64","name":"CategoryTheory.Quiv.forget","line":61,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv.forget","doc":"The forgetful functor from categories to quivers. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv.forget\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Quiv</span>.<span class=\"name\">forget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a> <a href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv\">CategoryTheory.Quiv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Quiv.lean#L60-L60","name":"CategoryTheory.Quiv.forget_obj","line":60,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv.forget_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv.forget_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Quiv</span>.<span class=\"name\">forget_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv.forget\">CategoryTheory.Quiv.forget</a>.obj <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv.of\">CategoryTheory.Quiv.of</a> <span class=\"fn\">↑<span class=\"fn\">C</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Quiv.lean#L60-L60","name":"CategoryTheory.Quiv.forget_map","line":60,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv.forget_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv.forget_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Quiv</span>.<span class=\"name\">forget_map</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a>} (<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv.forget\">CategoryTheory.Quiv.forget</a>.map <span class=\"fn\">F</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">F</span>.toPrefunctor</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Quiv.lean#L51-L55","name":"CategoryTheory.Quiv.category","line":51,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv.category","doc":"Category structure on `Quiv` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv.category\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Quiv</span>.<span class=\"name\">category</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <a href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv\">CategoryTheory.Quiv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Quiv.lean#L47-L48","name":"CategoryTheory.Quiv.instInhabitedQuiv","line":47,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv.instInhabitedQuiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv.instInhabitedQuiv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Quiv</span>.<span class=\"name\">instInhabitedQuiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv\">CategoryTheory.Quiv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Quiv.lean#L42-L43","name":"CategoryTheory.Quiv.of","line":42,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv.of","doc":"Construct a bundled `Quiv` from the underlying type and the typeclass. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv.of\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Quiv</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv\">CategoryTheory.Quiv</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Quiv.lean#L36-L37","name":"CategoryTheory.Quiv.str'","line":36,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv.str'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv.str'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Quiv</span>.<span class=\"name\">str'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv\">CategoryTheory.Quiv</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">↑<span class=\"fn\">C</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Quiv.lean#L34-L34","name":"CategoryTheory.Quiv.instCoeSortQuivType","line":34,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv.instCoeSortQuivType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv.instCoeSortQuivType\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Quiv</span>.<span class=\"name\">instCoeSortQuivType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv\">CategoryTheory.Quiv</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Quiv.lean#L27-L28","name":"CategoryTheory.Quiv","line":27,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv","doc":"Category of quivers. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Quiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (u + 1) u (v + 1))</div></div>"}]}