{"name":"Mathlib.SetTheory.Cardinal.Cofinality","instances":[],"imports":["Init","Mathlib.SetTheory.Cardinal.Ordinal","Mathlib.SetTheory.Ordinal.FixedPoint"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L1256-L1260","name":"Ordinal.sup_sequence_lt_omega1","line":1256,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.sup_sequence_lt_omega1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.sup_sequence_lt_omega1\"><span class=\"name\">Ordinal</span>.<span class=\"name\">sup_sequence_lt_omega1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(o : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u_3 u_2}</a>         </span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ho : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">o</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Ordinal.html#Cardinal.aleph\">Cardinal.aleph</a> <span class=\"fn\">1</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.sup\">Ordinal.sup</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Ordinal.html#Cardinal.aleph\">Cardinal.aleph</a> <span class=\"fn\">1</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L1240-L1244","name":"Cardinal.lt_cof_power","line":1240,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.lt_cof_power","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.lt_cof_power\"><span class=\"name\">Cardinal</span>.<span class=\"name\">lt_cof_power</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_2}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_2}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b1 : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">a</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L1222-L1237","name":"Cardinal.lt_power_cof","line":1222,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.lt_power_cof","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.lt_power_cof\"><span class=\"name\">Cardinal</span>.<span class=\"name\">lt_power_cof</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span> → <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L1215-L1219","name":"Cardinal.univ_inaccessible","line":1215,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.univ_inaccessible","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.univ_inaccessible\"><span class=\"name\">Cardinal</span>.<span class=\"name\">univ_inaccessible</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsInaccessible\">Cardinal.IsInaccessible</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.univ\">Cardinal.univ.{u, v}</a>   </span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L1209-L1211","name":"Cardinal.IsInaccessible.mk","line":1209,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsInaccessible.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsInaccessible.mk\"><span class=\"name\">Cardinal</span>.<span class=\"name\">IsInaccessible</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_2}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₃ : <span class=\"fn\">∀ <span class=\"fn\">x</span> &lt; <span class=\"fn\">c</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsInaccessible\">Cardinal.IsInaccessible</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L1205-L1206","name":"Cardinal.IsInaccessible","line":1205,"kind":"def","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsInaccessible","doc":"A cardinal is inaccessible if it is an uncountable regular strong limit cardinal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsInaccessible\"><span class=\"name\">Cardinal</span>.<span class=\"name\">IsInaccessible</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_2}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L1198-L1201","name":"Cardinal.deriv_lt_ord","line":1198,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.deriv_lt_ord","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.deriv_lt_ord\"><span class=\"name\">Cardinal</span>.<span class=\"name\">deriv_lt_ord</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular\">Cardinal.IsRegular</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc' : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ <span class=\"fn\">i</span> &lt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/FixedPoint.html#Ordinal.deriv\">Ordinal.deriv</a> <span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L1192-L1195","name":"Cardinal.derivBFamily_lt_ord","line":1192,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.derivBFamily_lt_ord","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.derivBFamily_lt_ord\"><span class=\"name\">Cardinal</span>.<span class=\"name\">derivBFamily_lt_ord</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span> → <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular\">Cardinal.IsRegular</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hι : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">Ordinal.card</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc' : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) (<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span>), <span class=\"fn\">∀ <span class=\"fn\">b</span> &lt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/FixedPoint.html#Ordinal.derivBFamily\">Ordinal.derivBFamily</a> <span class=\"fn\">o</span> <span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L1185-L1189","name":"Cardinal.derivBFamily_lt_ord_lift","line":1185,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.derivBFamily_lt_ord_lift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.derivBFamily_lt_ord_lift\"><span class=\"name\">Cardinal</span>.<span class=\"name\">derivBFamily_lt_ord_lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span> → <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>      → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>     </span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{max u v}</a>     }</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular\">Cardinal.IsRegular</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hι : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{v, u}</a>    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">Ordinal.card</a> <span class=\"fn\">o</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc' : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) (<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span>), <span class=\"fn\">∀ <span class=\"fn\">b</span> &lt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>     }</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/FixedPoint.html#Ordinal.derivBFamily\">Ordinal.derivBFamily</a> <span class=\"fn\">o</span> <span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L1179-L1182","name":"Cardinal.derivFamily_lt_ord","line":1179,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.derivFamily_lt_ord","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.derivFamily_lt_ord\"><span class=\"name\">Cardinal</span>.<span class=\"name\">derivFamily_lt_ord</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular\">Cardinal.IsRegular</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hι : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">ι</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc' : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\">∀ <span class=\"fn\">b</span> &lt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/FixedPoint.html#Ordinal.derivFamily\">Ordinal.derivFamily</a> <span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L1154-L1176","name":"Cardinal.derivFamily_lt_ord_lift","line":1154,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.derivFamily_lt_ord_lift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.derivFamily_lt_ord_lift\"><span class=\"name\">Cardinal</span>.<span class=\"name\">derivFamily_lt_ord_lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>      → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>     </span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{max u v}</a>     }</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular\">Cardinal.IsRegular</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hι : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{v, u}</a>    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">ι</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc' : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\">∀ <span class=\"fn\">b</span> &lt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>     }</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/FixedPoint.html#Ordinal.derivFamily\">Ordinal.derivFamily</a> <span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L1145-L1151","name":"Cardinal.nfp_lt_ord_of_isRegular","line":1145,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.nfp_lt_ord_of_isRegular","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.nfp_lt_ord_of_isRegular\"><span class=\"name\">Cardinal</span>.<span class=\"name\">nfp_lt_ord_of_isRegular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_2}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular\">Cardinal.IsRegular</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc' : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ <span class=\"fn\">i</span> &lt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/FixedPoint.html#Ordinal.nfp\">Ordinal.nfp</a> <span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L1138-L1142","name":"Cardinal.nfpBFamily_lt_ord_of_isRegular","line":1138,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.nfpBFamily_lt_ord_of_isRegular","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.nfpBFamily_lt_ord_of_isRegular\"><span class=\"name\">Cardinal</span>.<span class=\"name\">nfpBFamily_lt_ord_of_isRegular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span> → <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular\">Cardinal.IsRegular</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ho : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">Ordinal.card</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc' : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) (<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span>), <span class=\"fn\">∀ <span class=\"fn\">b</span> &lt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/FixedPoint.html#Ordinal.nfpBFamily\">Ordinal.nfpBFamily</a> <span class=\"fn\">o</span> <span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L1131-L1135","name":"Cardinal.nfpBFamily_lt_ord_lift_of_isRegular","line":1131,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.nfpBFamily_lt_ord_lift_of_isRegular","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.nfpBFamily_lt_ord_lift_of_isRegular\"><span class=\"name\">Cardinal</span>.<span class=\"name\">nfpBFamily_lt_ord_lift_of_isRegular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span> → <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>      → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>     </span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{max u v}</a>     }</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular\">Cardinal.IsRegular</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ho : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{v, u}</a>    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">Ordinal.card</a> <span class=\"fn\">o</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc' : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) (<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span>), <span class=\"fn\">∀ <span class=\"fn\">b</span> &lt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>     }</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/FixedPoint.html#Ordinal.nfpBFamily\">Ordinal.nfpBFamily</a> <span class=\"fn\">o</span> <span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L1125-L1128","name":"Cardinal.nfpFamily_lt_ord_of_isRegular","line":1125,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.nfpFamily_lt_ord_of_isRegular","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.nfpFamily_lt_ord_of_isRegular\"><span class=\"name\">Cardinal</span>.<span class=\"name\">nfpFamily_lt_ord_of_isRegular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular\">Cardinal.IsRegular</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hι : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">ι</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc' : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\">∀ <span class=\"fn\">b</span> &lt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/FixedPoint.html#Ordinal.nfpFamily\">Ordinal.nfpFamily</a> <span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L1117-L1122","name":"Cardinal.nfpFamily_lt_ord_lift_of_isRegular","line":1117,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.nfpFamily_lt_ord_lift_of_isRegular","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.nfpFamily_lt_ord_lift_of_isRegular\"><span class=\"name\">Cardinal</span>.<span class=\"name\">nfpFamily_lt_ord_lift_of_isRegular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>      → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>     </span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{max u v}</a>     }</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular\">Cardinal.IsRegular</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hι : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{v, u}</a>    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">ι</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc' : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\">∀ <span class=\"fn\">b</span> &lt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>     }</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/FixedPoint.html#Ordinal.nfpFamily\">Ordinal.nfpFamily</a> <span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L1112-L1114","name":"Cardinal.sum_lt_of_isRegular","line":1112,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.sum_lt_of_isRegular","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.sum_lt_of_isRegular\"><span class=\"name\">Cardinal</span>.<span class=\"name\">sum_lt_of_isRegular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular\">Cardinal.IsRegular</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hι : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">ι</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.sum\">Cardinal.sum</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L1107-L1109","name":"Cardinal.sum_lt_lift_of_isRegular","line":1107,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.sum_lt_lift_of_isRegular","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.sum_lt_lift_of_isRegular\"><span class=\"name\">Cardinal</span>.<span class=\"name\">sum_lt_lift_of_isRegular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{max u v}</a>     </span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{max u v}</a>     }</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular\">Cardinal.IsRegular</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hι : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{v, u}</a>    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">ι</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.sum\">Cardinal.sum</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L1102-L1104","name":"Cardinal.iSup_lt_of_isRegular","line":1102,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.iSup_lt_of_isRegular","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.iSup_lt_of_isRegular\"><span class=\"name\">Cardinal</span>.<span class=\"name\">iSup_lt_of_isRegular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_2}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_2}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular\">Cardinal.IsRegular</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hι : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">ι</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#iSup\">iSup</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L1097-L1099","name":"Cardinal.iSup_lt_lift_of_isRegular","line":1097,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.iSup_lt_lift_of_isRegular","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.iSup_lt_lift_of_isRegular\"><span class=\"name\">Cardinal</span>.<span class=\"name\">iSup_lt_lift_of_isRegular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{max u v}</a>     </span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{max u v}</a>     }</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular\">Cardinal.IsRegular</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hι : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{v, u}</a>    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">ι</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#iSup\">iSup</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L1092-L1094","name":"Cardinal.bsup_lt_ord_of_isRegular","line":1092,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.bsup_lt_ord_of_isRegular","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.bsup_lt_ord_of_isRegular\"><span class=\"name\">Cardinal</span>.<span class=\"name\">bsup_lt_ord_of_isRegular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u_2 u_3}</a>         }</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u_2 u_3}</a>         ) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u_2 u_3}</a>         </span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{max u_2 u_3}</a>         }</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular\">Cardinal.IsRegular</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hι : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">Ordinal.card</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u_2 u_3}</a>         ) (<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.bsup\">Ordinal.bsup</a> <span class=\"fn\">o</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L1086-L1089","name":"Cardinal.bsup_lt_ord_lift_of_isRegular","line":1086,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.bsup_lt_ord_lift_of_isRegular","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.bsup_lt_ord_lift_of_isRegular\"><span class=\"name\">Cardinal</span>.<span class=\"name\">bsup_lt_ord_lift_of_isRegular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>     </span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{max u v}</a>     }</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular\">Cardinal.IsRegular</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hι : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{v, u}</a>    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">Ordinal.card</a> <span class=\"fn\">o</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) (<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.bsup\">Ordinal.bsup</a> <span class=\"fn\">o</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L1081-L1083","name":"Cardinal.blsub_lt_ord_of_isRegular","line":1081,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.blsub_lt_ord_of_isRegular","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.blsub_lt_ord_of_isRegular\"><span class=\"name\">Cardinal</span>.<span class=\"name\">blsub_lt_ord_of_isRegular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u_2 u_3}</a>         }</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u_2 u_3}</a>         ) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u_2 u_3}</a>         </span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{max u_2 u_3}</a>         }</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular\">Cardinal.IsRegular</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ho : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">Ordinal.card</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u_2 u_3}</a>         ) (<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.blsub\">Ordinal.blsub</a> <span class=\"fn\">o</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L1075-L1078","name":"Cardinal.blsub_lt_ord_lift_of_isRegular","line":1075,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.blsub_lt_ord_lift_of_isRegular","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.blsub_lt_ord_lift_of_isRegular\"><span class=\"name\">Cardinal</span>.<span class=\"name\">blsub_lt_ord_lift_of_isRegular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>     </span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{max u v}</a>     }</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular\">Cardinal.IsRegular</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ho : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{v, u}</a>    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">Ordinal.card</a> <span class=\"fn\">o</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) (<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.blsub\">Ordinal.blsub</a> <span class=\"fn\">o</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L1070-L1072","name":"Cardinal.sup_lt_ord_of_isRegular","line":1070,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.sup_lt_ord_of_isRegular","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.sup_lt_ord_of_isRegular\"><span class=\"name\">Cardinal</span>.<span class=\"name\">sup_lt_ord_of_isRegular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> (max u_2 u_3)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u_2 u_3}</a>         </span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{max u_2 u_3}</a>         }</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular\">Cardinal.IsRegular</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hι : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">ι</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.sup\">Ordinal.sup</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L1065-L1067","name":"Cardinal.sup_lt_ord_lift_of_isRegular","line":1065,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.sup_lt_ord_lift_of_isRegular","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.sup_lt_ord_lift_of_isRegular\"><span class=\"name\">Cardinal</span>.<span class=\"name\">sup_lt_ord_lift_of_isRegular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>     </span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{max u v}</a>     }</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular\">Cardinal.IsRegular</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hι : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{v, u}</a>    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">ι</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.sup\">Ordinal.sup</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L1060-L1062","name":"Cardinal.lsub_lt_ord_of_isRegular","line":1060,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.lsub_lt_ord_of_isRegular","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.lsub_lt_ord_of_isRegular\"><span class=\"name\">Cardinal</span>.<span class=\"name\">lsub_lt_ord_of_isRegular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> (max u_2 u_3)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u_2 u_3}</a>         </span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{max u_2 u_3}</a>         }</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular\">Cardinal.IsRegular</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hι : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">ι</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lsub\">Ordinal.lsub</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L1055-L1057","name":"Cardinal.lsub_lt_ord_lift_of_isRegular","line":1055,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.lsub_lt_ord_lift_of_isRegular","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.lsub_lt_ord_lift_of_isRegular\"><span class=\"name\">Cardinal</span>.<span class=\"name\">lsub_lt_ord_lift_of_isRegular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>     </span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{max u v}</a>     }</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular\">Cardinal.IsRegular</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hι : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{v, u}</a>    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">ι</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lsub\">Ordinal.lsub</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L1035-L1052","name":"Cardinal.le_range_of_union_finset_eq_top","line":1035,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.le_range_of_union_finset_eq_top","doc":"If an infinite type `β` can be expressed as a union of finite sets,\nthen the cardinality of the collection of those finite sets\nmust be at least the cardinality of `β`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.le_range_of_union_finset_eq_top\"><span class=\"name\">Cardinal</span>.<span class=\"name\">le_range_of_union_finset_eq_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Infinite\">Infinite</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\"><span class=\"fn\">⋃ (a : <span class=\"fn\">α</span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">β</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">f</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L1024-L1028","name":"Cardinal.exists_infinite_fiber","line":1024,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.exists_infinite_fiber","doc":"A function whose codomain's cardinality is infinite but strictly smaller than its domain's\nhas an infinite fiber.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.exists_infinite_fiber\"><span class=\"name\">Cardinal</span>.<span class=\"name\">exists_infinite_fiber</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w' : <span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Infinite\">Infinite</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (a : <span class=\"fn\">α</span>), <span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Infinite\">Infinite</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">{<span class=\"fn\">a</span>}</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L1013-L1018","name":"Cardinal.infinite_pigeonhole_card_lt","line":1013,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.infinite_pigeonhole_card_lt","doc":"A function whose codomain's cardinality is infinite but strictly smaller than its domain's\nhas a fiber with cardinality strictly great than the codomain.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.infinite_pigeonhole_card_lt\"><span class=\"name\">Cardinal</span>.<span class=\"name\">infinite_pigeonhole_card_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w' : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (a : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">{<span class=\"fn\">a</span>}</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L1005-L1007","name":"Cardinal.isRegular_aleph_succ","line":1005,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.isRegular_aleph_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.isRegular_aleph_succ\"><span class=\"name\">Cardinal</span>.<span class=\"name\">isRegular_aleph_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular\">Cardinal.IsRegular</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Ordinal.html#Cardinal.aleph\">Cardinal.aleph</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">o</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L1000-L1002","name":"Cardinal.isRegular_aleph'_succ","line":1000,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.isRegular_aleph'_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.isRegular_aleph'_succ\"><span class=\"name\">Cardinal</span>.<span class=\"name\">isRegular_aleph'_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega\">Ordinal.omega</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular\">Cardinal.IsRegular</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Ordinal.html#Cardinal.aleph'\">Cardinal.aleph'</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">o</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L995-L997","name":"Cardinal.isRegular_aleph_one","line":995,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.isRegular_aleph_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.isRegular_aleph_one\"><span class=\"name\">Cardinal</span>.<span class=\"name\">isRegular_aleph_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular\">Cardinal.IsRegular</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Ordinal.html#Cardinal.aleph\">Cardinal.aleph</a> <span class=\"fn\">1</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L973-L992","name":"Cardinal.isRegular_succ","line":973,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.isRegular_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.isRegular_succ\"><span class=\"name\">Cardinal</span>.<span class=\"name\">isRegular_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular\">Cardinal.IsRegular</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">c</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L969-L970","name":"Cardinal.isRegular_aleph0","line":969,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.isRegular_aleph0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.isRegular_aleph0\"><span class=\"name\">Cardinal</span>.<span class=\"name\">isRegular_aleph0</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular\">Cardinal.IsRegular</a> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L965-L966","name":"Cardinal.isRegular_cof","line":965,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.isRegular_cof","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.isRegular_cof\"><span class=\"name\">Cardinal</span>.<span class=\"name\">isRegular_cof</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">Ordinal.IsLimit</a> <span class=\"fn\">o</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular\">Cardinal.IsRegular</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">o</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L960-L962","name":"Cardinal.IsRegular.ord_pos","line":960,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular.ord_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular.ord_pos\"><span class=\"name\">Cardinal</span>.<span class=\"name\">IsRegular</span>.<span class=\"name\">ord_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_2}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular\">Cardinal.IsRegular</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L956-L957","name":"Cardinal.IsRegular.pos","line":956,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular.pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular.pos\"><span class=\"name\">Cardinal</span>.<span class=\"name\">IsRegular</span>.<span class=\"name\">pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_2}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular\">Cardinal.IsRegular</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L952-L953","name":"Cardinal.IsRegular.cof_eq","line":952,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular.cof_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular.cof_eq\"><span class=\"name\">Cardinal</span>.<span class=\"name\">IsRegular</span>.<span class=\"name\">cof_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_2}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular\">Cardinal.IsRegular</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L948-L949","name":"Cardinal.IsRegular.aleph0_le","line":948,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular.aleph0_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular.aleph0_le\"><span class=\"name\">Cardinal</span>.<span class=\"name\">IsRegular</span>.<span class=\"name\">aleph0_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_2}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular\">Cardinal.IsRegular</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L944-L945","name":"Cardinal.IsRegular","line":944,"kind":"def","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular","doc":"A cardinal is regular if it is infinite and it equals its own cofinality. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsRegular\"><span class=\"name\">Cardinal</span>.<span class=\"name\">IsRegular</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_2}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L923-L940","name":"Cardinal.mk_subset_mk_lt_cof","line":923,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.mk_subset_mk_lt_cof","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.mk_subset_mk_lt_cof\"><span class=\"name\">Cardinal</span>.<span class=\"name\">mk_subset_mk_lt_cof</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ <span class=\"fn\">x</span> &lt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">α</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">α</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">{ <span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> // <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span></span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L892-L920","name":"Cardinal.mk_bounded_subset","line":892,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.mk_bounded_subset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.mk_bounded_subset\"><span class=\"name\">Cardinal</span>.<span class=\"name\">mk_bounded_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ <span class=\"fn\">x</span> &lt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">α</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">α</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#IsWellOrder\">IsWellOrder</a> <span class=\"fn\">α</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">α</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.type\">Ordinal.type</a> <span class=\"fn\">r</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">{ <span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> // <span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#Set.Bounded\">Set.Bounded</a> <span class=\"fn\">r</span> <span class=\"fn\">s</span></span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L880-L889","name":"Cardinal.isStrongLimit_beth","line":880,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.isStrongLimit_beth","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.isStrongLimit_beth\"><span class=\"name\">Cardinal</span>.<span class=\"name\">isStrongLimit_beth</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Limit.html#Order.IsSuccLimit\">Order.IsSuccLimit</a> <span class=\"fn\">o</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsStrongLimit\">Cardinal.IsStrongLimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Ordinal.html#Cardinal.beth\">Cardinal.beth</a> <span class=\"fn\">o</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L876-L877","name":"Cardinal.IsStrongLimit.isLimit","line":876,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsStrongLimit.isLimit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsStrongLimit.isLimit\"><span class=\"name\">Cardinal</span>.<span class=\"name\">IsStrongLimit</span>.<span class=\"name\">isLimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_2}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsStrongLimit\">Cardinal.IsStrongLimit</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.IsLimit\">Cardinal.IsLimit</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L872-L873","name":"Cardinal.IsStrongLimit.isSuccLimit","line":872,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsStrongLimit.isSuccLimit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsStrongLimit.isSuccLimit\"><span class=\"name\">Cardinal</span>.<span class=\"name\">IsStrongLimit</span>.<span class=\"name\">isSuccLimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_2}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsStrongLimit\">Cardinal.IsStrongLimit</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Limit.html#Order.IsSuccLimit\">Order.IsSuccLimit</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L866-L869","name":"Cardinal.isStrongLimit_aleph0","line":866,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.isStrongLimit_aleph0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.isStrongLimit_aleph0\"><span class=\"name\">Cardinal</span>.<span class=\"name\">isStrongLimit_aleph0</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsStrongLimit\">Cardinal.IsStrongLimit</a> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L862-L863","name":"Cardinal.IsStrongLimit.two_power_lt","line":862,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsStrongLimit.two_power_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsStrongLimit.two_power_lt\"><span class=\"name\">Cardinal</span>.<span class=\"name\">IsStrongLimit</span>.<span class=\"name\">two_power_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_2}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_2}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsStrongLimit\">Cardinal.IsStrongLimit</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L858-L859","name":"Cardinal.IsStrongLimit.ne_zero","line":858,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsStrongLimit.ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsStrongLimit.ne_zero\"><span class=\"name\">Cardinal</span>.<span class=\"name\">IsStrongLimit</span>.<span class=\"name\">ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_2}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsStrongLimit\">Cardinal.IsStrongLimit</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L854-L855","name":"Cardinal.IsStrongLimit","line":854,"kind":"def","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsStrongLimit","doc":"A cardinal is a strong limit if it is not zero and it is\nclosed under powersets. Note that `ℵ₀` is a strong limit by this definition. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Cardinal.IsStrongLimit\"><span class=\"name\">Cardinal</span>.<span class=\"name\">IsStrongLimit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_2}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L827-L840","name":"Ordinal.infinite_pigeonhole_set","line":827,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.infinite_pigeonhole_set","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.infinite_pigeonhole_set\"><span class=\"name\">Ordinal</span>.<span class=\"name\">infinite_pigeonhole_set</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">s</span></span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(θ : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hθ : <span class=\"fn\"><span class=\"fn\">θ</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">θ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">θ</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (a : <span class=\"fn\">α</span>) (t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">β</span></span>) (h : <span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">s</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">θ</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">↑<span class=\"fn\">t</span></span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ ⦃<span class=\"fn\">x</span> : <span class=\"fn\">β</span>⦄ (<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">t</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">x</span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span>)</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L819-L824","name":"Ordinal.infinite_pigeonhole_card","line":819,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.infinite_pigeonhole_card","doc":"Pigeonhole principle for a cardinality below the cardinality of the domain "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.infinite_pigeonhole_card\"><span class=\"name\">Ordinal</span>.<span class=\"name\">infinite_pigeonhole_card</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(θ : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hθ : <span class=\"fn\"><span class=\"fn\">θ</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">θ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">θ</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (a : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\">θ</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">{<span class=\"fn\">a</span>}</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L803-L815","name":"Ordinal.infinite_pigeonhole","line":803,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.infinite_pigeonhole","doc":"The infinite pigeonhole principle "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.infinite_pigeonhole\"><span class=\"name\">Ordinal</span>.<span class=\"name\">infinite_pigeonhole</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">β</span></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (a : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">{<span class=\"fn\">a</span>}</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">β</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L794-L799","name":"Ordinal.unbounded_of_unbounded_iUnion","line":794,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.unbounded_of_unbounded_iUnion","doc":"If the union of s is unbounded and s is smaller than the cofinality,\nthen s has an unbounded member "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.unbounded_of_unbounded_iUnion\"><span class=\"name\">Ordinal</span>.<span class=\"name\">unbounded_of_unbounded_iUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[wo : <span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#IsWellOrder\">IsWellOrder</a> <span class=\"fn\">α</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#Set.Unbounded\">Set.Unbounded</a> <span class=\"fn\">r</span> <span class=\"fn\">(<span class=\"fn\">⋃ (x : <span class=\"fn\">β</span>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">x</span></span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">β</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#StrictOrder.cof\">StrictOrder.cof</a> <span class=\"fn\">r</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (x : <span class=\"fn\">β</span>), <span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#Set.Unbounded\">Set.Unbounded</a> <span class=\"fn\">r</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L782-L789","name":"Ordinal.unbounded_of_unbounded_sUnion","line":782,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.unbounded_of_unbounded_sUnion","doc":"If the union of s is unbounded and s is smaller than the cofinality,\nthen s has an unbounded member "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.unbounded_of_unbounded_sUnion\"><span class=\"name\">Ordinal</span>.<span class=\"name\">unbounded_of_unbounded_sUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[wo : <span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#IsWellOrder\">IsWellOrder</a> <span class=\"fn\">α</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#Set.Unbounded\">Set.Unbounded</a> <span class=\"fn\">r</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Lattice.html#Set.sUnion\">⋃₀</a> <span class=\"fn\">s</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#StrictOrder.cof\">StrictOrder.cof</a> <span class=\"fn\">r</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ x ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#Set.Unbounded\">Set.Unbounded</a> <span class=\"fn\">r</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L757-L774","name":"Ordinal.cof_univ","line":757,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_univ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_univ\"><span class=\"name\">Ordinal</span>.<span class=\"name\">cof_univ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.univ\">Ordinal.univ.{u, v}</a>   </span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.univ\">Cardinal.univ.{u, v}</a>   </span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L740-L753","name":"Ordinal.cof_eq'","line":740,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_eq'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_eq'\"><span class=\"name\">Ordinal</span>.<span class=\"name\">cof_eq'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#IsWellOrder\">IsWellOrder</a> <span class=\"fn\">α</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">Ordinal.IsLimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.type\">Ordinal.type</a> <span class=\"fn\">r</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\">∃ b ∈ <span class=\"fn\">S</span>, <span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">↑<span class=\"fn\">S</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.type\">Ordinal.type</a> <span class=\"fn\">r</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L734-L737","name":"Ordinal.cof_omega","line":734,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_omega","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_omega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">cof_omega</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega\">Ordinal.omega</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L729-L730","name":"Ordinal.aleph_cof","line":729,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.aleph_cof","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.aleph_cof\"><span class=\"name\">Ordinal</span>.<span class=\"name\">aleph_cof</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ho : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">Ordinal.IsLimit</a> <span class=\"fn\">o</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Ordinal.html#Cardinal.aleph\">Cardinal.aleph</a> <span class=\"fn\">o</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">o</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L724-L725","name":"Ordinal.aleph'_cof","line":724,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.aleph'_cof","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.aleph'_cof\"><span class=\"name\">Ordinal</span>.<span class=\"name\">aleph'_cof</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ho : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">Ordinal.IsLimit</a> <span class=\"fn\">o</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Ordinal.html#Cardinal.aleph'\">Cardinal.aleph'</a> <span class=\"fn\">o</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">o</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L705-L720","name":"Ordinal.aleph0_le_cof","line":705,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.aleph0_le_cof","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.aleph0_le_cof\"><span class=\"name\">Ordinal</span>.<span class=\"name\">aleph0_le_cof</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">o</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">Ordinal.IsLimit</a> <span class=\"fn\">o</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L698-L702","name":"Ordinal.cof_add","line":698,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_add\"><span class=\"name\">Ordinal</span>.<span class=\"name\">cof_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L688-L694","name":"Ordinal.IsNormal.cof_le","line":688,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsNormal.cof_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsNormal.cof_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">cof_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">Ordinal.IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L683-L685","name":"Ordinal.IsNormal.cof_eq","line":683,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsNormal.cof_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsNormal.cof_eq\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">cof_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">Ordinal.IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">Ordinal.IsLimit</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L655-L680","name":"Ordinal.IsNormal.isFundamentalSequence","line":655,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsNormal.isFundamentalSequence","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsNormal.isFundamentalSequence\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">isFundamentalSequence</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">Ordinal.IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">Ordinal.IsLimit</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence\">Ordinal.IsFundamentalSequence</a> <span class=\"fn\">a</span> <span class=\"fn\">o</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence\">Ordinal.IsFundamentalSequence</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">o</span> <span class=\"fn\">fun (<span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) (<span class=\"fn\">hb</span> : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">b</span> <span class=\"fn\">hb</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L649-L652","name":"Ordinal.cof_cof","line":649,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_cof","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_cof\"><span class=\"name\">Ordinal</span>.<span class=\"name\">cof_cof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">a</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L615-L645","name":"Ordinal.exists_fundamental_sequence","line":615,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.exists_fundamental_sequence","doc":"Every ordinal has a fundamental sequence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.exists_fundamental_sequence\"><span class=\"name\">Ordinal</span>.<span class=\"name\">exists_fundamental_sequence</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (f : <span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">a</span></span>)</span></span></span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></span>),\n  <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence\">Ordinal.IsFundamentalSequence</a> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">a</span></span>)</span></span>)</span> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L600-L609","name":"Ordinal.IsFundamentalSequence.trans","line":600,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence.trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence.trans\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsFundamentalSequence</span>.<span class=\"name\">trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o' : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence\">Ordinal.IsFundamentalSequence</a> <span class=\"fn\">a</span> <span class=\"fn\">o</span> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o'</span></span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence\">Ordinal.IsFundamentalSequence</a> <span class=\"fn\">o</span> <span class=\"fn\">o'</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence\">Ordinal.IsFundamentalSequence</a> <span class=\"fn\">a</span> <span class=\"fn\">o'</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) (<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o'</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L593-L597","name":"Ordinal.IsFundamentalSequence.monotone","line":593,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence.monotone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence.monotone\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsFundamentalSequence</span>.<span class=\"name\">monotone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence\">Ordinal.IsFundamentalSequence</a> <span class=\"fn\">a</span> <span class=\"fn\">o</span> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hi : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hj : <span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hij : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">j</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">j</span> <span class=\"fn\">hj</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L585-L590","name":"Ordinal.IsFundamentalSequence.succ","line":585,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence.succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence.succ\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsFundamentalSequence</span>.<span class=\"name\">succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence\">Ordinal.IsFundamentalSequence</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">o</span></span>)</span> <span class=\"fn\">1</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></span>) =&gt; <span class=\"fn\">o</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L581-L582","name":"Ordinal.IsFundamentalSequence.zero","line":581,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence.zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence.zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsFundamentalSequence</span>.<span class=\"name\">zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">0</span></span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence\">Ordinal.IsFundamentalSequence</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L577-L578","name":"Ordinal.IsFundamentalSequence.id_of_le_cof","line":577,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence.id_of_le_cof","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence.id_of_le_cof\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsFundamentalSequence</span>.<span class=\"name\">id_of_le_cof</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">o</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence\">Ordinal.IsFundamentalSequence</a> <span class=\"fn\">o</span> <span class=\"fn\">o</span> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span>) =&gt; <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L570-L574","name":"Ordinal.IsFundamentalSequence.ord_cof","line":570,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence.ord_cof","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence.ord_cof\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsFundamentalSequence</span>.<span class=\"name\">ord_cof</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence\">Ordinal.IsFundamentalSequence</a> <span class=\"fn\">a</span> <span class=\"fn\">o</span> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence\">Ordinal.IsFundamentalSequence</a> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">a</span></span>)</span></span>)</span>\n  <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) (<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">a</span></span>)</span></span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L566-L567","name":"Ordinal.IsFundamentalSequence.blsub_eq","line":566,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence.blsub_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence.blsub_eq\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsFundamentalSequence</span>.<span class=\"name\">blsub_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence\">Ordinal.IsFundamentalSequence</a> <span class=\"fn\">a</span> <span class=\"fn\">o</span> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.blsub\">Ordinal.blsub</a> <span class=\"fn\">o</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L561-L563","name":"Ordinal.IsFundamentalSequence.strict_mono","line":561,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence.strict_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence.strict_mono\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsFundamentalSequence</span>.<span class=\"name\">strict_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence\">Ordinal.IsFundamentalSequence</a> <span class=\"fn\">a</span> <span class=\"fn\">o</span> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hi : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hj : <span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">j</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">j</span> <span class=\"fn\">hj</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L555-L558","name":"Ordinal.IsFundamentalSequence.cof_eq","line":555,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence.cof_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence.cof_eq\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsFundamentalSequence</span>.<span class=\"name\">cof_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence\">Ordinal.IsFundamentalSequence</a> <span class=\"fn\">a</span> <span class=\"fn\">o</span> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L547-L548","name":"Ordinal.IsFundamentalSequence","line":547,"kind":"def","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence","doc":"A fundamental sequence for `a` is an increasing sequence of length `o = cof a` that converges at\n`a`. We provide `o` explicitly in order to avoid type rewrites. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.IsFundamentalSequence\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsFundamentalSequence</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L516-L542","name":"Ordinal.cof_eq_one_iff_is_succ","line":516,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_eq_one_iff_is_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_eq_one_iff_is_succ\"><span class=\"name\">Ordinal</span>.<span class=\"name\">cof_eq_one_iff_is_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>), <span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">a</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L500-L512","name":"Ordinal.cof_succ","line":500,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_succ\"><span class=\"name\">Ordinal</span>.<span class=\"name\">cof_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">o</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L495-L496","name":"Ordinal.cof_ne_zero","line":495,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_ne_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">cof_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L485-L492","name":"Ordinal.cof_eq_zero","line":485,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_eq_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">cof_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L478-L481","name":"Ordinal.cof_zero","line":478,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">cof_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L469-L471","name":"Ordinal.bsup_lt_ord","line":469,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.bsup_lt_ord","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.bsup_lt_ord\"><span class=\"name\">Ordinal</span>.<span class=\"name\">bsup_lt_ord</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ho : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">Ordinal.card</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) (<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.bsup\">Ordinal.bsup</a> <span class=\"fn\">o</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L464-L466","name":"Ordinal.bsup_lt_ord_lift","line":464,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.bsup_lt_ord_lift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.bsup_lt_ord_lift\"><span class=\"name\">Ordinal</span>.<span class=\"name\">bsup_lt_ord_lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>     </span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>     }</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ho : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{v, u}</a>    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">Ordinal.card</a> <span class=\"fn\">o</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) (<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.bsup\">Ordinal.bsup</a> <span class=\"fn\">o</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L458-L461","name":"Ordinal.cof_bsup_le","line":458,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_bsup_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_bsup_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">cof_bsup_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.bsup\">Ordinal.bsup</a> <span class=\"fn\">o</span> <span class=\"fn\">f</span></span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.bsup\">Ordinal.bsup</a> <span class=\"fn\">o</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">Ordinal.card</a> <span class=\"fn\">o</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L451-L455","name":"Ordinal.cof_bsup_le_lift","line":451,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_bsup_le_lift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_bsup_le_lift\"><span class=\"name\">Ordinal</span>.<span class=\"name\">cof_bsup_le_lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>     </span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.bsup\">Ordinal.bsup</a> <span class=\"fn\">o</span> <span class=\"fn\">f</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.bsup\">Ordinal.bsup</a> <span class=\"fn\">o</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{v, u}</a>    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">Ordinal.card</a> <span class=\"fn\">o</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L446-L448","name":"Ordinal.blsub_lt_ord","line":446,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.blsub_lt_ord","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.blsub_lt_ord\"><span class=\"name\">Ordinal</span>.<span class=\"name\">blsub_lt_ord</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ho : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">Ordinal.card</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) (<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.blsub\">Ordinal.blsub</a> <span class=\"fn\">o</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L440-L443","name":"Ordinal.blsub_lt_ord_lift","line":440,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.blsub_lt_ord_lift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.blsub_lt_ord_lift\"><span class=\"name\">Ordinal</span>.<span class=\"name\">blsub_lt_ord_lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>     </span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>     }</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ho : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{v, u}</a>    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">Ordinal.card</a> <span class=\"fn\">o</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) (<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.blsub\">Ordinal.blsub</a> <span class=\"fn\">o</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L435-L437","name":"Ordinal.cof_blsub_le","line":435,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_blsub_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_blsub_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">cof_blsub_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.blsub\">Ordinal.blsub</a> <span class=\"fn\">o</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">Ordinal.card</a> <span class=\"fn\">o</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L429-L432","name":"Ordinal.cof_blsub_le_lift","line":429,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_blsub_le_lift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_blsub_le_lift\"><span class=\"name\">Ordinal</span>.<span class=\"name\">cof_blsub_le_lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>     </span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.blsub\">Ordinal.blsub</a> <span class=\"fn\">o</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{v, u}</a>    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">Ordinal.card</a> <span class=\"fn\">o</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L420-L426","name":"Ordinal.le_cof_iff_blsub","line":420,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.le_cof_iff_blsub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.le_cof_iff_blsub\"><span class=\"name\">Ordinal</span>.<span class=\"name\">le_cof_iff_blsub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">b</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ {<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>} (<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.blsub\">Ordinal.blsub</a> <span class=\"fn\">o</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">Ordinal.card</a> <span class=\"fn\">o</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L411-L417","name":"Ordinal.exists_blsub_cof","line":411,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.exists_blsub_cof","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.exists_blsub_cof\"><span class=\"name\">Ordinal</span>.<span class=\"name\">exists_blsub_cof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (f : <span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">o</span></span>)</span></span></span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.blsub\">Ordinal.blsub</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">o</span></span>)</span></span>)</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L406-L408","name":"Ordinal.nfp_lt_ord","line":406,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.nfp_lt_ord","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.nfp_lt_ord\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nfp_lt_ord</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ <span class=\"fn\">i</span> &lt; <span class=\"fn\">c</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/FixedPoint.html#Ordinal.nfp\">Ordinal.nfp</a> <span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L400-L403","name":"Ordinal.nfpBFamily_lt_ord","line":400,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.nfpBFamily_lt_ord","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.nfpBFamily_lt_ord\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nfpBFamily_lt_ord</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span> → <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc' : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">Ordinal.card</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) (<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span>), <span class=\"fn\">∀ <span class=\"fn\">b</span> &lt; <span class=\"fn\">c</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/FixedPoint.html#Ordinal.nfpBFamily\">Ordinal.nfpBFamily</a> <span class=\"fn\">o</span> <span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L394-L397","name":"Ordinal.nfpBFamily_lt_ord_lift","line":394,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.nfpBFamily_lt_ord_lift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.nfpBFamily_lt_ord_lift\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nfpBFamily_lt_ord_lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span> → <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>      → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>     </span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>     }</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc' : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{v, u}</a>    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">Ordinal.card</a> <span class=\"fn\">o</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) (<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span>), <span class=\"fn\">∀ <span class=\"fn\">b</span> &lt; <span class=\"fn\">c</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>     }</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/FixedPoint.html#Ordinal.nfpBFamily\">Ordinal.nfpBFamily</a> <span class=\"fn\">o</span> <span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L389-L391","name":"Ordinal.nfpFamily_lt_ord","line":389,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.nfpFamily_lt_ord","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.nfpFamily_lt_ord\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nfpFamily_lt_ord</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc' : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">ι</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\">∀ <span class=\"fn\">b</span> &lt; <span class=\"fn\">c</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/FixedPoint.html#Ordinal.nfpFamily\">Ordinal.nfpFamily</a> <span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L377-L386","name":"Ordinal.nfpFamily_lt_ord_lift","line":377,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.nfpFamily_lt_ord_lift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.nfpFamily_lt_ord_lift\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nfpFamily_lt_ord_lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>      → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>     </span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>     }</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc' : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{v, u}</a>    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">ι</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\">∀ <span class=\"fn\">b</span> &lt; <span class=\"fn\">c</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>     }</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/FixedPoint.html#Ordinal.nfpFamily\">Ordinal.nfpFamily</a> <span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L372-L374","name":"Ordinal.iSup_lt","line":372,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.iSup_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.iSup_lt\"><span class=\"name\">Ordinal</span>.<span class=\"name\">iSup_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_2}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_2}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hι : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">ι</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#iSup\">iSup</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L363-L369","name":"Ordinal.iSup_lt_lift","line":363,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.iSup_lt_lift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.iSup_lt_lift\"><span class=\"name\">Ordinal</span>.<span class=\"name\">iSup_lt_lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{max u v}</a>     </span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{max u v}</a>     }</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hι : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{v, u}</a>    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">ι</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#iSup\">iSup</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L358-L360","name":"Ordinal.sup_lt_ord","line":358,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.sup_lt_ord","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.sup_lt_ord\"><span class=\"name\">Ordinal</span>.<span class=\"name\">sup_lt_ord</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hι : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">ι</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.sup\">Ordinal.sup</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L353-L355","name":"Ordinal.sup_lt_ord_lift","line":353,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.sup_lt_ord_lift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.sup_lt_ord_lift\"><span class=\"name\">Ordinal</span>.<span class=\"name\">sup_lt_ord_lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>     </span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>     }</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hι : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{v, u}</a>    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">ι</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.sup\">Ordinal.sup</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L347-L350","name":"Ordinal.cof_sup_le","line":347,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_sup_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_sup_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">cof_sup_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.sup\">Ordinal.sup</a> <span class=\"fn\">f</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.sup\">Ordinal.sup</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">ι</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L340-L344","name":"Ordinal.cof_sup_le_lift","line":340,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_sup_le_lift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_sup_le_lift\"><span class=\"name\">Ordinal</span>.<span class=\"name\">cof_sup_le_lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>     </span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.sup\">Ordinal.sup</a> <span class=\"fn\">f</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.sup\">Ordinal.sup</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{v, u}</a>    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">ι</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L335-L337","name":"Ordinal.lsub_lt_ord","line":335,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.lsub_lt_ord","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.lsub_lt_ord\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lsub_lt_ord</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hι : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">ι</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lsub\">Ordinal.lsub</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L327-L332","name":"Ordinal.lsub_lt_ord_lift","line":327,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.lsub_lt_ord_lift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.lsub_lt_ord_lift\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lsub_lt_ord_lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>     </span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>     }</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hι : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{v, u}</a>    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">ι</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lsub\">Ordinal.lsub</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L317-L324","name":"Ordinal.le_cof_iff_lsub","line":317,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.le_cof_iff_lsub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.le_cof_iff_lsub\"><span class=\"name\">Ordinal</span>.<span class=\"name\">le_cof_iff_lsub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">o</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ {<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lsub\">Ordinal.lsub</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o</span></span> → <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">ι</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L308-L314","name":"Ordinal.cof_lsub_le_lift","line":308,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_lsub_le_lift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_lsub_le_lift\"><span class=\"name\">Ordinal</span>.<span class=\"name\">cof_lsub_le_lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a>     </span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lsub\">Ordinal.lsub</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{v, u}</a>    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">ι</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L303-L305","name":"Ordinal.cof_lsub_le","line":303,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_lsub_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_lsub_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">cof_lsub_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lsub\">Ordinal.lsub</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">ι</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L297-L300","name":"Ordinal.exists_lsub_cof","line":297,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.exists_lsub_cof","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.exists_lsub_cof\"><span class=\"name\">Ordinal</span>.<span class=\"name\">exists_lsub_cof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (ι : <a href=\"./foundational_types.html\">Type</a> u) (f : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lsub\">Ordinal.lsub</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">ι</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">o</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L293-L294","name":"Ordinal.ord_cof_le","line":293,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.ord_cof_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.ord_cof_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">ord_cof_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">o</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L290-L290","name":"Ordinal.cof_ord_le","line":290,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_ord_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_ord_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">cof_ord_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_2}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">c</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L285-L287","name":"Ordinal.cof_le_card","line":285,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_le_card","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_le_card\"><span class=\"name\">Ordinal</span>.<span class=\"name\">cof_le_card</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">Ordinal.card</a> <span class=\"fn\">o</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L262-L282","name":"Ordinal.lift_cof","line":262,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.lift_cof","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.lift_cof\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lift_cof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{v}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{u, v}</a>    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">o</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.lift\">Ordinal.lift.{u, v}</a>    <span class=\"fn\">o</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L227-L258","name":"Ordinal.cof_eq_sInf_lsub","line":227,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_eq_sInf_lsub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_eq_sInf_lsub\"><span class=\"name\">Ordinal</span>.<span class=\"name\">cof_eq_sInf_lsub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet.sInf\">sInf</a> <span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u}</a> | <span class=\"fn\">∃ (ι : <a href=\"./foundational_types.html\">Type</a> u) (f : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lsub\">Ordinal.lsub</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">ι</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></span></span>}</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L222-L224","name":"Ordinal.cof_lsub_def_nonempty","line":222,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_lsub_def_nonempty","doc":"The set in the `lsub` characterization of `cof` is nonempty. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_lsub_def_nonempty\"><span class=\"name\">Ordinal</span>.<span class=\"name\">cof_lsub_def_nonempty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u}</a> | <span class=\"fn\">∃ (ι : <a href=\"./foundational_types.html\">Type</a> u) (f : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lsub\">Ordinal.lsub</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">ι</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></span></span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L179-L212","name":"Ordinal.ord_cof_eq","line":179,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.ord_cof_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.ord_cof_eq\"><span class=\"name\">Ordinal</span>.<span class=\"name\">ord_cof_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#IsWellOrder\">IsWellOrder</a> <span class=\"fn\">α</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#Set.Unbounded\">Set.Unbounded</a> <span class=\"fn\">r</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.type\">Ordinal.type</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/RelIso/Set.html#Subrel\">Subrel</a> <span class=\"fn\">r</span> <span class=\"fn\">S</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.type\">Ordinal.type</a> <span class=\"fn\">r</span></span>)</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L175-L176","name":"Ordinal.cof_eq","line":175,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_eq\"><span class=\"name\">Ordinal</span>.<span class=\"name\">cof_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#IsWellOrder\">IsWellOrder</a> <span class=\"fn\">α</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#Set.Unbounded\">Set.Unbounded</a> <span class=\"fn\">r</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">↑<span class=\"fn\">S</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.type\">Ordinal.type</a> <span class=\"fn\">r</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L171-L172","name":"Ordinal.lt_cof_type","line":171,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.lt_cof_type","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.lt_cof_type\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lt_cof_type</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#IsWellOrder\">IsWellOrder</a> <span class=\"fn\">α</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">↑<span class=\"fn\">S</span></span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.type\">Ordinal.type</a> <span class=\"fn\">r</span></span>)</span></span></span> → <span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#Set.Bounded\">Set.Bounded</a> <span class=\"fn\">r</span> <span class=\"fn\">S</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L167-L168","name":"Ordinal.cof_type_le","line":167,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_type_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_type_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">cof_type_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#IsWellOrder\">IsWellOrder</a> <span class=\"fn\">α</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#Set.Unbounded\">Set.Unbounded</a> <span class=\"fn\">r</span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.type\">Ordinal.type</a> <span class=\"fn\">r</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">↑<span class=\"fn\">S</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L160-L164","name":"Ordinal.le_cof_type","line":160,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.le_cof_type","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.le_cof_type\"><span class=\"name\">Ordinal</span>.<span class=\"name\">le_cof_type</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#IsWellOrder\">IsWellOrder</a> <span class=\"fn\">α</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.type\">Ordinal.type</a> <span class=\"fn\">r</span></span>)</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#Set.Unbounded\">Set.Unbounded</a> <span class=\"fn\">r</span> <span class=\"fn\">S</span></span> → <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">↑<span class=\"fn\">S</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L156-L157","name":"Ordinal.cof_type","line":156,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_type","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof_type\"><span class=\"name\">Ordinal</span>.<span class=\"name\">cof_type</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#IsWellOrder\">IsWellOrder</a> <span class=\"fn\">α</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\">Ordinal.cof</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.type\">Ordinal.type</a> <span class=\"fn\">r</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#StrictOrder.cof\">StrictOrder.cof</a> <span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L141-L153","name":"Ordinal.cof","line":141,"kind":"def","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof","doc":"Cofinality of an ordinal. This is the smallest cardinal of a\nsubset `S` of the ordinal which is unbounded, in the sense\n`∀ a, ∃ b ∈ S, a ≤ b`. It is defined for all ordinals, but\n`cof 0 = 0` and `cof (succ o) = 1`, so it is only really\ninteresting on limit ordinals (when it is an infinite cardinal). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Ordinal.cof\"><span class=\"name\">Ordinal</span>.<span class=\"name\">cof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L126-L128","name":"StrictOrder.cof_nonempty","line":126,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#StrictOrder.cof_nonempty","doc":"The set in the definition of `Order.StrictOrder.cof` is nonempty. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#StrictOrder.cof_nonempty\"><span class=\"name\">StrictOrder</span>.<span class=\"name\">cof_nonempty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Algebra/Classes.html#IsIrrefl\">IsIrrefl</a> <span class=\"fn\">α</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_1}</a> | <span class=\"fn\">∃ (S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#Set.Unbounded\">Set.Unbounded</a> <span class=\"fn\">r</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">↑<span class=\"fn\">S</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></span></span></span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L121-L122","name":"StrictOrder.cof","line":121,"kind":"def","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#StrictOrder.cof","doc":"Cofinality of a strict order `≺`. This is the smallest cardinality of a set `S : Set α` such\nthat `∀ a, ∃ b ∈ S, ¬ b ≺ a`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#StrictOrder.cof\"><span class=\"name\">StrictOrder</span>.<span class=\"name\">cof</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L114-L116","name":"RelIso.cof_eq","line":114,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#RelIso.cof_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#RelIso.cof_eq\"><span class=\"name\">RelIso</span>.<span class=\"name\">cof_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">β</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Algebra/Classes.html#IsRefl\">IsRefl</a> <span class=\"fn\">α</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Algebra/Classes.html#IsRefl\">IsRefl</a> <span class=\"fn\">β</span> <span class=\"fn\">s</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Mathlib/Order/RelIso/Basic.html#RelIso\">≃r</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Order.cof\">Order.cof</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Order.cof\">Order.cof</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L109-L111","name":"RelIso.cof_le","line":109,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#RelIso.cof_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#RelIso.cof_le\"><span class=\"name\">RelIso</span>.<span class=\"name\">cof_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">β</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Algebra/Classes.html#IsRefl\">IsRefl</a> <span class=\"fn\">β</span> <span class=\"fn\">s</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Mathlib/Order/RelIso/Basic.html#RelIso\">≃r</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Order.cof\">Order.cof</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Order.cof\">Order.cof</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L104-L106","name":"RelIso.cof_eq_lift","line":104,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#RelIso.cof_eq_lift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#RelIso.cof_eq_lift\"><span class=\"name\">RelIso</span>.<span class=\"name\">cof_eq_lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">β</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Algebra/Classes.html#IsRefl\">IsRefl</a> <span class=\"fn\">α</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Algebra/Classes.html#IsRefl\">IsRefl</a> <span class=\"fn\">β</span> <span class=\"fn\">s</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Mathlib/Order/RelIso/Basic.html#RelIso\">≃r</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{max u v, u}</a>         <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Order.cof\">Order.cof</a> <span class=\"fn\">r</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{max u v, v}</a>         <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Order.cof\">Order.cof</a> <span class=\"fn\">s</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L89-L101","name":"RelIso.cof_le_lift","line":89,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#RelIso.cof_le_lift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#RelIso.cof_le_lift\"><span class=\"name\">RelIso</span>.<span class=\"name\">cof_le_lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">β</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Algebra/Classes.html#IsRefl\">IsRefl</a> <span class=\"fn\">β</span> <span class=\"fn\">s</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Mathlib/Order/RelIso/Basic.html#RelIso\">≃r</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{max u v, u}</a>         <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Order.cof\">Order.cof</a> <span class=\"fn\">r</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{max u v, v}</a>         <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Order.cof\">Order.cof</a> <span class=\"fn\">s</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L79-L84","name":"Order.le_cof","line":79,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Order.le_cof","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Order.le_cof\"><span class=\"name\">Order</span>.<span class=\"name\">le_cof</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Algebra/Classes.html#IsRefl\">IsRefl</a> <span class=\"fn\">α</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Order.cof\">Order.cof</a> <span class=\"fn\">r</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ {<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\">∃ b ∈ <span class=\"fn\">S</span>, <span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">↑<span class=\"fn\">S</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L75-L76","name":"Order.cof_le","line":75,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Order.cof_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Order.cof_le\"><span class=\"name\">Order</span>.<span class=\"name\">cof_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\">∃ b ∈ <span class=\"fn\">S</span>, <span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Order.cof\">Order.cof</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">↑<span class=\"fn\">S</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L70-L72","name":"Order.cof_nonempty","line":70,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Order.cof_nonempty","doc":"The set in the definition of `Order.cof` is nonempty. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Order.cof_nonempty\"><span class=\"name\">Order</span>.<span class=\"name\">cof_nonempty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Algebra/Classes.html#IsRefl\">IsRefl</a> <span class=\"fn\">α</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_1}</a> | <span class=\"fn\">∃ (S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\">∃ b ∈ <span class=\"fn\">S</span>, <span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">↑<span class=\"fn\">S</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></span></span></span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Cardinal/Cofinality.lean#L65-L66","name":"Order.cof","line":65,"kind":"def","docLink":"./Mathlib/SetTheory/Cardinal/Cofinality.html#Order.cof","doc":"Cofinality of a reflexive order `≼`. This is the smallest cardinality\nof a subset `S : Set α` such that `∀ a, ∃ b ∈ S, a ≼ b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Cofinality.html#Order.cof\"><span class=\"name\">Order</span>.<span class=\"name\">cof</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_1}</a></div></div>"}]}