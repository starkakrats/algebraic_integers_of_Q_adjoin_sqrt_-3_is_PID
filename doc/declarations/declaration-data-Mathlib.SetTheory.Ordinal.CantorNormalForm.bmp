{"name":"Mathlib.SetTheory.Ordinal.CantorNormalForm","instances":[],"imports":["Init","Mathlib.SetTheory.Ordinal.Arithmetic","Mathlib.SetTheory.Ordinal.Exponential"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/CantorNormalForm.lean#L163-L174","name":"Ordinal.CNF_sorted","line":163,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_sorted","doc":"The exponents of the Cantor normal form are decreasing. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_sorted\"><span class=\"name\">Ordinal</span>.<span class=\"name\">CNF_sorted</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/Sort.html#List.Sorted\">List.Sorted</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.map\">List.map</a> <span class=\"fn\">Prod.fst</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF\">Ordinal.CNF</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/CantorNormalForm.lean#L150-L158","name":"Ordinal.CNF_snd_lt","line":150,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_snd_lt","doc":"Every coefficient in the Cantor normal form `CNF b o` is less than `b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_snd_lt\"><span class=\"name\">Ordinal</span>.<span class=\"name\">CNF_snd_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF\">Ordinal.CNF</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.2</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/CantorNormalForm.lean#L140-L145","name":"Ordinal.CNF_lt_snd","line":140,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_lt_snd","doc":"Every coefficient in a Cantor normal form is positive. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_lt_snd\"><span class=\"name\">Ordinal</span>.<span class=\"name\">CNF_lt_snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF\">Ordinal.CNF</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span></span> → <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/CantorNormalForm.lean#L134-L135","name":"Ordinal.CNF_fst_le","line":134,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_fst_le","doc":"Every exponent in the Cantor normal form `CNF b o` is less or equal to `o`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_fst_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">CNF_fst_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF\">Ordinal.CNF</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/CantorNormalForm.lean#L121-L129","name":"Ordinal.CNF_fst_le_log","line":121,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_fst_le_log","doc":"Every exponent in the Cantor normal form `CNF b o` is less or equal to `log b o`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_fst_le_log\"><span class=\"name\">Ordinal</span>.<span class=\"name\">CNF_fst_le_log</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF\">Ordinal.CNF</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Exponential.html#Ordinal.log\">Ordinal.log</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/CantorNormalForm.lean#L114-L116","name":"Ordinal.CNF_foldr","line":114,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_foldr","doc":"Evaluating the Cantor normal form of an ordinal returns the ordinal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_foldr\"><span class=\"name\">Ordinal</span>.<span class=\"name\">CNF_foldr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.foldr\">List.foldr</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a></span>) (<span class=\"fn\">r</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">p</span>.1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">r</span></span></span>)</span> <span class=\"fn\">0</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF\">Ordinal.CNF</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/CantorNormalForm.lean#L108-L109","name":"Ordinal.CNF_of_lt","line":108,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_of_lt\"><span class=\"name\">Ordinal</span>.<span class=\"name\">CNF_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ho : <span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF\">Ordinal.CNF</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">0</span>, <span class=\"fn\">o</span>)</span>]</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/CantorNormalForm.lean#L101-L104","name":"Ordinal.CNF_of_le_one","line":101,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_of_le_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_of_le_one\"><span class=\"name\">Ordinal</span>.<span class=\"name\">CNF_of_le_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ho : <span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF\">Ordinal.CNF</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">0</span>, <span class=\"fn\">o</span>)</span>]</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/CantorNormalForm.lean#L97-L97","name":"Ordinal.one_CNF","line":97,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.one_CNF","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.one_CNF\"><span class=\"name\">Ordinal</span>.<span class=\"name\">one_CNF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ho : <span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF\">Ordinal.CNF</a> <span class=\"fn\">1</span> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">0</span>, <span class=\"fn\">o</span>)</span>]</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/CantorNormalForm.lean#L93-L93","name":"Ordinal.zero_CNF","line":93,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.zero_CNF","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.zero_CNF\"><span class=\"name\">Ordinal</span>.<span class=\"name\">zero_CNF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ho : <span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF\">Ordinal.CNF</a> <span class=\"fn\">0</span> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">0</span>, <span class=\"fn\">o</span>)</span>]</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/CantorNormalForm.lean#L87-L89","name":"Ordinal.CNF_ne_zero","line":87,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_ne_zero","doc":"Recursive definition for the Cantor normal form. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_ne_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">CNF_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ho : <span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF\">Ordinal.CNF</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Exponential.html#Ordinal.log\">Ordinal.log</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span>, <span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Exponential.html#Ordinal.log\">Ordinal.log</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF\">Ordinal.CNF</a> <span class=\"fn\">b</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Exponential.html#Ordinal.log\">Ordinal.log</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span></span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/CantorNormalForm.lean#L81-L82","name":"Ordinal.CNF_zero","line":81,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">CNF_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF\">Ordinal.CNF</a> <span class=\"fn\">b</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">[]</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/CantorNormalForm.lean#L75-L76","name":"Ordinal.CNF","line":75,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF","doc":"The Cantor normal form of an ordinal `o` is the list of coefficients and exponents in the\nbase-`b` expansion of `o`.\n\nWe special-case `CNF 0 o = CNF 1 o = [(0, o)]` for `o ≠ 0`.\n\n`CNF b (b ^ u₁ * v₁ + b ^ u₂ * v₂) = [(u₁, v₁), (u₂, v₂)]` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF\"><span class=\"name\">Ordinal</span>.<span class=\"name\">CNF</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/CantorNormalForm.lean#L62-L64","name":"Ordinal.CNFRec_pos","line":62,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNFRec_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNFRec_pos\"><span class=\"name\">Ordinal</span>.<span class=\"name\">CNFRec_pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a> → <a href=\"./foundational_types.html\">Sort</a> u_1</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ho : <span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H0 : <span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Exponential.html#Ordinal.log\">Ordinal.log</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span></span></span>)</span></span> → <span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">o</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNFRec\">Ordinal.CNFRec</a> <span class=\"fn\">b</span> <span class=\"fn\">H0</span> <span class=\"fn\">H</span> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">H</span> <span class=\"fn\">o</span> <span class=\"fn\">ho</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNFRec\">Ordinal.CNFRec</a> <span class=\"fn\">b</span> <span class=\"fn\">H0</span> <span class=\"fn\">H</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Exponential.html#Ordinal.log\">Ordinal.log</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span></span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/CantorNormalForm.lean#L55-L58","name":"Ordinal.CNFRec_zero","line":55,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNFRec_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNFRec_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">CNFRec_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a> → <a href=\"./foundational_types.html\">Sort</a> u_1</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H0 : <span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Exponential.html#Ordinal.log\">Ordinal.log</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span></span></span>)</span></span> → <span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">o</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNFRec\">Ordinal.CNFRec</a> <span class=\"fn\">b</span> <span class=\"fn\">H0</span> <span class=\"fn\">H</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">H0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Ordinal/CantorNormalForm.lean#L44-L50","name":"Ordinal.CNFRec","line":44,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNFRec","doc":"Inducts on the base `b` expansion of an ordinal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNFRec\"><span class=\"name\">Ordinal</span>.<span class=\"name\">CNFRec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a> → <a href=\"./foundational_types.html\">Sort</a> u_1</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H0 : <span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Exponential.html#Ordinal.log\">Ordinal.log</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span></span></span>)</span></span> → <span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">o</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">o</span></span></div></div>"}]}