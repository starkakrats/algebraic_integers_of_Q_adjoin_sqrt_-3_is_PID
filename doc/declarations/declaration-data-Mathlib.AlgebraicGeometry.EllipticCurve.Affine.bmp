{"name":"Mathlib.AlgebraicGeometry.EllipticCurve.Affine","instances":[{"typeNames":["WeierstrassCurve.Affine.Point"],"name":"WeierstrassCurve.Affine.Point.instInhabitedPoint","className":"Inhabited"},{"typeNames":["WeierstrassCurve.Affine.Point"],"name":"WeierstrassCurve.Affine.Point.instZeroPoint","className":"Zero"},{"typeNames":["WeierstrassCurve.Affine.Point"],"name":"WeierstrassCurve.Affine.Point.instNegPoint","className":"Neg"},{"typeNames":["WeierstrassCurve.Affine.Point"],"name":"WeierstrassCurve.Affine.Point.instInvolutiveNegPoint","className":"InvolutiveNeg"},{"typeNames":["WeierstrassCurve.Affine.Point"],"name":"WeierstrassCurve.Affine.Point.instAddPoint","className":"Add"},{"typeNames":["WeierstrassCurve.Affine.Point"],"name":"WeierstrassCurve.Affine.Point.instAddZeroClassPoint","className":"AddZeroClass"}],"imports":["Init","Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L966-L968","name":"EllipticCurve.Affine.nonsingular","line":966,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#EllipticCurve.Affine.nonsingular","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#EllipticCurve.Affine.nonsingular\"><span class=\"name\">EllipticCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#EllipticCurve\">EllipticCurve</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.toAffine</span>.equation <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.toAffine</span>.nonsingular <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L958-L960","name":"EllipticCurve.toAffine","line":958,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#EllipticCurve.toAffine","doc":"The coercion from an elliptic curve to a Weierstrass curve in affine coordinates. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#EllipticCurve.toAffine\"><span class=\"name\">EllipticCurve</span>.<span class=\"name\">toAffine</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#EllipticCurve\">EllipticCurve</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L941-L945","name":"WeierstrassCurve.Affine.Point.ofBaseChange_injective","line":941,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.ofBaseChange_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.ofBaseChange_injective\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">ofBaseChange_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">A</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./foundational_types.html\">Type</a> t}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">A</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">A</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.ofBaseChange\">WeierstrassCurve.Affine.Point.ofBaseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">φ</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L914-L938","name":"WeierstrassCurve.Affine.Point.ofBaseChange","line":914,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.ofBaseChange","doc":"The group homomorphism from `W⟮K⟯` to `W⟮L⟯` induced by an algebra homomorphism `φ : K →ₐ[A] L`,\nwhere `W` is defined over a subring of a ring `A`, and `K` and `L` are field extensions of `A`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.ofBaseChange\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">ofBaseChange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">A</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./foundational_types.html\">Type</a> t}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">A</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">A</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.baseChange <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#algebraMap\">algebraMap</a> <span class=\"fn\">R</span> <span class=\"fn\">K</span></span>)</span></span>)</span>.Point</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.baseChange <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#algebraMap\">algebraMap</a> <span class=\"fn\">R</span> <span class=\"fn\">L</span></span>)</span></span>)</span>.Point</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L913-L913","name":"WeierstrassCurve.Affine.Point.ofBaseChange_apply","line":913,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.ofBaseChange_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.ofBaseChange_apply\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">ofBaseChange_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">A</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./foundational_types.html\">Type</a> t}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">A</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">A</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.baseChange <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#algebraMap\">algebraMap</a> <span class=\"fn\">R</span> <span class=\"fn\">K</span></span>)</span></span>)</span>.Point</span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.ofBaseChange\">WeierstrassCurve.Affine.Point.ofBaseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">φ</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.ofBaseChangeFun\">WeierstrassCurve.Affine.Point.ofBaseChangeFun</a> <span class=\"fn\">W</span> <span class=\"fn\">φ</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L904-L908","name":"WeierstrassCurve.Affine.Point.ofBaseChangeFun","line":904,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.ofBaseChangeFun","doc":"The function from `W⟮K⟯` to `W⟮L⟯` induced by an algebra homomorphism `φ : K →ₐ[A] L`,\nwhere `W` is defined over a subring of a ring `A`, and `K` and `L` are field extensions of `A`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.ofBaseChangeFun\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">ofBaseChangeFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">A</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./foundational_types.html\">Type</a> t}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#Algebra\">Algebra</a> <span class=\"fn\">A</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">A</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.baseChange <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#algebraMap\">algebraMap</a> <span class=\"fn\">R</span> <span class=\"fn\">K</span></span>)</span></span>)</span>.Point</span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.baseChange <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Basic.html#algebraMap\">algebraMap</a> <span class=\"fn\">R</span> <span class=\"fn\">L</span></span>)</span></span>)</span>.Point</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L890-L894","name":"WeierstrassCurve.Affine.baseChange_slope_of_baseChange","line":890,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_slope_of_baseChange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_slope_of_baseChange\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_slope_of_baseChange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ψ : <span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₁ : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₂ : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.baseChange <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom.comp\">RingHom.comp</a> <span class=\"fn\">ψ</span> <span class=\"fn\">φ</span></span>)</span></span>)</span>.toAffine</span>.slope <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">x₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">x₂</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">y₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">y₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.baseChange <span class=\"fn\">φ</span></span>)</span>.toAffine</span>.slope <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L870-L887","name":"WeierstrassCurve.Affine.baseChange_slope","line":870,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_slope","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_slope\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_slope</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₁ : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₂ : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.baseChange <span class=\"fn\">φ</span></span>)</span>.toAffine</span>.slope <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">x₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">x₂</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">y₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">y₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.slope <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L863-L866","name":"WeierstrassCurve.Affine.baseChange_addY_of_baseChange","line":863,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_addY_of_baseChange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_addY_of_baseChange\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_addY_of_baseChange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ψ : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₁ : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.baseChange <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom.comp\">RingHom.comp</a> <span class=\"fn\">ψ</span> <span class=\"fn\">φ</span></span>)</span></span>)</span>.toAffine</span>.addY <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">x₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">x₂</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">y₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">L</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.baseChange <span class=\"fn\">φ</span></span>)</span>.toAffine</span>.addY <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">L</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L857-L859","name":"WeierstrassCurve.Affine.baseChange_addY","line":857,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_addY","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_addY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_addY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₁ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.baseChange <span class=\"fn\">φ</span></span>)</span>.toAffine</span>.addY <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">x₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">x₂</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">y₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">L</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.toAffine</span>.addY <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">L</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L850-L853","name":"WeierstrassCurve.Affine.baseChange_addY'_of_baseChange","line":850,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_addY'_of_baseChange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_addY'_of_baseChange\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_addY'_of_baseChange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ψ : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₁ : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.baseChange <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom.comp\">RingHom.comp</a> <span class=\"fn\">ψ</span> <span class=\"fn\">φ</span></span>)</span></span>)</span>.toAffine</span>.addY' <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">x₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">x₂</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">y₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">L</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.baseChange <span class=\"fn\">φ</span></span>)</span>.toAffine</span>.addY' <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">L</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L843-L846","name":"WeierstrassCurve.Affine.baseChange_addY'","line":843,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_addY'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_addY'\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_addY'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₁ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.baseChange <span class=\"fn\">φ</span></span>)</span>.toAffine</span>.addY' <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">x₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">x₂</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">y₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">L</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addY' <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">L</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L836-L839","name":"WeierstrassCurve.Affine.baseChange_addX_of_baseChange","line":836,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_addX_of_baseChange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_addX_of_baseChange\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_addX_of_baseChange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ψ : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.baseChange <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom.comp\">RingHom.comp</a> <span class=\"fn\">ψ</span> <span class=\"fn\">φ</span></span>)</span></span>)</span>.toAffine</span>.addX <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">x₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">x₂</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">L</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.baseChange <span class=\"fn\">φ</span></span>)</span>.toAffine</span>.addX <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">L</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L828-L832","name":"WeierstrassCurve.Affine.baseChange_addX","line":828,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_addX","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_addX\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_addX</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.baseChange <span class=\"fn\">φ</span></span>)</span>.toAffine</span>.addX <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">x₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">x₂</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">L</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addX <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">L</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L821-L824","name":"WeierstrassCurve.Affine.baseChange_negY_of_baseChange","line":821,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_negY_of_baseChange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_negY_of_baseChange\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_negY_of_baseChange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ψ : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.baseChange <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom.comp\">RingHom.comp</a> <span class=\"fn\">ψ</span> <span class=\"fn\">φ</span></span>)</span></span>)</span>.toAffine</span>.negY <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.baseChange <span class=\"fn\">φ</span></span>)</span>.toAffine</span>.negY <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L814-L817","name":"WeierstrassCurve.Affine.baseChange_negY","line":814,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_negY","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_negY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_negY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.baseChange <span class=\"fn\">φ</span></span>)</span>.toAffine</span>.negY <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.negY <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L808-L811","name":"WeierstrassCurve.Affine.nonsingular_iff_baseChange_of_baseChange","line":808,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_iff_baseChange_of_baseChange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_iff_baseChange_of_baseChange\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_iff_baseChange_of_baseChange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ψ : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hψ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">ψ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.baseChange <span class=\"fn\">φ</span></span>)</span>.toAffine</span>.nonsingular <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.baseChange <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom.comp\">RingHom.comp</a> <span class=\"fn\">ψ</span> <span class=\"fn\">φ</span></span>)</span></span>)</span>.toAffine</span>.nonsingular <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">y</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L799-L805","name":"WeierstrassCurve.Affine.nonsingular_iff_baseChange","line":799,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_iff_baseChange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_iff_baseChange\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_iff_baseChange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hφ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">φ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.baseChange <span class=\"fn\">φ</span></span>)</span>.toAffine</span>.nonsingular <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">y</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L793-L796","name":"WeierstrassCurve.Affine.equation_iff_baseChange_of_baseChange","line":793,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_iff_baseChange_of_baseChange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_iff_baseChange_of_baseChange\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_iff_baseChange_of_baseChange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ψ : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hψ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">ψ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.baseChange <span class=\"fn\">φ</span></span>)</span>.toAffine</span>.equation <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.baseChange <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom.comp\">RingHom.comp</a> <span class=\"fn\">ψ</span> <span class=\"fn\">φ</span></span>)</span></span>)</span>.toAffine</span>.equation <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">y</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L787-L790","name":"WeierstrassCurve.Affine.equation_iff_baseChange","line":787,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_iff_baseChange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_iff_baseChange\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_iff_baseChange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hφ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">φ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.equation <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.baseChange <span class=\"fn\">φ</span></span>)</span>.toAffine</span>.equation <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">y</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L771-L773","name":"WeierstrassCurve.Affine.Point.some_add_some_of_Xne'","line":771,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_add_some_of_Xne'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_add_some_of_Xne'\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">some_add_some_of_Xne'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₁ : <span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₂ : <span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₂</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a>\n      <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addX <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.slope <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addY' <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.slope <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L765-L767","name":"WeierstrassCurve.Affine.Point.some_add_some_of_Xne","line":765,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_add_some_of_Xne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_add_some_of_Xne\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">some_add_some_of_Xne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₁ : <span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₂ : <span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₂</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a>\n    <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addX <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.slope <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addY <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.slope <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L758-L760","name":"WeierstrassCurve.Affine.Point.some_add_self_of_Yne'","line":758,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_add_self_of_Yne'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_add_self_of_Yne'\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">some_add_self_of_Yne'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₁ : <span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">W</span>.negY <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a>\n      <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addX <span class=\"fn\">x₁</span> <span class=\"fn\">x₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.slope <span class=\"fn\">x₁</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₁</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addY' <span class=\"fn\">x₁</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.slope <span class=\"fn\">x₁</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₁</span></span>)</span></span>)</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L752-L754","name":"WeierstrassCurve.Affine.Point.some_add_self_of_Yne","line":752,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_add_self_of_Yne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_add_self_of_Yne\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">some_add_self_of_Yne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₁ : <span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">W</span>.negY <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a>\n    <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addX <span class=\"fn\">x₁</span> <span class=\"fn\">x₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.slope <span class=\"fn\">x₁</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₁</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addY <span class=\"fn\">x₁</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.slope <span class=\"fn\">x₁</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₁</span></span>)</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L744-L747","name":"WeierstrassCurve.Affine.Point.some_add_some_of_Yne'","line":744,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_add_some_of_Yne'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_add_some_of_Yne'\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">some_add_some_of_Yne'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₁ : <span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₂ : <span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">W</span>.negY <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₂</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a>\n      <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addX <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.slope <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addY' <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.slope <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L737-L740","name":"WeierstrassCurve.Affine.Point.some_add_some_of_Yne","line":737,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_add_some_of_Yne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_add_some_of_Yne\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">some_add_some_of_Yne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₁ : <span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₂ : <span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">W</span>.negY <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₂</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a>\n    <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addX <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.slope <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addY <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.slope <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L730-L732","name":"WeierstrassCurve.Affine.Point.some_add_self_of_Yeq","line":730,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_add_self_of_Yeq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_add_self_of_Yeq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">some_add_self_of_Yeq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₁ : <span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">W</span>.negY <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L723-L725","name":"WeierstrassCurve.Affine.Point.some_add_some_of_Yeq","line":723,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_add_some_of_Yeq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_add_some_of_Yeq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">some_add_some_of_Yeq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₁ : <span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₂ : <span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">W</span>.negY <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₂</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L719-L720","name":"WeierstrassCurve.Affine.Point.instAddZeroClassPoint","line":719,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instAddZeroClassPoint","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instAddZeroClassPoint\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">instAddZeroClassPoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\"><span class=\"fn\">W</span>.Point</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L715-L716","name":"WeierstrassCurve.Affine.Point.add_def","line":715,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_def\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">add_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><span class=\"fn\">W</span>.Point</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Q : <span class=\"fn\"><span class=\"fn\">W</span>.Point</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.add <span class=\"fn\">Q</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">Q</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L711-L712","name":"WeierstrassCurve.Affine.Point.instAddPoint","line":711,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instAddPoint","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instAddPoint\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">instAddPoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\"><span class=\"fn\">W</span>.Point</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L702-L708","name":"WeierstrassCurve.Affine.Point.add","line":702,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add","doc":"The addition of two nonsingular rational points on `W`.\n\nGiven two nonsingular rational points `P` and `Q` on `W`, use `P + Q` instead of `add P Q`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Point</span> → <span class=\"fn\"><span class=\"fn\">W</span>.Point</span> → <span class=\"fn\"><span class=\"fn\">W</span>.Point</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L691-L692","name":"WeierstrassCurve.Affine.Point.instInvolutiveNegPoint","line":691,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instInvolutiveNegPoint","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instInvolutiveNegPoint\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">instInvolutiveNegPoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#InvolutiveNeg\">InvolutiveNeg</a> <span class=\"fn\"><span class=\"fn\">W</span>.Point</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L687-L688","name":"WeierstrassCurve.Affine.Point.neg_some","line":687,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.neg_some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.neg_some\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">neg_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.negY <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L682-L683","name":"WeierstrassCurve.Affine.Point.neg_zero","line":682,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.neg_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.neg_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">neg_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L677-L678","name":"WeierstrassCurve.Affine.Point.neg_def","line":677,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.neg_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.neg_def\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">neg_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><span class=\"fn\">W</span>.Point</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.neg</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">P</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L673-L674","name":"WeierstrassCurve.Affine.Point.instNegPoint","line":673,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instNegPoint","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instNegPoint\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">instNegPoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\"><span class=\"fn\">W</span>.Point</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L668-L670","name":"WeierstrassCurve.Affine.Point.neg","line":668,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.neg","doc":"The negation of a nonsingular rational point on `W`.\n\nGiven a nonsingular rational point `P` on `W`, use `-P` instead of `neg P`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.neg\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Point</span> → <span class=\"fn\"><span class=\"fn\">W</span>.Point</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L660-L661","name":"WeierstrassCurve.Affine.Point.zero_def","line":660,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.zero_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.zero_def\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">zero_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">WeierstrassCurve.Affine.Point.zero</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L656-L657","name":"WeierstrassCurve.Affine.Point.instZeroPoint","line":656,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instZeroPoint","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instZeroPoint\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">instZeroPoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\"><span class=\"fn\">W</span>.Point</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L653-L654","name":"WeierstrassCurve.Affine.Point.instInhabitedPoint","line":653,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instInhabitedPoint","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instInhabitedPoint\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">instInhabitedPoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\"><span class=\"fn\">W</span>.Point</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L646-L647","name":"WeierstrassCurve.«term_⟮_⟯»","line":646,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.«term_⟮_⟯»","doc":"For an algebraic extension `S` of `R`, the type of nonsingular `S`-rational points on `W`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.«term_⟮_⟯»\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">«term_⟮_⟯»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L643-L643","name":"WeierstrassCurve.Affine.Point.some","line":643,"kind":"ctor","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">W</span>.Point</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L642-L642","name":"WeierstrassCurve.Affine.Point.zero","line":642,"kind":"ctor","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">W</span>.Point</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L641-L643","name":"WeierstrassCurve.Affine.Point","line":641,"kind":"inductive","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point","doc":"A nonsingular rational point on a Weierstrass curve `W` in affine coordinates. This is either\nthe unique point at infinity `WeierstrassCurve.Affine.Point.zero` or the nonsingular affine points\n`WeierstrassCurve.Affine.Point.some` $(x, y)$ satisfying the Weierstrass equation of `W`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L625-L628","name":"WeierstrassCurve.Affine.nonsingular_add","line":625,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_add","doc":"The addition of two nonsingular affine points in `W` on a sloped line is nonsingular. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_add\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hxy : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span> → <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">W</span>.negY <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addX <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.slope <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addY <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.slope <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L605-L621","name":"WeierstrassCurve.Affine.nonsingular_add'","line":605,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_add'","doc":"The addition of two nonsingular affine points in `W` on a sloped line,\nbefore applying the final negation that maps $Y$ to $-Y - a_1X - a_3$, is nonsingular. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_add'\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_add'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hxy : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span> → <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">W</span>.negY <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addX <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.slope <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addY' <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.slope <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L593-L600","name":"WeierstrassCurve.Affine.derivative_addPolynomial_slope","line":593,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.derivative_addPolynomial_slope","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.derivative_addPolynomial_slope\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">derivative_addPolynomial_slope</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\">W</span>.equation <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\">W</span>.equation <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hxy : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span> → <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">W</span>.negY <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Polynomial.derivative</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addPolynomial <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.slope <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Polynomial.X</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">Polynomial.C</span> <span class=\"fn\">x₁</span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Polynomial.X</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">Polynomial.C</span> <span class=\"fn\">x₂</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>         <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Polynomial.X</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">Polynomial.C</span> <span class=\"fn\">x₁</span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Polynomial.X</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">Polynomial.C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addX <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.slope <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span></span></span>)</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>       <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Polynomial.X</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">Polynomial.C</span> <span class=\"fn\">x₂</span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Polynomial.X</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">Polynomial.C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addX <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.slope <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span></span></span>)</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L587-L590","name":"WeierstrassCurve.Affine.equation_add","line":587,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_add","doc":"The addition of two affine points in `W` on a sloped line lies in `W`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_add\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\">W</span>.equation <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\">W</span>.equation <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hxy : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span> → <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">W</span>.negY <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">W</span>.equation <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addX <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.slope <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addY <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.slope <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L578-L583","name":"WeierstrassCurve.Affine.equation_add'","line":578,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_add'","doc":"The addition of two affine points in `W` on a sloped line,\nbefore applying the final negation that maps $Y$ to $-Y - a_1X - a_3$, lies in `W`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_add'\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_add'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\">W</span>.equation <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\">W</span>.equation <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hxy : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span> → <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">W</span>.negY <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">W</span>.equation <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addX <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.slope <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addY' <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.slope <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L547-L573","name":"WeierstrassCurve.Affine.addPolynomial_slope","line":547,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addPolynomial_slope","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addPolynomial_slope\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">addPolynomial_slope</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\">W</span>.equation <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\">W</span>.equation <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hxy : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span> → <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">W</span>.negY <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addPolynomial <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.slope <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Polynomial.X</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">Polynomial.C</span> <span class=\"fn\">x₁</span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Polynomial.X</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">Polynomial.C</span> <span class=\"fn\">x₂</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a>       <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Polynomial.X</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">Polynomial.C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addX <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.slope <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span></span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L541-L543","name":"WeierstrassCurve.Affine.Yeq_of_Yne","line":541,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Yeq_of_Yne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Yeq_of_Yne\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Yeq_of_Yne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\">W</span>.equation <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\">W</span>.equation <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">W</span>.negY <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L533-L537","name":"WeierstrassCurve.Affine.Yeq_of_Xeq","line":533,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Yeq_of_Xeq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Yeq_of_Xeq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Yeq_of_Xeq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\">W</span>.equation <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\">W</span>.equation <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y₂</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">W</span>.negY <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L523-L529","name":"WeierstrassCurve.Affine.slope_of_Yne_eq_eval","line":523,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_Yne_eq_eval","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_Yne_eq_eval\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">slope_of_Yne_eq_eval</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">W</span>.negY <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Polynomial.C</span> <span class=\"fn\">y₁</span></span>)</span> <span class=\"fn\"><span class=\"fn\">W</span>.polynomialX</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a>     <span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Polynomial.C</span> <span class=\"fn\">y₁</span></span>)</span> <span class=\"fn\"><span class=\"fn\">W</span>.polynomialY</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L517-L519","name":"WeierstrassCurve.Affine.slope_of_Xne","line":517,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_Xne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_Xne\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">slope_of_Xne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">y₂</span></span>)</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x₂</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L510-L512","name":"WeierstrassCurve.Affine.slope_of_Yne","line":510,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_Yne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_Yne\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">slope_of_Yne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">W</span>.negY <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₂</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x₁</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₄</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y₁</span></span></span>)</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">W</span>.negY <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L503-L505","name":"WeierstrassCurve.Affine.slope_of_Yeq","line":503,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_Yeq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_Yeq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">slope_of_Yeq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">W</span>.negY <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L494-L497","name":"WeierstrassCurve.Affine.slope","line":494,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope","doc":"The slope of the line through two affine points $(x_1, y_1)$ and $(x_2, y_2)$ in `W`.\nIf $x_1 \\ne x_2$, then this line is the secant of `W` through $(x_1, y_1)$ and $(x_2, y_2)$,\nand has slope $(y_1 - y_2) / (x_1 - x_2)$. Otherwise, if $y_1 \\ne -y_1 - a_1x_1 - a_3$,\nthen this line is the tangent of `W` at $(x_1, y_1) = (x_2, y_2)$, and has slope\n$(3x_1^2 + 2a_2x_1 + a_4 - a_1y_1) / (2y_1 + a_1x_1 + a_3)$. Otherwise, this line is vertical,\nand has undefined slope, in which case this function returns the value 0.\n\nThis depends on `W`, and has argument order: $x_1$, $x_2$, $y_1$, $y_2$. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">slope</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₁ : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₂ : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">F</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L462-L474","name":"WeierstrassCurve.Affine.nonsingular_add_of_eval_derivative_ne_zero","line":462,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_add_of_eval_derivative_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_add_of_eval_derivative_ne_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_add_of_eval_derivative_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx' : <span class=\"fn\"><span class=\"fn\">W</span>.equation <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addX <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">L</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addY' <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">L</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addX <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">L</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Polynomial.derivative</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addPolynomial <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span> <span class=\"fn\">L</span></span>)</span></span>)</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addX <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">L</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addY' <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">L</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L458-L459","name":"WeierstrassCurve.Affine.nonsingular_neg","line":458,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_neg","doc":"The negation of a nonsingular affine point in `W` is nonsingular. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_neg\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.negY <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L453-L454","name":"WeierstrassCurve.Affine.nonsingular_neg_of","line":453,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_neg_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_neg_of\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_neg_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.negY <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L449-L450","name":"WeierstrassCurve.Affine.equation_neg","line":449,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_neg","doc":"The negation of an affine point in `W` lies in `W`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_neg\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">W</span>.equation <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">W</span>.equation <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.negY <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L444-L445","name":"WeierstrassCurve.Affine.equation_neg_of","line":444,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_neg_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_neg_of\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_neg_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">W</span>.equation <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.negY <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">W</span>.equation <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L435-L439","name":"WeierstrassCurve.Affine.equation_add_iff","line":435,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_add_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_add_iff\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_add_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₁ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.equation <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addX <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">L</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addY' <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">L</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addX <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">L</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addPolynomial <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span> <span class=\"fn\">L</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L429-L432","name":"WeierstrassCurve.Affine.nonsingular_neg_iff","line":429,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_neg_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_neg_iff\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_neg_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.negY <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L423-L426","name":"WeierstrassCurve.Affine.equation_neg_iff","line":423,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_neg_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_neg_iff\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_neg_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.equation <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.negY <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">W</span>.equation <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L418-L419","name":"WeierstrassCurve.Affine.addY","line":418,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addY","doc":"The $Y$-coordinate of the addition of two affine points $(x_1, y_1)$ and $(x_2, y_2)$ in `W`,\nwhere the line through them is not vertical and has a slope of $L$.\n\nThis depends on `W`, and has argument order: $x_1$, $x_2$, $y_1$, $L$. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">addY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₁ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">R</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L408-L409","name":"WeierstrassCurve.Affine.addY'","line":408,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addY'","doc":"The $Y$-coordinate, before applying the final negation, of the addition of two affine points\n$(x_1, y_1)$ and $(x_2, y_2)$, where the line through them is not vertical and has a slope of $L$.\n\nThis depends on `W`, and has argument order: $x_1$, $x_2$, $y_1$, $L$. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addY'\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">addY'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₁ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">R</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L398-L399","name":"WeierstrassCurve.Affine.addX","line":398,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX","doc":"The $X$-coordinate of the addition of two affine points $(x_1, y_1)$ and $(x_2, y_2)$ in `W`,\nwhere the line through them is not vertical and has a slope of $L$.\n\nThis depends on `W`, and has argument order: $x_1$, $x_2$, $L$. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">addX</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">R</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L383-L390","name":"WeierstrassCurve.Affine.addPolynomial_eq","line":383,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addPolynomial_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addPolynomial_eq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">addPolynomial_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addPolynomial <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">L</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/CubicDiscriminant.html#Cubic.toPoly\">Cubic.toPoly</a>\n      <span class=\"fn\">{ <span class=\"fn\">a</span> := <span class=\"fn\">1</span>, <span class=\"fn\">b</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">L</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">L</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₂</span></span>, <span class=\"fn\">c</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">L</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₃</span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">L</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">W</span>.a₁</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₄</span></span>)</span></span>,\n        <span class=\"fn\">d</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">L</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₃</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">L</span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₃</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₆</span></span>)</span></span> }</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L373-L379","name":"WeierstrassCurve.Affine.C_addPolynomial","line":373,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.C_addPolynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.C_addPolynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">C_addPolynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Polynomial.C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.addPolynomial <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">L</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Polynomial.X</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">Polynomial.C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.linePolynomial <span class=\"fn\">y</span> <span class=\"fn\">L</span></span>)</span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negPolynomial</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">Polynomial.C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.linePolynomial <span class=\"fn\">y</span> <span class=\"fn\">L</span></span>)</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>     <span class=\"fn\"><span class=\"fn\">W</span>.polynomial</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L369-L370","name":"WeierstrassCurve.Affine.addPolynomial","line":369,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addPolynomial","doc":"The polynomial obtained by substituting the line $Y = L*(X - x) + y$, with a slope of $L$\nthat passes through an affine point $(x, y)$, into the polynomial $W(X, Y)$ associated to `W`.\nIf such a line intersects `W` at another point $(x', y')$, then the roots of this polynomial are\nprecisely $x$, $x'$, and the $X$-coordinate of the addition of $(x, y)$ and $(x', y')$.\n\nThis depends on `W`, and has argument order: $x$, $y$, $L$. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addPolynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">addPolynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L358-L359","name":"WeierstrassCurve.Affine.linePolynomial","line":358,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.linePolynomial","doc":"The polynomial $L(X - x) + y$ associated to the line $Y = L(X - x) + y$,\nwith a slope of $L$ that passes through an affine point $(x, y)$.\n\nThis does not depend on `W`, and has argument order: $x$, $y$, $L$. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.linePolynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">linePolynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L348-L350","name":"WeierstrassCurve.Affine.eval_negPolynomial","line":348,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.eval_negPolynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.eval_negPolynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">eval_negPolynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Polynomial.C</span> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\"><span class=\"fn\">W</span>.negPolynomial</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">W</span>.negY <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L341-L343","name":"WeierstrassCurve.Affine.negY_negY","line":341,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY_negY","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY_negY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">negY_negY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.negY <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L336-L337","name":"WeierstrassCurve.Affine.negY","line":336,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY","doc":"The $Y$-coordinate of the negation of an affine point in `W`.\n\nThis depends on `W`, and has argument order: $x$, $y$. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">negY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">R</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L328-L329","name":"WeierstrassCurve.Affine.negPolynomial","line":328,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negPolynomial","doc":"The polynomial $-Y - a_1X - a_3$ associated to negation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negPolynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">negPolynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L314-L317","name":"WeierstrassCurve.Affine.nonsingular_of_Δ_ne_zero","line":314,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_of_Δ_ne_zero","doc":"A Weierstrass curve is nonsingular at every point if its discriminant is non-zero. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_of_Δ_ne_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_of_Δ_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">W</span>.equation <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hΔ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Δ</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L306-L310","name":"WeierstrassCurve.Affine.nonsingular_zero_of_Δ_ne_zero","line":306,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_zero_of_Δ_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_zero_of_Δ_ne_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_zero_of_Δ_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">W</span>.equation <span class=\"fn\">0</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hΔ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Δ</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">0</span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L298-L303","name":"WeierstrassCurve.Affine.nonsingular_iff_variableChange","line":298,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_iff_variableChange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_iff_variableChange\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_iff_variableChange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.variableChange <span class=\"fn\">{ <span class=\"fn\">u</span> := <span class=\"fn\">1</span>, <span class=\"fn\">r</span> := <span class=\"fn\">x</span>, <span class=\"fn\">s</span> := <span class=\"fn\">0</span>, <span class=\"fn\">t</span> := <span class=\"fn\">y</span> }</span></span>)</span>.toAffine</span>.nonsingular <span class=\"fn\">0</span> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L293-L295","name":"WeierstrassCurve.Affine.nonsingular_zero","line":293,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₆</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₃</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₄</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L285-L289","name":"WeierstrassCurve.Affine.nonsingular_iff","line":285,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_iff\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.equation <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₂</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₄</span></span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₃</span></span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L279-L281","name":"WeierstrassCurve.Affine.nonsingular_iff'","line":279,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_iff'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_iff'\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.nonsingular <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.equation <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₂</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₄</span></span>)</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₃</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L275-L276","name":"WeierstrassCurve.Affine.nonsingular","line":275,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular","doc":"The proposition that an affine point $(x, y)$ in `W` is nonsingular.\nIn other words, either $W_X(x, y) \\ne 0$ or $W_Y(x, y) \\ne 0$. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L267-L268","name":"WeierstrassCurve.Affine.eval_polynomialY_zero","line":267,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.eval_polynomialY_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.eval_polynomialY_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">eval_polynomialY_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">0</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">0</span> <span class=\"fn\"><span class=\"fn\">W</span>.polynomialY</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₃</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L258-L262","name":"WeierstrassCurve.Affine.eval_polynomialY","line":258,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.eval_polynomialY","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.eval_polynomialY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">eval_polynomialY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Polynomial.C</span> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\"><span class=\"fn\">W</span>.polynomialY</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₃</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L252-L253","name":"WeierstrassCurve.Affine.polynomialY","line":252,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomialY","doc":"The partial derivative $W_Y(X, Y)$ of $W(X, Y)$ with respect to $Y$.\n\nTODO: define this in terms of `Polynomial.derivative`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomialY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">polynomialY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L243-L244","name":"WeierstrassCurve.Affine.eval_polynomialX_zero","line":243,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.eval_polynomialX_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.eval_polynomialX_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">eval_polynomialX_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">0</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">0</span> <span class=\"fn\"><span class=\"fn\">W</span>.polynomialX</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">W</span>.a₄</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L235-L238","name":"WeierstrassCurve.Affine.eval_polynomialX","line":235,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.eval_polynomialX","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.eval_polynomialX\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">eval_polynomialX</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Polynomial.C</span> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\"><span class=\"fn\">W</span>.polynomialX</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₂</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₄</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L229-L230","name":"WeierstrassCurve.Affine.polynomialX","line":229,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomialX","doc":"The partial derivative $W_X(X, Y)$ of $W(X, Y)$ with respect to $X$.\n\nTODO: define this in terms of `Polynomial.derivative`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomialX\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">polynomialX</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L212-L216","name":"WeierstrassCurve.Affine.equation_iff_variableChange","line":212,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_iff_variableChange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_iff_variableChange\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_iff_variableChange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.equation <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.variableChange <span class=\"fn\">{ <span class=\"fn\">u</span> := <span class=\"fn\">1</span>, <span class=\"fn\">r</span> := <span class=\"fn\">x</span>, <span class=\"fn\">s</span> := <span class=\"fn\">0</span>, <span class=\"fn\">t</span> := <span class=\"fn\">y</span> }</span></span>)</span>.toAffine</span>.equation <span class=\"fn\">0</span> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L208-L209","name":"WeierstrassCurve.Affine.equation_zero","line":208,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.equation <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₆</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L202-L204","name":"WeierstrassCurve.Affine.equation_iff","line":202,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_iff\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.equation <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₃</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">3</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₂</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₄</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₆</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L196-L198","name":"WeierstrassCurve.Affine.equation_iff'","line":196,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_iff'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_iff'\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.equation <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₃</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">3</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₂</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₄</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₆</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L192-L193","name":"WeierstrassCurve.Affine.equation","line":192,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation","doc":"The proposition that an affine point $(x, y)$ lies in `W`. In other words, $W(x, y) = 0$. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L186-L187","name":"WeierstrassCurve.Affine.eval_polynomial_zero","line":186,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.eval_polynomial_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.eval_polynomial_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">eval_polynomial_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">0</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">0</span> <span class=\"fn\"><span class=\"fn\">W</span>.polynomial</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">W</span>.a₆</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L178-L182","name":"WeierstrassCurve.Affine.eval_polynomial","line":178,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.eval_polynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.eval_polynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">eval_polynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Polynomial.C</span> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\"><span class=\"fn\">W</span>.polynomial</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₃</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">3</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₂</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₄</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₆</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L163-L174","name":"WeierstrassCurve.Affine.irreducible_polynomial","line":163,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.irreducible_polynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.irreducible_polynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">irreducible_polynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\"><span class=\"fn\">W</span>.polynomial</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L158-L160","name":"WeierstrassCurve.Affine.monic_polynomial","line":158,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.monic_polynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.monic_polynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">monic_polynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Degree/Definitions.html#Polynomial.Monic\">Polynomial.Monic</a> <span class=\"fn\"><span class=\"fn\">W</span>.polynomial</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L153-L155","name":"WeierstrassCurve.Affine.natDegree_polynomial","line":153,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.natDegree_polynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.natDegree_polynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">natDegree_polynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Degree/Definitions.html#Polynomial.natDegree\">Polynomial.natDegree</a> <span class=\"fn\"><span class=\"fn\">W</span>.polynomial</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L147-L149","name":"WeierstrassCurve.Affine.degree_polynomial","line":147,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.degree_polynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.degree_polynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">degree_polynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Degree/Definitions.html#Polynomial.degree\">Polynomial.degree</a> <span class=\"fn\"><span class=\"fn\">W</span>.polynomial</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L141-L143","name":"WeierstrassCurve.Affine.polynomial_ne_zero","line":141,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial_ne_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">polynomial_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.polynomial</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L133-L138","name":"WeierstrassCurve.Affine.polynomial_eq","line":133,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial_eq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">polynomial_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.polynomial</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/CubicDiscriminant.html#Cubic.toPoly\">Cubic.toPoly</a>\n    <span class=\"fn\">{ <span class=\"fn\">a</span> := <span class=\"fn\">0</span>, <span class=\"fn\">b</span> := <span class=\"fn\">1</span>, <span class=\"fn\">c</span> := <span class=\"fn\"><a href=\"./Mathlib/Algebra/CubicDiscriminant.html#Cubic.toPoly\">Cubic.toPoly</a> <span class=\"fn\">{ <span class=\"fn\">a</span> := <span class=\"fn\">0</span>, <span class=\"fn\">b</span> := <span class=\"fn\">0</span>, <span class=\"fn\">c</span> := <span class=\"fn\"><span class=\"fn\">W</span>.a₁</span>, <span class=\"fn\">d</span> := <span class=\"fn\"><span class=\"fn\">W</span>.a₃</span> }</span></span>,\n      <span class=\"fn\">d</span> := <span class=\"fn\"><a href=\"./Mathlib/Algebra/CubicDiscriminant.html#Cubic.toPoly\">Cubic.toPoly</a> <span class=\"fn\">{ <span class=\"fn\">a</span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span>, <span class=\"fn\">b</span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">W</span>.a₂</span></span>, <span class=\"fn\">c</span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">W</span>.a₄</span></span>, <span class=\"fn\">d</span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">W</span>.a₆</span></span> }</span></span> }</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L129-L130","name":"WeierstrassCurve.Affine.polynomial","line":129,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial","doc":"The polynomial $W(X, Y) := Y^2 + a_1XY + a_3Y - (X^3 + a_2X^2 + a_4X + a_6)$ associated to a\nWeierstrass curve `W` over `R`. For ease of polynomial manipulation, this is represented as a term\nof type `R[X][X]`, where the inner variable represents $X$ and the outer variable represents $Y$.\nFor clarity, the alternative notations `Y` and `R[X][Y]` are provided in the `PolynomialPolynomial`\nscope to represent the outer variable and the bivariate polynomial ring `R[X][X]` respectively. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">polynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L112-L113","name":"WeierstrassCurve.toAffine","line":112,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine","doc":"The coercion to a Weierstrass curve in affine coordinates. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">toAffine</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve\">WeierstrassCurve</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L107-L108","name":"WeierstrassCurve.Affine","line":107,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine","doc":"An abbreviation for a Weierstrass curve in affine coordinates. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L87-L88","name":"PolynomialPolynomial.«term_[X][Y]»","line":87,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#PolynomialPolynomial.«term_[X][Y]»","doc":"The notation `R[X][Y]` for `R[X][X]` in the `PolynomialPolynomial` scope. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#PolynomialPolynomial.«term_[X][Y]»\"><span class=\"name\">PolynomialPolynomial</span>.<span class=\"name\">«term_[X][Y]»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L84-L85","name":"PolynomialPolynomial.termY","line":84,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#PolynomialPolynomial.termY","doc":"The notation `Y` for `X` in the `PolynomialPolynomial` scope. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#PolynomialPolynomial.termY\"><span class=\"name\">PolynomialPolynomial</span>.<span class=\"name\">termY</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"}]}