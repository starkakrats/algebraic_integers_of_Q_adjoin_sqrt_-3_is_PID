{"name":"Mathlib.CategoryTheory.Category.Bipointed","instances":[{"typeNames":["Bipointed","_builtin_typeu"],"name":"Bipointed.instCoeSortBipointedType","className":"CoeSort"},{"typeNames":["Bipointed"],"name":"Bipointed.instInhabitedBipointed","className":"Inhabited"},{"typeNames":["Bipointed.Hom"],"name":"Bipointed.Hom.instInhabitedHom","className":"Inhabited"},{"typeNames":["Bipointed"],"name":"Bipointed.largeCategory","className":"CategoryTheory.Category"},{"typeNames":["Bipointed"],"name":"Bipointed.concreteCategory","className":"CategoryTheory.ConcreteCategory"}],"imports":["Init","Mathlib.CategoryTheory.Category.Pointed"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L238-L254","name":"pointedToBipointedSndBipointedToPointedSndAdjunction","line":238,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedSndBipointedToPointedSndAdjunction","doc":"The free/forgetful adjunction between `PointedToBipointed_snd` and `BipointedToPointed_snd`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedSndBipointedToPointedSndAdjunction\"><span class=\"name\">pointedToBipointedSndBipointedToPointedSndAdjunction</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedSnd\">pointedToBipointedSnd</a> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedSnd\">bipointedToPointedSnd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L217-L233","name":"pointedToBipointedFstBipointedToPointedFstAdjunction","line":217,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedFstBipointedToPointedFstAdjunction","doc":"The free/forgetful adjunction between `PointedToBipointed_fst` and `BipointedToPointed_fst`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedFstBipointedToPointedFstAdjunction\"><span class=\"name\">pointedToBipointedFstBipointedToPointedFstAdjunction</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedFst\">pointedToBipointedFst</a> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedFst\">bipointedToPointedFst</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L208-L212","name":"pointedToBipointedCompBipointedToPointedSnd","line":208,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedSnd","doc":"`BipointedToPointed_snd` is inverse to `PointedToBipointed`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedSnd\"><span class=\"name\">pointedToBipointedCompBipointedToPointedSnd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointed\">pointedToBipointed</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedSnd\">bipointedToPointedSnd</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L207-L207","name":"pointedToBipointedCompBipointedToPointedSnd_inv_app_toFun","line":207,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedSnd_inv_app_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedSnd_inv_app_toFun\"><span class=\"name\">pointedToBipointedCompBipointedToPointedSnd_inv_app_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.toFun\">Pointed.Hom.toFun</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedSnd\">pointedToBipointedCompBipointedToPointedSnd</a>.inv</span>.app <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L207-L207","name":"pointedToBipointedCompBipointedToPointedSnd_hom_app_toFun","line":207,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedSnd_hom_app_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedSnd_hom_app_toFun\"><span class=\"name\">pointedToBipointedCompBipointedToPointedSnd_hom_app_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointed\">pointedToBipointed</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedSnd\">bipointedToPointedSnd</a></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.toFun\">Pointed.Hom.toFun</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedSnd\">pointedToBipointedCompBipointedToPointedSnd</a>.hom</span>.app <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L199-L203","name":"pointedToBipointedCompBipointedToPointedFst","line":199,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedFst","doc":"`BipointedToPointed_fst` is inverse to `PointedToBipointed`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedFst\"><span class=\"name\">pointedToBipointedCompBipointedToPointedFst</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointed\">pointedToBipointed</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedFst\">bipointedToPointedFst</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L198-L198","name":"pointedToBipointedCompBipointedToPointedFst_hom_app_toFun","line":198,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedFst_hom_app_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedFst_hom_app_toFun\"><span class=\"name\">pointedToBipointedCompBipointedToPointedFst_hom_app_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointed\">pointedToBipointed</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedFst\">bipointedToPointedFst</a></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.toFun\">Pointed.Hom.toFun</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedFst\">pointedToBipointedCompBipointedToPointedFst</a>.hom</span>.app <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L198-L198","name":"pointedToBipointedCompBipointedToPointedFst_inv_app_toFun","line":198,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedFst_inv_app_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedFst_inv_app_toFun\"><span class=\"name\">pointedToBipointedCompBipointedToPointedFst_inv_app_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.toFun\">Pointed.Hom.toFun</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedFst\">pointedToBipointedCompBipointedToPointedFst</a>.inv</span>.app <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L192-L194","name":"pointedToBipointedSnd_comp_swap","line":192,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedSnd_comp_swap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedSnd_comp_swap\"><span class=\"name\">pointedToBipointedSnd_comp_swap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedSnd\">pointedToBipointedSnd</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedFst\">pointedToBipointedFst</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L186-L188","name":"pointedToBipointedFst_comp_swap","line":186,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedFst_comp_swap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedFst_comp_swap\"><span class=\"name\">pointedToBipointedFst_comp_swap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedFst\">pointedToBipointedFst</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedSnd\">pointedToBipointedSnd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L178-L182","name":"pointedToBipointedSnd","line":178,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedSnd","doc":"The functor from `Pointed` to `Bipointed` which adds a first point. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedSnd\"><span class=\"name\">pointedToBipointedSnd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L170-L174","name":"pointedToBipointedFst","line":170,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedFst","doc":"The functor from `Pointed` to `Bipointed` which adds a second point. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedFst\"><span class=\"name\">pointedToBipointedFst</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L164-L166","name":"pointedToBipointed","line":164,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointed","doc":"The functor from `Pointed` to `Bipointed` which bipoints the point. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointed\"><span class=\"name\">pointedToBipointed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L158-L160","name":"swap_comp_bipointedToPointedSnd","line":158,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#swap_comp_bipointedToPointedSnd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#swap_comp_bipointedToPointedSnd\"><span class=\"name\">swap_comp_bipointedToPointedSnd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedSnd\">bipointedToPointedSnd</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedFst\">bipointedToPointedFst</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L152-L154","name":"swap_comp_bipointedToPointedFst","line":152,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#swap_comp_bipointedToPointedFst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#swap_comp_bipointedToPointedFst\"><span class=\"name\">swap_comp_bipointedToPointedFst</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedFst\">bipointedToPointedFst</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedSnd\">bipointedToPointedSnd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L146-L148","name":"bipointedToPointedSnd_comp_forget","line":146,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedSnd_comp_forget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedSnd_comp_forget\"><span class=\"name\">bipointedToPointedSnd_comp_forget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedSnd\">bipointedToPointedSnd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L140-L142","name":"bipointedToPointedFst_comp_forget","line":140,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedFst_comp_forget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedFst_comp_forget\"><span class=\"name\">bipointedToPointedFst_comp_forget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedFst\">bipointedToPointedFst</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L134-L136","name":"bipointedToPointedSnd","line":134,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedSnd","doc":"The forgetful functor from `Bipointed` to `Pointed` which forgets about the first point. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedSnd\"><span class=\"name\">bipointedToPointedSnd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L128-L130","name":"bipointedToPointedFst","line":128,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedFst","doc":"The forgetful functor from `Bipointed` to `Pointed` which forgets about the second point. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedFst\"><span class=\"name\">bipointedToPointedFst</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L121-L122","name":"Bipointed.swapEquiv_symm","line":121,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_symm\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv_symm</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">Bipointed.swapEquiv</a>.symm</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">Bipointed.swapEquiv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L110-L117","name":"Bipointed.swapEquiv","line":110,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv","doc":"The equivalence between `Bipointed` and itself induced by `Prod.swap` both ways. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L109-L109","name":"Bipointed.swapEquiv_inverse_obj_X","line":109,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_inverse_obj_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_inverse_obj_X\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv_inverse_obj_X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">Bipointed.swapEquiv</a>.inverse</span>.obj <span class=\"fn\">X</span></span>)</span>.X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span>.X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L109-L109","name":"Bipointed.swapEquiv_inverse_map_toFun","line":109,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_inverse_map_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_inverse_map_toFun\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv_inverse_map_toFun</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">X</span>.X</span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">Bipointed.Hom.toFun</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">Bipointed.swapEquiv</a>.inverse</span>.map <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">Bipointed.Hom.toFun</a> <span class=\"fn\">f</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L109-L109","name":"Bipointed.swapEquiv_counitIso_hom_app_toFun","line":109,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_counitIso_hom_app_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_counitIso_hom_app_toFun\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv_counitIso_hom_app_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">Bipointed.Hom.toFun</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">Bipointed.swapEquiv</a>.counitIso</span>.hom</span>.app <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L109-L109","name":"Bipointed.swapEquiv_counitIso_inv_app_toFun","line":109,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_counitIso_inv_app_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_counitIso_inv_app_toFun\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv_counitIso_inv_app_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">Bipointed.Hom.toFun</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">Bipointed.swapEquiv</a>.counitIso</span>.inv</span>.app <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L109-L109","name":"Bipointed.swapEquiv_unitIso_hom_app_toFun","line":109,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_unitIso_hom_app_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_unitIso_hom_app_toFun\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv_unitIso_hom_app_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.X</span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">Bipointed.Hom.toFun</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">Bipointed.swapEquiv</a>.unitIso</span>.hom</span>.app <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">Bipointed.Hom.toFun</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.obj <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.obj <span class=\"fn\">X</span></span>)</span></span>)</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">Bipointed.Hom.toFun</a>\n        <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n          <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">id</span>,\n            <span class=\"fn\">map_fst</span> :=\n              <span class=\"fn\">(_ :\n                <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.toProd</span>.1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                   <span class=\"fn\"><a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.toProd</span>.1</span></span></span>)</span>,\n            <span class=\"fn\">map_snd</span> :=\n              <span class=\"fn\">(_ :\n                <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.toProd</span>.2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                   <span class=\"fn\"><a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.toProd</span>.2</span></span></span>)</span> }</span>\n          <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.map\n              <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">id</span>,\n                <span class=\"fn\">map_fst</span> :=\n                  <span class=\"fn\">(_ :\n                    <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span>)</span>.obj <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.obj <span class=\"fn\">X</span></span>)</span></span>)</span>.toProd</span>.1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                       <span class=\"fn\"><a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span>)</span>.obj <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.obj <span class=\"fn\">X</span></span>)</span></span>)</span>.toProd</span>.1</span></span></span>)</span>,\n                <span class=\"fn\">map_snd</span> :=\n                  <span class=\"fn\">(_ :\n                    <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span>)</span>.obj <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.obj <span class=\"fn\">X</span></span>)</span></span>)</span>.toProd</span>.2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                       <span class=\"fn\"><a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span>)</span>.obj <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.obj <span class=\"fn\">X</span></span>)</span></span>)</span>.toProd</span>.2</span></span></span>)</span> }</span></span>)</span>\n            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.map\n              <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.map\n                <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">id</span>,\n                  <span class=\"fn\">map_fst</span> :=\n                    <span class=\"fn\">(_ :\n                      <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.toProd</span>.1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                         <span class=\"fn\"><a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.toProd</span>.1</span></span></span>)</span>,\n                  <span class=\"fn\">map_snd</span> :=\n                    <span class=\"fn\">(_ :\n                      <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.toProd</span>.2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                         <span class=\"fn\"><a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.toProd</span>.2</span></span></span>)</span> }</span></span>)</span></span>)</span></span>)</span></span>)</span>\n        <span class=\"fn\">a</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L109-L109","name":"Bipointed.swapEquiv_functor_obj_X","line":109,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_functor_obj_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_functor_obj_X\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv_functor_obj_X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">Bipointed.swapEquiv</a>.functor</span>.obj <span class=\"fn\">X</span></span>)</span>.X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span>.X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L109-L109","name":"Bipointed.swapEquiv_inverse_obj_toProd","line":109,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_inverse_obj_toProd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_inverse_obj_toProd\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv_inverse_obj_toProd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">Bipointed.swapEquiv</a>.inverse</span>.obj <span class=\"fn\">X</span></span>)</span>.toProd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Prod/Basic.html#Prod.swap\">Prod.swap</a> <span class=\"fn\"><span class=\"fn\">X</span>.toProd</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L109-L109","name":"Bipointed.swapEquiv_functor_map_toFun","line":109,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_functor_map_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_functor_map_toFun\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv_functor_map_toFun</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">X</span>.X</span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">Bipointed.Hom.toFun</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">Bipointed.swapEquiv</a>.functor</span>.map <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">Bipointed.Hom.toFun</a> <span class=\"fn\">f</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L109-L109","name":"Bipointed.swapEquiv_unitIso_inv_app_toFun","line":109,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_unitIso_inv_app_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_unitIso_inv_app_toFun\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv_unitIso_inv_app_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.X</span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">Bipointed.Hom.toFun</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">Bipointed.swapEquiv</a>.unitIso</span>.inv</span>.app <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">Bipointed.Hom.toFun</a>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n        <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.map\n          <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.map\n            <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">id</span>,\n              <span class=\"fn\">map_fst</span> :=\n                <span class=\"fn\">(_ :\n                  <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.toProd</span>.1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                     <span class=\"fn\"><a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.toProd</span>.1</span></span></span>)</span>,\n              <span class=\"fn\">map_snd</span> :=\n                <span class=\"fn\">(_ :\n                  <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.toProd</span>.2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                     <span class=\"fn\"><a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.toProd</span>.2</span></span></span>)</span> }</span></span>)</span></span>)</span>\n        <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n          <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.map\n            <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">id</span>,\n              <span class=\"fn\">map_fst</span> :=\n                <span class=\"fn\">(_ :\n                  <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a></span>)</span>.obj <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.obj <span class=\"fn\">X</span></span>)</span></span>)</span>.toProd</span>.1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                     <span class=\"fn\"><a href=\"./Init/Prelude.html#id\">id</a>\n                      <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a></span>)</span>.obj\n                            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.obj <span class=\"fn\">X</span></span>)</span></span>)</span>.toProd</span>.1</span></span></span>)</span>,\n              <span class=\"fn\">map_snd</span> :=\n                <span class=\"fn\">(_ :\n                  <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a></span>)</span>.obj <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.obj <span class=\"fn\">X</span></span>)</span></span>)</span>.toProd</span>.2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                     <span class=\"fn\"><a href=\"./Init/Prelude.html#id\">id</a>\n                      <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a></span>)</span>.obj\n                            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.obj <span class=\"fn\">X</span></span>)</span></span>)</span>.toProd</span>.2</span></span></span>)</span> }</span></span>)</span>\n          <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">id</span>,\n            <span class=\"fn\">map_fst</span> :=\n              <span class=\"fn\">(_ :\n                <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.toProd</span>.1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                   <span class=\"fn\"><a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.toProd</span>.1</span></span></span>)</span>,\n            <span class=\"fn\">map_snd</span> :=\n              <span class=\"fn\">(_ :\n                <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.toProd</span>.2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                   <span class=\"fn\"><a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a></span>)</span>.obj <span class=\"fn\">X</span></span>)</span>.toProd</span>.2</span></span></span>)</span> }</span></span>)</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">Bipointed.Hom.toFun</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.obj <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.obj <span class=\"fn\">X</span></span>)</span></span>)</span></span>)</span> <span class=\"fn\">a</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L109-L109","name":"Bipointed.swapEquiv_functor_obj_toProd","line":109,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_functor_obj_toProd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_functor_obj_toProd\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv_functor_obj_toProd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">Bipointed.swapEquiv</a>.functor</span>.obj <span class=\"fn\">X</span></span>)</span>.toProd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Prod/Basic.html#Prod.swap\">Prod.swap</a> <span class=\"fn\"><span class=\"fn\">X</span>.toProd</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L103-L105","name":"Bipointed.swap","line":103,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap","doc":"Swaps the pointed elements of a bipointed type. `Prod.swap` as a functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L102-L102","name":"Bipointed.swap_obj_toProd","line":102,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap_obj_toProd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap_obj_toProd\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swap_obj_toProd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.obj <span class=\"fn\">X</span></span>)</span>.toProd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Prod/Basic.html#Prod.swap\">Prod.swap</a> <span class=\"fn\"><span class=\"fn\">X</span>.toProd</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L102-L102","name":"Bipointed.swap_obj_X","line":102,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap_obj_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap_obj_X\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swap_obj_X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.obj <span class=\"fn\">X</span></span>)</span>.X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span>.X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L102-L102","name":"Bipointed.swap_map_toFun","line":102,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap_map_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap_map_toFun\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swap_map_toFun</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">X</span>.X</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">Bipointed.Hom.toFun</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.map <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">Bipointed.Hom.toFun</a> <span class=\"fn\">f</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L94-L98","name":"Bipointed.concreteCategory","line":94,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.concreteCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.concreteCategory\"><span class=\"name\">Bipointed</span>.<span class=\"name\">concreteCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L88-L91","name":"Bipointed.largeCategory","line":88,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.largeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.largeCategory\"><span class=\"name\">Bipointed</span>.<span class=\"name\">largeCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L80-L83","name":"Bipointed.Hom.comp","line":80,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.comp","doc":"Composition of morphisms of `Bipointed`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.comp\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Bipointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Bipointed.Hom</a> <span class=\"fn\">Y</span> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Bipointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L79-L79","name":"Bipointed.Hom.comp_toFun","line":79,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.comp_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.comp_toFun\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">comp_toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Bipointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Bipointed.Hom</a> <span class=\"fn\">Y</span> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">X</span>.X</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">Bipointed.Hom.toFun</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.comp\">Bipointed.Hom.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Function.comp\">(<a href=\"./Init/Prelude.html#Function.comp\"><span class=\"fn\"><span class=\"fn\">g</span>.toFun</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\">f</span>.toFun</span></a>)</a> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L75-L76","name":"Bipointed.Hom.instInhabitedHom","line":75,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.instInhabitedHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.instInhabitedHom\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">instInhabitedHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Bipointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L71-L72","name":"Bipointed.Hom.id","line":71,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.id","doc":"The identity morphism of `X : Bipointed`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.id\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Bipointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L70-L70","name":"Bipointed.Hom.id_toFun","line":70,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.id_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.id_toFun\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">id_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">X</span>.X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">Bipointed.Hom.toFun</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.id\">Bipointed.Hom.id</a> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L64-L64","name":"Bipointed.Hom.map_snd","line":64,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.map_snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.map_snd\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">map_snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Bipointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">Bipointed.Hom.toFun</a> <span class=\"fn\">self</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.toProd</span>.2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.toProd</span>.2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L63-L63","name":"Bipointed.Hom.map_fst","line":63,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.map_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.map_fst\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">map_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Bipointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">Bipointed.Hom.toFun</a> <span class=\"fn\">self</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.toProd</span>.1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.toProd</span>.1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L62-L62","name":"Bipointed.Hom.toFun","line":62,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Bipointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.X</span> → <span class=\"fn\"><span class=\"fn\">Y</span>.X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L61-L61","name":"Bipointed.Hom.mk","line":61,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.mk\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(toFun : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.X</span> → <span class=\"fn\"><span class=\"fn\">Y</span>.X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(map_fst : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">toFun</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.toProd</span>.1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.toProd</span>.1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(map_snd : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">toFun</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.toProd</span>.2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.toProd</span>.2</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Bipointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L61-L64","name":"Bipointed.Hom","line":61,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom","doc":"Morphisms in `Bipointed`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L60-L60","name":"Bipointed.Hom.ext_iff","line":60,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.ext_iff\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Bipointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Bipointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.toFun</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.toFun</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L60-L60","name":"Bipointed.Hom.ext","line":60,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.ext\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Bipointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Bipointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(toFun : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.toFun</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.toFun</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L56-L57","name":"Bipointed.instInhabitedBipointed","line":56,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.instInhabitedBipointed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.instInhabitedBipointed\"><span class=\"name\">Bipointed</span>.<span class=\"name\">instInhabitedBipointed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L53-L53","name":"Prod.Bipointed","line":53,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Prod.Bipointed","doc":"**Alias** of `Bipointed.of`.\n\n---\n\nTurns a bipointing into a bipointed type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Prod.Bipointed\"><span class=\"name\">Prod</span>.<span class=\"name\">Bipointed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(to_prod : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L49-L50","name":"Bipointed.coe_of","line":49,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.coe_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.coe_of\"><span class=\"name\">Bipointed</span>.<span class=\"name\">coe_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(to_prod : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.of\">Bipointed.of</a> <span class=\"fn\">to_prod</span></span>)</span>.X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L44-L45","name":"Bipointed.of","line":44,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.of","doc":"Turns a bipointing into a bipointed type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.of\"><span class=\"name\">Bipointed</span>.<span class=\"name\">of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(to_prod : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L37-L38","name":"Bipointed.instCoeSortBipointedType","line":37,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.instCoeSortBipointedType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.instCoeSortBipointedType\"><span class=\"name\">Bipointed</span>.<span class=\"name\">instCoeSortBipointedType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u_3)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L32-L32","name":"Bipointed.toProd","line":32,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.toProd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.toProd\"><span class=\"name\">Bipointed</span>.<span class=\"name\">toProd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">self</span>.X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L31-L31","name":"Bipointed.X","line":31,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\"><span class=\"name\">Bipointed</span>.<span class=\"name\">X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L30-L30","name":"Bipointed.mk","line":30,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.mk\"><span class=\"name\">Bipointed</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(toProd : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Bipointed.lean#L30-L32","name":"Bipointed","line":30,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed","doc":"The category of bipointed types. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\"><span class=\"name\">Bipointed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u + 1)</div></div>"}]}