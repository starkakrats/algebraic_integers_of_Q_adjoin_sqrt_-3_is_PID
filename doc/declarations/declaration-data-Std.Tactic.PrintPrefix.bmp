{"name":"Std.Tactic.PrintPrefix","instances":[],"imports":["Init","Std.Lean.Name","Std.Lean.Util.EnvSearch","Lean.Elab.Tactic.Config"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/0d0ac1c43e1ec1965e0806af9e7a32999ea31096/Std/Tactic/PrintPrefix.lean#L123-L134","name":"Lean.Elab.Command.elabPrintPrefix","line":123,"kind":"def","docLink":"./Std/Tactic/PrintPrefix.html#Lean.Elab.Command.elabPrintPrefix","doc":"Implementation for #print prefix\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/PrintPrefix.html#Lean.Elab.Command.elabPrintPrefix\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">elabPrintPrefix</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElab\">Lean.Elab.Command.CommandElab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/0d0ac1c43e1ec1965e0806af9e7a32999ea31096/Std/Tactic/PrintPrefix.lean#L32-L59","name":"Lean.Elab.Command.printPrefix","line":32,"kind":"def","docLink":"./Std/Tactic/PrintPrefix.html#Lean.Elab.Command.printPrefix","doc":"The command `#print prefix foo` will print all definitions that start with\nthe namespace `foo`.\n\nFor example, the command below will print out definitions in the `List` namespace:\n\n```lean\n#print prefix List\n```\n\n`#print prefix` can be controlled by flags in `PrintPrefixConfig`.  These provide\noptions for filtering names and formatting.   For example,\n`#print prefix` by default excludes internal names, but this can be controlled\nvia config:\n```lean\n#print prefix (config:={internals:=true}) List\n```\n\nBy default, `#print prefix` prints the type after each name.  This can be controlled\nby setting `showTypes` to `false`:\n```lean\n#print prefix (config:={showTypes:=false}) List\n```\n\nThe complete set of flags can be seen in the documentation\nfor `Lean.Elab.Command.PrintPrefixConfig`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/PrintPrefix.html#Lean.Elab.Command.printPrefix\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">printPrefix</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/0d0ac1c43e1ec1965e0806af9e7a32999ea31096/Std/Tactic/PrintPrefix.lean#L29-L30","name":"Lean.Elab.Command.elabPrintPrefixConfig","line":29,"kind":"def","docLink":"./Std/Tactic/PrintPrefix.html#Lean.Elab.Command.elabPrintPrefixConfig","doc":"Function elaborating `Config`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/PrintPrefix.html#Lean.Elab.Command.elabPrintPrefixConfig\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">elabPrintPrefixConfig</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> â†’ <span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Std/Tactic/PrintPrefix.html#Lean.Elab.Command.PrintPrefixConfig\">Lean.Elab.Command.PrintPrefixConfig</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/0d0ac1c43e1ec1965e0806af9e7a32999ea31096/Std/Tactic/PrintPrefix.lean#L27-L27","name":"Lean.Elab.Command.PrintPrefixConfig.internals","line":27,"kind":"def","docLink":"./Std/Tactic/PrintPrefix.html#Lean.Elab.Command.PrintPrefixConfig.internals","doc":"Include internal declarations (names starting with `_`, `match_` or `proof_`)\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/PrintPrefix.html#Lean.Elab.Command.PrintPrefixConfig.internals\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">PrintPrefixConfig</span>.<span class=\"name\">internals</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Std/Tactic/PrintPrefix.html#Lean.Elab.Command.PrintPrefixConfig\">Lean.Elab.Command.PrintPrefixConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/0d0ac1c43e1ec1965e0806af9e7a32999ea31096/Std/Tactic/PrintPrefix.lean#L23-L23","name":"Lean.Elab.Command.PrintPrefixConfig.showTypes","line":23,"kind":"def","docLink":"./Std/Tactic/PrintPrefix.html#Lean.Elab.Command.PrintPrefixConfig.showTypes","doc":"Print the type of a declaration. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/PrintPrefix.html#Lean.Elab.Command.PrintPrefixConfig.showTypes\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">PrintPrefixConfig</span>.<span class=\"name\">showTypes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Std/Tactic/PrintPrefix.html#Lean.Elab.Command.PrintPrefixConfig\">Lean.Elab.Command.PrintPrefixConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/0d0ac1c43e1ec1965e0806af9e7a32999ea31096/Std/Tactic/PrintPrefix.lean#L21-L21","name":"Lean.Elab.Command.PrintPrefixConfig.propositionsOnly","line":21,"kind":"def","docLink":"./Std/Tactic/PrintPrefix.html#Lean.Elab.Command.PrintPrefixConfig.propositionsOnly","doc":"Exclude declarations whose types are not propositions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/PrintPrefix.html#Lean.Elab.Command.PrintPrefixConfig.propositionsOnly\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">PrintPrefixConfig</span>.<span class=\"name\">propositionsOnly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Std/Tactic/PrintPrefix.html#Lean.Elab.Command.PrintPrefixConfig\">Lean.Elab.Command.PrintPrefixConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/0d0ac1c43e1ec1965e0806af9e7a32999ea31096/Std/Tactic/PrintPrefix.lean#L19-L19","name":"Lean.Elab.Command.PrintPrefixConfig.propositions","line":19,"kind":"def","docLink":"./Std/Tactic/PrintPrefix.html#Lean.Elab.Command.PrintPrefixConfig.propositions","doc":"Include declarations whose types are propositions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/PrintPrefix.html#Lean.Elab.Command.PrintPrefixConfig.propositions\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">PrintPrefixConfig</span>.<span class=\"name\">propositions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Std/Tactic/PrintPrefix.html#Lean.Elab.Command.PrintPrefixConfig\">Lean.Elab.Command.PrintPrefixConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/0d0ac1c43e1ec1965e0806af9e7a32999ea31096/Std/Tactic/PrintPrefix.lean#L17-L17","name":"Lean.Elab.Command.PrintPrefixConfig.imported","line":17,"kind":"def","docLink":"./Std/Tactic/PrintPrefix.html#Lean.Elab.Command.PrintPrefixConfig.imported","doc":"Include declarations in imported environment. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/PrintPrefix.html#Lean.Elab.Command.PrintPrefixConfig.imported\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">PrintPrefixConfig</span>.<span class=\"name\">imported</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Std/Tactic/PrintPrefix.html#Lean.Elab.Command.PrintPrefixConfig\">Lean.Elab.Command.PrintPrefixConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/0d0ac1c43e1ec1965e0806af9e7a32999ea31096/Std/Tactic/PrintPrefix.lean#L15-L15","name":"Lean.Elab.Command.PrintPrefixConfig.mk","line":15,"kind":"ctor","docLink":"./Std/Tactic/PrintPrefix.html#Lean.Elab.Command.PrintPrefixConfig.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/PrintPrefix.html#Lean.Elab.Command.PrintPrefixConfig.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">PrintPrefixConfig</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(imported : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(propositions : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(propositionsOnly : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(showTypes : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(internals : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Tactic/PrintPrefix.html#Lean.Elab.Command.PrintPrefixConfig\">Lean.Elab.Command.PrintPrefixConfig</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/0d0ac1c43e1ec1965e0806af9e7a32999ea31096/Std/Tactic/PrintPrefix.lean#L15-L27","name":"Lean.Elab.Command.PrintPrefixConfig","line":15,"kind":"structure","docLink":"./Std/Tactic/PrintPrefix.html#Lean.Elab.Command.PrintPrefixConfig","doc":"Options to control `#print prefix` command and `getMatchingConstants`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/PrintPrefix.html#Lean.Elab.Command.PrintPrefixConfig\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">PrintPrefixConfig</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}