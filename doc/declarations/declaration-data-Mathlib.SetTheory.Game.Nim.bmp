{"name":"Mathlib.SetTheory.Game.Nim","instances":[{"typeNames":["SetTheory.PGame.LeftMoves"],"name":"SetTheory.PGame.isEmpty_nim_zero_leftMoves","className":"IsEmpty"},{"typeNames":["SetTheory.PGame.RightMoves"],"name":"SetTheory.PGame.isEmpty_nim_zero_rightMoves","className":"IsEmpty"},{"typeNames":["SetTheory.PGame.LeftMoves"],"name":"SetTheory.PGame.uniqueNimOneLeftMoves","className":"Unique"},{"typeNames":["SetTheory.PGame.RightMoves"],"name":"SetTheory.PGame.uniqueNimOneRightMoves","className":"Unique"},{"typeNames":["SetTheory.PGame.nim"],"name":"SetTheory.PGame.nim_impartial","className":"SetTheory.PGame.Impartial"}],"imports":["Init","Mathlib.Data.Nat.Bitwise","Mathlib.SetTheory.Game.Birthday","Mathlib.SetTheory.Game.Impartial"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L406-L410","name":"SetTheory.PGame.grundyValue_add","line":406,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_add\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">grundyValue_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hG : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">SetTheory.PGame.grundyValue</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hH : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">SetTheory.PGame.grundyValue</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">SetTheory.PGame.grundyValue</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">m</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L402-L403","name":"SetTheory.PGame.nim_add_nim_equiv","line":402,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_add_nim_equiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_add_nim_equiv\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">nim_add_nim_equiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">m</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L363-L399","name":"SetTheory.PGame.grundyValue_nim_add_nim","line":363,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_nim_add_nim","doc":"The Grundy value of the sum of two nim games with natural numbers of piles equals their bitwise\nxor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_nim_add_nim\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">grundyValue_nim_add_nim</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">SetTheory.PGame.grundyValue</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">m</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L347-L355","name":"SetTheory.PGame.grundyValue_eq_mex_right","line":347,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_eq_mex_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_eq_mex_right\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">grundyValue_eq_mex_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">SetTheory.PGame.grundyValue</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mex\">Ordinal.mex</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.RightMoves\">SetTheory.PGame.RightMoves</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">SetTheory.PGame.grundyValue</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.moveRight\">SetTheory.PGame.moveRight</a> <span class=\"fn\">G</span> <span class=\"fn\">i</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L343-L344","name":"SetTheory.PGame.grundyValue_neg","line":343,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_neg\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">grundyValue_neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">SetTheory.PGame.grundyValue</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">G</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">SetTheory.PGame.grundyValue</a> <span class=\"fn\">G</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L338-L339","name":"SetTheory.PGame.grundyValue_star","line":338,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_star","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_star\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">grundyValue_star</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">SetTheory.PGame.grundyValue</a> <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.star\">SetTheory.PGame.star</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L333-L334","name":"SetTheory.PGame.grundyValue_iff_equiv_zero","line":333,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_iff_equiv_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_iff_equiv_zero\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">grundyValue_iff_equiv_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">SetTheory.PGame.grundyValue</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L329-L330","name":"SetTheory.PGame.grundyValue_zero","line":329,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_zero\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">grundyValue_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">SetTheory.PGame.grundyValue</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L323-L325","name":"SetTheory.PGame.grundyValue_eq_iff_equiv","line":323,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_eq_iff_equiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_eq_iff_equiv\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">grundyValue_eq_iff_equiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">SetTheory.PGame.grundyValue</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">SetTheory.PGame.grundyValue</a> <span class=\"fn\">H</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L319-L320","name":"SetTheory.PGame.nim_grundyValue","line":319,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_grundyValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_grundyValue\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">nim_grundyValue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">SetTheory.PGame.grundyValue</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">o</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L312-L315","name":"SetTheory.PGame.grundyValue_eq_iff_equiv_nim","line":312,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_eq_iff_equiv_nim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_eq_iff_equiv_nim\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">grundyValue_eq_iff_equiv_nim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">SetTheory.PGame.grundyValue</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">o</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L273-L309","name":"SetTheory.PGame.equiv_nim_grundyValue","line":273,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.equiv_nim_grundyValue","doc":"The Sprague-Grundy theorem which states that every impartial game is equivalent to a game of\nnim, namely the game of nim corresponding to the games Grundy value "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.equiv_nim_grundyValue\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">equiv_nim_grundyValue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">SetTheory.PGame.grundyValue</a> <span class=\"fn\">G</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L267-L268","name":"SetTheory.PGame.grundyValue_eq_mex_left","line":267,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_eq_mex_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_eq_mex_left\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">grundyValue_eq_mex_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">SetTheory.PGame.grundyValue</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mex\">Ordinal.mex</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.LeftMoves\">SetTheory.PGame.LeftMoves</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">SetTheory.PGame.grundyValue</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.moveLeft\">SetTheory.PGame.moveLeft</a> <span class=\"fn\">G</span> <span class=\"fn\">i</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L261-L264","name":"SetTheory.PGame.grundyValue","line":261,"kind":"def","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue","doc":"The Grundy value of an impartial game, the ordinal which corresponds to the game of nim that the\ngame is equivalent to "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">grundyValue</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L255-L256","name":"SetTheory.PGame.nim_equiv_iff_eq","line":255,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_equiv_iff_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_equiv_iff_eq\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">nim_equiv_iff_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o₁ : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o₂ : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">o₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L250-L251","name":"SetTheory.PGame.nim_add_fuzzy_zero_iff","line":250,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_add_fuzzy_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_add_fuzzy_zero_iff\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">nim_add_fuzzy_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o₁ : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o₂ : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.Fuzzy\">SetTheory.PGame.Fuzzy</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">o₂</span></span></span>)</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">o₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">o₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L234-L246","name":"SetTheory.PGame.nim_add_equiv_zero_iff","line":234,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_add_equiv_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_add_equiv_zero_iff\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">nim_add_equiv_zero_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o₁ : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(o₂ : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">o₂</span></span></span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L227-L230","name":"SetTheory.PGame.nim_fuzzy_zero_of_ne_zero","line":227,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_fuzzy_zero_of_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_fuzzy_zero_of_ne_zero\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">nim_fuzzy_zero_of_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ho : <span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.Fuzzy\">SetTheory.PGame.Fuzzy</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">o</span></span>)</span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L221-L224","name":"SetTheory.PGame.nim_impartial","line":221,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_impartial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_impartial\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">nim_impartial</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">o</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L216-L218","name":"SetTheory.PGame.neg_nim","line":216,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.neg_nim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.neg_nim\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">neg_nim</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">o</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">o</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L206-L212","name":"SetTheory.PGame.nim_birthday","line":206,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_birthday","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_birthday\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">nim_birthday</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Birthday.html#SetTheory.PGame.birthday\">SetTheory.PGame.birthday</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">o</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L201-L202","name":"SetTheory.PGame.nim_one_equiv","line":201,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_one_equiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_one_equiv\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">nim_one_equiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.star\">SetTheory.PGame.star</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L194-L198","name":"SetTheory.PGame.nimOneRelabelling","line":194,"kind":"def","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nimOneRelabelling","doc":"`nim 1` has exactly the same moves as `star`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nimOneRelabelling\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">nimOneRelabelling</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.Relabelling\">SetTheory.PGame.Relabelling</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">1</span></span>)</span> <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.star\">SetTheory.PGame.star</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L190-L190","name":"SetTheory.PGame.nim_one_moveRight","line":190,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_one_moveRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_one_moveRight\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">nim_one_moveRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.RightMoves\">SetTheory.PGame.RightMoves</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.moveRight\">SetTheory.PGame.moveRight</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L187-L187","name":"SetTheory.PGame.nim_one_moveLeft","line":187,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_one_moveLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_one_moveLeft\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">nim_one_moveLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.LeftMoves\">SetTheory.PGame.LeftMoves</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.moveLeft\">SetTheory.PGame.moveLeft</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L182-L184","name":"SetTheory.PGame.toRightMovesNim_one_symm","line":182,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toRightMovesNim_one_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toRightMovesNim_one_symm\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">toRightMovesNim_one_symm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.RightMoves\">SetTheory.PGame.RightMoves</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">SetTheory.PGame.toRightMovesNim</span>.symm</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">0</span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">1</span></span></span>)</span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L176-L178","name":"SetTheory.PGame.toLeftMovesNim_one_symm","line":176,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toLeftMovesNim_one_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toLeftMovesNim_one_symm\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">toLeftMovesNim_one_symm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.LeftMoves\">SetTheory.PGame.LeftMoves</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">SetTheory.PGame.toLeftMovesNim</span>.symm</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">0</span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">1</span></span></span>)</span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L170-L172","name":"SetTheory.PGame.default_nim_one_rightMoves_eq","line":170,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.default_nim_one_rightMoves_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.default_nim_one_rightMoves_eq\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">default_nim_one_rightMoves_eq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">default</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">SetTheory.PGame.toRightMovesNim</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">0</span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">1</span></span></span>)</span> }</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L164-L166","name":"SetTheory.PGame.default_nim_one_leftMoves_eq","line":164,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.default_nim_one_leftMoves_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.default_nim_one_leftMoves_eq\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">default_nim_one_leftMoves_eq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">default</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">SetTheory.PGame.toLeftMovesNim</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">0</span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">1</span></span></span>)</span> }</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L159-L160","name":"SetTheory.PGame.uniqueNimOneRightMoves","line":159,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.uniqueNimOneRightMoves","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.uniqueNimOneRightMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">uniqueNimOneRightMoves</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.RightMoves\">SetTheory.PGame.RightMoves</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L155-L156","name":"SetTheory.PGame.uniqueNimOneLeftMoves","line":155,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.uniqueNimOneLeftMoves","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.uniqueNimOneLeftMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">uniqueNimOneLeftMoves</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.LeftMoves\">SetTheory.PGame.LeftMoves</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L151-L152","name":"SetTheory.PGame.nim_zero_equiv","line":151,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_zero_equiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_zero_equiv\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">nim_zero_equiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L147-L148","name":"SetTheory.PGame.nimZeroRelabelling","line":147,"kind":"def","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nimZeroRelabelling","doc":"`nim 0` has exactly the same moves as `0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nimZeroRelabelling\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">nimZeroRelabelling</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.Relabelling\">SetTheory.PGame.Relabelling</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">0</span></span>)</span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L141-L143","name":"SetTheory.PGame.isEmpty_nim_zero_rightMoves","line":141,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.isEmpty_nim_zero_rightMoves","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.isEmpty_nim_zero_rightMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">isEmpty_nim_zero_rightMoves</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.RightMoves\">SetTheory.PGame.RightMoves</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">0</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L136-L138","name":"SetTheory.PGame.isEmpty_nim_zero_leftMoves","line":136,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.isEmpty_nim_zero_leftMoves","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.isEmpty_nim_zero_leftMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">isEmpty_nim_zero_leftMoves</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.LeftMoves\">SetTheory.PGame.LeftMoves</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">0</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L131-L133","name":"SetTheory.PGame.rightMovesNimRecOn","line":131,"kind":"def","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.rightMovesNimRecOn","doc":"A recursion principle for right moves of a nim game. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.rightMovesNimRecOn\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">rightMovesNimRecOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.RightMoves\">SetTheory.PGame.RightMoves</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">o</span></span>)</span></span> → <a href=\"./foundational_types.html\">Sort</a> u_1</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.RightMoves\">SetTheory.PGame.RightMoves</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">o</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>) → <span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span>) → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">SetTheory.PGame.toRightMovesNim</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">a</span>, <span class=\"fn\">property</span> := <span class=\"fn\">H</span> }</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L124-L126","name":"SetTheory.PGame.leftMovesNimRecOn","line":124,"kind":"def","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.leftMovesNimRecOn","doc":"A recursion principle for left moves of a nim game. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.leftMovesNimRecOn\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">leftMovesNimRecOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.LeftMoves\">SetTheory.PGame.LeftMoves</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">o</span></span>)</span></span> → <a href=\"./foundational_types.html\">Sort</a> u_1</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.LeftMoves\">SetTheory.PGame.LeftMoves</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">o</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>) → <span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span>) → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">SetTheory.PGame.toLeftMovesNim</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">a</span>, <span class=\"fn\">property</span> := <span class=\"fn\">H</span> }</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L119-L119","name":"SetTheory.PGame.moveRight_nim","line":119,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.moveRight_nim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.moveRight_nim\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">moveRight_nim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">o</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.moveRight\">SetTheory.PGame.moveRight</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">o</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">SetTheory.PGame.toRightMovesNim</span> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">↑<span class=\"fn\">i</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L115-L116","name":"SetTheory.PGame.moveRight_nim'","line":115,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.moveRight_nim'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.moveRight_nim'\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">moveRight_nim'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.RightMoves\">SetTheory.PGame.RightMoves</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">o</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.moveRight\">SetTheory.PGame.moveRight</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">o</span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">SetTheory.PGame.toRightMovesNim</span>.symm</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L111-L111","name":"SetTheory.PGame.moveLeft_nim","line":111,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.moveLeft_nim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.moveLeft_nim\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">moveLeft_nim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">o</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.moveLeft\">SetTheory.PGame.moveLeft</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">o</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">SetTheory.PGame.toLeftMovesNim</span> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">↑<span class=\"fn\">i</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L106-L108","name":"SetTheory.PGame.moveLeft_nim'","line":106,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.moveLeft_nim'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.moveLeft_nim'\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">moveLeft_nim'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.LeftMoves\">SetTheory.PGame.LeftMoves</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">o</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.moveLeft\">SetTheory.PGame.moveLeft</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">o</span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">SetTheory.PGame.toLeftMovesNim</span>.symm</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L100-L102","name":"SetTheory.PGame.toRightMovesNim_symm_lt","line":100,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toRightMovesNim_symm_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toRightMovesNim_symm_lt\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">toRightMovesNim_symm_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.RightMoves\">SetTheory.PGame.RightMoves</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">o</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">SetTheory.PGame.toRightMovesNim</span>.symm</span> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L94-L96","name":"SetTheory.PGame.toLeftMovesNim_symm_lt","line":94,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toLeftMovesNim_symm_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toLeftMovesNim_symm_lt\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">toLeftMovesNim_symm_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.LeftMoves\">SetTheory.PGame.LeftMoves</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">o</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">SetTheory.PGame.toLeftMovesNim</span>.symm</span> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L89-L90","name":"SetTheory.PGame.toRightMovesNim","line":89,"kind":"def","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toRightMovesNim","doc":"Turns an ordinal less than `o` into a right move for `nim o` and viceversa. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toRightMovesNim\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">toRightMovesNim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">o</span></span>)</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.RightMoves\">SetTheory.PGame.RightMoves</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">o</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L84-L85","name":"SetTheory.PGame.toLeftMovesNim","line":84,"kind":"def","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toLeftMovesNim","doc":"Turns an ordinal less than `o` into a left move for `nim o` and viceversa. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toLeftMovesNim\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">toLeftMovesNim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">o</span></span>)</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.LeftMoves\">SetTheory.PGame.LeftMoves</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">o</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L78-L80","name":"SetTheory.PGame.moveRight_nim_hEq","line":78,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.moveRight_nim_hEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.moveRight_nim_hEq\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">moveRight_nim_hEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">let_fun this := <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#IsWellOrder\">IsWellOrder</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.out\">Quotient.out</a> <span class=\"fn\">o</span></span>)</span>.α</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.out\">Quotient.out</a> <span class=\"fn\">o</span></span>)</span>.α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span>)</span>;\n<span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.moveRight\">SetTheory.PGame.moveRight</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">o</span></span>)</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.out\">Quotient.out</a> <span class=\"fn\">o</span></span>)</span>.α</span>) =&gt;\n  <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.typein\">Ordinal.typein</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.out\">Quotient.out</a> <span class=\"fn\">o</span></span>)</span>.α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">i</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L73-L75","name":"SetTheory.PGame.moveLeft_nim_hEq","line":73,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.moveLeft_nim_hEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.moveLeft_nim_hEq\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">moveLeft_nim_hEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">let_fun this := <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#IsWellOrder\">IsWellOrder</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.out\">Quotient.out</a> <span class=\"fn\">o</span></span>)</span>.α</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.out\">Quotient.out</a> <span class=\"fn\">o</span></span>)</span>.α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span>)</span>;\n<span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.moveLeft\">SetTheory.PGame.moveLeft</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">o</span></span>)</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.out\">Quotient.out</a> <span class=\"fn\">o</span></span>)</span>.α</span>) =&gt;\n  <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.typein\">Ordinal.typein</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.out\">Quotient.out</a> <span class=\"fn\">o</span></span>)</span>.α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">i</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L70-L70","name":"SetTheory.PGame.rightMoves_nim","line":70,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.rightMoves_nim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.rightMoves_nim\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">rightMoves_nim</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.RightMoves\">SetTheory.PGame.RightMoves</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">o</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.out\">Quotient.out</a> <span class=\"fn\">o</span></span>)</span>.α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L67-L67","name":"SetTheory.PGame.leftMoves_nim","line":67,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.leftMoves_nim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.leftMoves_nim\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">leftMoves_nim</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.LeftMoves\">SetTheory.PGame.LeftMoves</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">o</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.out\">Quotient.out</a> <span class=\"fn\">o</span></span>)</span>.α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L59-L64","name":"SetTheory.PGame.nim_def","line":59,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_def\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">nim_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">let_fun this := <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#IsWellOrder\">IsWellOrder</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.out\">Quotient.out</a> <span class=\"fn\">o</span></span>)</span>.α</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.out\">Quotient.out</a> <span class=\"fn\">o</span></span>)</span>.α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span>)</span>;\n<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.mk\">SetTheory.PGame.mk</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.out\">Quotient.out</a> <span class=\"fn\">o</span></span>)</span>.α</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.out\">Quotient.out</a> <span class=\"fn\">o</span></span>)</span>.α</span>\n    <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">o₂</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.out\">Quotient.out</a> <span class=\"fn\">o</span></span>)</span>.α</span>) =&gt;\n      <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.typein\">Ordinal.typein</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.out\">Quotient.out</a> <span class=\"fn\">o</span></span>)</span>.α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">o₂</span></span>)</span></span></span>)</span>\n    <span class=\"fn\">fun (<span class=\"fn\">o₂</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.out\">Quotient.out</a> <span class=\"fn\">o</span></span>)</span>.α</span>) =&gt;\n    <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">SetTheory.PGame.nim</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.typein\">Ordinal.typein</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.out\">Quotient.out</a> <span class=\"fn\">o</span></span>)</span>.α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">o₂</span></span>)</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/SetTheory/Game/Nim.lean#L48-L54","name":"SetTheory.PGame.nim","line":48,"kind":"def","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim","doc":"The definition of single-heap nim, which can be viewed as a pile of stones where each player can\ntake a positive number of stones from it on their turn. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">nim</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a></span></div></div>"}]}