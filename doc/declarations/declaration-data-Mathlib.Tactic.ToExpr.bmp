{"name":"Mathlib.Tactic.ToExpr","instances":[{"typeNames":["Option"],"name":"Lean.instToExprOption_1","className":"Lean.ToExpr"},{"typeNames":["List"],"name":"Lean.instToExprList_1","className":"Lean.ToExpr"},{"typeNames":["Array"],"name":"Lean.instToExprArray_1","className":"Lean.ToExpr"},{"typeNames":["Prod"],"name":"Lean.instToExprProd_1","className":"Lean.ToExpr"},{"typeNames":["System.FilePath"],"name":"Lean.instToExprFilePath","className":"Lean.ToExpr"},{"typeNames":["Int"],"name":"Mathlib.instToExprInt","className":"Lean.ToExpr"},{"typeNames":["ULift"],"name":"Mathlib.instToExprULift","className":"Lean.ToExpr"},{"typeNames":["PUnit"],"name":"Mathlib.instToExprPUnit","className":"Lean.ToExpr"},{"typeNames":["String.Pos"],"name":"Mathlib.instToExprPos","className":"Lean.ToExpr"},{"typeNames":["Substring"],"name":"Mathlib.instToExprSubstring","className":"Lean.ToExpr"},{"typeNames":["Lean.SourceInfo"],"name":"Mathlib.instToExprSourceInfo","className":"Lean.ToExpr"},{"typeNames":["Lean.Syntax.Preresolved"],"name":"Mathlib.instToExprPreresolved","className":"Lean.ToExpr"},{"typeNames":["Lean.Syntax"],"name":"Mathlib.instToExprSyntax","className":"Lean.ToExpr"},{"typeNames":["Lean.MData"],"name":"Mathlib.instToExprMData","className":"Lean.ToExpr"},{"typeNames":["Lean.FVarId"],"name":"Mathlib.instToExprFVarId","className":"Lean.ToExpr"},{"typeNames":["Lean.MVarId"],"name":"Mathlib.instToExprMVarId","className":"Lean.ToExpr"},{"typeNames":["Lean.LevelMVarId"],"name":"Mathlib.instToExprLevelMVarId","className":"Lean.ToExpr"},{"typeNames":["Lean.Level"],"name":"Mathlib.instToExprLevel","className":"Lean.ToExpr"},{"typeNames":["Lean.BinderInfo"],"name":"Mathlib.instToExprBinderInfo","className":"Lean.ToExpr"},{"typeNames":["Lean.Literal"],"name":"Mathlib.instToExprLiteral","className":"Lean.ToExpr"},{"typeNames":["Lean.Expr"],"name":"Mathlib.instToExprExpr","className":"Lean.ToExpr"}],"imports":["Init","Mathlib.Tactic.DeriveToExpr","Mathlib.Util.WhatsNew"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/ToExpr.lean#L93-L93","name":"Mathlib.instToExprExpr","line":93,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprExpr\"><span class=\"name\">Mathlib</span>.<span class=\"name\">instToExprExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/ToExpr.lean#L92-L92","name":"Mathlib.instToExprLiteral","line":92,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprLiteral","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprLiteral\"><span class=\"name\">Mathlib</span>.<span class=\"name\">instToExprLiteral</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Lean/Expr.html#Lean.Literal\">Lean.Literal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/ToExpr.lean#L91-L91","name":"Mathlib.instToExprBinderInfo","line":91,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprBinderInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprBinderInfo\"><span class=\"name\">Mathlib</span>.<span class=\"name\">instToExprBinderInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Lean/Expr.html#Lean.BinderInfo\">Lean.BinderInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/ToExpr.lean#L90-L90","name":"Mathlib.instToExprLevel","line":90,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprLevel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprLevel\"><span class=\"name\">Mathlib</span>.<span class=\"name\">instToExprLevel</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/ToExpr.lean#L89-L89","name":"Mathlib.instToExprLevelMVarId","line":89,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprLevelMVarId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprLevelMVarId\"><span class=\"name\">Mathlib</span>.<span class=\"name\">instToExprLevelMVarId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Lean/Level.html#Lean.LevelMVarId\">Lean.LevelMVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/ToExpr.lean#L88-L88","name":"Mathlib.instToExprMVarId","line":88,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprMVarId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprMVarId\"><span class=\"name\">Mathlib</span>.<span class=\"name\">instToExprMVarId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/ToExpr.lean#L87-L87","name":"Mathlib.instToExprFVarId","line":87,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprFVarId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprFVarId\"><span class=\"name\">Mathlib</span>.<span class=\"name\">instToExprFVarId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/ToExpr.lean#L83-L85","name":"Mathlib.instToExprMData","line":83,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprMData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprMData\"><span class=\"name\">Mathlib</span>.<span class=\"name\">instToExprMData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Lean/Expr.html#Lean.MData\">Lean.MData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/ToExpr.lean#L64-L64","name":"Mathlib.instToExprSyntax","line":64,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprSyntax","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprSyntax\"><span class=\"name\">Mathlib</span>.<span class=\"name\">instToExprSyntax</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/ToExpr.lean#L63-L63","name":"Mathlib.instToExprPreresolved","line":63,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprPreresolved","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprPreresolved\"><span class=\"name\">Mathlib</span>.<span class=\"name\">instToExprPreresolved</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Init/Prelude.html#Lean.Syntax.Preresolved\">Lean.Syntax.Preresolved</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/ToExpr.lean#L62-L62","name":"Mathlib.instToExprSourceInfo","line":62,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprSourceInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprSourceInfo\"><span class=\"name\">Mathlib</span>.<span class=\"name\">instToExprSourceInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Init/Prelude.html#Lean.SourceInfo\">Lean.SourceInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/ToExpr.lean#L61-L61","name":"Mathlib.instToExprSubstring","line":61,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprSubstring","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprSubstring\"><span class=\"name\">Mathlib</span>.<span class=\"name\">instToExprSubstring</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Init/Prelude.html#Substring\">Substring</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/ToExpr.lean#L60-L60","name":"Mathlib.instToExprPos","line":60,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprPos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprPos\"><span class=\"name\">Mathlib</span>.<span class=\"name\">instToExprPos</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/ToExpr.lean#L56-L58","name":"Mathlib.instToExprPUnit","line":56,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprPUnit","doc":"Hand-written instance since `PUnit` is a `Sort` rather than a `Type`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprPUnit\"><span class=\"name\">Mathlib</span>.<span class=\"name\">instToExprPUnit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<a href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel\">Lean.ToLevel.{u}</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/ToExpr.lean#L53-L53","name":"Mathlib.instToExprULift","line":53,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprULift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprULift\"><span class=\"name\">Mathlib</span>.<span class=\"name\">instToExprULift</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> s} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">α</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst</span> : <a href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel\">Lean.ToLevel.{r}</a>] → <span class=\"fn\">[<span class=\"fn\">inst</span> : <a href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel\">Lean.ToLevel.{s}</a>] → <span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift</a> <span class=\"fn\">α</span></span>)</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/ToExpr.lean#L51-L51","name":"Mathlib.instToExprInt","line":51,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprInt\"><span class=\"name\">Mathlib</span>.<span class=\"name\">instToExprInt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/ToExpr.lean#L43-L43","name":"Lean.instToExprFilePath","line":43,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Lean.instToExprFilePath","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Lean.instToExprFilePath\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprFilePath</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/ToExpr.lean#L41-L41","name":"Lean.instToExprProd_1","line":41,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Lean.instToExprProd_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Lean.instToExprProd_1\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprProd_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u} →\n  <span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v} →\n    <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">α</span></span>] →\n      <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">β</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst</span> : <a href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel\">Lean.ToLevel.{u}</a>] → <span class=\"fn\">[<span class=\"fn\">inst</span> : <a href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel\">Lean.ToLevel.{v}</a>] → <span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span></span>)</span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/ToExpr.lean#L34-L37","name":"Lean.instToExprArray_1","line":34,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Lean.instToExprArray_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Lean.instToExprArray_1\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprArray_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<a href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel\">Lean.ToLevel.{u}</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/ToExpr.lean#L30-L30","name":"Lean.instToExprList_1","line":30,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Lean.instToExprList_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Lean.instToExprList_1\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprList_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">α</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst</span> : <a href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel\">Lean.ToLevel.{u}</a>] → <span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/ToExpr.lean#L26-L26","name":"Lean.instToExprOption_1","line":26,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Lean.instToExprOption_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Lean.instToExprOption_1\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprOption_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">α</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst</span> : <a href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel\">Lean.ToLevel.{u}</a>] → <span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span>)</span></span></span></span></span></div></div>"}]}