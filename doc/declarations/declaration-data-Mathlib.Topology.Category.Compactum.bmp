{"name":"Mathlib.Topology.Category.Compactum","instances":[{"typeNames":["Compactum.forget"],"name":"Compactum.instFaithfulCompactumInstCompactumCategoryTypeTypesForget","className":"CategoryTheory.Faithful"},{"typeNames":["Compactum.forget"],"name":"Compactum.instCreatesLimitsCompactumInstCompactumCategoryTypeTypesForget","className":"CategoryTheory.CreatesLimitsOfSize"},{"typeNames":["Compactum"],"name":"Compactum.instConcreteCategoryCompactumInstCompactumCategory","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["Compactum","_builtin_typeu"],"name":"Compactum.instCoeSortCompactumType","className":"CoeSort"},{"typeNames":["Quiver.Hom"],"name":"Compactum.instCoeFunHomCompactumToQuiverToCategoryStructInstCompactumCategoryForAllATypeTypesOfTypeMonadUltrafilterMonadLawfulMonad","className":"CoeFun"},{"typeNames":["Compactum"],"name":"Compactum.instHasLimitsCompactumInstCompactumCategory","className":"CategoryTheory.Limits.HasLimitsOfSize"},{"typeNames":["CategoryTheory.Monad.Algebra.A"],"name":"Compactum.instTopologicalSpaceATypeTypesOfTypeMonadUltrafilterMonadLawfulMonad","className":"TopologicalSpace"},{"typeNames":["CategoryTheory.Monad.Algebra.A"],"name":"Compactum.instCompactSpaceATypeTypesOfTypeMonadUltrafilterMonadLawfulMonadInstTopologicalSpaceATypeTypesOfTypeMonadUltrafilterMonadLawfulMonad","className":"CompactSpace"},{"typeNames":["CategoryTheory.Monad.Algebra.A"],"name":"Compactum.instT2SpaceATypeTypesOfTypeMonadUltrafilterMonadLawfulMonadInstTopologicalSpaceATypeTypesOfTypeMonadUltrafilterMonadLawfulMonad","className":"T2Space"},{"typeNames":["compactumToCompHaus"],"name":"compactumToCompHaus.isEquivalence","className":"CategoryTheory.IsEquivalence"},{"typeNames":["CategoryTheory.forget"],"name":"CompHaus.forgetCreatesLimits","className":"CategoryTheory.CreatesLimitsOfSize"},{"typeNames":["CategoryTheory.forget"],"name":"Profinite.forgetCreatesLimits","className":"CategoryTheory.CreatesLimitsOfSize"}],"imports":["Init","Mathlib.CategoryTheory.Monad.Types","Mathlib.CategoryTheory.Monad.Limits","Mathlib.CategoryTheory.Equivalence","Mathlib.Topology.Category.CompHaus.Basic","Mathlib.Topology.Category.Profinite.Basic","Mathlib.Data.Set.Constructions"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L513-L515","name":"Profinite.forgetCreatesLimits","line":513,"kind":"instance","docLink":"./Mathlib/Topology/Category/Compactum.html#Profinite.forgetCreatesLimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Profinite.forgetCreatesLimits\"><span class=\"name\">Profinite</span>.<span class=\"name\">forgetCreatesLimits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Creates.html#CategoryTheory.CreatesLimits\">CategoryTheory.CreatesLimits</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L503-L509","name":"CompHaus.forgetCreatesLimits","line":503,"kind":"instance","docLink":"./Mathlib/Topology/Category/Compactum.html#CompHaus.forgetCreatesLimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#CompHaus.forgetCreatesLimits\"><span class=\"name\">CompHaus</span>.<span class=\"name\">forgetCreatesLimits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Creates.html#CategoryTheory.CreatesLimits\">CategoryTheory.CreatesLimits</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L491-L493","name":"compactumToCompHausCompForget","line":491,"kind":"def","docLink":"./Mathlib/Topology/Category/Compactum.html#compactumToCompHausCompForget","doc":"The forgetful functors of `Compactum` and `CompHaus` are compatible via\n`compactumToCompHaus`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#compactumToCompHausCompForget\"><span class=\"name\">compactumToCompHausCompForget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus\">compactumToCompHaus</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.forget\">Compactum.forget</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L480-L484","name":"compactumToCompHaus.isEquivalence","line":480,"kind":"instance","docLink":"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus.isEquivalence","doc":"The functor `compactumToCompHaus` is an equivalence of categories. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus.isEquivalence\"><span class=\"name\">compactumToCompHaus</span>.<span class=\"name\">isEquivalence</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.IsEquivalence\">CategoryTheory.IsEquivalence</a> <a href=\"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus\">compactumToCompHaus</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L475-L476","name":"compactumToCompHaus.essSurj","line":475,"kind":"theorem","docLink":"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus.essSurj","doc":"The functor `compactumToCompHaus` is essentially surjective. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus.essSurj\"><span class=\"name\">compactumToCompHaus</span>.<span class=\"name\">essSurj</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EssentialImage.html#CategoryTheory.EssSurj\">CategoryTheory.EssSurj</a> <a href=\"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus\">compactumToCompHaus</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L457-L471","name":"compactumToCompHaus.isoOfTopologicalSpace","line":457,"kind":"def","docLink":"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus.isoOfTopologicalSpace","doc":"This definition is used to prove essential surjectivity of `compactumToCompHaus`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus.isoOfTopologicalSpace\"><span class=\"name\">compactumToCompHaus</span>.<span class=\"name\">isoOfTopologicalSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus\">compactumToCompHaus</a>.obj <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.ofTopologicalSpace\">Compactum.ofTopologicalSpace</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">D</span>.toTop</span></span></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">D</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L447-L453","name":"compactumToCompHaus.faithful","line":447,"kind":"theorem","docLink":"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus.faithful","doc":"The functor `compactumToCompHaus` is faithful. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus.faithful\"><span class=\"name\">compactumToCompHaus</span>.<span class=\"name\">faithful</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Faithful\">CategoryTheory.Faithful</a> <a href=\"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus\">compactumToCompHaus</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L443-L443","name":"compactumToCompHaus.full","line":443,"kind":"def","docLink":"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus.full","doc":"The functor `compactumToCompHaus` is full. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus.full\"><span class=\"name\">compactumToCompHaus</span>.<span class=\"name\">full</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Full\">CategoryTheory.Full</a> <a href=\"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus\">compactumToCompHaus</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L433-L437","name":"compactumToCompHaus","line":433,"kind":"def","docLink":"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus","doc":"The functor functor from Compactum to CompHaus. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus\"><span class=\"name\">compactumToCompHaus</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a> <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L420-L427","name":"Compactum.homOfContinuous","line":420,"kind":"def","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.homOfContinuous","doc":"Any continuous map between Compacta is a morphism of compacta. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.homOfContinuous\"><span class=\"name\">Compactum</span>.<span class=\"name\">homOfContinuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.A</span> → <span class=\"fn\"><span class=\"fn\">Y</span>.A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cont : <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L389-L416","name":"Compactum.ofTopologicalSpace","line":389,"kind":"def","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.ofTopologicalSpace","doc":"Given any compact Hausdorff space, we construct a Compactum. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.ofTopologicalSpace\"><span class=\"name\">Compactum</span>.<span class=\"name\">ofTopologicalSpace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Compactness/Compact.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation.html#T2Space\">T2Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L379-L385","name":"Compactum.continuous_of_hom","line":379,"kind":"theorem","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.continuous_of_hom","doc":"Any morphism of compacta is continuous. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.continuous_of_hom\"><span class=\"name\">Compactum</span>.<span class=\"name\">continuous_of_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#Continuous\">Continuous</a> <span class=\"fn\"><span class=\"fn\">f</span>.f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L368-L375","name":"Compactum.cl_eq_closure","line":368,"kind":"theorem","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.cl_eq_closure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.cl_eq_closure\"><span class=\"name\">Compactum</span>.<span class=\"name\">cl_eq_closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\"><span class=\"fn\">X</span>.A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Compactum.html#_private.Mathlib.Topology.Category.Compactum.0.Compactum.cl\">Compactum.cl</a> <span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#closure\">closure</a> <span class=\"fn\">A</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L363-L365","name":"Compactum.lim_eq_str","line":363,"kind":"theorem","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.lim_eq_str","doc":"The structure map of a compactum actually computes limits. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.lim_eq_str\"><span class=\"name\">Compactum</span>.<span class=\"name\">lim_eq_str</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\"><span class=\"fn\">X</span>.A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#Ultrafilter.lim\">Ultrafilter.lim</a> <span class=\"fn\">F</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.str\">Compactum.str</a> <span class=\"fn\">X</span> <span class=\"fn\">F</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L357-L360","name":"Compactum.instT2SpaceATypeTypesOfTypeMonadUltrafilterMonadLawfulMonadInstTopologicalSpaceATypeTypesOfTypeMonadUltrafilterMonadLawfulMonad","line":357,"kind":"instance","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.instT2SpaceATypeTypesOfTypeMonadUltrafilterMonadLawfulMonadInstTopologicalSpaceATypeTypesOfTypeMonadUltrafilterMonadLawfulMonad","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.instT2SpaceATypeTypesOfTypeMonadUltrafilterMonadLawfulMonadInstTopologicalSpaceATypeTypesOfTypeMonadUltrafilterMonadLawfulMonad\"><span class=\"name\">Compactum</span>.<span class=\"name\">instT2SpaceATypeTypesOfTypeMonadUltrafilterMonadLawfulMonadInstTopologicalSpaceATypeTypesOfTypeMonadUltrafilterMonadLawfulMonad</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Separation.html#T2Space\">T2Space</a> <span class=\"fn\"><span class=\"fn\">X</span>.A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L352-L353","name":"Compactum.le_nhds_of_str_eq","line":352,"kind":"theorem","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.le_nhds_of_str_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.le_nhds_of_str_eq\"><span class=\"name\">Compactum</span>.<span class=\"name\">le_nhds_of_str_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\"><span class=\"fn\">X</span>.A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">X</span>.A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.str\">Compactum.str</a> <span class=\"fn\">X</span> <span class=\"fn\">F</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span> → <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">F</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#nhds\">nhds</a> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L281-L349","name":"Compactum.str_eq_of_le_nhds","line":281,"kind":"theorem","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.str_eq_of_le_nhds","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.str_eq_of_le_nhds\"><span class=\"name\">Compactum</span>.<span class=\"name\">str_eq_of_le_nhds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\"><span class=\"fn\">X</span>.A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">X</span>.A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">F</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#nhds\">nhds</a> <span class=\"fn\">x</span></span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.str\">Compactum.str</a> <span class=\"fn\">X</span> <span class=\"fn\">F</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L275-L278","name":"Compactum.isClosed_cl","line":275,"kind":"theorem","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.isClosed_cl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.isClosed_cl\"><span class=\"name\">Compactum</span>.<span class=\"name\">isClosed_cl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\"><span class=\"fn\">X</span>.A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Compactum.html#_private.Mathlib.Topology.Category.Compactum.0.Compactum.cl\">Compactum.cl</a> <span class=\"fn\">A</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L187-L194","name":"Compactum.instCompactSpaceATypeTypesOfTypeMonadUltrafilterMonadLawfulMonadInstTopologicalSpaceATypeTypesOfTypeMonadUltrafilterMonadLawfulMonad","line":187,"kind":"instance","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.instCompactSpaceATypeTypesOfTypeMonadUltrafilterMonadLawfulMonadInstTopologicalSpaceATypeTypesOfTypeMonadUltrafilterMonadLawfulMonad","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.instCompactSpaceATypeTypesOfTypeMonadUltrafilterMonadLawfulMonadInstTopologicalSpaceATypeTypesOfTypeMonadUltrafilterMonadLawfulMonad\"><span class=\"name\">Compactum</span>.<span class=\"name\">instCompactSpaceATypeTypesOfTypeMonadUltrafilterMonadLawfulMonadInstTopologicalSpaceATypeTypesOfTypeMonadUltrafilterMonadLawfulMonad</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Compactness/Compact.html#CompactSpace\">CompactSpace</a> <span class=\"fn\"><span class=\"fn\">X</span>.A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L172-L184","name":"Compactum.isClosed_iff","line":172,"kind":"theorem","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.isClosed_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.isClosed_iff\"><span class=\"name\">Compactum</span>.<span class=\"name\">isClosed_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\"><span class=\"fn\">X</span>.A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\"><span class=\"fn\">X</span>.A</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">F</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.str\">Compactum.str</a> <span class=\"fn\">X</span> <span class=\"fn\">F</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L165-L170","name":"Compactum.instTopologicalSpaceATypeTypesOfTypeMonadUltrafilterMonadLawfulMonad","line":165,"kind":"instance","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.instTopologicalSpaceATypeTypesOfTypeMonadUltrafilterMonadLawfulMonad","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.instTopologicalSpaceATypeTypesOfTypeMonadUltrafilterMonadLawfulMonad\"><span class=\"name\">Compactum</span>.<span class=\"name\">instTopologicalSpaceATypeTypesOfTypeMonadUltrafilterMonadLawfulMonad</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\"><span class=\"fn\">X</span>.A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L157-L161","name":"Compactum.join_distrib","line":157,"kind":"theorem","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.join_distrib","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.join_distrib\"><span class=\"name\">Compactum</span>.<span class=\"name\">join_distrib</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(uux : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\"><span class=\"fn\">X</span>.A</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.str\">Compactum.str</a> <span class=\"fn\">X</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.join\">Compactum.join</a> <span class=\"fn\">X</span> <span class=\"fn\">uux</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.str\">Compactum.str</a> <span class=\"fn\">X</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter.html#Ultrafilter.map\">Ultrafilter.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.str\">Compactum.str</a> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">uux</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L149-L153","name":"Compactum.str_hom_commute","line":149,"kind":"theorem","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.str_hom_commute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.str_hom_commute\"><span class=\"name\">Compactum</span>.<span class=\"name\">str_hom_commute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(xs : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\"><span class=\"fn\">X</span>.A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra.Hom.f\">CategoryTheory.Monad.Algebra.Hom.f</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.str\">Compactum.str</a> <span class=\"fn\">X</span> <span class=\"fn\">xs</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.str\">Compactum.str</a> <span class=\"fn\">Y</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter.html#Ultrafilter.map\">Ultrafilter.map</a> <span class=\"fn\"><span class=\"fn\">f</span>.f</span> <span class=\"fn\">xs</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L142-L145","name":"Compactum.str_incl","line":142,"kind":"theorem","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.str_incl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.str_incl\"><span class=\"name\">Compactum</span>.<span class=\"name\">str_incl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">X</span>.A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.str\">Compactum.str</a> <span class=\"fn\">X</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.incl\">Compactum.incl</a> <span class=\"fn\">X</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L137-L138","name":"Compactum.incl","line":137,"kind":"def","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.incl","doc":"The inclusion of `X` into `Ultrafilter X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.incl\"><span class=\"name\">Compactum</span>.<span class=\"name\">incl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.A</span> → <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\"><span class=\"fn\">X</span>.A</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L132-L133","name":"Compactum.join","line":132,"kind":"def","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.join","doc":"The monadic join. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.join\"><span class=\"name\">Compactum</span>.<span class=\"name\">join</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\"><span class=\"fn\">X</span>.A</span></span>)</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\"><span class=\"fn\">X</span>.A</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L127-L128","name":"Compactum.str","line":127,"kind":"def","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.str","doc":"The structure map for a compactum, essentially sending an ultrafilter to its limit. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.str\"><span class=\"name\">Compactum</span>.<span class=\"name\">str</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\"><span class=\"fn\">X</span>.A</span></span> → <span class=\"fn\"><span class=\"fn\">X</span>.A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L123-L124","name":"Compactum.instHasLimitsCompactumInstCompactumCategory","line":123,"kind":"instance","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.instHasLimitsCompactumInstCompactumCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.instHasLimitsCompactumInstCompactumCategory\"><span class=\"name\">Compactum</span>.<span class=\"name\">instHasLimitsCompactumInstCompactumCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimits\">CategoryTheory.Limits.HasLimits</a> <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L120-L121","name":"Compactum.instCoeFunHomCompactumToQuiverToCategoryStructInstCompactumCategoryForAllATypeTypesOfTypeMonadUltrafilterMonadLawfulMonad","line":120,"kind":"instance","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.instCoeFunHomCompactumToQuiverToCategoryStructInstCompactumCategoryForAllATypeTypesOfTypeMonadUltrafilterMonadLawfulMonad","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.instCoeFunHomCompactumToQuiverToCategoryStructInstCompactumCategoryForAllATypeTypesOfTypeMonadUltrafilterMonadLawfulMonad\"><span class=\"name\">Compactum</span>.<span class=\"name\">instCoeFunHomCompactumToQuiverToCategoryStructInstCompactumCategoryForAllATypeTypesOfTypeMonadUltrafilterMonadLawfulMonad</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeFun\">CoeFun</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.A</span> → <span class=\"fn\"><span class=\"fn\">Y</span>.A</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L117-L118","name":"Compactum.instCoeSortCompactumType","line":117,"kind":"instance","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.instCoeSortCompactumType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.instCoeSortCompactumType\"><span class=\"name\">Compactum</span>.<span class=\"name\">instCoeSortCompactumType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u_1)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L114-L114","name":"Compactum.instConcreteCategoryCompactumInstCompactumCategory","line":114,"kind":"instance","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.instConcreteCategoryCompactumInstCompactumCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.instConcreteCategoryCompactumInstCompactumCategory\"><span class=\"name\">Compactum</span>.<span class=\"name\">instConcreteCategoryCompactumInstCompactumCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L109-L110","name":"Compactum.adj","line":109,"kind":"def","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.adj","doc":"The adjunction between `free` and `forget`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.adj\"><span class=\"name\">Compactum</span>.<span class=\"name\">adj</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.free\">Compactum.free</a> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.forget\">Compactum.forget</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L104-L105","name":"Compactum.free","line":104,"kind":"def","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.free","doc":"The \"free\" Compactum functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.free\"><span class=\"name\">Compactum</span>.<span class=\"name\">free</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u_1)</a> <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L100-L101","name":"Compactum.instCreatesLimitsCompactumInstCompactumCategoryTypeTypesForget","line":100,"kind":"instance","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.instCreatesLimitsCompactumInstCompactumCategoryTypeTypesForget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.instCreatesLimitsCompactumInstCompactumCategoryTypeTypesForget\"><span class=\"name\">Compactum</span>.<span class=\"name\">instCreatesLimitsCompactumInstCompactumCategoryTypeTypesForget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Creates.html#CategoryTheory.CreatesLimits\">CategoryTheory.CreatesLimits</a> <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.forget\">Compactum.forget</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L97-L98","name":"Compactum.instFaithfulCompactumInstCompactumCategoryTypeTypesForget","line":97,"kind":"instance","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.instFaithfulCompactumInstCompactumCategoryTypeTypesForget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.instFaithfulCompactumInstCompactumCategoryTypeTypesForget\"><span class=\"name\">Compactum</span>.<span class=\"name\">instFaithfulCompactumInstCompactumCategoryTypeTypesForget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Faithful\">CategoryTheory.Faithful</a> <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.forget\">Compactum.forget</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L92-L93","name":"Compactum.forget","line":92,"kind":"def","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.forget","doc":"The forgetful functor to Type* "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.forget\"><span class=\"name\">Compactum</span>.<span class=\"name\">forget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u_1)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/Compactum.lean#L85-L86","name":"Compactum","line":85,"kind":"def","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum","doc":"The type `Compactum` of Compacta, defined as algebras for the ultrafilter monad. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\"><span class=\"name\">Compactum</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u_1 + 1)</div></div>"}]}