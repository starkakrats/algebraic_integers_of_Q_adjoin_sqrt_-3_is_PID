{"name":"Mathlib.Algebra.Category.ModuleCat.Projective","instances":[{"typeNames":["ModuleCat"],"name":"ModuleCat.moduleCat_enoughProjectives","className":"CategoryTheory.EnoughProjectives"}],"imports":["Init","Mathlib.Algebra.Category.ModuleCat.EpiMono","Mathlib.Algebra.Module.Projective","Mathlib.CategoryTheory.Preadditive.Projective","Mathlib.LinearAlgebra.FinsuppVectorSpace","Mathlib.Data.Finsupp.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Projective.lean#L60-L75","name":"ModuleCat.moduleCat_enoughProjectives","line":60,"kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/Projective.html#ModuleCat.moduleCat_enoughProjectives","doc":"The category of modules has enough projectives, since every module is a quotient of a free\nmodule. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Projective.html#ModuleCat.moduleCat_enoughProjectives\"><span class=\"name\">ModuleCat</span>.<span class=\"name\">moduleCat_enoughProjectives</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Projective.html#CategoryTheory.EnoughProjectives\">CategoryTheory.EnoughProjectives</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Projective.lean#L52-L54","name":"ModuleCat.projective_of_free","line":52,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Projective.html#ModuleCat.projective_of_free","doc":"Modules that have a basis are projective. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Projective.html#ModuleCat.projective_of_free\"><span class=\"name\">ModuleCat</span>.<span class=\"name\">projective_of_free</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u'}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis.html#Basis\">Basis</a> <span class=\"fn\">ι</span> <span class=\"fn\">R</span> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Projective.html#CategoryTheory.Projective\">CategoryTheory.Projective</a> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/ModuleCat/Projective.lean#L33-L43","name":"IsProjective.iff_projective","line":33,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Projective.html#IsProjective.iff_projective","doc":"The categorical notion of projective object agrees with the explicit module-theoretic notion. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Projective.html#IsProjective.iff_projective\"><span class=\"name\">IsProjective</span>.<span class=\"name\">iff_projective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> (max u v)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Projective.html#Module.Projective\">Module.Projective</a> <span class=\"fn\">R</span> <span class=\"fn\">P</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Projective.html#CategoryTheory.Projective\">CategoryTheory.Projective</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.of\">ModuleCat.of</a> <span class=\"fn\">R</span> <span class=\"fn\">P</span></span>)</span></span></span></div></div>"}]}