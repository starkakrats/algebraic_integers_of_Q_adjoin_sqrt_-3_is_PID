{"name":"Mathlib.Algebra.Lie.CartanMatrix","instances":[{"typeNames":["CartanMatrix.Generators"],"name":"CartanMatrix.instInhabitedGenerators","className":"Inhabited"},{"typeNames":["Matrix.ToLieAlgebra"],"name":"Matrix.ToLieAlgebra.instLieRing","className":"LieRing"},{"typeNames":["Matrix.ToLieAlgebra"],"name":"Matrix.ToLieAlgebra.instInhabited","className":"Inhabited"},{"typeNames":["Matrix.ToLieAlgebra"],"name":"Matrix.ToLieAlgebra.instLieAlgebra","className":"LieAlgebra"}],"imports":["Init","Mathlib.Algebra.Lie.Free","Mathlib.Algebra.Lie.Quotient","Mathlib.Data.Matrix.Notation"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/CartanMatrix.lean#L307-L308","name":"LieAlgebra.g₂","line":307,"kind":"def","docLink":"./Mathlib/Algebra/Lie/CartanMatrix.html#LieAlgebra.g₂","doc":"The exceptional split Lie algebra of type g₂. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#LieAlgebra.g₂\"><span class=\"name\">LieAlgebra</span>.<span class=\"name\">g₂</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/CartanMatrix.lean#L302-L303","name":"LieAlgebra.f₄","line":302,"kind":"def","docLink":"./Mathlib/Algebra/Lie/CartanMatrix.html#LieAlgebra.f₄","doc":"The exceptional split Lie algebra of type f₄. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#LieAlgebra.f₄\"><span class=\"name\">LieAlgebra</span>.<span class=\"name\">f₄</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/CartanMatrix.lean#L297-L298","name":"LieAlgebra.e₈","line":297,"kind":"def","docLink":"./Mathlib/Algebra/Lie/CartanMatrix.html#LieAlgebra.e₈","doc":"The exceptional split Lie algebra of type e₈. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#LieAlgebra.e₈\"><span class=\"name\">LieAlgebra</span>.<span class=\"name\">e₈</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/CartanMatrix.lean#L292-L293","name":"LieAlgebra.e₇","line":292,"kind":"def","docLink":"./Mathlib/Algebra/Lie/CartanMatrix.html#LieAlgebra.e₇","doc":"The exceptional split Lie algebra of type e₇. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#LieAlgebra.e₇\"><span class=\"name\">LieAlgebra</span>.<span class=\"name\">e₇</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/CartanMatrix.lean#L287-L288","name":"LieAlgebra.e₆","line":287,"kind":"def","docLink":"./Mathlib/Algebra/Lie/CartanMatrix.html#LieAlgebra.e₆","doc":"The exceptional split Lie algebra of type e₆. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#LieAlgebra.e₆\"><span class=\"name\">LieAlgebra</span>.<span class=\"name\">e₆</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/CartanMatrix.lean#L278-L279","name":"CartanMatrix.G₂","line":278,"kind":"def","docLink":"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.G₂","doc":"The Cartan matrix of type g₂. See [bourbaki1968] plate IX, page 290.\n\nThe corresponding Dynkin diagram is:\n```\no ≡>≡ o\n```\nActually we are using the transpose of Bourbaki's matrix. This is to make this matrix consistent\nwith `CartanMatrix.F₄`, in the sense that all non-zero values below the diagonal are -1. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.G₂\"><span class=\"name\">CartanMatrix</span>.<span class=\"name\">G₂</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Basic.html#Matrix\">Matrix</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/CartanMatrix.lean#L266-L267","name":"CartanMatrix.F₄","line":266,"kind":"def","docLink":"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.F₄","doc":"The Cartan matrix of type f₄. See [bourbaki1968] plate VIII, page 288.\n\nThe corresponding Dynkin diagram is:\n```\no --- o =>= o --- o\n```\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.F₄\"><span class=\"name\">CartanMatrix</span>.<span class=\"name\">F₄</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Basic.html#Matrix\">Matrix</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">4</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">4</span></span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/CartanMatrix.lean#L248-L256","name":"CartanMatrix.E₈","line":248,"kind":"def","docLink":"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.E₈","doc":"The Cartan matrix of type e₈. See [bourbaki1968] plate VII, page 285.\n\nThe corresponding Dynkin diagram is:\n```\n            o\n            |\no --- o --- o --- o --- o --- o --- o\n```\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.E₈\"><span class=\"name\">CartanMatrix</span>.<span class=\"name\">E₈</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Basic.html#Matrix\">Matrix</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">8</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">8</span></span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/CartanMatrix.lean#L229-L236","name":"CartanMatrix.E₇","line":229,"kind":"def","docLink":"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.E₇","doc":"The Cartan matrix of type e₇. See [bourbaki1968] plate VI, page 281.\n\nThe corresponding Dynkin diagram is:\n```\n            o\n            |\no --- o --- o --- o --- o --- o\n```\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.E₇\"><span class=\"name\">CartanMatrix</span>.<span class=\"name\">E₇</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Basic.html#Matrix\">Matrix</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">7</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">7</span></span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/CartanMatrix.lean#L211-L217","name":"CartanMatrix.E₆","line":211,"kind":"def","docLink":"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.E₆","doc":"The Cartan matrix of type e₆. See [bourbaki1968] plate V, page 277.\n\nThe corresponding Dynkin diagram is:\n```\n            o\n            |\no --- o --- o --- o --- o\n```\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.E₆\"><span class=\"name\">CartanMatrix</span>.<span class=\"name\">E₆</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Basic.html#Matrix\">Matrix</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">6</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">6</span></span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/CartanMatrix.lean#L196-L197","name":"Matrix.ToLieAlgebra.instLieAlgebra","line":196,"kind":"instance","docLink":"./Mathlib/Algebra/Lie/CartanMatrix.html#Matrix.ToLieAlgebra.instLieAlgebra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#Matrix.ToLieAlgebra.instLieAlgebra\"><span class=\"name\">Matrix</span>.<span class=\"name\">ToLieAlgebra</span>.<span class=\"name\">instLieAlgebra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Basic.html#Matrix\">Matrix</a> <span class=\"fn\">B</span> <span class=\"fn\">B</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieAlgebra\">LieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#Matrix.ToLieAlgebra\">Matrix.ToLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/CartanMatrix.lean#L192-L193","name":"Matrix.ToLieAlgebra.instInhabited","line":192,"kind":"instance","docLink":"./Mathlib/Algebra/Lie/CartanMatrix.html#Matrix.ToLieAlgebra.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#Matrix.ToLieAlgebra.instInhabited\"><span class=\"name\">Matrix</span>.<span class=\"name\">ToLieAlgebra</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Basic.html#Matrix\">Matrix</a> <span class=\"fn\">B</span> <span class=\"fn\">B</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#Matrix.ToLieAlgebra\">Matrix.ToLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/CartanMatrix.lean#L188-L189","name":"Matrix.ToLieAlgebra.instLieRing","line":188,"kind":"instance","docLink":"./Mathlib/Algebra/Lie/CartanMatrix.html#Matrix.ToLieAlgebra.instLieRing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#Matrix.ToLieAlgebra.instLieRing\"><span class=\"name\">Matrix</span>.<span class=\"name\">ToLieAlgebra</span>.<span class=\"name\">instLieRing</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Basic.html#Matrix\">Matrix</a> <span class=\"fn\">B</span> <span class=\"fn\">B</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieRing\">LieRing</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#Matrix.ToLieAlgebra\">Matrix.ToLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/CartanMatrix.lean#L183-L184","name":"Matrix.ToLieAlgebra","line":183,"kind":"def","docLink":"./Mathlib/Algebra/Lie/CartanMatrix.html#Matrix.ToLieAlgebra","doc":"The Lie algebra corresponding to a Cartan matrix.\n\nNote that it is defined for any matrix of integers. Its value for non-Cartan matrices should be\nregarded as junk. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#Matrix.ToLieAlgebra\"><span class=\"name\">Matrix</span>.<span class=\"name\">ToLieAlgebra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Basic.html#Matrix\">Matrix</a> <span class=\"fn\">B</span> <span class=\"fn\">B</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (max v u) u v)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/CartanMatrix.lean#L171-L172","name":"CartanMatrix.Relations.toIdeal","line":171,"kind":"def","docLink":"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Relations.toIdeal","doc":"The ideal of the free Lie algebra generated by the relations. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Relations.toIdeal\"><span class=\"name\">CartanMatrix</span>.<span class=\"name\">Relations</span>.<span class=\"name\">toIdeal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Basic.html#Matrix\">Matrix</a> <span class=\"fn\">B</span> <span class=\"fn\">B</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Submodule.html#LieIdeal\">LieIdeal</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra\">FreeLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Generators\">CartanMatrix.Generators</a> <span class=\"fn\">B</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/CartanMatrix.lean#L164-L167","name":"CartanMatrix.Relations.toSet","line":164,"kind":"def","docLink":"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Relations.toSet","doc":"The union of all the relations as a subset of the free Lie algebra. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Relations.toSet\"><span class=\"name\">CartanMatrix</span>.<span class=\"name\">Relations</span>.<span class=\"name\">toSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Basic.html#Matrix\">Matrix</a> <span class=\"fn\">B</span> <span class=\"fn\">B</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra\">FreeLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Generators\">CartanMatrix.Generators</a> <span class=\"fn\">B</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/CartanMatrix.lean#L151-L152","name":"CartanMatrix.Relations.adF","line":151,"kind":"def","docLink":"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Relations.adF","doc":"The terms corresponding to the `ad F`-relations.\n\nSee also `adE` docstring. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Relations.adF\"><span class=\"name\">CartanMatrix</span>.<span class=\"name\">Relations</span>.<span class=\"name\">adF</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Basic.html#Matrix\">Matrix</a> <span class=\"fn\">B</span> <span class=\"fn\">B</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">B</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra\">FreeLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Generators\">CartanMatrix.Generators</a> <span class=\"fn\">B</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/CartanMatrix.lean#L144-L145","name":"CartanMatrix.Relations.adE","line":144,"kind":"def","docLink":"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Relations.adE","doc":"The terms corresponding to the `ad E`-relations.\n\nNote that we use `Int.toNat` so that we can take the power and that we do not bother\nrestricting to the case `i ≠ j` since these relations are zero anyway. We also defensively\nensure this with `adE_of_eq_eq_zero`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Relations.adE\"><span class=\"name\">CartanMatrix</span>.<span class=\"name\">Relations</span>.<span class=\"name\">adE</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Basic.html#Matrix\">Matrix</a> <span class=\"fn\">B</span> <span class=\"fn\">B</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">B</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra\">FreeLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Generators\">CartanMatrix.Generators</a> <span class=\"fn\">B</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/CartanMatrix.lean#L135-L136","name":"CartanMatrix.Relations.HF","line":135,"kind":"def","docLink":"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Relations.HF","doc":"The terms corresponding to the `⁅H, F⁆`-relations. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Relations.HF\"><span class=\"name\">CartanMatrix</span>.<span class=\"name\">Relations</span>.<span class=\"name\">HF</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Basic.html#Matrix\">Matrix</a> <span class=\"fn\">B</span> <span class=\"fn\">B</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">B</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra\">FreeLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Generators\">CartanMatrix.Generators</a> <span class=\"fn\">B</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/CartanMatrix.lean#L130-L131","name":"CartanMatrix.Relations.HE","line":130,"kind":"def","docLink":"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Relations.HE","doc":"The terms corresponding to the `⁅H, E⁆`-relations. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Relations.HE\"><span class=\"name\">CartanMatrix</span>.<span class=\"name\">Relations</span>.<span class=\"name\">HE</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Basic.html#Matrix\">Matrix</a> <span class=\"fn\">B</span> <span class=\"fn\">B</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">B</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra\">FreeLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Generators\">CartanMatrix.Generators</a> <span class=\"fn\">B</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/CartanMatrix.lean#L125-L126","name":"CartanMatrix.Relations.EF","line":125,"kind":"def","docLink":"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Relations.EF","doc":"The terms corresponding to the `⁅E, F⁆`-relations. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Relations.EF\"><span class=\"name\">CartanMatrix</span>.<span class=\"name\">Relations</span>.<span class=\"name\">EF</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">B</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra\">FreeLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Generators\">CartanMatrix.Generators</a> <span class=\"fn\">B</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/CartanMatrix.lean#L120-L121","name":"CartanMatrix.Relations.HH","line":120,"kind":"def","docLink":"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Relations.HH","doc":"The terms corresponding to the `⁅H, H⁆`-relations. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Relations.HH\"><span class=\"name\">CartanMatrix</span>.<span class=\"name\">Relations</span>.<span class=\"name\">HH</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">B</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Free.html#FreeLieAlgebra\">FreeLieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Generators\">CartanMatrix.Generators</a> <span class=\"fn\">B</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/CartanMatrix.lean#L105-L106","name":"CartanMatrix.instInhabitedGenerators","line":105,"kind":"instance","docLink":"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.instInhabitedGenerators","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.instInhabitedGenerators\"><span class=\"name\">CartanMatrix</span>.<span class=\"name\">instInhabitedGenerators</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Generators\">CartanMatrix.Generators</a> <span class=\"fn\">B</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/CartanMatrix.lean#L102-L102","name":"CartanMatrix.Generators.F","line":102,"kind":"ctor","docLink":"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Generators.F","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Generators.F\"><span class=\"name\">CartanMatrix</span>.<span class=\"name\">Generators</span>.<span class=\"name\">F</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">B</span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Generators\">CartanMatrix.Generators</a> <span class=\"fn\">B</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/CartanMatrix.lean#L101-L101","name":"CartanMatrix.Generators.E","line":101,"kind":"ctor","docLink":"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Generators.E","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Generators.E\"><span class=\"name\">CartanMatrix</span>.<span class=\"name\">Generators</span>.<span class=\"name\">E</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">B</span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Generators\">CartanMatrix.Generators</a> <span class=\"fn\">B</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/CartanMatrix.lean#L100-L100","name":"CartanMatrix.Generators.H","line":100,"kind":"ctor","docLink":"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Generators.H","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Generators.H\"><span class=\"name\">CartanMatrix</span>.<span class=\"name\">Generators</span>.<span class=\"name\">H</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">B</span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Generators\">CartanMatrix.Generators</a> <span class=\"fn\">B</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Lie/CartanMatrix.lean#L99-L102","name":"CartanMatrix.Generators","line":99,"kind":"inductive","docLink":"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Generators","doc":"The generators of the free Lie algebra from which we construct the Lie algebra of a Cartan\nmatrix as a quotient. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Lie/CartanMatrix.html#CartanMatrix.Generators\"><span class=\"name\">CartanMatrix</span>.<span class=\"name\">Generators</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> v</div></div>"}]}