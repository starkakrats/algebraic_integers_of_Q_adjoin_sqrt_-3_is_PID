{"name":"Mathlib.CategoryTheory.Monoidal.Skeleton","instances":[{"typeNames":["CategoryTheory.Skeleton"],"name":"CategoryTheory.Skeleton.instMonoidalCategory","className":"CategoryTheory.MonoidalCategory"},{"typeNames":["CategoryTheory.Skeleton"],"name":"CategoryTheory.Skeleton.instMonoid","className":"Monoid"},{"typeNames":["CategoryTheory.Skeleton"],"name":"CategoryTheory.Skeleton.instBraidedCategory","className":"CategoryTheory.BraidedCategory"},{"typeNames":["CategoryTheory.Skeleton"],"name":"CategoryTheory.Skeleton.instCommMonoid","className":"CommMonoid"}],"imports":["Init","Mathlib.CategoryTheory.Monoidal.Braided","Mathlib.CategoryTheory.Monoidal.Transport","Mathlib.CategoryTheory.Skeletal"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Skeleton.lean#L74-L75","name":"CategoryTheory.Skeleton.instCommMonoid","line":74,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monoidal/Skeleton.html#CategoryTheory.Skeleton.instCommMonoid","doc":"The skeleton of a braided monoidal category can be viewed as a commutative monoid, where the\nmultiplication is given by the tensor product, and satisfies the monoid axioms since it is a\nskeleton.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Skeleton.html#CategoryTheory.Skeleton.instCommMonoid\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Skeleton</span>.<span class=\"name\">instCommMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.Skeleton\">CategoryTheory.Skeleton</a> <span class=\"fn\">C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Skeleton.lean#L65-L67","name":"CategoryTheory.Skeleton.instBraidedCategory","line":65,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monoidal/Skeleton.html#CategoryTheory.Skeleton.instBraidedCategory","doc":"The skeleton of a braided monoidal category has a braided monoidal structure itself, induced by\nthe equivalence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Skeleton.html#CategoryTheory.Skeleton.instBraidedCategory\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Skeleton</span>.<span class=\"name\">instBraidedCategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.Skeleton\">CategoryTheory.Skeleton</a> <span class=\"fn\">C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Skeleton.lean#L60-L61","name":"CategoryTheory.Skeleton.instMonoid","line":60,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monoidal/Skeleton.html#CategoryTheory.Skeleton.instMonoid","doc":"The skeleton of a monoidal category can be viewed as a monoid, where the multiplication is given by\nthe tensor product, and satisfies the monoid axioms since it is a skeleton.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Skeleton.html#CategoryTheory.Skeleton.instMonoid\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Skeleton</span>.<span class=\"name\">instMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.Skeleton\">CategoryTheory.Skeleton</a> <span class=\"fn\">C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Skeleton.lean#L53-L54","name":"CategoryTheory.Skeleton.instMonoidalCategory","line":53,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monoidal/Skeleton.html#CategoryTheory.Skeleton.instMonoidalCategory","doc":"The skeleton of a monoidal category has a monoidal structure itself, induced by the equivalence.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Skeleton.html#CategoryTheory.Skeleton.instMonoidalCategory\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Skeleton</span>.<span class=\"name\">instMonoidalCategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.Skeleton\">CategoryTheory.Skeleton</a> <span class=\"fn\">C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Skeleton.lean#L45-L46","name":"CategoryTheory.commMonoidOfSkeletalBraided","line":45,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Skeleton.html#CategoryTheory.commMonoidOfSkeletalBraided","doc":"If `C` is braided and skeletal, it is a commutative monoid. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Skeleton.html#CategoryTheory.commMonoidOfSkeletalBraided\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">commMonoidOfSkeletalBraided</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hC : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.Skeletal\">CategoryTheory.Skeletal</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monoidal/Skeleton.lean#L36-L41","name":"CategoryTheory.monoidOfSkeletalMonoidal","line":36,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Skeleton.html#CategoryTheory.monoidOfSkeletalMonoidal","doc":"If `C` is monoidal and skeletal, it is a monoid.\nSee note [reducible non-instances]. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Skeleton.html#CategoryTheory.monoidOfSkeletalMonoidal\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">monoidOfSkeletalMonoidal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hC : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.Skeletal\">CategoryTheory.Skeletal</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">C</span></span></div></div>"}]}