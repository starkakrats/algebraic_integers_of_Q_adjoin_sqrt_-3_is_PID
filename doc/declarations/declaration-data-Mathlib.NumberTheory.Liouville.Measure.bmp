{"name":"Mathlib.NumberTheory.Liouville.Measure","instances":[],"imports":["Init","Mathlib.MeasureTheory.Measure.Lebesgue.Basic","Mathlib.NumberTheory.Liouville.Residual","Mathlib.NumberTheory.Liouville.LiouvilleWith","Mathlib.Analysis.PSeries"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Liouville/Measure.lean#L126-L127","name":"Real.disjoint_residual_ae","line":126,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Liouville/Measure.html#Real.disjoint_residual_ae","doc":"The filters `residual ℝ` and `volume.ae` are disjoint. This means that there exists a residual\nset of Lebesgue measure zero (e.g., the set of Liouville numbers). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Liouville/Measure.html#Real.disjoint_residual_ae\"><span class=\"name\">Real</span>.<span class=\"name\">disjoint_residual_ae</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/GDelta.html#residual\">residual</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure.ae\">MeasureTheory.Measure.ae</a> <span class=\"fn\">MeasureTheory.volume</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Liouville/Measure.lean#L120-L121","name":"volume_setOf_liouville","line":120,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Liouville/Measure.html#volume_setOf_liouville","doc":"The set of Liouville numbers has Lebesgue measure zero. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Liouville/Measure.html#volume_setOf_liouville\"><span class=\"name\">volume_setOf_liouville</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">MeasureTheory.volume</span></span> <span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> | <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Liouville/Basic.html#Liouville\">Liouville</a> <span class=\"fn\">x</span></span>}</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Liouville/Measure.lean#L114-L115","name":"ae_not_liouville","line":114,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Liouville/Measure.html#ae_not_liouville","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Liouville/Measure.html#ae_not_liouville\"><span class=\"name\">ae_not_liouville</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ᵐ (x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Liouville/Basic.html#Liouville\">Liouville</a> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Liouville/Measure.lean#L109-L111","name":"ae_not_liouvilleWith","line":109,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Liouville/Measure.html#ae_not_liouvilleWith","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Liouville/Measure.html#ae_not_liouvilleWith\"><span class=\"name\">ae_not_liouvilleWith</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ᵐ (x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\">∀ <span class=\"fn\">p</span> &gt; <span class=\"fn\">2</span>, <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Liouville/LiouvilleWith.html#LiouvilleWith\">LiouvilleWith</a> <span class=\"fn\">p</span> <span class=\"fn\">x</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Liouville/Measure.lean#L77-L106","name":"volume_iUnion_setOf_liouvilleWith","line":77,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Liouville/Measure.html#volume_iUnion_setOf_liouvilleWith","doc":"The set of numbers satisfying the Liouville condition with some exponent `p > 2` has Lebesgue\nmeasure zero. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Liouville/Measure.html#volume_iUnion_setOf_liouvilleWith\"><span class=\"name\">volume_iUnion_setOf_liouvilleWith</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">MeasureTheory.volume</span></span> <span class=\"fn\">(<span class=\"fn\">⋃ (p : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">p</span></span>), <span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> | <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Liouville/LiouvilleWith.html#LiouvilleWith\">LiouvilleWith</a> <span class=\"fn\">p</span> <span class=\"fn\">x</span></span>}</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Liouville/Measure.lean#L34-L71","name":"setOf_liouvilleWith_subset_aux","line":34,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Liouville/Measure.html#setOf_liouvilleWith_subset_aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Liouville/Measure.html#setOf_liouvilleWith_subset_aux\"><span class=\"name\">setOf_liouvilleWith_subset_aux</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> | <span class=\"fn\">∃ p &gt; <span class=\"fn\">2</span>, <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Liouville/LiouvilleWith.html#LiouvilleWith\">LiouvilleWith</a> <span class=\"fn\">p</span> <span class=\"fn\">x</span></span></span>}</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a>   <span class=\"fn\">⋃ (m : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>),\n    <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a>       <span class=\"fn\">⋃ (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>),\n        <span class=\"fn\">⋃ (_ : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">0</span></span>),\n          <span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> | <span class=\"fn\">∃ᶠ (b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) in <span class=\"fn\">Filter.atTop</span>, <span class=\"fn\">∃ a ∈ <span class=\"fn\"><a href=\"./Mathlib/Order/LocallyFinite.html#Finset.Icc\">Finset.Icc</a> <span class=\"fn\">0</span> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span>, <span class=\"fn\"><span class=\"fn\">|<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span></span>|</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span>)</span></span></span></span></span></span>}</span></span></span></span></span></span></div></div>"}]}