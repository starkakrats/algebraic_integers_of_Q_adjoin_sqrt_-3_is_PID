{"name":"Mathlib.Order.Category.NonemptyFinLinOrd","instances":[{"typeNames":[],"name":"NonemptyFiniteLinearOrder.toBoundedOrder","className":"BoundedOrder"},{"typeNames":["PUnit"],"name":"PUnit.nonemptyFiniteLinearOrder","className":"NonemptyFiniteLinearOrder"},{"typeNames":["Fin"],"name":"Fin.nonemptyFiniteLinearOrder","className":"NonemptyFiniteLinearOrder"},{"typeNames":["ULift"],"name":"ULift.nonemptyFiniteLinearOrder","className":"NonemptyFiniteLinearOrder"},{"typeNames":["OrderDual"],"name":"instNonemptyFiniteLinearOrderOrderDual","className":"NonemptyFiniteLinearOrder"},{"typeNames":["NonemptyFiniteLinearOrder.toLinearOrder"],"name":"NonemptyFinLinOrd.instParentProjectionTypeLinearOrderNonemptyFiniteLinearOrderToLinearOrder","className":"CategoryTheory.BundledHom.ParentProjection"},{"typeNames":["NonemptyFinLinOrd"],"name":"NonemptyFinLinOrd.instConcreteCategoryNonemptyFinLinOrdInstNonemptyFinLinOrdLargeCategory","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["NonemptyFinLinOrd","_builtin_typeu"],"name":"NonemptyFinLinOrd.instCoeSortNonemptyFinLinOrdType","className":"CoeSort"},{"typeNames":["NonemptyFinLinOrd"],"name":"NonemptyFinLinOrd.instInhabitedNonemptyFinLinOrd","className":"Inhabited"},{"typeNames":["CategoryTheory.Bundled.α"],"name":"NonemptyFinLinOrd.instNonemptyFiniteLinearOrderα","className":"NonemptyFiniteLinearOrder"},{"typeNames":["NonemptyFinLinOrd","LinOrd"],"name":"NonemptyFinLinOrd.hasForgetToLinOrd","className":"CategoryTheory.HasForget₂"},{"typeNames":["NonemptyFinLinOrd","FinPartOrd"],"name":"NonemptyFinLinOrd.hasForgetToFinPartOrd","className":"CategoryTheory.HasForget₂"},{"typeNames":["Quiver.Hom","CategoryTheory.Bundled.α","CategoryTheory.Bundled.α"],"name":"NonemptyFinLinOrd.instOrderHomClassHomNonemptyFinLinOrdToQuiverToCategoryStructInstNonemptyFinLinOrdLargeCategoryαNonemptyFiniteLinearOrderToLEToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLatticeToLinearOrderInstNonemptyFiniteLinearOrderα","className":"RelHomClass"},{"typeNames":["NonemptyFinLinOrd"],"name":"NonemptyFinLinOrd.instSplitEpiCategoryNonemptyFinLinOrdInstNonemptyFinLinOrdLargeCategory","className":"CategoryTheory.SplitEpiCategory"},{"typeNames":["NonemptyFinLinOrd"],"name":"NonemptyFinLinOrd.instHasStrongEpiMonoFactorisationsNonemptyFinLinOrdInstNonemptyFinLinOrdLargeCategory","className":"CategoryTheory.Limits.HasStrongEpiMonoFactorisations"}],"imports":["Init","Mathlib.Data.Fintype.Order","Mathlib.Data.Set.Finite","Mathlib.Order.Category.FinPartOrd","Mathlib.Order.Category.LinOrd","Mathlib.CategoryTheory.Limits.Shapes.Images","Mathlib.CategoryTheory.Limits.Shapes.RegularMono"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L258-L263","name":"nonemptyFinLinOrdDualCompForgetToFinPartOrd","line":258,"kind":"def","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#nonemptyFinLinOrdDualCompForgetToFinPartOrd","doc":"The forgetful functor `NonemptyFinLinOrd ⥤ FinPartOrd` and `order_dual` commute. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#nonemptyFinLinOrdDualCompForgetToFinPartOrd\"><span class=\"name\">nonemptyFinLinOrdDualCompForgetToFinPartOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dual\">NonemptyFinLinOrd.dual</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a></span>)</span> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dual\">FinPartOrd.dual</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L250-L253","name":"nonemptyFinLinOrd_dual_comp_forget_to_linOrd","line":250,"kind":"theorem","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#nonemptyFinLinOrd_dual_comp_forget_to_linOrd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#nonemptyFinLinOrd_dual_comp_forget_to_linOrd\"><span class=\"name\">nonemptyFinLinOrd_dual_comp_forget_to_linOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dual\">NonemptyFinLinOrd.dual</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a> <a href=\"./Mathlib/Order/Category/LinOrd.html#LinOrd\">LinOrd</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a> <a href=\"./Mathlib/Order/Category/LinOrd.html#LinOrd\">LinOrd</a></span>)</span> <a href=\"./Mathlib/Order/Category/LinOrd.html#LinOrd.dual\">LinOrd.dual</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L234-L246","name":"NonemptyFinLinOrd.instHasStrongEpiMonoFactorisationsNonemptyFinLinOrdInstNonemptyFinLinOrdLargeCategory","line":234,"kind":"instance","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.instHasStrongEpiMonoFactorisationsNonemptyFinLinOrdInstNonemptyFinLinOrdLargeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.instHasStrongEpiMonoFactorisationsNonemptyFinLinOrdInstNonemptyFinLinOrdLargeCategory\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">instHasStrongEpiMonoFactorisationsNonemptyFinLinOrdInstNonemptyFinLinOrdLargeCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Images.html#CategoryTheory.Limits.HasStrongEpiMonoFactorisations\">CategoryTheory.Limits.HasStrongEpiMonoFactorisations</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L210-L232","name":"NonemptyFinLinOrd.instSplitEpiCategoryNonemptyFinLinOrdInstNonemptyFinLinOrdLargeCategory","line":210,"kind":"instance","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.instSplitEpiCategoryNonemptyFinLinOrdInstNonemptyFinLinOrdLargeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.instSplitEpiCategoryNonemptyFinLinOrdInstNonemptyFinLinOrdLargeCategory\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">instSplitEpiCategoryNonemptyFinLinOrdInstNonemptyFinLinOrdLargeCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EpiMono.html#CategoryTheory.SplitEpiCategory\">CategoryTheory.SplitEpiCategory</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L168-L206","name":"NonemptyFinLinOrd.epi_iff_surjective","line":168,"kind":"theorem","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.epi_iff_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.epi_iff_surjective\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">epi_iff_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L165-L166","name":"NonemptyFinLinOrd.forget_map_apply","line":165,"kind":"theorem","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.forget_map_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.forget_map_apply\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">forget_map_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↑<span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a></span>)</span>.map <span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.toFun\">OrderHom.toFun</a> <span class=\"fn\">f</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L147-L160","name":"NonemptyFinLinOrd.mono_iff_injective","line":147,"kind":"theorem","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.mono_iff_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.mono_iff_injective\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">mono_iff_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L140-L145","name":"NonemptyFinLinOrd.instOrderHomClassHomNonemptyFinLinOrdToQuiverToCategoryStructInstNonemptyFinLinOrdLargeCategoryαNonemptyFiniteLinearOrderToLEToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLatticeToLinearOrderInstNonemptyFiniteLinearOrderα","line":140,"kind":"instance","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.instOrderHomClassHomNonemptyFinLinOrdToQuiverToCategoryStructInstNonemptyFinLinOrdLargeCategoryαNonemptyFiniteLinearOrderToLEToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLatticeToLinearOrderInstNonemptyFiniteLinearOrderα","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.instOrderHomClassHomNonemptyFinLinOrdToQuiverToCategoryStructInstNonemptyFinLinOrdLargeCategoryαNonemptyFiniteLinearOrderToLEToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLatticeToLinearOrderInstNonemptyFiniteLinearOrderα\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">instOrderHomClassHomNonemptyFinLinOrdToQuiverToCategoryStructInstNonemptyFinLinOrdLargeCategoryαNonemptyFiniteLinearOrderToLEToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLatticeToLinearOrderInstNonemptyFiniteLinearOrderα</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Basic.html#OrderHomClass\">OrderHomClass</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">A</span></span> <span class=\"fn\">↑<span class=\"fn\">B</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L131-L135","name":"NonemptyFinLinOrd.dualEquiv","line":131,"kind":"def","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dualEquiv","doc":"The equivalence between `NonemptyFinLinOrd` and itself induced by `OrderDual` both ways. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dualEquiv\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">dualEquiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L130-L130","name":"NonemptyFinLinOrd.dualEquiv_inverse","line":130,"kind":"theorem","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dualEquiv_inverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dualEquiv_inverse\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">dualEquiv_inverse</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dualEquiv\">NonemptyFinLinOrd.dualEquiv</a>.inverse</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dual\">NonemptyFinLinOrd.dual</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L130-L130","name":"NonemptyFinLinOrd.dualEquiv_functor","line":130,"kind":"theorem","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dualEquiv_functor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dualEquiv_functor\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">dualEquiv_functor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dualEquiv\">NonemptyFinLinOrd.dualEquiv</a>.functor</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dual\">NonemptyFinLinOrd.dual</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L123-L125","name":"NonemptyFinLinOrd.dual","line":123,"kind":"def","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dual","doc":"`OrderDual` as a functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dual\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">dual</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L122-L122","name":"NonemptyFinLinOrd.dual_map","line":122,"kind":"theorem","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dual_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dual_map\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">dual_map</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>} (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dual\">NonemptyFinLinOrd.dual</a>.map <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">OrderHom.dual</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L122-L122","name":"NonemptyFinLinOrd.dual_obj","line":122,"kind":"theorem","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dual_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dual_obj\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">dual_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dual\">NonemptyFinLinOrd.dual</a>.obj <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.of\">NonemptyFinLinOrd.of</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">X</span></span>)</span><a href=\"./Mathlib/Order/Basic.html#OrderDual\">ᵒᵈ</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L109-L117","name":"NonemptyFinLinOrd.Iso.mk","line":109,"kind":"def","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.Iso.mk","doc":"Constructs an equivalence between nonempty finite linear orders from an order isomorphism\nbetween them. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.Iso.mk\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">α</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L108-L108","name":"NonemptyFinLinOrd.Iso.mk_inv","line":108,"kind":"theorem","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.Iso.mk_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.Iso.mk_inv\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">α</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.Iso.mk\">NonemptyFinLinOrd.Iso.mk</a> <span class=\"fn\">e</span></span>)</span>.inv</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso.symm\">OrderIso.symm</a> <span class=\"fn\">e</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L108-L108","name":"NonemptyFinLinOrd.Iso.mk_hom","line":108,"kind":"theorem","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.Iso.mk_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.Iso.mk_hom\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">α</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.Iso.mk\">NonemptyFinLinOrd.Iso.mk</a> <span class=\"fn\">e</span></span>)</span>.hom</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">e</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L99-L102","name":"NonemptyFinLinOrd.hasForgetToFinPartOrd","line":99,"kind":"instance","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.hasForgetToFinPartOrd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.hasForgetToFinPartOrd\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">hasForgetToFinPartOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L94-L95","name":"NonemptyFinLinOrd.hasForgetToLinOrd","line":94,"kind":"instance","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.hasForgetToLinOrd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.hasForgetToLinOrd\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">hasForgetToLinOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a> <a href=\"./Mathlib/Order/Category/LinOrd.html#LinOrd\">LinOrd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L91-L92","name":"NonemptyFinLinOrd.instNonemptyFiniteLinearOrderα","line":91,"kind":"instance","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.instNonemptyFiniteLinearOrderα","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.instNonemptyFiniteLinearOrderα\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">instNonemptyFiniteLinearOrderα</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFiniteLinearOrder\">NonemptyFiniteLinearOrder</a> <span class=\"fn\">↑<span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L88-L89","name":"NonemptyFinLinOrd.instInhabitedNonemptyFinLinOrd","line":88,"kind":"instance","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.instInhabitedNonemptyFinLinOrd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.instInhabitedNonemptyFinLinOrd\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">instInhabitedNonemptyFinLinOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L83-L84","name":"NonemptyFinLinOrd.coe_of","line":83,"kind":"theorem","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.coe_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.coe_of\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">coe_of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFiniteLinearOrder\">NonemptyFiniteLinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.of\">NonemptyFinLinOrd.of</a> <span class=\"fn\">α</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L77-L78","name":"NonemptyFinLinOrd.of","line":77,"kind":"def","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.of","doc":"Construct a bundled `NonemptyFinLinOrd` from the underlying type and typeclass. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.of\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFiniteLinearOrder\">NonemptyFiniteLinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L73-L74","name":"NonemptyFinLinOrd.instCoeSortNonemptyFinLinOrdType","line":73,"kind":"instance","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.instCoeSortNonemptyFinLinOrdType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.instCoeSortNonemptyFinLinOrdType\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">instCoeSortNonemptyFinLinOrdType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u_1)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L70-L71","name":"NonemptyFinLinOrd.instConcreteCategoryNonemptyFinLinOrdInstNonemptyFinLinOrdLargeCategory","line":70,"kind":"instance","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.instConcreteCategoryNonemptyFinLinOrdInstNonemptyFinLinOrdLargeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.instConcreteCategoryNonemptyFinLinOrdInstNonemptyFinLinOrdLargeCategory\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">instConcreteCategoryNonemptyFinLinOrdInstNonemptyFinLinOrdLargeCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L64-L65","name":"NonemptyFinLinOrd.instParentProjectionTypeLinearOrderNonemptyFiniteLinearOrderToLinearOrder","line":64,"kind":"instance","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.instParentProjectionTypeLinearOrderNonemptyFiniteLinearOrderToLinearOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.instParentProjectionTypeLinearOrderNonemptyFiniteLinearOrderToLinearOrder\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">instParentProjectionTypeLinearOrderNonemptyFiniteLinearOrderToLinearOrder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.ParentProjection\">CategoryTheory.BundledHom.ParentProjection</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFiniteLinearOrder.toLinearOrder\">@<a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFiniteLinearOrder.toLinearOrder\">NonemptyFiniteLinearOrder.toLinearOrder</a></a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L57-L58","name":"NonemptyFinLinOrd","line":57,"kind":"def","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd","doc":"The category of nonempty finite linear orders. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\"><span class=\"name\">NonemptyFinLinOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u_1 + 1)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L53-L54","name":"instNonemptyFiniteLinearOrderOrderDual","line":53,"kind":"instance","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#instNonemptyFiniteLinearOrderOrderDual","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#instNonemptyFiniteLinearOrderOrderDual\"><span class=\"name\">instNonemptyFiniteLinearOrderOrderDual</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFiniteLinearOrder\">NonemptyFiniteLinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFiniteLinearOrder\">NonemptyFiniteLinearOrder</a> <span class=\"fn\"><span class=\"fn\">α</span><a href=\"./Mathlib/Order/Basic.html#OrderDual\">ᵒᵈ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L48-L50","name":"ULift.nonemptyFiniteLinearOrder","line":48,"kind":"instance","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#ULift.nonemptyFiniteLinearOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#ULift.nonemptyFiniteLinearOrder\"><span class=\"name\">ULift</span>.<span class=\"name\">nonemptyFiniteLinearOrder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFiniteLinearOrder\">NonemptyFiniteLinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFiniteLinearOrder\">NonemptyFiniteLinearOrder</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{v, u}</a>    <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L45-L45","name":"Fin.nonemptyFiniteLinearOrder","line":45,"kind":"instance","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#Fin.nonemptyFiniteLinearOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#Fin.nonemptyFiniteLinearOrder\"><span class=\"name\">Fin</span>.<span class=\"name\">nonemptyFiniteLinearOrder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFiniteLinearOrder\">NonemptyFiniteLinearOrder</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L42-L42","name":"PUnit.nonemptyFiniteLinearOrder","line":42,"kind":"instance","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#PUnit.nonemptyFiniteLinearOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#PUnit.nonemptyFiniteLinearOrder\"><span class=\"name\">PUnit</span>.<span class=\"name\">nonemptyFiniteLinearOrder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFiniteLinearOrder\">NonemptyFiniteLinearOrder</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit.{u_1 + 1}</a>     </span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L37-L39","name":"NonemptyFiniteLinearOrder.toBoundedOrder","line":37,"kind":"instance","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFiniteLinearOrder.toBoundedOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFiniteLinearOrder.toBoundedOrder\"><span class=\"name\">NonemptyFiniteLinearOrder</span>.<span class=\"name\">toBoundedOrder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFiniteLinearOrder\">NonemptyFiniteLinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder.html#BoundedOrder\">BoundedOrder</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L32-L32","name":"NonemptyFiniteLinearOrder.Nonempty","line":32,"kind":"def","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFiniteLinearOrder.Nonempty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFiniteLinearOrder.Nonempty\"><span class=\"name\">NonemptyFiniteLinearOrder</span>.<span class=\"name\">Nonempty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFiniteLinearOrder\">NonemptyFiniteLinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L31-L31","name":"NonemptyFiniteLinearOrder.mk","line":31,"kind":"ctor","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFiniteLinearOrder.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFiniteLinearOrder.mk\"><span class=\"name\">NonemptyFiniteLinearOrder</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[toFintype : <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[toLinearOrder : <span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Nonempty : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">_root_.Nonempty</a> <span class=\"fn\">α</span></span>)</span> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#_auto._@.Mathlib.Order.Category.NonemptyFinLinOrd._hyg.7\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFiniteLinearOrder\">NonemptyFiniteLinearOrder</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L31-L32","name":"NonemptyFiniteLinearOrder","line":31,"kind":"class","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFiniteLinearOrder","doc":"A typeclass for nonempty finite linear orders. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFiniteLinearOrder\"><span class=\"name\">NonemptyFiniteLinearOrder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\"><span class=\"name\">Fintype</span></a></span></span>\n, <span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\"><span class=\"name\">LinearOrder</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"}]}