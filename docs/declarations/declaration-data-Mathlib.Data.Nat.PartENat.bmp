{"name":"Mathlib.Data.Nat.PartENat","instances":[{"typeNames":["PartENat"],"name":"PartENat.instZeroPartENat","className":"Zero"},{"typeNames":["PartENat"],"name":"PartENat.instInhabitedPartENat","className":"Inhabited"},{"typeNames":["PartENat"],"name":"PartENat.instOnePartENat","className":"One"},{"typeNames":["PartENat"],"name":"PartENat.instAddPartENat","className":"Add"},{"typeNames":["Part.Dom"],"name":"PartENat.instDecidableDomNatSome","className":"Decidable"},{"typeNames":["PartENat"],"name":"PartENat.addCommMonoid","className":"AddCommMonoid"},{"typeNames":["PartENat"],"name":"PartENat.instAddCommMonoidWithOnePartENat","className":"AddCommMonoidWithOne"},{"typeNames":["PartENat"],"name":"PartENat.instCharZeroPartENatToAddMonoidWithOneInstAddCommMonoidWithOnePartENat","className":"CharZero"},{"typeNames":["PartENat","Nat","Nat.cast","Part.Dom"],"name":"PartENat.instCanLiftPartENatNatCastToNatCastToAddMonoidWithOneInstAddCommMonoidWithOnePartENatDom","className":"CanLift"},{"typeNames":["PartENat"],"name":"PartENat.instLEPartENat","className":"LE"},{"typeNames":["PartENat"],"name":"PartENat.instTopPartENat","className":"Top"},{"typeNames":["PartENat"],"name":"PartENat.instBotPartENat","className":"Bot"},{"typeNames":["PartENat"],"name":"PartENat.instSupPartENat","className":"Sup"},{"typeNames":["LE.le"],"name":"PartENat.decidableLe","className":"Decidable"},{"typeNames":["PartENat"],"name":"PartENat.partialOrder","className":"PartialOrder"},{"typeNames":["PartENat"],"name":"PartENat.orderedAddCommMonoid","className":"OrderedAddCommMonoid"},{"typeNames":["PartENat"],"name":"PartENat.semilatticeSup","className":"SemilatticeSup"},{"typeNames":["PartENat"],"name":"PartENat.orderBot","className":"OrderBot"},{"typeNames":["PartENat"],"name":"PartENat.orderTop","className":"OrderTop"},{"typeNames":["PartENat"],"name":"PartENat.instZeroLEOneClassPartENatInstZeroPartENatInstOnePartENatInstLEPartENat","className":"ZeroLEOneClass"},{"typeNames":["PartENat"],"name":"PartENat.isTotal","className":"IsTotal"},{"typeNames":["PartENat"],"name":"PartENat.linearOrder","className":"LinearOrder"},{"typeNames":["PartENat"],"name":"PartENat.boundedOrder","className":"BoundedOrder"},{"typeNames":["PartENat"],"name":"PartENat.lattice","className":"Lattice"},{"typeNames":["PartENat"],"name":"PartENat.instCanonicallyOrderedAddCommMonoidPartENat","className":"CanonicallyOrderedAddCommMonoid"},{"typeNames":["ENat","PartENat"],"name":"PartENat.instCoeENatPartENat","className":"Coe"},{"typeNames":["PartENat"],"name":"PartENat.instWellFoundedLTPartENatToLTToPreorderPartialOrder","className":"IsWellFounded"},{"typeNames":["PartENat"],"name":"PartENat.isWellOrder","className":"IsWellOrder"},{"typeNames":["PartENat"],"name":"PartENat.wellFoundedRelation","className":"WellFoundedRelation"},{"typeNames":["PartENat"],"name":"PartENat.instLinearOrderedAddCommMonoidWithTopPartENat","className":"LinearOrderedAddCommMonoidWithTop"},{"typeNames":["PartENat"],"name":"PartENat.instCompleteLinearOrderPartENat","className":"CompleteLinearOrder"}],"imports":["Init","Mathlib.Algebra.Group.Equiv.Basic","Mathlib.Data.ENat.Lattice","Mathlib.Data.Part","Mathlib.Tactic.NormNum"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L892-L900","name":"PartENat.instCompleteLinearOrderPartENat","line":892,"kind":"instance","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.instCompleteLinearOrderPartENat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.instCompleteLinearOrderPartENat\"><span class=\"name\">PartENat</span>.<span class=\"name\">instCompleteLinearOrderPartENat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#CompleteLinearOrder\">CompleteLinearOrder</a> <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L888-L890","name":"PartENat.instLinearOrderedAddCommMonoidWithTopPartENat","line":888,"kind":"instance","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.instLinearOrderedAddCommMonoidWithTopPartENat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.instLinearOrderedAddCommMonoidWithTopPartENat\"><span class=\"name\">PartENat</span>.<span class=\"name\">instLinearOrderedAddCommMonoidWithTopPartENat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#LinearOrderedAddCommMonoidWithTop\">LinearOrderedAddCommMonoidWithTop</a> <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L881-L883","name":"PartENat.find_eq_top_iff","line":881,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.find_eq_top_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.find_eq_top_iff\"><span class=\"name\">PartENat</span>.<span class=\"name\">find_eq_top_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidablePred\">DecidablePred</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.find\">PartENat.find</a> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">n</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L876-L878","name":"PartENat.find_le","line":876,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.find_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.find_le\"><span class=\"name\">PartENat</span>.<span class=\"name\">find_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidablePred\">DecidablePred</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.find\">PartENat.find</a> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L865-L873","name":"PartENat.lt_find_iff","line":865,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.lt_find_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.lt_find_iff\"><span class=\"name\">PartENat</span>.<span class=\"name\">lt_find_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidablePred\">DecidablePred</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.find\">PartENat.find</a> <span class=\"fn\">P</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">m</span> ≤ <span class=\"fn\">n</span>, <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">m</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L855-L862","name":"PartENat.lt_find","line":855,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.lt_find","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.lt_find\"><span class=\"name\">PartENat</span>.<span class=\"name\">lt_find</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidablePred\">DecidablePred</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ <span class=\"fn\">m</span> ≤ <span class=\"fn\">n</span>, <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">m</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.find\">PartENat.find</a> <span class=\"fn\">P</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L851-L852","name":"PartENat.find_dom","line":851,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.find_dom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.find_dom\"><span class=\"name\">PartENat</span>.<span class=\"name\">find_dom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidablePred\">DecidablePred</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∃ (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">n</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.find\">PartENat.find</a> <span class=\"fn\">P</span></span>)</span>.Dom</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L847-L848","name":"PartENat.find_get","line":847,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.find_get","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.find_get\"><span class=\"name\">PartENat</span>.<span class=\"name\">find_get</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidablePred\">DecidablePred</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.find\">PartENat.find</a> <span class=\"fn\">P</span></span>)</span>.Dom</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.get\">Part.get</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.find\">PartENat.find</a> <span class=\"fn\">P</span></span>)</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Init/Data/Nat/Lemmas.html#Nat.find\">Nat.find</a> <span class=\"fn\">h</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L842-L843","name":"PartENat.find","line":842,"kind":"def","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.find","doc":"The smallest `PartENat` satisfying a (decidable) predicate `P : ℕ → Prop` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.find\"><span class=\"name\">PartENat</span>.<span class=\"name\">find</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidablePred\">DecidablePred</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L834-L835","name":"PartENat.wellFoundedRelation","line":834,"kind":"instance","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.wellFoundedRelation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.wellFoundedRelation\"><span class=\"name\">PartENat</span>.<span class=\"name\">wellFoundedRelation</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/WF.html#WellFoundedRelation\">WellFoundedRelation</a> <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L832-L832","name":"PartENat.isWellOrder","line":832,"kind":"instance","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.isWellOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.isWellOrder\"><span class=\"name\">PartENat</span>.<span class=\"name\">isWellOrder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#IsWellOrder\">IsWellOrder</a> <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L829-L830","name":"PartENat.instWellFoundedLTPartENatToLTToPreorderPartialOrder","line":829,"kind":"instance","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.instWellFoundedLTPartENatToLTToPreorderPartialOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.instWellFoundedLTPartENatToLTToPreorderPartialOrder\"><span class=\"name\">PartENat</span>.<span class=\"name\">instWellFoundedLTPartENatToLTToPreorderPartialOrder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#WellFoundedLT\">WellFoundedLT</a> <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L822-L826","name":"PartENat.lt_wf","line":822,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.lt_wf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.lt_wf\"><span class=\"name\">PartENat</span>.<span class=\"name\">lt_wf</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/WF.html#WellFounded\">WellFounded</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L813-L817","name":"PartENat.withTopAddEquiv","line":813,"kind":"def","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopAddEquiv","doc":"`toWithTop` induces an additive monoid isomorphism between `PartENat` and `ℕ∞`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopAddEquiv\"><span class=\"name\">PartENat</span>.<span class=\"name\">withTopAddEquiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <a href=\"./Mathlib/Data/ENat/Basic.html#ENat\">ℕ∞</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L807-L809","name":"PartENat.withTopEquiv_symm_lt","line":807,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv_symm_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv_symm_lt\"><span class=\"name\">PartENat</span>.<span class=\"name\">withTopEquiv_symm_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/ENat/Basic.html#ENat\">ℕ∞</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/Data/ENat/Basic.html#ENat\">ℕ∞</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv\">PartENat.withTopEquiv</a>.symm</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv\">PartENat.withTopEquiv</a>.symm</span> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L801-L803","name":"PartENat.withTopEquiv_symm_le","line":801,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv_symm_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv_symm_le\"><span class=\"name\">PartENat</span>.<span class=\"name\">withTopEquiv_symm_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/ENat/Basic.html#ENat\">ℕ∞</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/Data/ENat/Basic.html#ENat\">ℕ∞</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv\">PartENat.withTopEquiv</a>.symm</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv\">PartENat.withTopEquiv</a>.symm</span> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L796-L798","name":"PartENat.withTopEquiv_symm_ofNat","line":796,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv_symm_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv_symm_ofNat\"><span class=\"name\">PartENat</span>.<span class=\"name\">withTopEquiv_symm_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#Nat.AtLeastTwo\">Nat.AtLeastTwo</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv\">PartENat.withTopEquiv</a>.symm</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L792-L793","name":"PartENat.withTopEquiv_symm_one","line":792,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv_symm_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv_symm_one\"><span class=\"name\">PartENat</span>.<span class=\"name\">withTopEquiv_symm_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv\">PartENat.withTopEquiv</a>.symm</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L787-L788","name":"PartENat.withTopEquiv_symm_zero","line":787,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv_symm_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv_symm_zero\"><span class=\"name\">PartENat</span>.<span class=\"name\">withTopEquiv_symm_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv\">PartENat.withTopEquiv</a>.symm</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L782-L783","name":"PartENat.withTopEquiv_symm_coe","line":782,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv_symm_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv_symm_coe\"><span class=\"name\">PartENat</span>.<span class=\"name\">withTopEquiv_symm_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv\">PartENat.withTopEquiv</a>.symm</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L777-L778","name":"PartENat.withTopEquiv_symm_top","line":777,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv_symm_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv_symm_top\"><span class=\"name\">PartENat</span>.<span class=\"name\">withTopEquiv_symm_top</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv\">PartENat.withTopEquiv</a>.symm</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L772-L773","name":"PartENat.withTopOrderIso","line":772,"kind":"def","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopOrderIso","doc":"`to_WithTop` induces an order isomorphism between `PartENat` and `ℕ∞`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopOrderIso\"><span class=\"name\">PartENat</span>.<span class=\"name\">withTopOrderIso</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <a href=\"./Mathlib/Data/ENat/Basic.html#ENat\">ℕ∞</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L767-L768","name":"PartENat.withTopEquiv_lt","line":767,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv_lt\"><span class=\"name\">PartENat</span>.<span class=\"name\">withTopEquiv_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv\">PartENat.withTopEquiv</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv\">PartENat.withTopEquiv</a> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L762-L763","name":"PartENat.withTopEquiv_le","line":762,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv_le\"><span class=\"name\">PartENat</span>.<span class=\"name\">withTopEquiv_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv\">PartENat.withTopEquiv</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv\">PartENat.withTopEquiv</a> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L757-L759","name":"PartENat.withTopEquiv_ofNat","line":757,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv_ofNat\"><span class=\"name\">PartENat</span>.<span class=\"name\">withTopEquiv_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#Nat.AtLeastTwo\">Nat.AtLeastTwo</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv\">PartENat.withTopEquiv</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L753-L754","name":"PartENat.withTopEquiv_one","line":753,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv_one\"><span class=\"name\">PartENat</span>.<span class=\"name\">withTopEquiv_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv\">PartENat.withTopEquiv</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L748-L749","name":"PartENat.withTopEquiv_zero","line":748,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv_zero\"><span class=\"name\">PartENat</span>.<span class=\"name\">withTopEquiv_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv\">PartENat.withTopEquiv</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L743-L744","name":"PartENat.withTopEquiv_natCast","line":743,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv_natCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv_natCast\"><span class=\"name\">PartENat</span>.<span class=\"name\">withTopEquiv_natCast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv\">PartENat.withTopEquiv</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L738-L739","name":"PartENat.withTopEquiv_top","line":738,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv_top\"><span class=\"name\">PartENat</span>.<span class=\"name\">withTopEquiv_top</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv\">PartENat.withTopEquiv</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L725-L734","name":"PartENat.withTopEquiv","line":725,"kind":"def","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv","doc":"`Equiv` between `PartENat` and `ℕ∞` (for the order isomorphism see\n`withTopOrderIso`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.withTopEquiv\"><span class=\"name\">PartENat</span>.<span class=\"name\">withTopEquiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <a href=\"./Mathlib/Data/ENat/Basic.html#ENat\">ℕ∞</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L710-L716","name":"PartENat.toWithTop_add","line":710,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop_add\"><span class=\"name\">PartENat</span>.<span class=\"name\">toWithTop_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop\">PartENat.toWithTop</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop\">PartENat.toWithTop</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop\">PartENat.toWithTop</a> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L698-L703","name":"PartENat.toWithTop_ofENat","line":698,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop_ofENat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop_ofENat\"><span class=\"name\">PartENat</span>.<span class=\"name\">toWithTop_ofENat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Mathlib/Data/ENat/Basic.html#ENat\">ℕ∞</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">n</span></span>)</span>.Dom</span></span>}, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop\">PartENat.toWithTop</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L694-L694","name":"PartENat.ofENat_some","line":694,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.ofENat_some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.ofENat_some\"><span class=\"name\">PartENat</span>.<span class=\"name\">ofENat_some</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L690-L690","name":"PartENat.ofENat_none","line":690,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.ofENat_none","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.ofENat_none\"><span class=\"name\">PartENat</span>.<span class=\"name\">ofENat_none</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">none</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L683-L683","name":"PartENat.instCoeENatPartENat","line":683,"kind":"instance","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.instCoeENatPartENat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.instCoeENatPartENat\"><span class=\"name\">PartENat</span>.<span class=\"name\">instCoeENatPartENat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Mathlib/Data/ENat/Basic.html#ENat\">ℕ∞</a> <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L677-L680","name":"PartENat.ofENat","line":677,"kind":"def","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.ofENat","doc":"Coercion from `ℕ∞` to `PartENat`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.ofENat\"><span class=\"name\">PartENat</span>.<span class=\"name\">ofENat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/ENat/Basic.html#ENat\">ℕ∞</a> → <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L667-L669","name":"PartENat.toWithTop_lt","line":667,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop_lt\"><span class=\"name\">PartENat</span>.<span class=\"name\">toWithTop_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\"><span class=\"fn\">x</span>.Dom</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\"><span class=\"fn\">y</span>.Dom</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop\">PartENat.toWithTop</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop\">PartENat.toWithTop</a> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L647-L653","name":"PartENat.toWithTop_le","line":647,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop_le\"><span class=\"name\">PartENat</span>.<span class=\"name\">toWithTop_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hx : <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\"><span class=\"fn\">x</span>.Dom</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hy : <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\"><span class=\"fn\">y</span>.Dom</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop\">PartENat.toWithTop</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop\">PartENat.toWithTop</a> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L633-L634","name":"PartENat.toWithTop_ofNat","line":633,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop_ofNat\"><span class=\"name\">PartENat</span>.<span class=\"name\">toWithTop_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#Nat.AtLeastTwo\">Nat.AtLeastTwo</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span>)</span>.Dom</span></span>}, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop\">PartENat.toWithTop</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L627-L629","name":"PartENat.toWithTop_natCast'","line":627,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop_natCast'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop_natCast'\"><span class=\"name\">PartENat</span>.<span class=\"name\">toWithTop_natCast'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">n</span></span>)</span>.Dom</span></span>}, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop\">PartENat.toWithTop</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L621-L623","name":"PartENat.toWithTop_natCast","line":621,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop_natCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop_natCast\"><span class=\"name\">PartENat</span>.<span class=\"name\">toWithTop_natCast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">n</span></span>)</span>.Dom</span></span>}, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop\">PartENat.toWithTop</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L617-L618","name":"PartENat.toWithTop_some","line":617,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop_some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop_some\"><span class=\"name\">PartENat</span>.<span class=\"name\">toWithTop_some</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop\">PartENat.toWithTop</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L614-L615","name":"PartENat.toWithTop_one'","line":614,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop_one'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop_one'\"><span class=\"name\">PartENat</span>.<span class=\"name\">toWithTop_one'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\"><span class=\"fn\">1</span>.Dom</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop\">PartENat.toWithTop</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L608-L611","name":"PartENat.toWithTop_one","line":608,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop_one\"><span class=\"name\">PartENat</span>.<span class=\"name\">toWithTop_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">let_fun this := <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.someDecidable\">Part.someDecidable</a> <span class=\"fn\">1</span></span>;\n<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop\">PartENat.toWithTop</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L604-L605","name":"PartENat.toWithTop_zero'","line":604,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop_zero'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop_zero'\"><span class=\"name\">PartENat</span>.<span class=\"name\">toWithTop_zero'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\"><span class=\"fn\">0</span>.Dom</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop\">PartENat.toWithTop</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L597-L600","name":"PartENat.toWithTop_zero","line":597,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop_zero\"><span class=\"name\">PartENat</span>.<span class=\"name\">toWithTop_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">let_fun this := <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.someDecidable\">Part.someDecidable</a> <span class=\"fn\">0</span></span>;\n<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop\">PartENat.toWithTop</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L593-L594","name":"PartENat.toWithTop_top'","line":593,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop_top'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop_top'\"><span class=\"name\">PartENat</span>.<span class=\"name\">toWithTop_top'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>.Dom</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop\">PartENat.toWithTop</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L586-L589","name":"PartENat.toWithTop_top","line":586,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop_top\"><span class=\"name\">PartENat</span>.<span class=\"name\">toWithTop_top</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">let_fun this := <span class=\"fn\">Part.noneDecidable</span>;\n<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop\">PartENat.toWithTop</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L582-L583","name":"PartENat.toWithTop","line":582,"kind":"def","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop","doc":"Computably converts a `PartENat` to a `ℕ∞`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.toWithTop\"><span class=\"name\">PartENat</span>.<span class=\"name\">toWithTop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\"><span class=\"fn\">x</span>.Dom</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/ENat/Basic.html#ENat\">ℕ∞</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L575-L576","name":"PartENat.add_left_cancel_iff","line":575,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.add_left_cancel_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.add_left_cancel_iff\"><span class=\"name\">PartENat</span>.<span class=\"name\">add_left_cancel_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L567-L572","name":"PartENat.add_right_cancel_iff","line":567,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.add_right_cancel_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.add_right_cancel_iff\"><span class=\"name\">PartENat</span>.<span class=\"name\">add_right_cancel_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L560-L564","name":"PartENat.add_eq_top_iff","line":560,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.add_eq_top_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.add_eq_top_iff\"><span class=\"name\">PartENat</span>.<span class=\"name\">add_eq_top_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L556-L557","name":"PartENat.lt_coe_succ_iff_le","line":556,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.lt_coe_succ_iff_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.lt_coe_succ_iff_le\"><span class=\"name\">PartENat</span>.<span class=\"name\">lt_coe_succ_iff_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Nat.succ\">Nat.succ</a> <span class=\"fn\">n</span></span>)</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L546-L553","name":"PartENat.lt_add_one_iff_lt","line":546,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.lt_add_one_iff_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.lt_add_one_iff_lt\"><span class=\"name\">PartENat</span>.<span class=\"name\">lt_add_one_iff_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L542-L543","name":"PartENat.coe_succ_le_iff","line":542,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.coe_succ_le_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.coe_succ_le_iff\"><span class=\"name\">PartENat</span>.<span class=\"name\">coe_succ_le_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{e : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Nat.succ\">Nat.succ</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">e</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">e</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L533-L539","name":"PartENat.add_one_le_iff_lt","line":533,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.add_one_le_iff_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.add_one_le_iff_lt\"><span class=\"name\">PartENat</span>.<span class=\"name\">add_one_le_iff_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L525-L530","name":"PartENat.add_one_le_of_lt","line":525,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.add_one_le_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.add_one_le_of_lt\"><span class=\"name\">PartENat</span>.<span class=\"name\">add_one_le_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L517-L522","name":"PartENat.le_of_lt_add_one","line":517,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.le_of_lt_add_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.le_of_lt_add_one\"><span class=\"name\">PartENat</span>.<span class=\"name\">le_of_lt_add_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L512-L514","name":"PartENat.lt_add_one","line":512,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.lt_add_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.lt_add_one\"><span class=\"name\">PartENat</span>.<span class=\"name\">lt_add_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L507-L509","name":"PartENat.lt_add_iff_pos_right","line":507,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.lt_add_iff_pos_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.lt_add_iff_pos_right\"><span class=\"name\">PartENat</span>.<span class=\"name\">lt_add_iff_pos_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L503-L504","name":"PartENat.add_lt_add_iff_left","line":503,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.add_lt_add_iff_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.add_lt_add_iff_left\"><span class=\"name\">PartENat</span>.<span class=\"name\">add_lt_add_iff_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hz : <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L499-L500","name":"PartENat.add_lt_add_iff_right","line":499,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.add_lt_add_iff_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.add_lt_add_iff_right\"><span class=\"name\">PartENat</span>.<span class=\"name\">add_lt_add_iff_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hz : <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">z</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L487-L496","name":"PartENat.add_lt_add_right","line":487,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.add_lt_add_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.add_lt_add_right\"><span class=\"name\">PartENat</span>.<span class=\"name\">add_lt_add_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hz : <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">z</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L479-L484","name":"PartENat.eq_natCast_sub_of_add_eq_natCast","line":479,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.eq_natCast_sub_of_add_eq_natCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.eq_natCast_sub_of_add_eq_natCast\"><span class=\"name\">PartENat</span>.<span class=\"name\">eq_natCast_sub_of_add_eq_natCast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.get\">Part.get</a> <span class=\"fn\">y</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">y</span>.Dom</span>)</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L466-L477","name":"PartENat.instCanonicallyOrderedAddCommMonoidPartENat","line":466,"kind":"instance","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.instCanonicallyOrderedAddCommMonoidPartENat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.instCanonicallyOrderedAddCommMonoidPartENat\"><span class=\"name\">PartENat</span>.<span class=\"name\">instCanonicallyOrderedAddCommMonoidPartENat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Canonical/Defs.html#CanonicallyOrderedAddCommMonoid\">CanonicallyOrderedAddCommMonoid</a> <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L459-L464","name":"PartENat.lattice","line":459,"kind":"instance","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.lattice","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.lattice\"><span class=\"name\">PartENat</span>.<span class=\"name\">lattice</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L456-L457","name":"PartENat.boundedOrder","line":456,"kind":"instance","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.boundedOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.boundedOrder\"><span class=\"name\">PartENat</span>.<span class=\"name\">boundedOrder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder.html#BoundedOrder\">BoundedOrder</a> <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L445-L454","name":"PartENat.linearOrder","line":445,"kind":"instance","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.linearOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.linearOrder\"><span class=\"name\">PartENat</span>.<span class=\"name\">linearOrder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L439-L443","name":"PartENat.isTotal","line":439,"kind":"instance","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.isTotal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.isTotal\"><span class=\"name\">PartENat</span>.<span class=\"name\">isTotal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Algebra/Classes.html#IsTotal\">IsTotal</a> <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L431-L436","name":"PartENat.pos_iff_one_le","line":431,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.pos_iff_one_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.pos_iff_one_le\"><span class=\"name\">PartENat</span>.<span class=\"name\">pos_iff_one_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L426-L428","name":"PartENat.eq_top_iff_forall_le","line":426,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.eq_top_iff_forall_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.eq_top_iff_forall_le\"><span class=\"name\">PartENat</span>.<span class=\"name\">eq_top_iff_forall_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L416-L423","name":"PartENat.eq_top_iff_forall_lt","line":416,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.eq_top_iff_forall_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.eq_top_iff_forall_lt\"><span class=\"name\">PartENat</span>.<span class=\"name\">eq_top_iff_forall_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L412-L413","name":"PartENat.ne_top_of_lt","line":412,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.ne_top_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.ne_top_of_lt\"><span class=\"name\">PartENat</span>.<span class=\"name\">ne_top_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L408-L409","name":"PartENat.not_dom_iff_eq_top","line":408,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.not_dom_iff_eq_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.not_dom_iff_eq_top\"><span class=\"name\">PartENat</span>.<span class=\"name\">not_dom_iff_eq_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">x</span>.Dom</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L404-L405","name":"PartENat.ne_top_iff_dom","line":404,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.ne_top_iff_dom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.ne_top_iff_dom\"><span class=\"name\">PartENat</span>.<span class=\"name\">ne_top_iff_dom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.Dom</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L400-L401","name":"PartENat.ne_top_iff","line":400,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.ne_top_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.ne_top_iff\"><span class=\"name\">PartENat</span>.<span class=\"name\">ne_top_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L396-L397","name":"PartENat.not_isMax_natCast","line":396,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.not_isMax_natCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.not_isMax_natCast\"><span class=\"name\">PartENat</span>.<span class=\"name\">not_isMax_natCast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMax\">IsMax</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L393-L394","name":"PartENat.ofNat_ne_top","line":393,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.ofNat_ne_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.ofNat_ne_top\"><span class=\"name\">PartENat</span>.<span class=\"name\">ofNat_ne_top</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#Nat.AtLeastTwo\">Nat.AtLeastTwo</a> <span class=\"fn\">x</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L388-L389","name":"PartENat.one_ne_top","line":388,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.one_ne_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.one_ne_top\"><span class=\"name\">PartENat</span>.<span class=\"name\">one_ne_top</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L384-L385","name":"PartENat.zero_ne_top","line":384,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.zero_ne_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.zero_ne_top\"><span class=\"name\">PartENat</span>.<span class=\"name\">zero_ne_top</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L379-L380","name":"PartENat.natCast_ne_top","line":379,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.natCast_ne_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.natCast_ne_top\"><span class=\"name\">PartENat</span>.<span class=\"name\">natCast_ne_top</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L375-L376","name":"PartENat.ofNat_lt_top","line":375,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.ofNat_lt_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.ofNat_lt_top\"><span class=\"name\">PartENat</span>.<span class=\"name\">ofNat_lt_top</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#Nat.AtLeastTwo\">Nat.AtLeastTwo</a> <span class=\"fn\">x</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L370-L371","name":"PartENat.one_lt_top","line":370,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.one_lt_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.one_lt_top\"><span class=\"name\">PartENat</span>.<span class=\"name\">one_lt_top</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L366-L367","name":"PartENat.zero_lt_top","line":366,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.zero_lt_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.zero_lt_top\"><span class=\"name\">PartENat</span>.<span class=\"name\">zero_lt_top</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L361-L362","name":"PartENat.natCast_lt_top","line":361,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.natCast_lt_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.natCast_lt_top\"><span class=\"name\">PartENat</span>.<span class=\"name\">natCast_lt_top</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L356-L357","name":"PartENat.top_eq_none","line":356,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.top_eq_none","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.top_eq_none\"><span class=\"name\">PartENat</span>.<span class=\"name\">top_eq_none</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Part.none</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L352-L353","name":"PartENat.dom_of_lt","line":352,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.dom_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.dom_of_lt\"><span class=\"name\">PartENat</span>.<span class=\"name\">dom_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">x</span>.Dom</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L348-L349","name":"PartENat.ne_zero_iff","line":348,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.ne_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.ne_zero_iff\"><span class=\"name\">PartENat</span>.<span class=\"name\">ne_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L344-L345","name":"PartENat.eq_zero_iff","line":344,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.eq_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.eq_zero_iff\"><span class=\"name\">PartENat</span>.<span class=\"name\">eq_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L338-L341","name":"PartENat.coe_lt_iff","line":338,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.coe_lt_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.coe_lt_iff\"><span class=\"name\">PartENat</span>.<span class=\"name\">coe_lt_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">x</span>.Dom</span>), <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.get\">Part.get</a> <span class=\"fn\">x</span> <span class=\"fn\">h</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L332-L335","name":"PartENat.coe_le_iff","line":332,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.coe_le_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.coe_le_iff\"><span class=\"name\">PartENat</span>.<span class=\"name\">coe_le_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">x</span>.Dom</span>), <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.get\">Part.get</a> <span class=\"fn\">x</span> <span class=\"fn\">h</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L328-L329","name":"PartENat.lt_coe_iff","line":328,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.lt_coe_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.lt_coe_iff\"><span class=\"name\">PartENat</span>.<span class=\"name\">lt_coe_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (h : <span class=\"fn\"><span class=\"fn\">x</span>.Dom</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.get\">Part.get</a> <span class=\"fn\">x</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L323-L325","name":"PartENat.le_coe_iff","line":323,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.le_coe_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.le_coe_iff\"><span class=\"name\">PartENat</span>.<span class=\"name\">le_coe_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (h : <span class=\"fn\"><span class=\"fn\">x</span>.Dom</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.get\">Part.get</a> <span class=\"fn\">x</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L317-L320","name":"PartENat.get_le_get","line":317,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.get_le_get","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.get_le_get\"><span class=\"name\">PartENat</span>.<span class=\"name\">get_le_get</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hx : <span class=\"fn\"><span class=\"fn\">x</span>.Dom</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hy : <span class=\"fn\"><span class=\"fn\">y</span>.Dom</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.get\">Part.get</a> <span class=\"fn\">x</span> <span class=\"fn\">hx</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.get\">Part.get</a> <span class=\"fn\">y</span> <span class=\"fn\">hy</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L313-L313","name":"PartENat.coe_lt_coe","line":313,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.coe_lt_coe","doc":"Alias of `Nat.cast_lt` specialized to `PartENat` -"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.coe_lt_coe\"><span class=\"name\">PartENat</span>.<span class=\"name\">coe_lt_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L309-L309","name":"PartENat.coe_le_coe","line":309,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.coe_le_coe","doc":"Alias of `Nat.cast_le` specialized to `PartENat` -"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.coe_le_coe\"><span class=\"name\">PartENat</span>.<span class=\"name\">coe_le_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L305-L306","name":"PartENat.instZeroLEOneClassPartENatInstZeroPartENatInstOnePartENatInstLEPartENat","line":305,"kind":"instance","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.instZeroLEOneClassPartENatInstZeroPartENatInstOnePartENatInstLEPartENat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.instZeroLEOneClassPartENatInstZeroPartENatInstOnePartENatInstLEPartENat\"><span class=\"name\">PartENat</span>.<span class=\"name\">instZeroLEOneClassPartENatInstZeroPartENatInstOnePartENatInstLEPartENat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/ZeroLEOne.html#ZeroLEOneClass\">ZeroLEOneClass</a> <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L300-L302","name":"PartENat.orderTop","line":300,"kind":"instance","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.orderTop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.orderTop\"><span class=\"name\">PartENat</span>.<span class=\"name\">orderTop</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder.html#OrderTop\">OrderTop</a> <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L295-L297","name":"PartENat.orderBot","line":295,"kind":"instance","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.orderBot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.orderBot\"><span class=\"name\">PartENat</span>.<span class=\"name\">orderBot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder.html#OrderBot\">OrderBot</a> <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L286-L292","name":"PartENat.semilatticeSup","line":286,"kind":"instance","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.semilatticeSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.semilatticeSup\"><span class=\"name\">PartENat</span>.<span class=\"name\">semilatticeSup</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#SemilatticeSup\">SemilatticeSup</a> <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L279-L284","name":"PartENat.orderedAddCommMonoid","line":279,"kind":"instance","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.orderedAddCommMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.orderedAddCommMonoid\"><span class=\"name\">PartENat</span>.<span class=\"name\">orderedAddCommMonoid</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedAddCommMonoid\">OrderedAddCommMonoid</a> <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L258-L276","name":"PartENat.lt_def","line":258,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.lt_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.lt_def\"><span class=\"name\">PartENat</span>.<span class=\"name\">lt_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (hx : <span class=\"fn\"><span class=\"fn\">x</span>.Dom</span>), <span class=\"fn\">∀ (<span class=\"fn\">hy</span> : <span class=\"fn\"><span class=\"fn\">y</span>.Dom</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.get\">Part.get</a> <span class=\"fn\">x</span> <span class=\"fn\">hx</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.get\">Part.get</a> <span class=\"fn\">y</span> <span class=\"fn\">hy</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L249-L256","name":"PartENat.partialOrder","line":249,"kind":"instance","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.partialOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.partialOrder\"><span class=\"name\">PartENat</span>.<span class=\"name\">partialOrder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#PartialOrder\">PartialOrder</a> <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L237-L242","name":"PartENat.decidableLe","line":237,"kind":"instance","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.decidableLe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.decidableLe\"><span class=\"name\">PartENat</span>.<span class=\"name\">decidableLe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\"><span class=\"fn\">x</span>.Dom</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\"><span class=\"fn\">y</span>.Dom</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L233-L234","name":"PartENat.dom_of_le_natCast","line":233,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.dom_of_le_natCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.dom_of_le_natCast\"><span class=\"name\">PartENat</span>.<span class=\"name\">dom_of_le_natCast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.Dom</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L229-L230","name":"PartENat.dom_of_le_some","line":229,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.dom_of_le_some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.dom_of_le_some\"><span class=\"name\">PartENat</span>.<span class=\"name\">dom_of_le_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.Dom</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L226-L226","name":"PartENat.dom_of_le_of_dom","line":226,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.dom_of_le_of_dom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.dom_of_le_of_dom\"><span class=\"name\">PartENat</span>.<span class=\"name\">dom_of_le_of_dom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.Dom</span> → <span class=\"fn\"><span class=\"fn\">x</span>.Dom</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L221-L223","name":"PartENat.get_eq_iff_eq_coe","line":221,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.get_eq_iff_eq_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.get_eq_iff_eq_coe\"><span class=\"name\">PartENat</span>.<span class=\"name\">get_eq_iff_eq_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ha : <span class=\"fn\"><span class=\"fn\">a</span>.Dom</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.get\">Part.get</a> <span class=\"fn\">a</span> <span class=\"fn\">ha</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L217-L218","name":"PartENat.get_eq_iff_eq_some","line":217,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.get_eq_iff_eq_some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.get_eq_iff_eq_some\"><span class=\"name\">PartENat</span>.<span class=\"name\">get_eq_iff_eq_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ha : <span class=\"fn\"><span class=\"fn\">a</span>.Dom</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.get\">Part.get</a> <span class=\"fn\">a</span> <span class=\"fn\">ha</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L213-L215","name":"PartENat.get_ofNat'","line":213,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.get_ofNat'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.get_ofNat'\"><span class=\"name\">PartENat</span>.<span class=\"name\">get_ofNat'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#Nat.AtLeastTwo\">Nat.AtLeastTwo</a> <span class=\"fn\">x</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span></span>)</span>.Dom</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.get\">Part.get</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L207-L208","name":"PartENat.get_one","line":207,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.get_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.get_one\"><span class=\"name\">PartENat</span>.<span class=\"name\">get_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">1</span>.Dom</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.get\">Part.get</a> <span class=\"fn\">1</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L202-L203","name":"PartENat.get_zero","line":202,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.get_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.get_zero\"><span class=\"name\">PartENat</span>.<span class=\"name\">get_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">0</span>.Dom</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.get\">Part.get</a> <span class=\"fn\">0</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L197-L198","name":"PartENat.get_add","line":197,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.get_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.get_add\"><span class=\"name\">PartENat</span>.<span class=\"name\">get_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span>.Dom</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.get\">Part.get</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.get\">Part.get</a> <span class=\"fn\">x</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">x</span>.Dom</span>)</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.get\">Part.get</a> <span class=\"fn\">y</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">y</span>.Dom</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L191-L193","name":"PartENat.coe_add_get","line":191,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.coe_add_get","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.coe_add_get\"><span class=\"name\">PartENat</span>.<span class=\"name\">coe_add_get</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span>.Dom</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.get\">Part.get</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.get\">Part.get</a> <span class=\"fn\">y</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">y</span>.Dom</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L187-L188","name":"PartENat.get_natCast","line":187,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.get_natCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.get_natCast\"><span class=\"name\">PartENat</span>.<span class=\"name\">get_natCast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.get\">Part.get</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">x</span></span>)</span>.Dom</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L183-L184","name":"PartENat.get_natCast'","line":183,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.get_natCast'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.get_natCast'\"><span class=\"name\">PartENat</span>.<span class=\"name\">get_natCast'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">x</span></span>)</span>.Dom</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.get\">Part.get</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">x</span></span>)</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L178-L179","name":"PartENat.natCast_get","line":178,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.natCast_get","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.natCast_get\"><span class=\"name\">PartENat</span>.<span class=\"name\">natCast_get</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">x</span>.Dom</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.get\">Part.get</a> <span class=\"fn\">x</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L174-L174","name":"PartENat.add_top","line":174,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.add_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.add_top\"><span class=\"name\">PartENat</span>.<span class=\"name\">add_top</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L169-L170","name":"PartENat.top_add","line":169,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.top_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.top_add\"><span class=\"name\">PartENat</span>.<span class=\"name\">top_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L164-L165","name":"PartENat.casesOn","line":164,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.casesOn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.casesOn\"><span class=\"name\">PartENat</span>.<span class=\"name\">casesOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L158-L160","name":"PartENat.casesOn'","line":158,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.casesOn'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.casesOn'\"><span class=\"name\">PartENat</span>.<span class=\"name\">casesOn'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L152-L154","name":"PartENat.le_def","line":152,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.le_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.le_def\"><span class=\"name\">PartENat</span>.<span class=\"name\">le_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.Dom</span> → <span class=\"fn\"><span class=\"fn\">x</span>.Dom</span></span>), <span class=\"fn\">∀ (<span class=\"fn\">hy</span> : <span class=\"fn\"><span class=\"fn\">y</span>.Dom</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.get\">Part.get</a> <span class=\"fn\">x</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">x</span>.Dom</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.get\">Part.get</a> <span class=\"fn\">y</span> <span class=\"fn\">hy</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L149-L150","name":"PartENat.instSupPartENat","line":149,"kind":"instance","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.instSupPartENat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.instSupPartENat\"><span class=\"name\">PartENat</span>.<span class=\"name\">instSupPartENat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Sup\">Sup</a> <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L146-L147","name":"PartENat.instBotPartENat","line":146,"kind":"instance","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.instBotPartENat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.instBotPartENat\"><span class=\"name\">PartENat</span>.<span class=\"name\">instBotPartENat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Bot\">Bot</a> <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L143-L144","name":"PartENat.instTopPartENat","line":143,"kind":"instance","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.instTopPartENat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.instTopPartENat\"><span class=\"name\">PartENat</span>.<span class=\"name\">instTopPartENat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Top\">Top</a> <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L140-L141","name":"PartENat.instLEPartENat","line":140,"kind":"instance","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.instLEPartENat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.instLEPartENat\"><span class=\"name\">PartENat</span>.<span class=\"name\">instLEPartENat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L137-L138","name":"PartENat.instCanLiftPartENatNatCastToNatCastToAddMonoidWithOneInstAddCommMonoidWithOnePartENatDom","line":137,"kind":"instance","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.instCanLiftPartENatNatCastToNatCastToAddMonoidWithOneInstAddCommMonoidWithOnePartENatDom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.instCanLiftPartENatNatCastToNatCastToAddMonoidWithOneInstAddCommMonoidWithOnePartENatDom\"><span class=\"name\">PartENat</span>.<span class=\"name\">instCanLiftPartENatNatCastToNatCastToAddMonoidWithOneInstAddCommMonoidWithOnePartENatDom</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Lift.html#CanLift\">CanLift</a> <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <span class=\"fn\">Nat.cast</span> <span class=\"fn\">Part.Dom</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L134-L135","name":"PartENat.dom_one","line":134,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.dom_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.dom_one\"><span class=\"name\">PartENat</span>.<span class=\"name\">dom_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">1</span>.Dom</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L130-L131","name":"PartENat.dom_zero","line":130,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.dom_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.dom_zero\"><span class=\"name\">PartENat</span>.<span class=\"name\">dom_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span>.Dom</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L126-L127","name":"PartENat.dom_ofNat","line":126,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.dom_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.dom_ofNat\"><span class=\"name\">PartENat</span>.<span class=\"name\">dom_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#Nat.AtLeastTwo\">Nat.AtLeastTwo</a> <span class=\"fn\">x</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span></span>)</span>.Dom</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L120-L121","name":"PartENat.dom_natCast","line":120,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.dom_natCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.dom_natCast\"><span class=\"name\">PartENat</span>.<span class=\"name\">dom_natCast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">x</span></span>)</span>.Dom</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L115-L116","name":"PartENat.natCast_inj","line":115,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.natCast_inj","doc":"Alias of `Nat.cast_inj` specialized to `PartENat` -"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.natCast_inj\"><span class=\"name\">PartENat</span>.<span class=\"name\">natCast_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L111-L112","name":"PartENat.instCharZeroPartENatToAddMonoidWithOneInstAddCommMonoidWithOnePartENat","line":111,"kind":"instance","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.instCharZeroPartENatToAddMonoidWithOneInstAddCommMonoidWithOnePartENat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.instCharZeroPartENatToAddMonoidWithOneInstAddCommMonoidWithOnePartENat\"><span class=\"name\">PartENat</span>.<span class=\"name\">instCharZeroPartENatToAddMonoidWithOneInstAddCommMonoidWithOnePartENat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L107-L108","name":"PartENat.some_eq_natCast","line":107,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.some_eq_natCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.some_eq_natCast\"><span class=\"name\">PartENat</span>.<span class=\"name\">some_eq_natCast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L100-L105","name":"PartENat.instAddCommMonoidWithOnePartENat","line":100,"kind":"instance","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.instAddCommMonoidWithOnePartENat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.instAddCommMonoidWithOnePartENat\"><span class=\"name\">PartENat</span>.<span class=\"name\">instAddCommMonoidWithOnePartENat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#AddCommMonoidWithOne\">AddCommMonoidWithOne</a> <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L92-L98","name":"PartENat.addCommMonoid","line":92,"kind":"instance","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.addCommMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.addCommMonoid\"><span class=\"name\">PartENat</span>.<span class=\"name\">addCommMonoid</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L88-L89","name":"PartENat.dom_some","line":88,"kind":"theorem","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.dom_some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.dom_some\"><span class=\"name\">PartENat</span>.<span class=\"name\">dom_some</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">x</span></span>)</span>.Dom</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L84-L85","name":"PartENat.instDecidableDomNatSome","line":84,"kind":"instance","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.instDecidableDomNatSome","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.instDecidableDomNatSome\"><span class=\"name\">PartENat</span>.<span class=\"name\">instDecidableDomNatSome</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">n</span></span>)</span>.Dom</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L81-L82","name":"PartENat.instAddPartENat","line":81,"kind":"instance","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.instAddPartENat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.instAddPartENat\"><span class=\"name\">PartENat</span>.<span class=\"name\">instAddPartENat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L78-L79","name":"PartENat.instOnePartENat","line":78,"kind":"instance","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.instOnePartENat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.instOnePartENat\"><span class=\"name\">PartENat</span>.<span class=\"name\">instOnePartENat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#One\">One</a> <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L75-L76","name":"PartENat.instInhabitedPartENat","line":75,"kind":"instance","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.instInhabitedPartENat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.instInhabitedPartENat\"><span class=\"name\">PartENat</span>.<span class=\"name\">instInhabitedPartENat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L72-L73","name":"PartENat.instZeroPartENat","line":72,"kind":"instance","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.instZeroPartENat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.instZeroPartENat\"><span class=\"name\">PartENat</span>.<span class=\"name\">instZeroPartENat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L68-L69","name":"PartENat.some","line":68,"kind":"def","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat.some","doc":"The computable embedding `ℕ → PartENat`.\n\nThis coincides with the coercion `coe : ℕ → PartENat`, see `PartENat.some_eq_natCast`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat.some\"><span class=\"name\">PartENat</span>.<span class=\"name\">some</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/PartENat.lean#L58-L59","name":"PartENat","line":58,"kind":"def","docLink":"./Mathlib/Data/Nat/PartENat.html#PartENat","doc":"Type of natural numbers with infinity (`⊤`) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\"><span class=\"name\">PartENat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}