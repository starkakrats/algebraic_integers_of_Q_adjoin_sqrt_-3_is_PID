{"name":"Std.Lean.Position","instances":[],"imports":["Init","Lean.Syntax","Lean.Data.Lsp.Utf16"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/0d0ac1c43e1ec1965e0806af9e7a32999ea31096/Std/Lean/Position.lean#L48-L51","name":"Lean.FileMap.lineStart","line":48,"kind":"def","docLink":"./Std/Lean/Position.html#Lean.FileMap.lineStart","doc":"Returns the position of the start of (1-based) line `line`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Lean/Position.html#Lean.FileMap.lineStart\"><span class=\"name\">Lean</span>.<span class=\"name\">FileMap</span>.<span class=\"name\">lineStart</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(map : <a href=\"./Lean/Data/Position.html#Lean.FileMap\">Lean.FileMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(line : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/0d0ac1c43e1ec1965e0806af9e7a32999ea31096/Std/Lean/Position.lean#L44-L45","name":"Lean.Syntax.ofRange","line":44,"kind":"def","docLink":"./Std/Lean/Position.html#Lean.Syntax.ofRange","doc":"Returns a synthetic Syntax which has the specified `String.Range`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Lean/Position.html#Lean.Syntax.ofRange\"><span class=\"name\">Lean</span>.<span class=\"name\">Syntax</span>.<span class=\"name\">ofRange</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(range : <a href=\"./Lean/Syntax.html#String.Range\">String.Range</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(canonical : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/0d0ac1c43e1ec1965e0806af9e7a32999ea31096/Std/Lean/Position.lean#L38-L41","name":"Lean.findIndentAndIsStart","line":38,"kind":"def","docLink":"./Std/Lean/Position.html#Lean.findIndentAndIsStart","doc":"Return the indentation (number of leading spaces) of the line containing `pos`,\nand whether `pos` is the first non-whitespace character in the line.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Lean/Position.html#Lean.findIndentAndIsStart\"><span class=\"name\">Lean</span>.<span class=\"name\">findIndentAndIsStart</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/0d0ac1c43e1ec1965e0806af9e7a32999ea31096/Std/Lean/Position.lean#L29-L32","name":"Lean.findLineStart","line":29,"kind":"def","docLink":"./Std/Lean/Position.html#Lean.findLineStart","doc":"Return the beginning of the line contatining character `pos`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Lean/Position.html#Lean.findLineStart\"><span class=\"name\">Lean</span>.<span class=\"name\">findLineStart</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/0d0ac1c43e1ec1965e0806af9e7a32999ea31096/Std/Lean/Position.lean#L18-L26","name":"Lean.FileMap.ofPosition","line":18,"kind":"def","docLink":"./Std/Lean/Position.html#Lean.FileMap.ofPosition","doc":"Convert a `Lean.Position` to a `String.Pos`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Lean/Position.html#Lean.FileMap.ofPosition\"><span class=\"name\">Lean</span>.<span class=\"name\">FileMap</span>.<span class=\"name\">ofPosition</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(text : <a href=\"./Lean/Data/Position.html#Lean.FileMap\">Lean.FileMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Lean/Data/Position.html#Lean.Position\">Lean.Position</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/0d0ac1c43e1ec1965e0806af9e7a32999ea31096/Std/Lean/Position.lean#L14-L15","name":"Lean.FileMap.rangeOfStx?","line":14,"kind":"def","docLink":"./Std/Lean/Position.html#Lean.FileMap.rangeOfStx?","doc":"Gets the LSP range of syntax `stx`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Lean/Position.html#Lean.FileMap.rangeOfStx?\"><span class=\"name\">Lean</span>.<span class=\"name\">FileMap</span>.<span class=\"name\">rangeOfStx?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(text : <a href=\"./Lean/Data/Position.html#Lean.FileMap\">Lean.FileMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Range\">Lean.Lsp.Range</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/0d0ac1c43e1ec1965e0806af9e7a32999ea31096/Std/Lean/Position.lean#L10-L11","name":"Lean.FileMap.utf8RangeToLspRange","line":10,"kind":"def","docLink":"./Std/Lean/Position.html#Lean.FileMap.utf8RangeToLspRange","doc":"Gets the LSP range from a `String.Range`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Lean/Position.html#Lean.FileMap.utf8RangeToLspRange\"><span class=\"name\">Lean</span>.<span class=\"name\">FileMap</span>.<span class=\"name\">utf8RangeToLspRange</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(text : <a href=\"./Lean/Data/Position.html#Lean.FileMap\">Lean.FileMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(range : <a href=\"./Lean/Syntax.html#String.Range\">String.Range</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Range\">Lean.Lsp.Range</a></div></div>"}]}