{"name":"Std.Lean.Float","instances":[],"imports":["Init"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/0d0ac1c43e1ec1965e0806af9e7a32999ea31096/Std/Lean/Float.lean#L44-L60","name":"Float.toStringFull","line":44,"kind":"def","docLink":"./Std/Lean/Float.html#Float.toStringFull","doc":"Converts `f` to a string, including all decimal digits. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Lean/Float.html#Float.toStringFull\"><span class=\"name\">Float</span>.<span class=\"name\">toStringFull</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Init/Data/Float.html#Float\">Float</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/0d0ac1c43e1ec1965e0806af9e7a32999ea31096/Std/Lean/Float.lean#L40-L41","name":"Float.toRatParts'.trailingZeros","line":40,"kind":"opaque","docLink":"./Std/Lean/Float.html#Float.toRatParts'.trailingZeros","doc":"Calculates the number of trailing bits in a `UInt64`. Requires `v ≠ 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Lean/Float.html#Float.toRatParts'.trailingZeros\"><span class=\"name\">Float</span>.<span class=\"name\">toRatParts'</span>.<span class=\"name\">trailingZeros</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(v : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt8\">UInt8</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/0d0ac1c43e1ec1965e0806af9e7a32999ea31096/Std/Lean/Float.lean#L27-L41","name":"Float.toRatParts'","line":27,"kind":"def","docLink":"./Std/Lean/Float.html#Float.toRatParts'","doc":"Returns `v, exp` integers such that `f = v * 2^exp`.\nLike `toRatParts`, but `e` is guaranteed to be minimal (`n` is always odd), unless `n = 0`.\n`n.abs` will be at most `2^53 - 1` because `Float` has 53 bits of precision.\nReturns `none` when `f` is not finite (i.e. `inf`, `-inf` or a `nan`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Lean/Float.html#Float.toRatParts'\"><span class=\"name\">Float</span>.<span class=\"name\">toRatParts'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Init/Data/Float.html#Float\">Float</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/0d0ac1c43e1ec1965e0806af9e7a32999ea31096/Std/Lean/Float.lean#L12-L21","name":"Float.toRatParts","line":12,"kind":"def","docLink":"./Std/Lean/Float.html#Float.toRatParts","doc":"Returns `v, exp` integers such that `f = v * 2^exp`.\n(`e` is not minimal, but `v.abs` will be at most `2^53 - 1`.)\nReturns `none` when `f` is not finite (i.e. `inf`, `-inf` or a `nan`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Lean/Float.html#Float.toRatParts\"><span class=\"name\">Float</span>.<span class=\"name\">toRatParts</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Init/Data/Float.html#Float\">Float</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span>)</span></span></div></div>"}]}