{"name":"Lean.Util.Path","instances":[],"imports":["Init","Lean.Data.Name"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Util/Path.lean#L157-L164","name":"Lean.findSysroot","line":157,"kind":"def","docLink":"./Lean/Util/Path.html#Lean.findSysroot","doc":"Find the system root of the given `lean` command\nby calling `lean --print-prefix` and returning the path it prints.\nDefaults to trying the `lean` in `PATH`.\nIf set, the `LEAN_SYSROOT` environment variable takes precedence.\nNote that the called `lean` binary might not be part of the system root,\ne.g. in the case of `elan`'s proxy binary.\nUsers internal to Lean should use `Lean.getBuildDir` instead.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.findSysroot\"><span class=\"name\">Lean</span>.<span class=\"name\">findSysroot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lean : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#String\">String</a> <span class=\"fn\">&quot;lean&quot;</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Util/Path.lean#L139-L146","name":"Lean.searchModuleNameOfFileName","line":139,"kind":"def","docLink":"./Lean/Util/Path.html#Lean.searchModuleNameOfFileName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.searchModuleNameOfFileName\"><span class=\"name\">Lean</span>.<span class=\"name\">searchModuleNameOfFileName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fname : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rootDirs : <a href=\"./Lean/Util/Path.html#Lean.SearchPath\">Lean.SearchPath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Util/Path.lean#L123-L137","name":"Lean.moduleNameOfFileName","line":123,"kind":"def","docLink":"./Lean/Util/Path.html#Lean.moduleNameOfFileName","doc":"Infer module name of source file name. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.moduleNameOfFileName\"><span class=\"name\">Lean</span>.<span class=\"name\">moduleNameOfFileName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fname : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rootDir : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Util/Path.lean#L110-L116","name":"Lean.findOLean.maybeThisOne","line":110,"kind":"opaque","docLink":"./Lean/Util/Path.html#Lean.findOLean.maybeThisOne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.findOLean.maybeThisOne\"><span class=\"name\">Lean</span>.<span class=\"name\">findOLean</span>.<span class=\"name\">maybeThisOne</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(pkg : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(dir : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Util/Path.lean#L103-L119","name":"Lean.findOLean","line":103,"kind":"def","docLink":"./Lean/Util/Path.html#Lean.findOLean","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.findOLean\"><span class=\"name\">Lean</span>.<span class=\"name\">findOLean</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mod : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Util/Path.lean#L95-L97","name":"Lean.initSearchPath","line":95,"kind":"def","docLink":"./Lean/Util/Path.html#Lean.initSearchPath","doc":"Initialize Lean's search path given Lean's system root and an initial search path.\nThe system root can be obtained via `getBuildDir` (for internal use) or\n`findSysroot` (for external users). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.initSearchPath\"><span class=\"name\">Lean</span>.<span class=\"name\">initSearchPath</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(leanSysroot : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sp : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Lean/Util/Path.html#Lean.SearchPath\">Lean.SearchPath</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">âˆ…</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Util/Path.lean#L85-L89","name":"Lean.addSearchPathFromEnv","line":85,"kind":"def","docLink":"./Lean/Util/Path.html#Lean.addSearchPathFromEnv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.addSearchPathFromEnv\"><span class=\"name\">Lean</span>.<span class=\"name\">addSearchPathFromEnv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(sp : <a href=\"./Lean/Util/Path.html#Lean.SearchPath\">Lean.SearchPath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Util/Path.html#Lean.SearchPath\">Lean.SearchPath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Util/Path.lean#L82-L83","name":"Lean.getBuiltinSearchPath","line":82,"kind":"def","docLink":"./Lean/Util/Path.html#Lean.getBuiltinSearchPath","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.getBuiltinSearchPath\"><span class=\"name\">Lean</span>.<span class=\"name\">getBuiltinSearchPath</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(leanSysroot : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Util/Path.html#Lean.SearchPath\">Lean.SearchPath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Util/Path.lean#L75-L80","name":"Lean.getLibDir","line":75,"kind":"def","docLink":"./Lean/Util/Path.html#Lean.getLibDir","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.getLibDir\"><span class=\"name\">Lean</span>.<span class=\"name\">getLibDir</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(leanSysroot : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Util/Path.lean#L71-L72","name":"Lean.getBuildDir","line":71,"kind":"def","docLink":"./Lean/Util/Path.html#Lean.getBuildDir","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.getBuildDir\"><span class=\"name\">Lean</span>.<span class=\"name\">getBuildDir</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Util/Path.lean#L68-L68","name":"Lean.searchPathRef","line":68,"kind":"opaque","docLink":"./Lean/Util/Path.html#Lean.searchPathRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.searchPathRef\"><span class=\"name\">Lean</span>.<span class=\"name\">searchPathRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lean/Util/Path.html#Lean.SearchPath\">Lean.SearchPath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Util/Path.lean#L59-L64","name":"Lean.SearchPath.findAllWithExt","line":59,"kind":"def","docLink":"./Lean/Util/Path.html#Lean.SearchPath.findAllWithExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.SearchPath.findAllWithExt\"><span class=\"name\">Lean</span>.<span class=\"name\">SearchPath</span>.<span class=\"name\">findAllWithExt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(sp : <a href=\"./Lean/Util/Path.html#Lean.SearchPath\">Lean.SearchPath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ext : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Util/Path.lean#L53-L57","name":"Lean.SearchPath.findModuleWithExt","line":53,"kind":"def","docLink":"./Lean/Util/Path.html#Lean.SearchPath.findModuleWithExt","doc":"Like `findWithExt`, but ensures the returned path exists. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.SearchPath.findModuleWithExt\"><span class=\"name\">Lean</span>.<span class=\"name\">SearchPath</span>.<span class=\"name\">findModuleWithExt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(sp : <a href=\"./Lean/Util/Path.html#Lean.SearchPath\">Lean.SearchPath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ext : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mod : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Util/Path.lean#L46-L50","name":"Lean.SearchPath.findWithExt","line":46,"kind":"def","docLink":"./Lean/Util/Path.html#Lean.SearchPath.findWithExt","doc":"If the package of `mod` can be found in `sp`, return the path with extension\n`ext` (`lean` or `olean`) corresponding to `mod`. Otherwise, return `none`. Does\nnot check whether the returned path exists. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.SearchPath.findWithExt\"><span class=\"name\">Lean</span>.<span class=\"name\">SearchPath</span>.<span class=\"name\">findWithExt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(sp : <a href=\"./Lean/Util/Path.html#Lean.SearchPath\">Lean.SearchPath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ext : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mod : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Util/Path.lean#L39-L39","name":"Lean.SearchPath","line":39,"kind":"def","docLink":"./Lean/Util/Path.html#Lean.SearchPath","doc":"A `.olean' search path. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.SearchPath\"><span class=\"name\">Lean</span>.<span class=\"name\">SearchPath</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Util/Path.lean#L33-L36","name":"Lean.modToFilePath.go","line":33,"kind":"def","docLink":"./Lean/Util/Path.html#Lean.modToFilePath.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.modToFilePath.go\"><span class=\"name\">Lean</span>.<span class=\"name\">modToFilePath</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(base : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> â†’ <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Util/Path.lean#L30-L36","name":"Lean.modToFilePath","line":30,"kind":"def","docLink":"./Lean/Util/Path.html#Lean.modToFilePath","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.modToFilePath\"><span class=\"name\">Lean</span>.<span class=\"name\">modToFilePath</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(base : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mod : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ext : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Util/Path.lean#L27-L28","name":"Lean.realPathNormalized","line":27,"kind":"def","docLink":"./Lean/Util/Path.html#Lean.realPathNormalized","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.realPathNormalized\"><span class=\"name\">Lean</span>.<span class=\"name\">realPathNormalized</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Util/Path.lean#L16-L25","name":"Lean.forEachModuleInDir","line":16,"kind":"opaque","docLink":"./Lean/Util/Path.html#Lean.forEachModuleInDir","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.forEachModuleInDir\"><span class=\"name\">Lean</span>.<span class=\"name\">forEachModuleInDir</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> â†’ <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dir : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> â†’ <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#String\">String</a> <span class=\"fn\">&quot;lean&quot;</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>"}]}