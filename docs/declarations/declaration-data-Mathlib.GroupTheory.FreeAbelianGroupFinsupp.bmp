{"name":"Mathlib.GroupTheory.FreeAbelianGroupFinsupp","instances":[],"imports":["Init","Mathlib.Algebra.Group.Equiv.TypeTags","Mathlib.GroupTheory.FreeAbelianGroup","Mathlib.GroupTheory.FreeGroup.IsFreeGroup","Mathlib.LinearAlgebra.Dimension.StrongRankCondition"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/FreeAbelianGroupFinsupp.lean#L193-L195","name":"FreeAbelianGroup.support_add","line":193,"kind":"theorem","docLink":"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.support_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.support_add\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">support_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.support\">FreeAbelianGroup.support</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.support\">FreeAbelianGroup.support</a> <span class=\"fn\">a</span></span> <a href=\"./Std/Classes/SetNotation.html#Union.union\">∪</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.support\">FreeAbelianGroup.support</a> <span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/FreeAbelianGroupFinsupp.lean#L185-L188","name":"FreeAbelianGroup.support_nsmul","line":185,"kind":"theorem","docLink":"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.support_nsmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.support_nsmul\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">support_nsmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.support\">FreeAbelianGroup.support</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.support\">FreeAbelianGroup.support</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/FreeAbelianGroupFinsupp.lean#L177-L181","name":"FreeAbelianGroup.support_zsmul","line":177,"kind":"theorem","docLink":"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.support_zsmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.support_zsmul\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">support_zsmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.support\">FreeAbelianGroup.support</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.support\">FreeAbelianGroup.support</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/FreeAbelianGroupFinsupp.lean#L172-L173","name":"FreeAbelianGroup.support_neg","line":172,"kind":"theorem","docLink":"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.support_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.support_neg\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">support_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.support\">FreeAbelianGroup.support</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.support\">FreeAbelianGroup.support</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/FreeAbelianGroupFinsupp.lean#L167-L168","name":"FreeAbelianGroup.support_of","line":167,"kind":"theorem","docLink":"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.support_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.support_of\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">support_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.support\">FreeAbelianGroup.support</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup.of\">FreeAbelianGroup.of</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">x</span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/FreeAbelianGroupFinsupp.lean#L162-L163","name":"FreeAbelianGroup.support_zero","line":162,"kind":"theorem","docLink":"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.support_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.support_zero\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">support_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.support\">FreeAbelianGroup.support</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/FreeAbelianGroupFinsupp.lean#L156-L158","name":"FreeAbelianGroup.not_mem_support_iff","line":156,"kind":"theorem","docLink":"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.not_mem_support_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.not_mem_support_iff\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">not_mem_support_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> ∉ <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.support\">FreeAbelianGroup.support</a> <span class=\"fn\">a</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.coeff\">FreeAbelianGroup.coeff</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/FreeAbelianGroupFinsupp.lean#L151-L153","name":"FreeAbelianGroup.mem_support_iff","line":151,"kind":"theorem","docLink":"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.mem_support_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.mem_support_iff\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">mem_support_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.support\">FreeAbelianGroup.support</a> <span class=\"fn\">a</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.coeff\">FreeAbelianGroup.coeff</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/FreeAbelianGroupFinsupp.lean#L147-L148","name":"FreeAbelianGroup.support","line":147,"kind":"def","docLink":"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.support","doc":"`support a` for `a : FreeAbelianGroup X` is the finite set of `x : X`\nthat occur in the formal sum `a`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.support\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">support</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/FreeAbelianGroupFinsupp.lean#L141-L142","name":"FreeAbelianGroup.coeff","line":141,"kind":"def","docLink":"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.coeff","doc":"`coeff x` is the additive group homomorphism `FreeAbelianGroup X →+ ℤ`\nthat sends `a` to the multiplicity of `x : X` in `a`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.coeff\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">coeff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/FreeAbelianGroupFinsupp.lean#L132-L134","name":"FreeAbelianGroup.Equiv.ofIsFreeGroupEquiv","line":132,"kind":"def","docLink":"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.Equiv.ofIsFreeGroupEquiv","doc":"Isomorphic free groups have equivalent bases (`IsFreeGroup` variant). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.Equiv.ofIsFreeGroupEquiv\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">Equiv</span>.<span class=\"name\">ofIsFreeGroupEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeGroup/IsFreeGroup.html#IsFreeGroup\">IsFreeGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeGroup/IsFreeGroup.html#IsFreeGroup\">IsFreeGroup</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeGroup/IsFreeGroup.html#IsFreeGroup.Generators\">IsFreeGroup.Generators</a> <span class=\"fn\">G</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeGroup/IsFreeGroup.html#IsFreeGroup.Generators\">IsFreeGroup.Generators</a> <span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/FreeAbelianGroupFinsupp.lean#L125-L126","name":"FreeAbelianGroup.Equiv.ofFreeGroupEquiv","line":125,"kind":"def","docLink":"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.Equiv.ofFreeGroupEquiv","doc":"Isomorphic free groups have equivalent bases. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.Equiv.ofFreeGroupEquiv\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">Equiv</span>.<span class=\"name\">ofFreeGroupEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeGroup/Basic.html#FreeGroup\">FreeGroup</a> <span class=\"fn\">α</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeGroup/Basic.html#FreeGroup\">FreeGroup</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/FreeAbelianGroupFinsupp.lean#L119-L121","name":"FreeAbelianGroup.Equiv.ofFreeAbelianGroupEquiv","line":119,"kind":"def","docLink":"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.Equiv.ofFreeAbelianGroupEquiv","doc":"Isomorphic free abelian groups (as additive groups) have equivalent bases. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.Equiv.ofFreeAbelianGroupEquiv\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">Equiv</span>.<span class=\"name\">ofFreeAbelianGroupEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">α</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/FreeAbelianGroupFinsupp.lean#L112-L115","name":"FreeAbelianGroup.Equiv.ofFreeAbelianGroupLinearEquiv","line":112,"kind":"def","docLink":"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.Equiv.ofFreeAbelianGroupLinearEquiv","doc":"Isomorphic free abelian groups (as modules) have equivalent bases. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.Equiv.ofFreeAbelianGroupLinearEquiv\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">Equiv</span>.<span class=\"name\">ofFreeAbelianGroupLinearEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">α</span></span> <a href=\"./Mathlib/Algebra/Module/Equiv.html#LinearEquiv\">≃ₗ[</a><a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a><a href=\"./Mathlib/Algebra/Module/Equiv.html#LinearEquiv\">]</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/FreeAbelianGroupFinsupp.lean#L107-L108","name":"FreeAbelianGroup.basis","line":107,"kind":"def","docLink":"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.basis","doc":"`A` is a basis of the ℤ-module `FreeAbelianGroup A`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.basis\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">basis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis.html#Basis\">Basis</a> <span class=\"fn\">α</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/FreeAbelianGroupFinsupp.lean#L98-L103","name":"FreeAbelianGroup.equivFinsupp","line":98,"kind":"def","docLink":"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.equivFinsupp","doc":"The additive equivalence between `FreeAbelianGroup X` and `(X →₀ ℤ)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.equivFinsupp\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">equivFinsupp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/FreeAbelianGroupFinsupp.lean#L97-L97","name":"FreeAbelianGroup.equivFinsupp_symm_apply","line":97,"kind":"theorem","docLink":"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.equivFinsupp_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.equivFinsupp_symm_apply\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">equivFinsupp_symm_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv.symm\">AddEquiv.symm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.equivFinsupp\">FreeAbelianGroup.equivFinsupp</a> <span class=\"fn\">X</span></span>)</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Finsupp.toFreeAbelianGroup</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/FreeAbelianGroupFinsupp.lean#L97-L97","name":"FreeAbelianGroup.equivFinsupp_apply","line":97,"kind":"theorem","docLink":"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.equivFinsupp_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.equivFinsupp_apply\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">equivFinsupp_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.equivFinsupp\">FreeAbelianGroup.equivFinsupp</a> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">FreeAbelianGroup.toFinsupp</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/FreeAbelianGroupFinsupp.lean#L89-L91","name":"FreeAbelianGroup.toFinsupp_toFreeAbelianGroup","line":89,"kind":"theorem","docLink":"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.toFinsupp_toFreeAbelianGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.toFinsupp_toFreeAbelianGroup\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">toFinsupp_toFreeAbelianGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">FreeAbelianGroup.toFinsupp</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Finsupp.toFreeAbelianGroup</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/FreeAbelianGroupFinsupp.lean#L84-L85","name":"FreeAbelianGroup.toFinsupp_of","line":84,"kind":"theorem","docLink":"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.toFinsupp_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.toFinsupp_of\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">toFinsupp_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">FreeAbelianGroup.toFinsupp</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup.of\">FreeAbelianGroup.of</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp.single\">Finsupp.single</a> <span class=\"fn\">x</span> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/FreeAbelianGroupFinsupp.lean#L74-L76","name":"Finsupp.toFreeAbelianGroup_toFinsupp","line":74,"kind":"theorem","docLink":"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#Finsupp.toFreeAbelianGroup_toFinsupp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#Finsupp.toFreeAbelianGroup_toFinsupp\"><span class=\"name\">Finsupp</span>.<span class=\"name\">toFreeAbelianGroup_toFinsupp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Finsupp.toFreeAbelianGroup</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">FreeAbelianGroup.toFinsupp</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/FreeAbelianGroupFinsupp.lean#L65-L70","name":"Finsupp.toFreeAbelianGroup_comp_toFinsupp","line":65,"kind":"theorem","docLink":"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#Finsupp.toFreeAbelianGroup_comp_toFinsupp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#Finsupp.toFreeAbelianGroup_comp_toFinsupp\"><span class=\"name\">Finsupp</span>.<span class=\"name\">toFreeAbelianGroup_comp_toFinsupp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">Finsupp.toFreeAbelianGroup</span> <span class=\"fn\">FreeAbelianGroup.toFinsupp</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.id\">AddMonoidHom.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/FreeAbelianGroupFinsupp.lean#L56-L61","name":"FreeAbelianGroup.toFinsupp_comp_toFreeAbelianGroup","line":56,"kind":"theorem","docLink":"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.toFinsupp_comp_toFreeAbelianGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.toFinsupp_comp_toFreeAbelianGroup\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">toFinsupp_comp_toFreeAbelianGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">FreeAbelianGroup.toFinsupp</span> <span class=\"fn\">Finsupp.toFreeAbelianGroup</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.id\">AddMonoidHom.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/FreeAbelianGroupFinsupp.lean#L47-L52","name":"Finsupp.toFreeAbelianGroup_comp_singleAddHom","line":47,"kind":"theorem","docLink":"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#Finsupp.toFreeAbelianGroup_comp_singleAddHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#Finsupp.toFreeAbelianGroup_comp_singleAddHom\"><span class=\"name\">Finsupp</span>.<span class=\"name\">toFreeAbelianGroup_comp_singleAddHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">AddMonoidHom.comp</a> <span class=\"fn\">Finsupp.toFreeAbelianGroup</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp.singleAddHom\">Finsupp.singleAddHom</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Instances.html#AddMonoidHom.flip\">AddMonoidHom.flip</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#smulAddHom\">smulAddHom</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span>)</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup.of\">FreeAbelianGroup.of</a> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/FreeAbelianGroupFinsupp.lean#L40-L41","name":"Finsupp.toFreeAbelianGroup","line":40,"kind":"def","docLink":"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#Finsupp.toFreeAbelianGroup","doc":"The group homomorphism `(X →₀ ℤ) →+ FreeAbelianGroup X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#Finsupp.toFreeAbelianGroup\"><span class=\"name\">Finsupp</span>.<span class=\"name\">toFreeAbelianGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/FreeAbelianGroupFinsupp.lean#L35-L36","name":"FreeAbelianGroup.toFinsupp","line":35,"kind":"def","docLink":"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.toFinsupp","doc":"The group homomorphism `FreeAbelianGroup X →+ (X →₀ ℤ)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.toFinsupp\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">toFinsupp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></span></div></div>"}]}